[
{
	"uri": "https://www.sbcloud.co.jp/help/scenario/web-application/",
	"title": "Webアプリケーション",
	"tags": [],
	"description": "Alibaba Cloud上でのWebアプリケーション実装方法を紹介します。",
	"content": "WebアプリケーションはJavaやPython、Ruby等の言語を用いて実装されており、以下のような事が実現できます\n Eコマースサイト ホームページ ブログサービス ソーシャルネットワークサービス  ここではAlibaba CloudのITインフラサービスに焦点を当て、以下の組み合わせによるWebアプリケーションの実装手段を紹介します。\nそして本記事を読む事で、Alibaba Cloud上でのWebアプリケーションの現場開発に少しでもお役立てになれば幸いです。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/container/01/introduction/",
	"title": "イントロダクション",
	"tags": [],
	"description": "Alibaba Cloudでコンテナを活用した開発手法を紹介します。",
	"content": " 本記事の狙い 世間一般ではコンテナを用いた開発が一般的になりつつありますがが、Alibaba CloudでもAWSやGCP、Azureと同等かそれ以上のコンテナサービスが揃っており、使い方次第で最もコンテナのメリットを享受できるパブリッククラウドとなります。本項ではコンテナ開発の基礎から、Alibaba Cloudを最大限活用した形までを紹介いたします。\nコンテナ活用とは そもそもコンテナ※を利用する事で、どんなメリットを享受できるのか。\n※containerdを用いたDockerコンテナと定義\n 開発スピードが早くなり、機能実装やバグ修正までの時間を短くする 開発環境と本番環境の差分が最小限となり、人的バグを極小化する オンプレミスやクラウドを問わず、デプロイが容易になる  エンドユーザがシステムを利用する上で、バックグラウンドがコンテナか仮想サーバかは関係なく、メリットを得るのはシステム開発者です。 システム開発者がAlibaba Cloudにおけるコンテナ活用で得られるメリットを、下記開発フローから順を追って紹介いたします。\n開発フロー  開発環境 コンテナイメージの作成・管理 コンテナデプロイ管理 ログ管理・モニタリング  開発端末  選択肢  Windows MAC SaaS (Cloud9的な何か)  評価基準  Shell/Powershell Docker Desktop MiniKube Microk8s Alibaba Native?   バージョン管理  選択肢  Github Gitlab Bitbucket  評価基準  Alibaba Native? Documentation   イメージビルド  選択肢  Private Server (Jenkins/JenkinsX) Public Service (CircleCI/TravisCI) Alibaba Cloud Managed Service (Container Registry)   イメージリポジトリ  選択肢  Private Repository (Docker Trusted Registry) Public Repository (Dockerhub) Alibaba Cloud Managed Service (Container Registry)   管理方式  選択肢  Custom Middleware (Kubernetes/Mesos/Nomad) Managed Service (Kubernetes)   モニタリング  選択肢  Custom Middleware (Prometheus/ElasticSearch) Managed Service (CloudMonitor)    "
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/web-application/01/introduction/",
	"title": "イントロダクション",
	"tags": [],
	"description": "Alibaba Cloudを用いたWeb三層アーキテクチャを紹介します。",
	"content": " 本記事の狙い パブリッククラウドの中でもAlibaba Cloudは日本での認知度が低いと言えます。 そんな中、本記事で一般的なWeb三層アプリケーションをAlibaba Cloudでどのように実現できるかを紹介する事で、読者の方々にAlibaba Cloudの基本サービスを理解を深めてもらう事を狙いとしています。言い換えれば、認知度を上げて「Alibaba Cloudが良い意味で他社クラウドサービスと変わらない事」を伝える為となります。\nWeb三層モデルによるアプリケーションアーキテクチャ 以下のWeb三層アプリケーションアーキテクチャの構成図に沿って解説します。\n上記システム構成を以下の4つのレイヤーに分けて、それぞれAlibaba Cloudでどのような選択肢があり、どのように活用できるのかを説明いたします。\n 名前解決 負荷分散 Web/APサーバ データベース  参考リンク    タイトル URL     Alibaba Cloud Solution Infrastructure Web Application Hosting.pdf http://alicloud-common.oss-ap-southeast-1.aliyuncs.com/Alibaba%20Cloud%20Solution%20Infrastructure%20-%20Web%20Application%20Hosting.pdf   How to Set up a Website (FTP Server) with Alibaba Cloud Web Hosting and Domains https://www.alibabacloud.com/getting-started/projects/how-to-set-up-a-website-with-alibaba-cloud-web    "
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/001_what-is-bigdata/",
	"title": "BigDataとは",
	"tags": [],
	"description": "BigDataとは何かをお話しします。",
	"content": " BigDataとは \u0026nbsp; 現在、私たちの生活の中にはあらゆる様々なものがデジタルデータとして生成・蓄積されています。\n例えば水道、電気、天気、ネットワーク、工業、ショッピング、教育、病院、スポーツ、農耕、etc…\nIDC調査によれば 2025年になるとデジタルデータはZbの領域に入ります。\n※ 1Zb = 125EB = 125000PB = 125000000TB\nこのデジタルデータはどこから発生してるのか。具体例を見てみましょう。\n 1回のMRIスキャンで20,000枚の画像取得。\n Googleは1日あたり35億の検索クエリを処理。\n Instagramユーザーは毎分54,000枚の写真を投稿。\n 自律走行車は毎日11TBのデータを生成。\n Twitterユーザーは、毎秒3,000のTweetを投稿。\n LINEは毎日2600億のメッセージを通知。\n  \u0026nbsp; これらはいつも発生し続けてるそれぞれの単なるデータ量ではなく、そのデータから重要な情報を抽出し、ビジネスでの意思決定に活用できてこそ、初めてビッグデータと呼びます。\n逆に、この収集・蓄積したデータを二次、三次活用できてなければ、それはビッグデータとはいえません。例をあげますと、自律走行車の場合、車体のあちこちに様々な観点でのカメラを設置し、走行中にデータを収集しています。そこで人がいる位置、車が通る道路、交差点とのタイミング、駐車位置、などなどを動画/画像認識で抽出し、これを元にどう自律で攻略するかプロラミングを組んだり、自律走行用のMapを作成しています。Tesraが発行した1つの都市分の自律走行用のMapデータで20億ドルの価値が出たりとしています。\nこのように、ビッグデータはビジネス上の様々な問題に対処できることから、ビッグデータの存在はいつの間にか巨大なビジネスの場へ展開しています。\n\nビッグデータとビジネスの関係 \u0026nbsp; この生成し続けるデータは、ビジネス上の意思決定を裏付ける価値があります。この価値を発掘するまではただのデータとして役立たないので、ビッグデータを運用する際はデータを収集・蓄積するだけでなく、分析、解析の流れが必要になります。ビッグデータはデータ量が増えれば増えるほど、ビジネスに対してより正確かつ確実に意思決定を行うことができます。例えば、以下の例があります。\n データ・ビジネスに対する様々な精度向上が可能\n 問題解決・未来予測において、より的確な解決策が見つかる\n ビジネス上、必要な断捨離ができる\n データ維持・運用システムやコスト削減の取り組みが可能\n  これらについてもううちょっと説明します。\n\nデータ・ビジネスに対する様々な精度向上が可能 \u0026nbsp; 様々なデータの中には事業やビジネスを阻害する異常データ、不正データなどが混じっています。\nこれらを検知し、撲滅することで問題は解決します。しかしそれだけでしょうか？例えば時系列のデータで、1時間おきに100億のデータがあり、0.001%の確率で異常データ、不正データが出るとしたら、次の新しいデータが来るまでの短い時間でどうやって検知しますか？ その解決策として、機械学習を使います。機械学習とは大量のデータを反復的に学習し、そこに潜むパターンを見つけ出すことです。そして過去データを学習した結果（数式およびパターン、変化値を特定するためのスコアや変数、パラメータ値）を新たなデータにあてはめることで、パターンにしたがって異常検知や将来予測ができます。\n\u0026nbsp; このように、今後新しいデータが出るとき、異常データ・不正データを検出するときは過去のデータを遡って、変化値が大きいものを検出します。そういう意味ではビッグデータは非常に重要な存在になります。\n異常検知のみならず、将来の予測、データのグループ分けなど、機械学習/深層学習/強化学習をすることもできます。しかし、データ処理をするにおいてサンプルら母数が少ないと、既存データに対するアプローチ精度が保証できない課題があります。言い換えれば、データが多ければ多いほど精度が高い=確実論で事業に対する意思決定の裏付けが可能です。\n問題解決・未来予測において、より的確な解決策が見つかる \u0026nbsp; ビジネス上、様々な問題に直面します。例えば売上が下がってる、20代のお客様層が少ない、購入ユーザが少ない、今後の需要予測、１億円売上を作りたい、etc\u0026hellip; これらは今あるビッグデータを使えば解決できます。\n現状抱えている問題（設問）は基本的に以下２つへ分類されます。\n 発生タイプ：あるべき姿は設定される（受動的）\n・目標不達成問題・・・業務目標と現状のギャップが生み出す問題（ビジネス的に一番発生する問題）\n・異常発生問題・・・過去の延長戦上、問題が発生。維持すべき現状から遺脱し、ギャップが生まれるケース。原因究明と対策立案/実行の緊急性が高い\n設定タイプ：あるべき姿は目標を決めてる（能動的）\n・設定型問題・・・現在の問題に対して、改善革命活動のように、積極的に新たな到着目標を設定することで発生する問題\n・将来型問題・・・これからどこを目指していくべきかなど、将来のあるべき姿を描き、それと今を比較して、問題を定義する（例:半年後に1億円を目指す、etc）\n この分類後、問題（設問）を整理するOPQ分析へカテゴライズすると、本当の問題を確認できます。同時にそれに対する解決策を発見しやすくなります。\n O：Objectice 望ましい状況　依頼者が考えている達成すべき目標や改善後の姿\n P：Probulem（問題、現状とObjectiveのギャップ） 依頼者にとっての問題\n Q：Questicon（依頼者の疑問） Problemに直面した依頼者かが抱くだろう疑問（依頼者の視点で）\n A：Answeer（答え、メッセージ） Querstionに対する回答\n  \u0026nbsp; これをデータ上で行うのはどうでしょうか。問題設問を様々な分類へカテゴライズした上で、既存のデータに対し5W1H形式で順次絞って対処する必要があります。\nここにて元となるデータが少ない、実績や実例がない、過去数年前のデータと比較できない、数値的な根拠が弱いなどと、参考となるデータが少ないと確認や根拠取りに時間がかかります。そういう意味ではビッグデータは非常に重要です。\n\nビジネス上、必要な断捨離ができる \u0026nbsp; ビッグデータは売上や業務成績をチェックするだけでなく、既存のデータを様々な角度から見える化を実施することで、必要な断捨離、経営課題を分析、最終的にはビジネスとして意思決定ができます。\n例えば、過去と同じ環境や条件で年間売上推移、失注率の比較、データをマトリクス図に散布して業務の断捨離、効率化のポイント絞り、新メニューの導入判定、価格変更アプローチ、というのが可能になります。ビッグデータがあれば、業務で工数削減や効率化、断捨離などと様々な決断をつけることができます。\n\nデータ維持・運用システムに伴うコストの課題あり \u0026nbsp; BigDataはデータを維持するのに年数百万〜数十億円以上かかります。AmazonWebServiceにしろ、AlibabaCloudにしろ、データを持つのにお金がかかります。\n例えば、AlibabaCloud OSSで1TBのデータを持つ場合、1GB 2.41円/月（2019/09/01 時点）なので、1TBのデータを維持するのに月2,410円かかります。これが10倍、10TBとなったら月24,100円、100TBとなったら月241,000円、1PBとなったら月241万円かかります。他のクラウド会社でも、オンプレミスでも同じです。それだけではありません。データ収集基盤、ETLら加工基盤、分析基盤でこれだけの規模となると、処理に必要な台数（ノード）が増えます。そのため、現在ビッグデータに関する多様多種なシステム（ETLツール、クエリエンジン、BIツール、etc）が色々出ていますが、結局のところ適材適所の問題なので、ビッグデータを担当する人々はコスト削減と処理の効率化、工数削減を求めて様々なソリューション探り、マイグレ、システム改善の日々が続いています。\n\u0026nbsp; 前置きが長くなりましたが、eコマース、農業、ヘルスケア、金融、教育、社会や消費者に役立つビッグデータは私たちの生活や社会、未来を作るのに欠かせない重要な存在となっています。これを踏まえ、AlibabaCloudはビッグデータに力を入れており、実際、ビッグデータから分析、AI、RPA、様々なプロダクトへ連携、進化させてくれます。例えばMaxComputeはDouble 11 Global Shopping Festivalにて1日600PBを超えるデータを処理し、ピーク時のオンライントラフィック時間に1秒あたり3,400,000件のトランザクションをサポートしました。 このように、AlibabaCloudのBigDataはEB級のデータでもシームレスに抽出加工処理できており、またAlibabaCloudのビッグデータの良いところは多様多種なビッグデータに全て対応できることです。AlibabaCloudのBigDataの活用により今の業務やライフスタイルを楽に、そしてビジネスとして新たな価値を生み出すことができれば大変幸いです。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/getting-started/",
	"title": "Getting Started",
	"tags": [],
	"description": "Alibaba Cloudでの最初の手引きの一覧を記載します。",
	"content": ""
},
{
	"uri": "https://www.sbcloud.co.jp/help/getting-started/registration/",
	"title": "アカウント登録",
	"tags": [],
	"description": "Alibaba Cloudを初めて利用する上での新規アカウント登録の手順を紹介します。",
	"content": " Alibaba Cloudのアカウント登録マニュアルが以下のリンクよりダウンロードいただけます。\nAlibaba Cloud登録マニュアルをダウンロード\nまた本アカウント登録手順は以下の流れで記載しております。\n 各種登録手順のご案内\n 環境設定 各種登録の流れ\n  アカウントの登録手順  基本情報の入力 メールアドレスの確認 電話番号の確認 プロファイルの更新  クレジットカードの登録手順  クレジットカードの追加 有効化のための認証 本人確認チケット起票方法  アカウント登録後のお問い合わせ  チケットによるお問い合わせ   SBCloudホームページでも同様の内容が確認できます。 https://www.sbcloud.co.jp/document/account_registration\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/general/advisory/",
	"title": "アドバイザリ",
	"tags": [],
	"description": "Alibaba Cloudを活用する上での導入アドバイザリを記載します。",
	"content": "Alibaba Cloud 導入アドバイザリは下記リンクから取得可能です。\nAlibaba Cloud導入アドバイザリをダウンロード\n本書では、Alibaba Cloud上でシステムを構築する際の「アーキテクチャの設計」、「インフラストラクチャーの構築」、「セキュリティ」、「システム運用」の4点に関わるAlibaba Cloudの構成例をご紹介します。本書を一読頂くことで、一連のプラクティスを把握頂けます。\nなお、本書は公開時点でのアドバイザリであり、時間の経過とともに、プロダクトの追加や機能追加・変更等で仕様が変更になる可能性があります。内容については随時更新を行ってまりますので、最新版をご参照下さい。\n 用語集 本書に扱われるサービス一覧 Alibaba Cloudアーキテクチャの全体像 ネットワークの構成\n4-1. Alibaba Cloudのネットワークの考え方\n4-2. ネットワーク分割\n4-3. アクセス経路\n4-4. アクセス制御\n セキュリテイの構成\n5-1. Alibaba Cloud責任共有モデル 5-2. ID\u0026amp;アクセスマネジメント 5-3. インフラセキュリティ 5-4. ログ管理 5-5. データ保護\n 運用機能\n6-1 システム監視\n6-2 パッチ管理\n6-3 バックアップ管理\n6-4 ジョブ管理\n6-5 構成管理\n  "
},
{
	"uri": "https://www.sbcloud.co.jp/help/getting-started/cloud-users/vs-aws-gcp-azure/",
	"title": "サービスラインナップ比較",
	"tags": [],
	"description": "Alibaba CloudとAWS、GCP、Azureのサービスラインアップの比較を記載します。",
	"content": " 2019年7月時点でのAlibaba Cloud、AWS、Azure、GCPのサービスラインアップの比較となります。\nAlibaba Cloudは中国版、国際版、日本版の３つのサービスが展開されているので、それらも併せて記載しています。\nAWS/Azure/GCPとの比較について ※ AlibabaCloud公式によるAWSとの比較はこちらを参照。 https://help.aliyun.com/document_detail/65455.html\n※ AlibabaCloud公式によるAzureとの比較はこちらを参照。 https://help.aliyun.com/document_detail/74242.html\nコンピューティング（弹性计算）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      云服务器 ECS クラウドサーバ Elastic Compute Service Elastic Compute Service EC2 Virtual Machines Compute Engine    弹性裸金属服务器（神龙） Bare Metalクラウドサーバ ECS Bare Metal Instance ECS Bare Metal Instance EC2 Bare Metal Virtual Machines Compute Engine    轻量应用服务器 軽量アプリケーションサーバー Simple Application Server        GPU 云服务器 GPUクラウドサーバ Elastic GPU Service Elastic GPU Service EC2 Elastic GPUs Virtual Machines Compute Engine    FPGA 云服务器 FPGAクラウドサーバ   AWS EC2 FPGA Virtual Machines Compute Engine    专有宿主机 専有ホスト Dedicated Host Dedicated Host       超级计算集群 スーパーコンピューティングクラスター（SCC） Super Computing Cluster Super Computing Cluster       弹性高性能计算 E-HPC 高性能コンピューティング（E-HPC） E-HPC E-HPC High Performance Computing (HPC)      批量计算 バッチ計算 Batch Compute        容器服务 コンテナサービス Container Service Container Service AWS ECS Container Service -    容器服务 Kubernetes 版 コンテナサービスKubernetes版 Container Service for Kubernetes Container Service for Kubenetes Elastic Container Service for Kubernetes Kubernetes Service Google Kubernetes Engine    弹性容器实例 ECI サーバレスコンテナサービス Elastic Container Instance  Fargate Container Instance -    容器镜像服务 コンテナミラーリングサービス Container Registry  Elastic Container Registry Container Registry Google Container Registry    弹性伸缩 Auto Scaling Auto Scaling Auto Scaling EC2 Auto Scaling Virtual Machine Scale Sets Autoscaling    资源编排 リソースの作成と管理サービス Resource Orchestration Service Resource Orchestration Service AWS CloudFormation Resource Manager Cloud Deployment Manager    函数计算 Function as a Service Function Compute Function Compute AWS Lambda Functions Cloud Functions    图形工作站 GPUワークステーション         ストレージ（存储服务）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      对象存储 OSS オブジェクトストレージ Object Storage Service Object Storage Service S3 Blob Storage Cloud Storage    块存储 ブロックストレージ Block Storage Block Storage EBS Managed Disk 永続ディスク    文件存储 NAS ファイルストレージNAS Network Attached Storage Network Attached Storage Elastic File System (EFS) File Storage Cloud Filestore    文件存储 CPFS クラウドパラレルファイルストレージ         文件存储 HDFS HDFSファイルストレージ         智能云相册 クラウドフォトアルバム         智能媒体管理 インテリジェントメディア管理         云存储网关 クラウドストレージゲートウェイ   AWS Storage Gateway StorSimple     混合云存储阵列 ハイブリッドクラウドストレージアレイ Hybrid Cloud Storage Array        CDN配信（CDN与边缘）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      CDN Content Delivery Network Alibaba Cloud CDN Alibaba Cloud CDN CloudFront CDN Cloud CDN    安全加速 SCDN Secure Content Delivery Network         全站加速 DCDN Dynamic Route for CDN Dynamic Route for CDN Dynamic route for CDN       PCDN P2P CDN         边缘节点服务 ENS Edge Node Service         データベース（数据库）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      云数据库 POLARDB MySQL、Oracle、PostgreSQLの互換性があるクラウドデータベース   Aurora  Cloud Spanner    云数据库 RDS MySQL 版 MySQL ApsaraDB RDS for MySQL ApsaraDB for RDS(MySQL) RDS for MySQL/Aurora Database for MySQL Cloud SQL for MySQL    云数据库 RDS MariaDB TX 版 MariaDB ApsaraDB for MariaDB TX  RDS for MariaDB Database for MariaDB     云数据库 RDS SQL Server 版 SQLServer ApsaraDB RDS for SQL Server ApsaraDB for RDS(SQL Server) RDS for SQL Server SQL Database Cloud SQL for SQL Server    云数据库 RDS PostgreSQL 版 PostgreSQL ApsaraDB RDS for PostgreSQL ApsaraDB for RDS(PostgreSQL) RDS for PostgreSQL/Aurora Database for PostgreSQL Cloud SQL for PostgreSQL    云数据库 RDS PPAS 版 Oracle ApsaraDB RDS for PPAS ApsaraDB for RDS(PPAS) RDS for Oracle      分布式关系型数据库服务 DRDS 分散リレーショナルデータベースサービス Distributed Relational Database Service  Aurora  Cloud Spanner    云数据库 Redis 版 Redis ApsaraDB for Redis ApsaraDB for Redis ElastiCache (Redis) Cache for Redis Cloud Memorystore    云数据库 MongoDB 版 MongoDB ApsaraDB for MongoDB ApsaraDB for MongoDB DocumentDB (with MongoDB compatibility) Cosmos DB(API for MongoDB)     TSDB 时序时空数据库 時系列データベース High-Performance Time Series Database  Timestream Time Series Insights     云数据库 HBase 版 Apache Hbase     Cloud Bigtable   iconなし 图数据库 GDB グラフデータベース   Neptune Cosmos DB(API for Gremlin)     云数据库 Memcache 版 Memcache ApsaraDB for Memcache ApsaraDB for Memcache ElastiCache (Memcached)  Cloud Memorystore    表格存储 TableStore TableStore(NoSQL) Table Store Table Store DynamoDB Cosmos DB Cloud Datastore    分析型数据库 MySQL版 MySQLをベースにした分析データベース         分析型数据库 PostgreSQL版 DWH分析データベース HybridDB for PostgreSQL AnalyticDB for PostgreSQL Redshift SQL Data Warehouse Google BigQuery    HybridDB for MySQL HybridDB for MySQL         Data Lake Analytics データレイクアナリティクス Data Lake Analytics  Athena Data Lake Analytics Google BigQuery    数据管理 DMS データ管理サービス         混合云数据库管理 HDM ハイブリッドクラウドデータベース管理サービス         クラウド通信サービス（云通信）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      短信服务 ショートメッセージサービス         语音服务 音声メッセージサービス         流量服务 移動体通信データパッケージ         物联网无线连接服务 IoT無線通信接続サービス        iconなし 号码隐私保护 モバイルプライバシー保護サービス         号码认证服务 番号認証サービス         ネットワーク（网络）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP     iconなし 云通信网络加速 クラウド通信ネットワーク高速化サービス         专有网络 VPC 専用ネットワークVPC Virtual Private Cloud Virtual Private Cloud VPC Virtual Network Cloud VPN    云解析 PrivateZone VPCのDNSサービス Alibaba Cloud PrivateZone        负载均衡 SLB 負荷分散ロードパランサ Server Load Balancer Server Load Balancer AWS Global Accelerator Traffic Manager Cloud Load Balancing    NAT 网关 NATゲートウェイ NAT Gateway NAT Gateway Internet Gateway、NAT Instance、NAT Gateway      弹性公网 IP パブリックIPリソース Elastic IP Elastic IP Elastic IP Addresses     iconなし IPv6 转换服务 IPv6変換サービス         IPv6 网关 IPv6ゲートウェイ         全局流量管理 Global Traffic Manager Global Traffic Manager Global Traffic Manager Route 53（Traffic policy) Traffic Manager Global Load Balancing   iconなし 共享带宽 帯域幅共有サービス         共享流量包 クラウド間のデータ転送 Data Transfer Plan    Cloud Storage Transfer Service    云企业网 Cloud Enterprise Network Cloud Enterprise Network Cloud Enterprise Network       VPN 网关 VPNゲートウェイ VPN Gateway VPN Gateway VPN Gateway      智能接入网关（邀测中） オンプレミスからのデータ転送 Smart Access Gateway  AWS DataSync      高速通道 専用線接続 Express Connect Express Connect AWS Direct Connect ExpressRoute Dedicated Interconnect    基本的なセキュリティ（基础安全）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      DDoS高防IP DDoS 対策 (DDoS Pro) Anti-DDoS Pro        DDoS基础防护服务 DDoS 対策 (DDoS Basic) Anti-DDoS Basic Anti-DDoS Basic AWS Shield Standard DDoS Protection     DDoS高防（国际） DDoS 対策 (Premium) Anti-DDoS Premium  AWS Shield Advanced DDoS Protection Cloud Armor    新BGP高防IP DDoS 対策 (DDoS BGP)         Web应用防火墙 Webアプリケーションファイアウォール Web Application Firewall Web Application Firewall AWS WAF Application Gateway Cloud Armor    云安全中心（态势感知） クラウドセキュリティセンター Threat Detection Service        云盾混合云 クラウド、IDC、ハイブリッドクラウドでのセキュリティ保護サービス         云安全中心（安骑士） ホストセキュリティソフトウェア Server Guard        云防火墙 クラウドファイアウォール   AWS Firewall Manager Firewall     堡垒机 セキュリティ監査管理プラットフォーム         漏洞扫描 脆弱性スキャンサービス         网站威胁扫描系统 Webサイト脅威スキャンサービス Website Threat Inspector  GuardDuty Security Center Cloud Security Command Center    アイデンティティ管理（身份管理）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      访问控制 アカウント権限管理 Resource Access Management Resource Access Management AWS Identity and Access Management Active Directory Cloud IAM    データセキュリティ（数据安全）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      SSL 证书 SSL/TLS証明書管理サービス SSL Certificates Service SSL Certificates Service AWS Certificate Manager App Service Certificates Google-managed SSL certificates    数据库审计 データベース監査サービス         加密服务 暗号化サービス        iconなし 敏感数据保护 機密データ保護サービス   AWS Secrets Manager Key Vault     密钥管理服务 キー管理 Key Management Service Key Management Service AWS Key Management Service, AWS CloudHSM, AWS Secrets Manager Key Vault Cloud Key Management Service    ビジネスセキュリティ（业务安全）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      游戏盾 ゲームシールド GameShield        内容安全 コンテンツセキュリティ Content Moderation        风险识别 リスク識別と特定サービス         实人认证 人物識別・認証サービス         爬虫风险管理 Webクローラーやbotから防御するサービス Anti-Bot Service        セキュリティサービス(安全服务)    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      安全管家 セキュリティテクノロジおよびコンサルティングサービス Managed Security service       iconなし 渗透测试 侵入テスト         安全众测 セキュリティテスト   Inspector Security Center Cloud Security Command Center   iconなし 等保咨询 セキュリティコンサルティングサービス   Inspector Security Center Cloud Security Command Center   iconなし 应急响应 セキュリティ緊急対応サービス        iconなし 漏洞扫描 脆弱性スキャンサービス        iconなし 安全培训 セキュリティトレーニング        iconなし 安全评估 セキュリティ評価サービス        iconなし 代码审计 ソースコード監査        iconなし 安全加固 セキュリティ強化サービス        iconなし 安全通告 セキュリティ監視通知サービス        iconなし PCI DSS合规咨询 PCI DSSサービス         ビッグデータ計算（大数据计算）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      MaxCompute MaxCompute MaxCompute MaxCompute Redshift SQL Data Warehouse BigQuery    E-MapReduce E-MapReduce、Hadoopクラスタの展開 E-MapReduce E-Mapreduce EMR HDInsight Cloud Datalab, Cloud Dataproc    实时计算 Realtime Compute（元はApache Flink） Realtime Compute Realtime Compute       データの可視化（数据可视化）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      DataV数据可视化 DataV、データの可視化 DataV DataV       ビッグデータの検索と分析（大数据搜索与分析）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      开放搜索 分散検索エンジンプラットフォーム   CloudSearch Search     日志服务 各種ログの一元管理 Log Service Log Service Kinesis, SQS Event Hubs, Stream Analytics Cloud Dataflow, Cloud Pub/Sub    Elasticsearch ElasticSearch Elasticsearch Elasticsearch Elasticserach Service      关系网络分析 リレーショナルネットワーク分析         画像分析 画像分析サービス         公众趋势分析 トレンド分析サービス         Quick BI BIツール Quick BI Quick BI QuickSight Power BI Data Studio    データ開発（数据开发）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      DataWorks データの可視化 DataWorks DataWorks       Dataphin データ構築と管理サービス Dataphin        阿里云DataHub ストリーム処理   Kinesis, SQS Event Hubs, Stream Analytics Cloud Dataflow, Cloud Pub/Sub    数据集成 データ統合 Data Integration Data Integration       データのレコメンデーション（数据开发）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      企业图谱 コーポレートマップ        iconなし 智能推荐 スマートレコメンデーション         インテリジェントな音声対話（智能语音交互）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      录音文件识别 録音ファイルの認識（Speech-to-Text）   Transcribe Speech Services Cloud Speech-to-Text    实时语音转写 リアルタイム音声転写         一句话识别 一文認識（Text-to-Speech）   Polly Speech Services Cloud Text-to-Speech    语音合成 音声合成         语音合成声音定制 音声データの合成およびカスタマイズ         语音模型自学习工具 音声モデル自己学習ツール         画像検索（图像搜索）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      图像搜索 画像検索 Image Search Image Search       自然言語処理（自然语言处理）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      多语言分词 テキスト上の多言語の単語・分詞の分割サービス   Comprehend Language Understanding Cloud Natural Language    词性标注 品詞タグ付けの一部         命名实体 名前付きエンティティ         情感分析 感情分析         中心词提取 中心語抽出         智能文本分类 インテリジェントテキスト分類         文本信息抽取 テキスト情報抽出         商品评价解析 製品レビューの評価分析         印刷テキスト認識（印刷文字识别）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      通用型卡证类 IDカード、銀行カード、パスポートなどカード識別サービス         汽车相关识别 免許証・ナンバープレートなど自動車関連データの識別サービス         行业票据识别 請求書・領収書の識別サービス         资产类识别 資産証明書など各証明書識別サービス         通用文字识别 画像データのテキスト認識         行业文档类识别 業界文書データのテキスト認識サービス         视频类文字识别 ビデオデータ内の字幕および文字テキスト認識サービス         自定义模板识别 ORCカスタムテンプレートを作成し認識するサービス         顔認識（人脸识别）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      人脸识别 顔認識         機械翻訳（机器翻译）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      机器翻译 機械翻訳   Translate Translator Text Cloud Translation    画像認識（图像识别）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      图像识别 画像認識   Rekognition Computer Vision Cloud Vision    コンテンツセキュリティ（内容安全）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      图片鉴黄 ポルノコンテンツ認識         图片涉政暴恐识别 写真データからテロ画像や政治的問題画像識別サービス         图片Logo商标检测 画像からロゴ検出サービス         图片垃圾广告识别 画像スパム認識         图片不良场景识别 薬物使用、ギャンブルなどの不適切なコンテンツ認識サービス         图片风险人物识别 画像から人物特定リスク識別サービス         视频风险内容识别 ビデオリスクのコンテンツ認識         文本反垃圾识别 テキストリスクのコンテンツ認識         语音垃圾识别 音声データのリスク識別サービス         機械学習プラットフォーム（机器学习平台）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      机器学习平台 PAI 機械学習プラットフォームPAI Machine Learning Platform For AI  SageMaker Machine Learning Service Cloud ML Engine   iconなし 人工智能众包 AIによるクラウドソーシング         ドメイン名とウェブサイト（域名与网站）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      域名注册 ドメイン登録サービス         域名交易 ドメイン名取引サービス         网站建设 ウェブサイト構築サポートサービス         云虚拟主机 クラウド仮想ホスト Web Hosting        海外云虚拟主机 国外Webホスティング設置サービス         云解析 DNS DNS Domains Alibaba Cloud DNS Route 53 DNS Cloud DNS    弹性Web托管 柔軟なWebホスティング   Elastic Beanstalk App Service App Engine   iconなし 备案 ドメイン登録(IPC)のためのICP代替申請サービス         知的財産サービス（知识产权服务）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      商标注册 商標登録サービス         商标交易 商標登録されてるものを購入するサービス         申請サービス（应用服务）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP     iconなし 机器人流程自动化 RPA RPA         云桌面 クラウドデスクトップ         云AP クラウドAP         API 网关 API管理 API Gateway API Gateway API Gateway API Management Cloud Endpoints/Apigee    企业邮箱 ビジネスメールボックス Alibaba Mail        邮件推送 メール送受信サービス DirectMail  Simple Email Service      インテリジェントデザインサービス（智能设计服务）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP     iconなし 鹿班 画像自動生成サービス         モバイルクラウド（移动云）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      移动推送 モバイルアプリの通知とメッセージングサービス         移动热修复 モバイルサービスのhot-fixサービス         移动测试 モバイルテストサービス   AWS Device Farm  Cloud Test Lab    移动数据分析 モバイルアプリデータ統計サービス         移动用户反馈 モバイルアプリからのフィードバックサービス        iconなし HTTPDNS モバイル開発者向けのドメイン名解決サービス         ビデオクラウド（视频云）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      音视频通信 RTC オーディオとビデオ通信RTC         视频直播 ライブビデオ ApsaraVideo Live ApsaraVideo Live AWS Elemental MediaLive Media Services - Live and On-demand Streaming     视频监控 ビデオ監視サービス         视频点播 オンデマンドオーディオ/ビデオストリーミングサービス ApsaraVideo VOD  AWS Elemental MediaPackage Media Services     媒体处理 メディア変換 ApsaraVideo for Media Processing ApsaraVideo for Media Processing Elastic Transcoder/AWS Elemental MediaConvert Media Services - Encoding (Anvato)    视频审核 ビデオ検閲サービス。ポルノや政治など禁止事項の特定をメイン         视频DNA ビデオ監査サービス。映像データから重複排除をメイン         视频智能生产 ビデオ制作サービス。映像を識別しリアルタイムでハイライトを生成         视频多模态内容理解 ビデオコンテンツ識別サービス。視覚情報、テキスト、音声および動作から家庭用品、自動車、動物、植物など1000以上のカテゴリを特定         智能封面 ビデオデータやコンテンツから最適なビデオカバー提供         智能视觉 ビデオインテリジェント。画像分類、画像検出、ビデオ分類、ビデオ認識、ライブ識別         プライベートクラウド（专有云）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      Apsara Stack オンプレミスによるAlibabaCloudサービス Apsara Stack  AWS Outposts Stack Cloud Platform Service    メッセージキューMQ（消息队列 MQ）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      消息队列 RocketMQ 分散メッセージミドルウェア   Simple Queue Service Queue Storage     消息队列 AMQP RabbitMQによるメッセージキュー         微消息队列 for IoT IoT向けマイクロメッセージキュー         消息队列 Kafka kafkaによるメッセージキュー   Managed Streaming for Kafka      消息服务 MNS 分散型メッセージキューサービス Message Service Message Service SQS (Simple Queue Service), SNS (Simple Notification Service), MQ Queue Storage, Service Bus Google Pub/Sub, GAE の Task Queue   iconなし 微服务 マイクロサービス         企业级分布式应用服务 EDAS エンタープライズ分散アプリケーションサービスEDAS Enterprise Distributed Application Service        应用配置管理 ACM アプリケーション構成管理ACM Application Configuration Management        全局事务服务 GTS グローバルトランザクションサービス         インテリジェントカスタマーサービス（智能客服）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      云呼叫中心 クラウドコールセンター         云小蜜 NLPベースの会話ロボットサービス   Lex Bot Service (Dialogflow)    智能对话分析 知的対話分析         云客服 クラウドカスタマーサービス         ブロックチェーン（区块链）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      区块链服务 ブロックチェーンサービス Blockchain as a Service Blockchain as a Service Managed Blockchain、Quantum Ledger Database Blockchain Service、Blockchain Workbench     SaaSアクセラレータ（SaaS加速器）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      宜搭 GUIベース開発サービス         モノのインターネットプラットフォーム（物联网平台）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      物联网设备接入 IoTデバイスへのアクセス         生活物联网平台 Life Internet of Thingsプラットフォーム         物联网设备管理 IoTデバイス管理         物联网数据分析 モノのインターネットデータ分析   AWS IoT Analytics Stream Analytics/Time Series Insights    iconなし 物联网一站式开发 IoT 開発Studio   AWS IoT Things Graph IoT Central     低電力WAN（低功耗广域网）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      物联网络管理平台 IoTネットワーク管理プラットフォーム         物联网无线连接服务 IoT無線通信接続サービス         エッジサービス（边缘服务）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      物联网边缘计算 IoTエッジコンピューティング   AWS Greengrass IoT Edge Cloud IoT Edge   iconなし 视频边缘智能服务 ビデオエッジインテリジェンスサービス         設備サービス（设备服务）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP     iconなし AliOS Things Alibaba Cloud用IoTオペレーティングシステム         IoTセキュリティ（物联安全）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP     iconなし 物联网设备身份认证 IoTデバイスアイデンティティ認証   AWS IoT Core IoT Hub Cloud IoT Core   iconなし 物联网安全运营中心 IoTセキュリティオペレーションセンター   AWS IoT Device Defender     iconなし 物联网可信执行环境 IoT実行環境アプリケーション   AWS IoT 1-Click     iconなし 物联网可信服务管理 IoTサービス集約管理プラットフォーム   AWS IoT Device Management IoT Hub Cloud IoT Core    ソフトとハードの統合アプリケーション（软硬一体化应用）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP     iconなし 魔笔 手書きデータの認識サービス（マジックペン）         云投屏 クラウドプロジェクションスクリーン         関連クラウド製品（相关云产品）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      智联车管理云平台 Zhilian自動車メーカー向けの自動車管理クラウドプラットフォーム         エコロジー（生态）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP     iconなし 物联网市场 IoTアプリケーション購入市場        iconなし ICA物联网标准联盟 IoTConnectivityAlliance、IoTアライアンス        iconなし 物联网测试认证服务 IoTテストおよび認証サービス         バックアップ、移行、および災害復旧（备份、迁移与容灾）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      混合云备份服务 ハイブリッドクラウドのバックアップサービス         混合云容灾服务 ハイブリットクラウドの災害復旧サービス         数据库备份 DBS データベースバックアップ Database Backup Database Backup       数据传输 DTS データ転送サービス Data Transmission Service Data Transmission Service AWS Database Migration Service, AWS Schema Conversion Tool Database Migration Service     数据库和应用迁移 ADAM データベースとアプリケーション移植サービス         闪电立方 オンラインとオフラインのデータ転送サービス（Lightning Cube）        iconなし 迁移工具 Qianyun移植ツール         開発者プラットフォーム（开发者平台）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      云效 DevOpsサービス        iconなし 开发者中心 デベロッパーセンター         物联网开发者平台 IoTプラットフォーム         APIとツール（API与工具）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP     iconなし Cloud Toolkit クラウド開発ツールキット   AWS CodeStar DevOps     OpenAPI Explorer OpenAPI Explorer        iconなし API 控制中心 APIコンソール        iconなし API 全集 APIプラットフォーム        iconなし API 错误中心 APIエラーセンター        iconなし SDK 全集 Alibaba Cloud SDKプラットフォーム   AWS Cloud9 (Visual Studio Online) (Cloud Shell Code editor)    云命令行 Cloud Shell Cloud Shell Cloud Shell AWS Systems Manager Session Manager Cloud Shell Cloud Shell    プロジェクトコラボレーション（项目协作）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP     iconなし 项目协作 クラウドエンタープライズコラボレーション         コードホスティング、倉庫（代码托管、仓库）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      代码托管 Gitライブラリホスティングサービス   AWS CodeCommit Repos Cloud Source Repositories   iconなし Maven公共仓库 Maven Public Warehouse        iconなし 制品仓库 Maven製品管理サービス         統合配送（集成交付）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP     iconなし 持续交付 継続的配信サービス         CodePipline パイプライン   AWS CodePipeline Pipelines Cloud Build    テスト（测试）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      性能测试 PTS パフォーマンステストサービス        iconなし 测试平台 クラウドサービス上のテストプラットフォーム         開発と運用（开发与运维）    icon 中国サイト コメント 国際サイト 日本サイト AWS Azure GCP      应用实时监控服务 アプリケーションリアルタイム監視サービス         云监控 クラウドモニタリング CloudMonitor CloudMonitor CloudWatch Events Event Grid、Monitor Stackdriver Monitoring   iconなし 智能顾问 AlibabaCloudコンサルティングサービス         应用高可用服务 AHAS Application High Availability Service         Node.js性能平台 Node.jsパフォーマンスプラットフォーム         链路追踪 TracingAnalysis         "
},
{
	"uri": "https://www.sbcloud.co.jp/help/getting-started/product/links/",
	"title": "プロダクト資料のリンク一覧",
	"tags": [],
	"description": "Alibaba Cloudでよく利用されるプロダクトの資料リンク一覧",
	"content": " 頻繁に利用されるプロダクトの活用リンク一覧を記載します。\n主要プロダクト    製品名 コンテンツテーマ URL     ECS プロダクト紹介 公式ドキュメント   ECS クイックスタート 公式ドキュメント   ECS ベストプラクティス 公式ドキュメント   RDS プロダクト紹介 公式ドキュメント   SLB プロダクト紹介 公式ドキュメント   VPC プロダクト紹介 公式ドキュメント   ExpressConnect プロダクト紹介 公式ドキュメント   CloudMonitor プロダクト紹介 公式ドキュメント   OSS プロダクト紹介 公式ドキュメント    人気のプロダクト    製品名 コンテンツテーマ URL     Container Service for Kubernetes プロダクト紹介 公式ドキュメント   MaxCompute プロダクト紹介 公式ドキュメント   Realtime Compute プロダクト紹介 公式ドキュメント   Image Search プロダクト紹介 公式ドキュメント   Anti-DDoS プロダクト紹介 公式ドキュメント    "
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/general/",
	"title": "全般",
	"tags": [],
	"description": "Alibaba Cloud全体に関するベストプラクティスを記載します。",
	"content": ""
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/terraform/01/how-to-use/",
	"title": "Terraformとは",
	"tags": [],
	"description": "Alibaba Cloudでも用いられるTerraformの概要を説明します。",
	"content": "\u0026nbsp; AlibabaCloudというクラウドサービスが登場したことで、クラウドサービス上にあるECSという仮想コンピューティングを作成・破棄するのが非常に簡単になりました。ボタン一つで数分でコンピューティングを起動できます。AlibabaCloudのマネジメントコンソールはWeb上にて操作する、数多くの機能をまとめた完成度の高いGUIです。\n\u0026nbsp; しかし、Web上にてGUI操作とはいえ設定項目を一つ一つずつ画面上操作するのは骨が折れるのと、小規模サービスでも構築にヒューマンエラーや運用・学習コストはどうしても付き物になります。例えばAlibabaCloud未経験者がECSをCS 100台を手動起動してみましょう。この作業にどれほどの時間がかかるか、そしてミスをゼロにして稼働できるか、という課題があります。そこで解決の道となったのがInfrastructure as Code（以降は「IaC」と略します）です。\n\u0026nbsp; IaCはコード通りの内容を自動で設定する仕組みを持ちます。IaCの種類はPackerやVagrantなど様々ですが、HashiCorp社がオープンソースとして手掛けるTerraformというマルチクラウド対応プロビジョニングツールがあります。シンプルなDSL(HCL)、自由自在な変数表現と状態管理が特徴です。\n\u0026nbsp; TerraformはAlibabaCloudだけでなくAmazon Web Services 、GoogleCloudPlatform、MicrosoftAzure、Docker、OpenStackなど様々なインフラに幅広く対応しています。インフラを構築するためのプロビジョニングツールであり、開発者だけなく、運用担当者でも必要となりうるプロビジョニングツールです。\n\u0026nbsp; Terraformは構築したいインフラの構成をテキスト形式のテンプレートファイルに定義します（Infrastructure as Code）。「どこのリージョン」「どのスペックのECS、どのリソースを使うか」「支払い方法」「展開方法」といったインフラの状態をコードとして記述し、ターミナルからコマンドを実行するだけでクラウド上に適用 (構築) が出来ます。逆に既存のリソースをTerraformでImportすることでコード化、同じ構成のコードを他リージョンで同様展開することも可能です。 他にIaCとしてPackerやVagrantがありますが、本ガイドラインとしてはTerraformを中心とした説明で進めます。 \u0026nbsp; 構成変更や他クラウドプロパイダからのマイグレーション、同じリソースで別リージョン、別アカウントにて展開するときにIaCがあることでエラーなくシームレスに移管ができます（リソースをGUIベースでコピーすることは不可能です。） また障害や高負荷など問題発生時でも環境を復元することができるメリットもあります。\n\u0026nbsp; 加えて、コードからリソースを作成することで学習コスト・運用コストを削減することができます。例えば先ほどの例、AlibabaCloud未経験者がECS 100台を手動でなくIaC、Terraformで起動すると、ミスをゼロへ抑制はもちろん、学習工数・運用保守コスト・全てが大幅に節約できます。\n\u0026nbsp; また、クラウド環境（仮想環境）が登場したことで、サーバらHW、物理的リソース制約がなくなりました。これにより、サーバやネットワークを簡単に構築したり、一旦構築したものをすぐに破棄することが出来るようになったので、一度構築したインフラやリソースは変更を加えることなく破棄して、新しいものを構築する考えが可能になりました。 →このような流れは「Immutable Infrastructure（不変のインフラ）」と呼ばれ、インフラ変更履歴を管理するのではなく、動作している「インフラの状態」を管理（=必要に応じて使い捨て）からクラウド環境ではコードによるインフラ構成・構築・管理・運用を行う必要があります。\n\u0026nbsp; 前置きが長くなりましたが、クラウドサービスの良いところは立案した戦略や設計をすぐに試せれるところであり、AlibabaCloudの良いところは、PaaS/IaaS/SaaS/KaaS\u0026hellip;幅多くのプロダクトサービスがあり、これらの活用によってより楽に生産的にすることができる点です。是非楽しみながらAlibabaCloudのTerraformを読み進めていただければ大変幸いです。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/getting-started/product/ecs-by-region/",
	"title": "ECSの使用可能なRegion/Spec/Price紹介",
	"tags": [],
	"description": "Alibaba CloudのECSで使用可能なRegion/Spec/Priceを紹介します。",
	"content": " ap-northeast-1    instanceType vCPU  メモリ  イントラネット帯域幅 パケット転送速度  GPU/FPGA  ローカルストレージ  OS 従量課金 サブスクリプション サブスクリプション     ecs.c5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 9.8 JPY /時間 ¥ 5170.00 JPY /月 ¥ 52734.00 JPY /年   ecs.c5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 17.7 JPY /時間 ¥ 10710.00 JPY /月 ¥ 109242.00 JPY /年   ecs.c5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 19.6 JPY /時間 ¥ 10330.00 JPY /月 ¥ 105366.00 JPY /年   ecs.c5.2xlarge 8 vCPU 16 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 39.2 JPY /時間 ¥ 20650.00 JPY /月 ¥ 210630.00 JPY /年   ecs.c5.2xlarge 8 vCPU 16 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 70.4 JPY /時間 ¥ 42830.00 JPY /月 ¥ 436866.00 JPY /年   ecs.c5.4xlarge 16 vCPU 32 GiB 5 Gbps 1000,000 PPS - - linux ￥ 78.4 JPY /時間 ¥ 41290.00 JPY /月 ¥ 421158.00 JPY /年   ecs.c5.4xlarge 16 vCPU 32 GiB 5 Gbps 1000,000 PPS - - windows ￥ 140.8 JPY /時間 ¥ 85650.00 JPY /月 ¥ 873630.00 JPY /年   ecs.c5.6xlarge 24 vCPU 48 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 117.6 JPY /時間 ¥ 61930.00 JPY /月 ¥ 631686.00 JPY /年   ecs.c5.6xlarge 24 vCPU 48 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 211.2 JPY /時間 ¥ 128480.00 JPY /月 ¥ 1310496.00 JPY /年   ecs.c5.8xlarge 32 vCPU 64 GiB 10 Gbps 2000,000 PPS - - linux ￥ 156.7 JPY /時間 ¥ 82570.00 JPY /月 ¥ 842214.00 JPY /年   ecs.c5.8xlarge 32 vCPU 64 GiB 10 Gbps 2000,000 PPS - - windows ￥ 281.6 JPY /時間 ¥ 171300.00 JPY /月 ¥ 1747260.00 JPY /年   ecs.c5.16xlarge 64 vCPU 128 GiB 20 Gbps 4000,000 PPS - - linux ￥ 313.4 JPY /時間 ¥ 165130.00 JPY /月 ¥ 1684326.00 JPY /年   ecs.c5.16xlarge 64 vCPU 128 GiB 20 Gbps 4000,000 PPS - - windows ￥ 563.1 JPY /時間 ¥ 342590.00 JPY /月 ¥ 3494418.00 JPY /年   ecs.e4.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 27.6 JPY /時間 ¥ 17470.00 JPY /月 ¥ 178194.00 JPY /年   ecs.e4.xlarge 4 vCPU 32 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 36.7 JPY /時間 ¥ 19960.00 JPY /月 ¥ 203592.00 JPY /年   ecs.e4.xlarge 4 vCPU 32 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 55 JPY /時間 ¥ 34930.00 JPY /月 ¥ 356286.00 JPY /年   ecs.e4.2xlarge 8 vCPU 64 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 73.3 JPY /時間 ¥ 39920.00 JPY /月 ¥ 407184.00 JPY /年   ecs.e4.2xlarge 8 vCPU 64 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 109.9 JPY /時間 ¥ 69860.00 JPY /月 ¥ 712572.00 JPY /年   ecs.e4.4xlarge 16 vCPU 128 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 146.5 JPY /時間 ¥ 79830.00 JPY /月 ¥ 814266.00 JPY /年   ecs.e4.4xlarge 16 vCPU 128 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 219.9 JPY /時間 ¥ 139710.00 JPY /月 ¥ 1425042.00 JPY /年   ecs.g5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 12.3 JPY /時間 ¥ 6090.00 JPY /月 ¥ 62118.00 JPY /年   ecs.g5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 21.7 JPY /時間 ¥ 12640.00 JPY /月 ¥ 128928.00 JPY /年   ecs.g5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 24.5 JPY /時間 ¥ 12170.00 JPY /月 ¥ 124134.00 JPY /年   ecs.g5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 43.3 JPY /時間 ¥ 25280.00 JPY /月 ¥ 257856.00 JPY /年   ecs.g5.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 49 JPY /時間 ¥ 24340.00 JPY /月 ¥ 248268.00 JPY /年   ecs.g5.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 86.5 JPY /時間 ¥ 50550.00 JPY /月 ¥ 515610.00 JPY /年   ecs.g5.4xlarge 16 vCPU 64 GiB 5 Gbps 1000,000 PPS - - linux ￥ 98 JPY /時間 ¥ 48670.00 JPY /月 ¥ 496434.00 JPY /年   ecs.g5.4xlarge 16 vCPU 64 GiB 5 Gbps 1000,000 PPS - - windows ￥ 173 JPY /時間 ¥ 101090.00 JPY /月 ¥ 1031118.00 JPY /年   ecs.g5.6xlarge 24 vCPU 96 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 146.9 JPY /時間 ¥ 73000.00 JPY /月 ¥ 744600.00 JPY /年   ecs.g5.6xlarge 24 vCPU 96 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 259.5 JPY /時間 ¥ 151630.00 JPY /月 ¥ 1546626.00 JPY /年   ecs.g5.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS - - linux ￥ 195.9 JPY /時間 ¥ 97340.00 JPY /月 ¥ 992868.00 JPY /年   ecs.g5.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS - - windows ￥ 346 JPY /時間 ¥ 202180.00 JPY /月 ¥ 2062236.00 JPY /年   ecs.g5.16xlarge 64 vCPU 256 GiB 20 Gbps 4000,000 PPS - - linux ￥ 391.7 JPY /時間 ¥ 194670.00 JPY /月 ¥ 1985634.00 JPY /年   ecs.g5.16xlarge 64 vCPU 256 GiB 20 Gbps 4000,000 PPS - - windows ￥ 692 JPY /時間 ¥ 404350.00 JPY /月 ¥ 4124370.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 185.7 JPY /時間 ¥ 89200.00 JPY /月 ¥ 909840.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 242.1 JPY /時間 ¥ 116190.00 JPY /月 ¥ 1185138.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 371.6 JPY /時間 ¥ 178400.00 JPY /月 ¥ 1819680.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 484.1 JPY /時間 ¥ 232370.00 JPY /月 ¥ 2370174.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 223.7 JPY /時間 ¥ 107410.00 JPY /月 ¥ 1095582.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 291.5 JPY /時間 ¥ 139900.00 JPY /月 ¥ 1426980.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 447.5 JPY /時間 ¥ 214810.00 JPY /月 ¥ 2191062.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 583 JPY /時間 ¥ 279800.00 JPY /月 ¥ 2853960.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 895 JPY /時間 ¥ 429610.00 JPY /月 ¥ 4382022.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 1165.9 JPY /時間 ¥ 559600.00 JPY /月 ¥ 5707920.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 1790 JPY /時間 ¥ 859220.00 JPY /月 ¥ 8764044.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 2331.7 JPY /時間 ¥ 1119190.00 JPY /月 ¥ 11415738.00 JPY /年   ecs.gn5-c28g1.7xlarge 28 vCPU 112 GiB 5 Gbps 2250,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 347.2 JPY /時間 ¥ 166620.00 JPY /月 ¥ 1699524.00 JPY /年   ecs.gn5-c28g1.7xlarge 28 vCPU 112 GiB 5 Gbps 2250,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 416.6 JPY /時間 ¥ 217030.00 JPY /月 ¥ 2213706.00 JPY /年   ecs.gn5-c28g1.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 694.3 JPY /時間 ¥ 333230.00 JPY /月 ¥ 3398946.00 JPY /年   ecs.gn5-c28g1.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 833.2 JPY /時間 ¥ 434050.00 JPY /月 ¥ 4427310.00 JPY /年   ecs.i2.xlarge 4 vCPU 32 GiB 1 Gbps 500,000 PPS - local_ssd_pro linux ￥ 35.5 JPY /時間 ¥ 17550.00 JPY /月 ¥ 179010.00 JPY /年   ecs.i2.xlarge 4 vCPU 32 GiB 1 Gbps 500,000 PPS - local_ssd_pro windows ￥ 53.5 JPY /時間 ¥ 30560.00 JPY /月 ¥ 311712.00 JPY /年   ecs.i2.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - local_ssd_pro linux ￥ 71 JPY /時間 ¥ 35090.00 JPY /月 ¥ 357918.00 JPY /年   ecs.i2.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - local_ssd_pro windows ￥ 106.9 JPY /時間 ¥ 61120.00 JPY /月 ¥ 623424.00 JPY /年   ecs.i2.4xlarge 16 vCPU 128 GiB 3 Gbps 1500,000 PPS - local_ssd_pro linux ￥ 142 JPY /時間 ¥ 70180.00 JPY /月 ¥ 715836.00 JPY /年   ecs.i2.4xlarge 16 vCPU 128 GiB 3 Gbps 1500,000 PPS - local_ssd_pro windows ￥ 213.8 JPY /時間 ¥ 122240.00 JPY /月 ¥ 1246848.00 JPY /年   ecs.i2.8xlarge 32 vCPU 256 GiB 6 Gbps 2000,000 PPS - local_ssd_pro linux ￥ 284 JPY /時間 ¥ 140360.00 JPY /月 ¥ 1431672.00 JPY /年   ecs.i2.8xlarge 32 vCPU 256 GiB 6 Gbps 2000,000 PPS - local_ssd_pro windows ￥ 427.6 JPY /時間 ¥ 244480.00 JPY /月 ¥ 2493696.00 JPY /年   ecs.i2.16xlarge 64 vCPU 512 GiB 10 Gbps 4000,000 PPS - local_ssd_pro linux ￥ 568 JPY /時間 ¥ 280710.00 JPY /月 ¥ 2863242.00 JPY /年   ecs.i2.16xlarge 64 vCPU 512 GiB 10 Gbps 4000,000 PPS - local_ssd_pro windows ￥ 855.2 JPY /時間 ¥ 488950.00 JPY /月 ¥ 4987290.00 JPY /年   ecs.ic5.large 2 vCPU 2 GiB 1 Gbps 300,000 PPS - - linux ￥ 9.3 JPY /時間 ¥ 4910.00 JPY /月 ¥ 50082.00 JPY /年   ecs.ic5.large 2 vCPU 2 GiB 1 Gbps 300,000 PPS - - windows ￥ 16.8 JPY /時間 ¥ 10180.00 JPY /月 ¥ 103836.00 JPY /年   ecs.ic5.xlarge 4 vCPU 4 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 18.6 JPY /時間 ¥ 9810.00 JPY /月 ¥ 100062.00 JPY /年   ecs.ic5.xlarge 4 vCPU 4 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 33.5 JPY /時間 ¥ 20350.00 JPY /月 ¥ 207570.00 JPY /年   ecs.ic5.2xlarge 8 vCPU 8 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 37.2 JPY /時間 ¥ 19610.00 JPY /月 ¥ 200022.00 JPY /年   ecs.ic5.2xlarge 8 vCPU 8 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 67 JPY /時間 ¥ 40690.00 JPY /月 ¥ 415038.00 JPY /年   ecs.ic5.3xlarge 12 vCPU 12 GiB 4 Gbps 900,000 PPS - - linux ￥ 55.7 JPY /時間 ¥ 29420.00 JPY /月 ¥ 300084.00 JPY /年   ecs.ic5.4xlarge 16 vCPU 16 GiB 5 Gbps 1000,000 PPS - - linux ￥ 74.3 JPY /時間 ¥ 39220.00 JPY /月 ¥ 400044.00 JPY /年   ecs.ic5.4xlarge 16 vCPU 16 GiB 5 Gbps 1000,000 PPS - - windows ￥ 133.9 JPY /時間 ¥ 81370.00 JPY /月 ¥ 829974.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 7.4 JPY /時間 ¥ 3890.00 JPY /月 ¥ 39678.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 9.2 JPY /時間 ¥ 5440.00 JPY /月 ¥ 55488.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 14.7 JPY /時間 ¥ 7760.00 JPY /月 ¥ 79152.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 18.4 JPY /時間 ¥ 10870.00 JPY /月 ¥ 110874.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 35.4 JPY /時間 ¥ 16030.00 JPY /月 ¥ 163506.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 53.1 JPY /時間 ¥ 28040.00 JPY /月 ¥ 286008.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 70.7 JPY /時間 ¥ 32570.00 JPY /月 ¥ 332214.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 106.1 JPY /時間 ¥ 57000.00 JPY /月 ¥ 581400.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 141.4 JPY /時間 ¥ 65640.00 JPY /月 ¥ 669528.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 212.1 JPY /時間 ¥ 114870.00 JPY /月 ¥ 1171674.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - linux ￥ 282.8 JPY /時間 ¥ 131770.00 JPY /月 ¥ 1344054.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - windows ￥ 424.2 JPY /時間 ¥ 230590.00 JPY /月 ¥ 2352018.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 3.3 JPY /時間 ¥ 2020.00 JPY /月 ¥ 20604.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 4.2 JPY /時間 ¥ 2820.00 JPY /月 ¥ 28764.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 6.6 JPY /時間 ¥ 4030.00 JPY /月 ¥ 41106.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 8.3 JPY /時間 ¥ 5630.00 JPY /月 ¥ 57426.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 20.9 JPY /時間 ¥ 11480.00 JPY /月 ¥ 117096.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 31.4 JPY /時間 ¥ 20090.00 JPY /月 ¥ 204918.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 47 JPY /時間 ¥ 23000.00 JPY /月 ¥ 234600.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 70.4 JPY /時間 ¥ 40240.00 JPY /月 ¥ 410448.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 93.8 JPY /時間 ¥ 46520.00 JPY /月 ¥ 474504.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 140.6 JPY /時間 ¥ 81410.00 JPY /月 ¥ 830382.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - linux ￥ 187.6 JPY /時間 ¥ 93570.00 JPY /月 ¥ 954414.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - windows ￥ 281.4 JPY /時間 ¥ 163750.00 JPY /月 ¥ 1670250.00 JPY /年   ecs.r5.16xlarge 64 vCPU 512 GiB 20 Gbps 4000,000 PPS - - linux ￥ 496.2 JPY /時間 ¥ 228160.00 JPY /月 ¥ 2327232.00 JPY /年   ecs.r5.16xlarge 64 vCPU 512 GiB 20 Gbps 4000,000 PPS - - windows ￥ 780.1 JPY /時間 ¥ 436400.00 JPY /月 ¥ 4451280.00 JPY /年   ecs.r5.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 15.6 JPY /時間 ¥ 7130.00 JPY /月 ¥ 72726.00 JPY /年   ecs.r5.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 24.4 JPY /時間 ¥ 13640.00 JPY /月 ¥ 139128.00 JPY /年   ecs.r5.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 31.1 JPY /時間 ¥ 14260.00 JPY /月 ¥ 145452.00 JPY /年   ecs.r5.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 48.8 JPY /時間 ¥ 27280.00 JPY /月 ¥ 278256.00 JPY /年   ecs.r5.2xlarge 8 vCPU 64 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 62.1 JPY /時間 ¥ 28520.00 JPY /月 ¥ 290904.00 JPY /年   ecs.r5.2xlarge 8 vCPU 64 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 97.6 JPY /時間 ¥ 54550.00 JPY /月 ¥ 556410.00 JPY /年   ecs.r5.4xlarge 16 vCPU 128 GiB 5 Gbps 1000,000 PPS - - linux ￥ 124.1 JPY /時間 ¥ 57040.00 JPY /月 ¥ 581808.00 JPY /年   ecs.r5.4xlarge 16 vCPU 128 GiB 5 Gbps 1000,000 PPS - - windows ￥ 195.1 JPY /時間 ¥ 109100.00 JPY /月 ¥ 1112820.00 JPY /年   ecs.r5.6xlarge 24 vCPU 192 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 186.1 JPY /時間 ¥ 85560.00 JPY /月 ¥ 872712.00 JPY /年   ecs.r5.6xlarge 24 vCPU 192 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 292.6 JPY /時間 ¥ 163650.00 JPY /月 ¥ 1669230.00 JPY /年   ecs.r5.8xlarge 32 vCPU 256 GiB 10 Gbps 2000,000 PPS - - linux ￥ 248.1 JPY /時間 ¥ 114080.00 JPY /月 ¥ 1163616.00 JPY /年   ecs.r5.8xlarge 32 vCPU 256 GiB 10 Gbps 2000,000 PPS - - windows ￥ 390.1 JPY /時間 ¥ 218200.00 JPY /月 ¥ 2225640.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 16.2 JPY /時間 ¥ 6690.00 JPY /月 ¥ 68238.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 25.4 JPY /時間 ¥ 13510.00 JPY /月 ¥ 137802.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 32.3 JPY /時間 ¥ 13380.00 JPY /月 ¥ 136476.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 50.8 JPY /時間 ¥ 27010.00 JPY /月 ¥ 275502.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 64.6 JPY /時間 ¥ 26750.00 JPY /月 ¥ 272850.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 101.7 JPY /時間 ¥ 54010.00 JPY /月 ¥ 550902.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - linux ￥ 129.3 JPY /時間 ¥ 53500.00 JPY /月 ¥ 545700.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - windows ￥ 203.5 JPY /時間 ¥ 108020.00 JPY /月 ¥ 1101804.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - linux ￥ 411.5 JPY /時間 ¥ 118480.00 JPY /月 ¥ 1208496.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - windows ￥ 484.1 JPY /時間 ¥ 139380.00 JPY /月 ¥ 1421676.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - linux ￥ 476.6 JPY /時間 ¥ 219190.00 JPY /月 ¥ 2235738.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - windows ￥ 750.7 JPY /時間 ¥ 419260.00 JPY /月 ¥ 4276452.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 16.9 JPY /時間 ¥ 7810.00 JPY /月 ¥ 79662.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 26.7 JPY /時間 ¥ 14930.00 JPY /月 ¥ 152286.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 33.8 JPY /時間 ¥ 15610.00 JPY /月 ¥ 159222.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 53.3 JPY /時間 ¥ 29850.00 JPY /月 ¥ 304470.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - linux ￥ 67.8 JPY /時間 ¥ 31210.00 JPY /月 ¥ 318342.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - windows ￥ 106.7 JPY /時間 ¥ 59700.00 JPY /月 ¥ 608940.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - linux ￥ 135.7 JPY /時間 ¥ 62420.00 JPY /月 ¥ 636684.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - windows ￥ 213.6 JPY /時間 ¥ 119390.00 JPY /月 ¥ 1217778.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - linux ￥ 271.4 JPY /時間 ¥ 124840.00 JPY /月 ¥ 1273368.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - windows ￥ 427.4 JPY /時間 ¥ 238770.00 JPY /月 ¥ 2435454.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 11 JPY /時間 ¥ 5700.00 JPY /月 ¥ 58140.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 18.9 JPY /時間 ¥ 11520.00 JPY /月 ¥ 117504.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 21.9 JPY /時間 ¥ 11460.00 JPY /月 ¥ 116892.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 37.8 JPY /時間 ¥ 23110.00 JPY /月 ¥ 235722.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 43.7 JPY /時間 ¥ 22850.00 JPY /月 ¥ 233070.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 75.6 JPY /時間 ¥ 46140.00 JPY /月 ¥ 470628.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - linux ￥ 87.4 JPY /時間 ¥ 45700.00 JPY /月 ¥ 466140.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - windows ￥ 151.2 JPY /時間 ¥ 92280.00 JPY /月 ¥ 941256.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - linux ￥ 174.8 JPY /時間 ¥ 91460.00 JPY /月 ¥ 932892.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - windows ￥ 318.4 JPY /時間 ¥ 196270.00 JPY /月 ¥ 2001954.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 11.5 JPY /時間 ¥ 5990.00 JPY /月 ¥ 61098.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 19.8 JPY /時間 ¥ 12100.00 JPY /月 ¥ 123420.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 22.9 JPY /時間 ¥ 12030.00 JPY /月 ¥ 122706.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 39.6 JPY /時間 ¥ 24260.00 JPY /月 ¥ 247452.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 45.8 JPY /時間 ¥ 24000.00 JPY /月 ¥ 244800.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 79.4 JPY /時間 ¥ 48450.00 JPY /月 ¥ 494190.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 91.6 JPY /時間 ¥ 47990.00 JPY /月 ¥ 489498.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 158.8 JPY /時間 ¥ 96900.00 JPY /月 ¥ 988380.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 183.4 JPY /時間 ¥ 96030.00 JPY /月 ¥ 979506.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 334.3 JPY /時間 ¥ 206080.00 JPY /月 ¥ 2102016.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 13 JPY /時間 ¥ 5780.00 JPY /月 ¥ 58956.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 22.3 JPY /時間 ¥ 12550.00 JPY /月 ¥ 128010.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 26.1 JPY /時間 ¥ 11570.00 JPY /月 ¥ 118014.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 44.6 JPY /時間 ¥ 25100.00 JPY /月 ¥ 256020.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 52.1 JPY /時間 ¥ 23130.00 JPY /月 ¥ 235926.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 89.3 JPY /時間 ¥ 50190.00 JPY /月 ¥ 511938.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - linux ￥ 104.2 JPY /時間 ¥ 46260.00 JPY /月 ¥ 471852.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - windows ￥ 178.5 JPY /時間 ¥ 100370.00 JPY /月 ¥ 1023774.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - linux ￥ 208.4 JPY /時間 ¥ 92520.00 JPY /月 ¥ 943704.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - windows ￥ 357 JPY /時間 ¥ 200740.00 JPY /月 ¥ 2047548.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - windows ￥ 624.9 JPY /時間 ¥ 351180.00 JPY /月 ¥ 3582036.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 13.6 JPY /時間 ¥ 6750.00 JPY /月 ¥ 68850.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 23.3 JPY /時間 ¥ 13870.00 JPY /月 ¥ 141474.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 27.3 JPY /時間 ¥ 13490.00 JPY /月 ¥ 137598.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 46.8 JPY /時間 ¥ 27740.00 JPY /月 ¥ 282948.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 54.6 JPY /時間 ¥ 26990.00 JPY /月 ¥ 275298.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 93.7 JPY /時間 ¥ 55470.00 JPY /月 ¥ 565794.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 109.4 JPY /時間 ¥ 53970.00 JPY /月 ¥ 550494.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 187.4 JPY /時間 ¥ 110940.00 JPY /月 ¥ 1131588.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 218.8 JPY /時間 ¥ 107930.00 JPY /月 ¥ 1100886.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 374.9 JPY /時間 ¥ 221870.00 JPY /月 ¥ 2263074.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - linux ￥ 382.9 JPY /時間 ¥ 188760.00 JPY /月 ¥ 1925352.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - windows ￥ 656.1 JPY /時間 ¥ 388150.00 JPY /月 ¥ 3959130.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 3.7 JPY /時間 ¥ 1770.00 JPY /月 ¥ 18054.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 4.8 JPY /時間 ¥ 2540.00 JPY /月 ¥ 25908.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 7.3 JPY /時間 ¥ 3540.00 JPY /月 ¥ 36108.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 9.5 JPY /時間 ¥ 5080.00 JPY /月 ¥ 51816.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 14.5 JPY /時間 ¥ 7070.00 JPY /月 ¥ 72114.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 18.9 JPY /時間 ¥ 10160.00 JPY /月 ¥ 103632.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 28.9 JPY /時間 ¥ 14130.00 JPY /月 ¥ 144126.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 37.8 JPY /時間 ¥ 20310.00 JPY /月 ¥ 207162.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 5 JPY /時間 ¥ 2450.00 JPY /月 ¥ 24990.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 6.6 JPY /時間 ¥ 3530.00 JPY /月 ¥ 36006.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 10 JPY /時間 ¥ 4900.00 JPY /月 ¥ 49980.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 13.1 JPY /時間 ¥ 7050.00 JPY /月 ¥ 71910.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 20 JPY /時間 ¥ 9800.00 JPY /月 ¥ 99960.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 26.2 JPY /時間 ¥ 14090.00 JPY /月 ¥ 143718.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 40 JPY /時間 ¥ 19590.00 JPY /月 ¥ 199818.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 52.3 JPY /時間 ¥ 28160.00 JPY /月 ¥ 287232.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 8.2 JPY /時間 ¥ 3800.00 JPY /月 ¥ 38760.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 10.2 JPY /時間 ¥ 5090.00 JPY /月 ¥ 51918.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 16.4 JPY /時間 ¥ 7600.00 JPY /月 ¥ 77520.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 20.4 JPY /時間 ¥ 10180.00 JPY /月 ¥ 103836.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 32.7 JPY /時間 ¥ 15190.00 JPY /月 ¥ 154938.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 40.8 JPY /時間 ¥ 20360.00 JPY /月 ¥ 207672.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 1.4 JPY /時間 ¥ 660.00 JPY /月 ¥ 6732.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 1.8 JPY /時間 ¥ 950.00 JPY /月 ¥ 9690.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 4.4 JPY /時間 ¥ 2150.00 JPY /月 ¥ 21930.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 5.8 JPY /時間 ¥ 3090.00 JPY /月 ¥ 31518.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 2.3 JPY /時間 ¥ 1070.00 JPY /月 ¥ 10914.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 2.9 JPY /時間 ¥ 1550.00 JPY /月 ¥ 15810.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 6.6 JPY /時間 ¥ 3190.00 JPY /月 ¥ 32538.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 8 JPY /時間 ¥ 4270.00 JPY /月 ¥ 43554.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - linux ￥ 0.8 JPY /時間 ¥ 350.00 JPY /月 ¥ 3570.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - windows ￥ 1 JPY /時間 ¥ 500.00 JPY /月 ¥ 5100.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 1.9 JPY /時間 ¥ 1010.00 JPY /月 ¥ 10302.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 2.4 JPY /時間 ¥ 1360.00 JPY /月 ¥ 13872.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 2.7 JPY /時間 ¥ 1240.00 JPY /月 ¥ 12648.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 3.7 JPY /時間 ¥ 1970.00 JPY /月 ¥ 20094.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 5.5 JPY /時間 ¥ 2470.00 JPY /月 ¥ 25194.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 7.4 JPY /時間 ¥ 3910.00 JPY /月 ¥ 39882.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 17.8 JPY /時間 ¥ 7050.00 JPY /月 ¥ 71910.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 33.2 JPY /時間 ¥ 14840.00 JPY /月 ¥ 151368.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 35.5 JPY /時間 ¥ 14090.00 JPY /月 ¥ 143718.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 66.3 JPY /時間 ¥ 29680.00 JPY /月 ¥ 302736.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 70.9 JPY /時間 ¥ 28180.00 JPY /月 ¥ 287436.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 132.5 JPY /時間 ¥ 59360.00 JPY /月 ¥ 605472.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - linux ￥ 141.7 JPY /時間 ¥ 56360.00 JPY /月 ¥ 574872.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - windows ￥ 265 JPY /時間 ¥ 118720.00 JPY /月 ¥ 1210944.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 15.1 JPY /時間 ¥ 6870.00 JPY /月 ¥ 70074.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 25.1 JPY /時間 ¥ 14210.00 JPY /月 ¥ 144942.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 30.1 JPY /時間 ¥ 13740.00 JPY /月 ¥ 140148.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 50.2 JPY /時間 ¥ 28410.00 JPY /月 ¥ 289782.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - linux ￥ 60 JPY /時間 ¥ 27480.00 JPY /月 ¥ 280296.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - windows ￥ 100.2 JPY /時間 ¥ 56830.00 JPY /月 ¥ 579666.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - linux ￥ 119.9 JPY /時間 ¥ 54960.00 JPY /月 ¥ 560592.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - windows ￥ 200.3 JPY /時間 ¥ 113650.00 JPY /月 ¥ 1159230.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - linux ￥ 239.6 JPY /時間 ¥ 109900.00 JPY /月 ¥ 1120980.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - windows ￥ 400.4 JPY /時間 ¥ 227290.00 JPY /月 ¥ 2318358.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - linux ￥ 444.1 JPY /時間 ¥ 203610.00 JPY /月 ¥ 2076822.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - windows ￥ 742.4 JPY /時間 ¥ 421090.00 JPY /月 ¥ 4295118.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 9.8 JPY /時間 ¥ 4860.00 JPY /月 ¥ 49572.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 18.9 JPY /時間 ¥ 11420.00 JPY /月 ¥ 116484.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 19.6 JPY /時間 ¥ 9710.00 JPY /月 ¥ 99042.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 37.7 JPY /時間 ¥ 22840.00 JPY /月 ¥ 232968.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 39.1 JPY /時間 ¥ 19340.00 JPY /月 ¥ 197268.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 75.1 JPY /時間 ¥ 45600.00 JPY /月 ¥ 465120.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 78.2 JPY /時間 ¥ 38680.00 JPY /月 ¥ 394536.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 150.2 JPY /時間 ¥ 91200.00 JPY /月 ¥ 930240.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 156.4 JPY /時間 ¥ 77360.00 JPY /月 ¥ 789072.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 318.4 JPY /時間 ¥ 195520.00 JPY /月 ¥ 1994304.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 11.5 JPY /時間 ¥ 5220.00 JPY /月 ¥ 53244.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 21.7 JPY /時間 ¥ 12560.00 JPY /月 ¥ 128112.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 23 JPY /時間 ¥ 10450.00 JPY /月 ¥ 106590.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 43.2 JPY /時間 ¥ 25120.00 JPY /月 ¥ 256224.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 45.9 JPY /時間 ¥ 20880.00 JPY /月 ¥ 212976.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 86.2 JPY /時間 ¥ 50230.00 JPY /月 ¥ 512346.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 91.8 JPY /時間 ¥ 41760.00 JPY /月 ¥ 425952.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 172.3 JPY /時間 ¥ 100450.00 JPY /月 ¥ 1024590.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 183.6 JPY /時間 ¥ 83490.00 JPY /月 ¥ 851598.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 344.6 JPY /時間 ¥ 200890.00 JPY /月 ¥ 2049078.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - linux ￥ 321.2 JPY /時間 ¥ 146100.00 JPY /月 ¥ 1490220.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - windows ￥ 603 JPY /時間 ¥ 351550.00 JPY /月 ¥ 3585810.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 3.4 JPY /時間 ¥ 1500.00 JPY /月 ¥ 15300.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 4.6 JPY /時間 ¥ 2370.00 JPY /月 ¥ 24174.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 6.7 JPY /時間 ¥ 3000.00 JPY /月 ¥ 30600.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 9.2 JPY /時間 ¥ 4740.00 JPY /月 ¥ 48348.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 13.4 JPY /時間 ¥ 5990.00 JPY /月 ¥ 61098.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 18.3 JPY /時間 ¥ 9480.00 JPY /月 ¥ 96696.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 26.6 JPY /時間 ¥ 11980.00 JPY /月 ¥ 122196.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 36.6 JPY /時間 ¥ 18950.00 JPY /月 ¥ 193290.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 4.6 JPY /時間 ¥ 2080.00 JPY /月 ¥ 21216.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 6.4 JPY /時間 ¥ 3290.00 JPY /月 ¥ 33558.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 9.2 JPY /時間 ¥ 4160.00 JPY /月 ¥ 42432.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 12.7 JPY /時間 ¥ 6570.00 JPY /月 ¥ 67014.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 18.4 JPY /時間 ¥ 8310.00 JPY /月 ¥ 84762.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 25.3 JPY /時間 ¥ 13140.00 JPY /月 ¥ 134028.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 50.6 JPY /時間 ¥ 26280.00 JPY /月 ¥ 268056.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 7.2 JPY /時間 ¥ 4160.00 JPY /月 ¥ 42432.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 9.1 JPY /時間 ¥ 6040.00 JPY /月 ¥ 61608.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 14.3 JPY /時間 ¥ 8310.00 JPY /月 ¥ 84762.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 18.2 JPY /時間 ¥ 12070.00 JPY /月 ¥ 123114.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 28.6 JPY /時間 ¥ 16610.00 JPY /月 ¥ 169422.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 36.4 JPY /時間 ¥ 24130.00 JPY /月 ¥ 246126.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 1.3 JPY /時間 ¥ 550.00 JPY /月 ¥ 5610.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 1.8 JPY /時間 ¥ 880.00 JPY /月 ¥ 8976.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 4.1 JPY /時間 ¥ 1820.00 JPY /月 ¥ 18564.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 5.6 JPY /時間 ¥ 2880.00 JPY /月 ¥ 29376.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 2.1 JPY /時間 ¥ 920.00 JPY /月 ¥ 9384.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 2.8 JPY /時間 ¥ 1460.00 JPY /月 ¥ 14892.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 6 JPY /時間 ¥ 3640.00 JPY /月 ¥ 37128.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 7.8 JPY /時間 ¥ 5280.00 JPY /月 ¥ 53856.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - linux ￥ 0.7 JPY /時間 ¥ 300.00 JPY /月 ¥ 3060.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - windows ￥ 1 JPY /時間 ¥ 470.00 JPY /月 ¥ 4794.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 1.3 JPY /時間 ¥ 620.00 JPY /月 ¥ 6324.00 JPY /年   ecs.c4.xlarge 4 vCPU 8 GiB 1.5 Gbps 200,000 PPS - - linux ￥ 26.5 JPY /時間 ¥ 13230.00 JPY /月 ¥ 134946.00 JPY /年   ecs.c4.xlarge 4 vCPU 8 GiB 1.5 Gbps 200,000 PPS - - windows ￥ 47.2 JPY /時間 ¥ 28640.00 JPY /月 ¥ 292128.00 JPY /年   ecs.c4.2xlarge 8 vCPU 16 GiB 3 Gbps 400,000 PPS - - linux ￥ 52.9 JPY /時間 ¥ 26450.00 JPY /月 ¥ 269790.00 JPY /年   ecs.c4.2xlarge 8 vCPU 16 GiB 3 Gbps 400,000 PPS - - windows ￥ 94.3 JPY /時間 ¥ 57270.00 JPY /月 ¥ 584154.00 JPY /年   ecs.c4.4xlarge 16 vCPU 32 GiB 6 Gbps 800,000 PPS - - linux ￥ 105.8 JPY /時間 ¥ 52900.00 JPY /月 ¥ 539580.00 JPY /年   ecs.c4.4xlarge 16 vCPU 32 GiB 6 Gbps 800,000 PPS - - windows ￥ 188.6 JPY /時間 ¥ 114540.00 JPY /月 ¥ 1168308.00 JPY /年   ecs.ce4.xlarge 4 vCPU 32 GiB 1.5 Gbps 200,000 PPS - - linux ￥ 43.6 JPY /時間 ¥ 20250.00 JPY /月 ¥ 206550.00 JPY /年   ecs.ce4.xlarge 4 vCPU 32 GiB 1.5 Gbps 200,000 PPS - - windows ￥ 68.7 JPY /時間 ¥ 38460.00 JPY /月 ¥ 392292.00 JPY /年   ecs.cm4.xlarge 4 vCPU 16 GiB 1.5 Gbps 200,000 PPS - - linux ￥ 33.4 JPY /時間 ¥ 15500.00 JPY /月 ¥ 158100.00 JPY /年   ecs.cm4.xlarge 4 vCPU 16 GiB 1.5 Gbps 200,000 PPS - - windows ￥ 58.7 JPY /時間 ¥ 33850.00 JPY /月 ¥ 345270.00 JPY /年   ecs.cm4.2xlarge 8 vCPU 32 GiB 3 Gbps 400,000 PPS - - linux ￥ 67.9 JPY /時間 ¥ 31000.00 JPY /月 ¥ 316200.00 JPY /年   ecs.cm4.2xlarge 8 vCPU 32 GiB 3 Gbps 400,000 PPS - - windows ￥ 118.5 JPY /時間 ¥ 67700.00 JPY /月 ¥ 690540.00 JPY /年   ecs.cm4.4xlarge 16 vCPU 64 GiB 6 Gbps 800,000 PPS - - linux ￥ 135.7 JPY /時間 ¥ 62000.00 JPY /月 ¥ 632400.00 JPY /年   ecs.cm4.4xlarge 16 vCPU 64 GiB 6 Gbps 800,000 PPS - - windows ￥ 236.9 JPY /時間 ¥ 135400.00 JPY /月 ¥ 1381080.00 JPY /年   ecs.cm4.6xlarge 24 vCPU 96 GiB 10 Gbps 1200,000 PPS - - linux ￥ 203.6 JPY /時間 ¥ 92990.00 JPY /月 ¥ 948498.00 JPY /年   ecs.cm4.6xlarge 24 vCPU 96 GiB 10 Gbps 1200,000 PPS - - windows ￥ 355.4 JPY /時間 ¥ 203100.00 JPY /月 ¥ 2071620.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro linux ￥ 93.3 JPY /時間 ¥ 44790.00 JPY /月 ¥ 456858.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro windows ￥ 103.2 JPY /時間 ¥ 61940.00 JPY /月 ¥ 631788.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro linux ￥ 186.6 JPY /時間 ¥ 89580.00 JPY /月 ¥ 913716.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro windows ￥ 206.5 JPY /時間 ¥ 123870.00 JPY /月 ¥ 1263474.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro windows ￥ 309.6 JPY /時間 ¥ 185810.00 JPY /月 ¥ 1895262.00 JPY /年   ecs.e3.small 1 vCPU 8 GiB - - - - linux ￥ 9.1 JPY /時間 ¥ 4250.00 JPY /月 ¥ 43350.00 JPY /年   ecs.e3.small 1 vCPU 8 GiB - - - - windows ￥ 14.3 JPY /時間 ¥ 7650.00 JPY /月 ¥ 78030.00 JPY /年   ecs.e3.medium 2 vCPU 16 GiB - - - - linux ￥ 18.2 JPY /時間 ¥ 8500.00 JPY /月 ¥ 86700.00 JPY /年   ecs.e3.medium 2 vCPU 16 GiB - - - - windows ￥ 28.7 JPY /時間 ¥ 15280.00 JPY /月 ¥ 155856.00 JPY /年   ecs.e3.large 4 vCPU 32 GiB - - - - linux ￥ 36.4 JPY /時間 ¥ 16870.00 JPY /月 ¥ 172074.00 JPY /年   ecs.e3.large 4 vCPU 32 GiB - - - - windows ￥ 57.3 JPY /時間 ¥ 30550.00 JPY /月 ¥ 311610.00 JPY /年   ecs.e3.xlarge 8 vCPU 64 GiB - - - - linux ￥ 72.8 JPY /時間 ¥ 33810.00 JPY /月 ¥ 344862.00 JPY /年   ecs.e3.xlarge 8 vCPU 64 GiB - - - - windows ￥ 114.7 JPY /時間 ¥ 61090.00 JPY /月 ¥ 623118.00 JPY /年   ecs.e3.3xlarge 16 vCPU 128 GiB - - - - linux ￥ 145.8 JPY /時間 ¥ 67370.00 JPY /月 ¥ 687174.00 JPY /年   ecs.e3.3xlarge 16 vCPU 128 GiB - - - - windows ￥ 229.5 JPY /時間 ¥ 122170.00 JPY /月 ¥ 1246134.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 207.9 JPY /時間 ¥ 99770.00 JPY /月 ¥ 1017654.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 270.2 JPY /時間 ¥ 129700.00 JPY /月 ¥ 1322940.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 415.7 JPY /時間 ¥ 199530.00 JPY /月 ¥ 2035206.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 540.4 JPY /時間 ¥ 259390.00 JPY /月 ¥ 2645778.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 250.3 JPY /時間 ¥ 120130.00 JPY /月 ¥ 1225326.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 325.4 JPY /時間 ¥ 156170.00 JPY /月 ¥ 1592934.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 500.5 JPY /時間 ¥ 240260.00 JPY /月 ¥ 2450652.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 650.7 JPY /時間 ¥ 312340.00 JPY /月 ¥ 3185868.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 1001 JPY /時間 ¥ 480520.00 JPY /月 ¥ 4901304.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 1301.4 JPY /時間 ¥ 624670.00 JPY /月 ¥ 6371634.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 2002.1 JPY /時間 ¥ 961030.00 JPY /月 ¥ 9802506.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 2602.7 JPY /時間 ¥ 1249340.00 JPY /月 ¥ 12743268.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro linux ￥ 31 JPY /時間 ¥ 14900.00 JPY /月 ¥ 151980.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro windows ￥ 49.6 JPY /時間 ¥ 29770.00 JPY /月 ¥ 303654.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro linux ￥ 62.1 JPY /時間 ¥ 29810.00 JPY /月 ¥ 304062.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro windows ￥ 99.2 JPY /時間 ¥ 59530.00 JPY /月 ¥ 607206.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro linux ￥ 124.2 JPY /時間 ¥ 59620.00 JPY /月 ¥ 608124.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro windows ￥ 198.4 JPY /時間 ¥ 119050.00 JPY /月 ¥ 1214310.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro linux ￥ 248.3 JPY /時間 ¥ 119220.00 JPY /月 ¥ 1216044.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro windows ￥ 396.8 JPY /時間 ¥ 238100.00 JPY /月 ¥ 2428620.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro linux ￥ 432.2 JPY /時間 ¥ 207500.00 JPY /月 ¥ 2116500.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro windows ￥ 694.4 JPY /時間 ¥ 416680.00 JPY /月 ¥ 4250136.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 6.4 JPY /時間 ¥ 3230.00 JPY /月 ¥ 32946.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 6.4 JPY /時間 ¥ 6930.00 JPY /月 ¥ 70686.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 12.8 JPY /時間 ¥ 6460.00 JPY /月 ¥ 65892.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 12.8 JPY /時間 ¥ 13870.00 JPY /月 ¥ 141474.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 25.5 JPY /時間 ¥ 12920.00 JPY /月 ¥ 131784.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 25.5 JPY /時間 ¥ 27550.00 JPY /月 ¥ 281010.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 51.1 JPY /時間 ¥ 25840.00 JPY /月 ¥ 263568.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 51.1 JPY /時間 ¥ 55280.00 JPY /月 ¥ 563856.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 102.4 JPY /時間 ¥ 51670.00 JPY /月 ¥ 527034.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 102.4 JPY /時間 ¥ 110720.00 JPY /月 ¥ 1129344.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - linux ￥ 204.6 JPY /時間 ¥ 103330.00 JPY /月 ¥ 1053966.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - windows ￥ 204.6 JPY /時間 ¥ 221430.00 JPY /月 ¥ 2258586.00 JPY /年   ecs.n1.tiny 1 vCPU 1 GiB - - - - linux ￥ 1.8 JPY /時間 ¥ 1000.00 JPY /月 ¥ 10200.00 JPY /年   ecs.n1.tiny 1 vCPU 1 GiB - - - - windows ￥ 2.3 JPY /時間 ¥ 1380.00 JPY /月 ¥ 14076.00 JPY /年   ecs.n1.small 1 vCPU 2 GiB - - - - linux ￥ 3.5 JPY /時間 ¥ 1980.00 JPY /月 ¥ 20196.00 JPY /年   ecs.n1.small 1 vCPU 2 GiB - - - - windows ￥ 4.5 JPY /時間 ¥ 2730.00 JPY /月 ¥ 27846.00 JPY /年   ecs.n1.medium 2 vCPU 4 GiB - - - - linux ￥ 6.9 JPY /時間 ¥ 3950.00 JPY /月 ¥ 40290.00 JPY /年   ecs.n1.medium 2 vCPU 4 GiB - - - - windows ￥ 9 JPY /時間 ¥ 5460.00 JPY /月 ¥ 55692.00 JPY /年   ecs.n1.large 4 vCPU 8 GiB - - - - linux ￥ 22.6 JPY /時間 ¥ 11280.00 JPY /月 ¥ 115056.00 JPY /年   ecs.n1.large 4 vCPU 8 GiB - - - - windows ￥ 33.9 JPY /時間 ¥ 17460.00 JPY /月 ¥ 178092.00 JPY /年   ecs.n1.xlarge 8 vCPU 16 GiB - - - - linux ￥ 45.1 JPY /時間 ¥ 22480.00 JPY /月 ¥ 229296.00 JPY /年   ecs.n1.xlarge 8 vCPU 16 GiB - - - - windows ￥ 67.8 JPY /時間 ¥ 34910.00 JPY /月 ¥ 356082.00 JPY /年   ecs.n1.3xlarge 16 vCPU 32 GiB - - - - linux ￥ 90.3 JPY /時間 ¥ 44960.00 JPY /月 ¥ 458592.00 JPY /年   ecs.n1.3xlarge 16 vCPU 32 GiB - - - - windows ￥ 135.6 JPY /時間 ¥ 69810.00 JPY /月 ¥ 712062.00 JPY /年   ecs.n1.7xlarge 32 vCPU 64 GiB - - - - linux ￥ 180.6 JPY /時間 ¥ 89920.00 JPY /月 ¥ 917184.00 JPY /年   ecs.n1.7xlarge 32 vCPU 64 GiB - - - - windows ￥ 271.1 JPY /時間 ¥ 139620.00 JPY /月 ¥ 1424124.00 JPY /年   ecs.n2.small 1 vCPU 4 GiB - - - - linux ￥ 6.1 JPY /時間 ¥ 3150.00 JPY /月 ¥ 32130.00 JPY /年   ecs.n2.small 1 vCPU 4 GiB - - - - windows ￥ 11.8 JPY /時間 ¥ 6120.00 JPY /月 ¥ 62424.00 JPY /年   ecs.n2.medium 2 vCPU 8 GiB - - - - linux ￥ 12.2 JPY /時間 ¥ 6290.00 JPY /月 ¥ 64158.00 JPY /年   ecs.n2.medium 2 vCPU 8 GiB - - - - windows ￥ 23.6 JPY /時間 ¥ 12230.00 JPY /月 ¥ 124746.00 JPY /年   ecs.n2.large 4 vCPU 16 GiB - - - - linux ￥ 24.3 JPY /時間 ¥ 12500.00 JPY /月 ¥ 127500.00 JPY /年   ecs.n2.large 4 vCPU 16 GiB - - - - windows ￥ 47.2 JPY /時間 ¥ 24450.00 JPY /月 ¥ 249390.00 JPY /年   ecs.n2.xlarge 8 vCPU 32 GiB - - - - linux ￥ 48.7 JPY /時間 ¥ 25070.00 JPY /月 ¥ 255714.00 JPY /年   ecs.n2.xlarge 8 vCPU 32 GiB - - - - windows ￥ 94.5 JPY /時間 ¥ 48880.00 JPY /月 ¥ 498576.00 JPY /年   ecs.n2.3xlarge 16 vCPU 64 GiB - - - - linux ￥ 97.5 JPY /時間 ¥ 50220.00 JPY /月 ¥ 512244.00 JPY /年   ecs.n2.3xlarge 16 vCPU 64 GiB - - - - windows ￥ 189 JPY /時間 ¥ 97740.00 JPY /月 ¥ 996948.00 JPY /年   ecs.n2.7xlarge 32 vCPU 128 GiB - - - - linux ￥ 194.9 JPY /時間 ¥ 100430.00 JPY /月 ¥ 1024386.00 JPY /年   ecs.n2.7xlarge 32 vCPU 128 GiB - - - - windows ￥ 378.1 JPY /時間 ¥ 195460.00 JPY /月 ¥ 1993692.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 3.5 JPY /時間 ¥ 1980.00 JPY /月 ¥ 20196.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 3.5 JPY /時間 ¥ 2730.00 JPY /月 ¥ 27846.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 6.9 JPY /時間 ¥ 3950.00 JPY /月 ¥ 40290.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 6.9 JPY /時間 ¥ 5460.00 JPY /月 ¥ 55692.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 22.6 JPY /時間 ¥ 11280.00 JPY /月 ¥ 115056.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 22.6 JPY /時間 ¥ 20760.00 JPY /月 ¥ 211752.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 45.1 JPY /時間 ¥ 22480.00 JPY /月 ¥ 229296.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 45.1 JPY /時間 ¥ 41660.00 JPY /月 ¥ 424932.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 90.3 JPY /時間 ¥ 44960.00 JPY /月 ¥ 458592.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 90.3 JPY /時間 ¥ 83180.00 JPY /月 ¥ 848436.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - linux ￥ 180.6 JPY /時間 ¥ 89920.00 JPY /月 ¥ 917184.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - windows ￥ 180.6 JPY /時間 ¥ 166490.00 JPY /月 ¥ 1698198.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 18.2 JPY /時間 ¥ 8500.00 JPY /月 ¥ 86700.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 28.7 JPY /時間 ¥ 16030.00 JPY /月 ¥ 163506.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 36.4 JPY /時間 ¥ 16870.00 JPY /月 ¥ 172074.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 57.3 JPY /時間 ¥ 32050.00 JPY /月 ¥ 326910.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 72.8 JPY /時間 ¥ 33810.00 JPY /月 ¥ 344862.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 114.7 JPY /時間 ¥ 64100.00 JPY /月 ¥ 653820.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - linux ￥ 145.8 JPY /時間 ¥ 67370.00 JPY /月 ¥ 687174.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - windows ￥ 229.5 JPY /時間 ¥ 128190.00 JPY /月 ¥ 1307538.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - linux ￥ 291.5 JPY /時間 ¥ 134620.00 JPY /月 ¥ 1373124.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - windows ￥ 459 JPY /時間 ¥ 256380.00 JPY /月 ¥ 2615076.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - linux ￥ 537.3 JPY /時間 ¥ 250520.00 JPY /月 ¥ 2555304.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - windows ￥ 846.3 JPY /時間 ¥ 472690.00 JPY /月 ¥ 4821438.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 19 JPY /時間 ¥ 8920.00 JPY /月 ¥ 90984.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 30.1 JPY /時間 ¥ 16830.00 JPY /月 ¥ 171666.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 38.1 JPY /時間 ¥ 17720.00 JPY /月 ¥ 180744.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - linux ￥ 76.4 JPY /時間 ¥ 35500.00 JPY /月 ¥ 362100.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - windows ￥ 120.3 JPY /時間 ¥ 67300.00 JPY /月 ¥ 686460.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - linux ￥ 153 JPY /時間 ¥ 70740.00 JPY /月 ¥ 721548.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - windows ￥ 240.9 JPY /時間 ¥ 134600.00 JPY /月 ¥ 1372920.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - linux ￥ 305.9 JPY /時間 ¥ 141350.00 JPY /月 ¥ 1441770.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - windows ￥ 481.9 JPY /時間 ¥ 269200.00 JPY /月 ¥ 2745840.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - linux ￥ 564.1 JPY /時間 ¥ 263050.00 JPY /月 ¥ 2683110.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - windows ￥ 888.5 JPY /時間 ¥ 496320.00 JPY /月 ¥ 5062464.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 11.2 JPY /時間 ¥ 5640.00 JPY /月 ¥ 57528.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 20.2 JPY /時間 ¥ 12210.00 JPY /月 ¥ 124542.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 22.6 JPY /時間 ¥ 11280.00 JPY /月 ¥ 115056.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 40.5 JPY /時間 ¥ 24410.00 JPY /月 ¥ 248982.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 45.1 JPY /時間 ¥ 22480.00 JPY /月 ¥ 229296.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 81.1 JPY /時間 ¥ 48740.00 JPY /月 ¥ 497148.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - linux ￥ 90.3 JPY /時間 ¥ 44960.00 JPY /月 ¥ 458592.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - windows ￥ 162.3 JPY /時間 ¥ 97480.00 JPY /月 ¥ 994296.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - linux ￥ 180.6 JPY /時間 ¥ 89920.00 JPY /月 ¥ 917184.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - windows ￥ 342.5 JPY /時間 ¥ 208080.00 JPY /月 ¥ 2122416.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 11.7 JPY /時間 ¥ 5920.00 JPY /月 ¥ 60384.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 21.1 JPY /時間 ¥ 12820.00 JPY /月 ¥ 130764.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 23.6 JPY /時間 ¥ 11840.00 JPY /月 ¥ 120768.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 42.5 JPY /時間 ¥ 25630.00 JPY /月 ¥ 261426.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 47.3 JPY /時間 ¥ 23610.00 JPY /月 ¥ 240822.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 85.1 JPY /時間 ¥ 51180.00 JPY /月 ¥ 522036.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 94.8 JPY /時間 ¥ 47210.00 JPY /月 ¥ 481542.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 170.4 JPY /時間 ¥ 102350.00 JPY /月 ¥ 1043970.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 189.6 JPY /時間 ¥ 94410.00 JPY /月 ¥ 962982.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 359.5 JPY /時間 ¥ 218490.00 JPY /月 ¥ 2228598.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 14.2 JPY /時間 ¥ 6460.00 JPY /月 ¥ 65892.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 24.7 JPY /時間 ¥ 14110.00 JPY /月 ¥ 143922.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 28.5 JPY /時間 ¥ 12920.00 JPY /月 ¥ 131784.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 49.4 JPY /時間 ¥ 28210.00 JPY /月 ¥ 287742.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 57 JPY /時間 ¥ 25840.00 JPY /月 ¥ 263568.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 98.8 JPY /時間 ¥ 56420.00 JPY /月 ¥ 575484.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - linux ￥ 113.9 JPY /時間 ¥ 51670.00 JPY /月 ¥ 527034.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - windows ￥ 197.6 JPY /時間 ¥ 112830.00 JPY /月 ¥ 1150866.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - linux ￥ 227.7 JPY /時間 ¥ 103330.00 JPY /月 ¥ 1053966.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - windows ￥ 395.3 JPY /時間 ¥ 225670.00 JPY /月 ¥ 2301834.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - linux ￥ 398.5 JPY /時間 ¥ 180820.00 JPY /月 ¥ 1844364.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - windows ￥ 691.8 JPY /時間 ¥ 394910.00 JPY /月 ¥ 4028082.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 14.9 JPY /時間 ¥ 6780.00 JPY /月 ¥ 69156.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 25.8 JPY /時間 ¥ 14810.00 JPY /月 ¥ 151062.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 29.8 JPY /時間 ¥ 13560.00 JPY /月 ¥ 138312.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 51.8 JPY /時間 ¥ 29620.00 JPY /月 ¥ 302124.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 59.7 JPY /時間 ¥ 27130.00 JPY /月 ¥ 276726.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 103.7 JPY /時間 ¥ 59240.00 JPY /月 ¥ 604248.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 119.5 JPY /時間 ¥ 54250.00 JPY /月 ¥ 553350.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 207.4 JPY /時間 ¥ 118480.00 JPY /月 ¥ 1208496.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 239.1 JPY /時間 ¥ 108490.00 JPY /月 ¥ 1106598.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 415 JPY /時間 ¥ 236950.00 JPY /月 ¥ 2416890.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - linux ￥ 418.4 JPY /時間 ¥ 189860.00 JPY /月 ¥ 1936572.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - windows ￥ 726.3 JPY /時間 ¥ 414650.00 JPY /月 ¥ 4229430.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 4 JPY /時間 ¥ 1760.00 JPY /月 ¥ 17952.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 5.2 JPY /時間 ¥ 2640.00 JPY /月 ¥ 26928.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 7.9 JPY /時間 ¥ 3520.00 JPY /月 ¥ 35904.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 5270.00 JPY /月 ¥ 53754.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 15.7 JPY /時間 ¥ 7040.00 JPY /月 ¥ 71808.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 20.6 JPY /時間 ¥ 10520.00 JPY /月 ¥ 107304.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 31.3 JPY /時間 ¥ 14070.00 JPY /月 ¥ 143514.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 41.2 JPY /時間 ¥ 21040.00 JPY /月 ¥ 214608.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 5.5 JPY /時間 ¥ 2440.00 JPY /月 ¥ 24888.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 7.2 JPY /時間 ¥ 3650.00 JPY /月 ¥ 37230.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 10.9 JPY /時間 ¥ 4880.00 JPY /月 ¥ 49776.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 14.3 JPY /時間 ¥ 7300.00 JPY /月 ¥ 74460.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 21.7 JPY /時間 ¥ 9760.00 JPY /月 ¥ 99552.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 28.6 JPY /時間 ¥ 14590.00 JPY /月 ¥ 148818.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 43.3 JPY /時間 ¥ 19510.00 JPY /月 ¥ 199002.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 57.1 JPY /時間 ¥ 29180.00 JPY /月 ¥ 297636.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 9.2 JPY /時間 ¥ 3780.00 JPY /月 ¥ 38556.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 5240.00 JPY /月 ¥ 53448.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 18.4 JPY /時間 ¥ 7560.00 JPY /月 ¥ 77112.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 20.7 JPY /時間 ¥ 10480.00 JPY /月 ¥ 106896.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 36.8 JPY /時間 ¥ 15120.00 JPY /月 ¥ 154224.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 41.4 JPY /時間 ¥ 20950.00 JPY /月 ¥ 213690.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 1.5 JPY /時間 ¥ 650.00 JPY /月 ¥ 6630.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 2 JPY /時間 ¥ 980.00 JPY /月 ¥ 9996.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 4.8 JPY /時間 ¥ 2140.00 JPY /月 ¥ 21828.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 6.3 JPY /時間 ¥ 3200.00 JPY /月 ¥ 32640.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 2.5 JPY /時間 ¥ 1080.00 JPY /月 ¥ 11016.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 3.2 JPY /時間 ¥ 1610.00 JPY /月 ¥ 16422.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 7.1 JPY /時間 ¥ 3170.00 JPY /月 ¥ 32334.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 8.8 JPY /時間 ¥ 4400.00 JPY /月 ¥ 44880.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - linux ￥ 0.9 JPY /時間 ¥ 350.00 JPY /月 ¥ 3570.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - windows ￥ 1.1 JPY /時間 ¥ 520.00 JPY /月 ¥ 5304.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 1.8 JPY /時間 ¥ 1000.00 JPY /月 ¥ 10200.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 1.8 JPY /時間 ¥ 1380.00 JPY /月 ¥ 14076.00 JPY /年    \nap-southeast-2    instanceType vCPU  メモリ  イントラネット帯域幅 パケット転送速度  GPU/FPGA  ローカルストレージ  OS 従量課金 サブスクリプション サブスクリプション     ecs.c4.xlarge 4 vCPU 8 GiB 1.5 Gbps 200,000 PPS - - linux ￥ 29.9 JPY /時間 ¥ 14030.00 JPY /月 ¥ 143106.00 JPY /年   ecs.c4.xlarge 4 vCPU 8 GiB 1.5 Gbps 200,000 PPS - - windows ￥ 50.6 JPY /時間 ¥ 29440.00 JPY /月 ¥ 300288.00 JPY /年   ecs.c4.2xlarge 8 vCPU 16 GiB 3 Gbps 400,000 PPS - - linux ￥ 59.8 JPY /時間 ¥ 28060.00 JPY /月 ¥ 286212.00 JPY /年   ecs.c4.2xlarge 8 vCPU 16 GiB 3 Gbps 400,000 PPS - - windows ￥ 101.2 JPY /時間 ¥ 58880.00 JPY /月 ¥ 600576.00 JPY /年   ecs.c4.4xlarge 16 vCPU 32 GiB 6 Gbps 800,000 PPS - - linux ￥ 119.6 JPY /時間 ¥ 56120.00 JPY /月 ¥ 572424.00 JPY /年   ecs.c4.4xlarge 16 vCPU 32 GiB 6 Gbps 800,000 PPS - - windows ￥ 202.4 JPY /時間 ¥ 117760.00 JPY /月 ¥ 1201152.00 JPY /年   ecs.ce4.xlarge 4 vCPU 32 GiB 1.5 Gbps 200,000 PPS - - linux ￥ 43.5 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205122.00 JPY /年   ecs.ce4.xlarge 4 vCPU 32 GiB 1.5 Gbps 200,000 PPS - - windows ￥ 68.6 JPY /時間 ¥ 38460.00 JPY /月 ¥ 392292.00 JPY /年   ecs.cm4.xlarge 4 vCPU 16 GiB 1.5 Gbps 200,000 PPS - - linux ￥ 33.4 JPY /時間 ¥ 16760.00 JPY /月 ¥ 170952.00 JPY /年   ecs.cm4.xlarge 4 vCPU 16 GiB 1.5 Gbps 200,000 PPS - - windows ￥ 58.7 JPY /時間 ¥ 35110.00 JPY /月 ¥ 358122.00 JPY /年   ecs.cm4.2xlarge 8 vCPU 32 GiB 3 Gbps 400,000 PPS - - linux ￥ 67.9 JPY /時間 ¥ 33510.00 JPY /月 ¥ 341802.00 JPY /年   ecs.cm4.2xlarge 8 vCPU 32 GiB 3 Gbps 400,000 PPS - - windows ￥ 118.5 JPY /時間 ¥ 70220.00 JPY /月 ¥ 716244.00 JPY /年   ecs.cm4.4xlarge 16 vCPU 64 GiB 6 Gbps 800,000 PPS - - linux ￥ 135.7 JPY /時間 ¥ 67020.00 JPY /月 ¥ 683604.00 JPY /年   ecs.cm4.4xlarge 16 vCPU 64 GiB 6 Gbps 800,000 PPS - - windows ￥ 236.9 JPY /時間 ¥ 140430.00 JPY /月 ¥ 1432386.00 JPY /年   ecs.cm4.6xlarge 24 vCPU 96 GiB 10 Gbps 1200,000 PPS - - linux ￥ 203.6 JPY /時間 ¥ 100530.00 JPY /月 ¥ 1025406.00 JPY /年   ecs.cm4.6xlarge 24 vCPU 96 GiB 10 Gbps 1200,000 PPS - - windows ￥ 355.4 JPY /時間 ¥ 210640.00 JPY /月 ¥ 2148528.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro linux ￥ 93.3 JPY /時間 ¥ 44790.00 JPY /月 ¥ 456858.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro windows ￥ 106.7 JPY /時間 ¥ 64030.00 JPY /月 ¥ 653106.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro linux ￥ 186.6 JPY /時間 ¥ 89580.00 JPY /月 ¥ 913716.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro windows ￥ 213.4 JPY /時間 ¥ 128060.00 JPY /月 ¥ 1306212.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro linux ￥ 280 JPY /時間 ¥ 134370.00 JPY /月 ¥ 1370574.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro windows ￥ 320.1 JPY /時間 ¥ 192090.00 JPY /月 ¥ 1959318.00 JPY /年   ecs.d1.8xlarge 32 vCPU 128 GiB 10 Gbps 1000,000 PPS - local_hdd_pro linux ￥ 373.2 JPY /時間 ¥ 179160.00 JPY /月 ¥ 1827432.00 JPY /年   ecs.d1.8xlarge 32 vCPU 128 GiB 10 Gbps 1000,000 PPS - local_hdd_pro windows ￥ 426.8 JPY /時間 ¥ 256120.00 JPY /月 ¥ 2612424.00 JPY /年   ecs.d1.14xlarge 56 vCPU 224 GiB 17 Gbps 1800,000 PPS - local_hdd_pro linux ￥ 653.1 JPY /時間 ¥ 313530.00 JPY /月 ¥ 3198006.00 JPY /年   ecs.d1.14xlarge 56 vCPU 224 GiB 17 Gbps 1800,000 PPS - local_hdd_pro windows ￥ 747 JPY /時間 ¥ 448210.00 JPY /月 ¥ 4571742.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 196.6 JPY /時間 ¥ 94370.00 JPY /月 ¥ 962574.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 235.9 JPY /時間 ¥ 113240.00 JPY /月 ¥ 1155048.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 393.1 JPY /時間 ¥ 188730.00 JPY /月 ¥ 1925046.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 471.8 JPY /時間 ¥ 226470.00 JPY /月 ¥ 2309994.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 236.7 JPY /時間 ¥ 113630.00 JPY /月 ¥ 1159026.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 284.1 JPY /時間 ¥ 136350.00 JPY /月 ¥ 1390770.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 473.4 JPY /時間 ¥ 227250.00 JPY /月 ¥ 2317950.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 568.1 JPY /時間 ¥ 272700.00 JPY /月 ¥ 2781540.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro linux ￥ 31 JPY /時間 ¥ 14900.00 JPY /月 ¥ 151980.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro windows ￥ 50.8 JPY /時間 ¥ 30460.00 JPY /月 ¥ 310692.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro linux ￥ 62.1 JPY /時間 ¥ 29810.00 JPY /月 ¥ 304062.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro windows ￥ 101.5 JPY /時間 ¥ 60910.00 JPY /月 ¥ 621282.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro linux ￥ 124.2 JPY /時間 ¥ 59620.00 JPY /月 ¥ 608124.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro windows ￥ 203 JPY /時間 ¥ 121810.00 JPY /月 ¥ 1242462.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro linux ￥ 248.3 JPY /時間 ¥ 119220.00 JPY /月 ¥ 1216044.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro windows ￥ 406 JPY /時間 ¥ 243610.00 JPY /月 ¥ 2484822.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro linux ￥ 432.2 JPY /時間 ¥ 207500.00 JPY /月 ¥ 2116500.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro windows ￥ 710.5 JPY /時間 ¥ 426320.00 JPY /月 ¥ 4348464.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 7.1 JPY /時間 ¥ 3500.00 JPY /月 ¥ 35700.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 7.1 JPY /時間 ¥ 7320.00 JPY /月 ¥ 74664.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 14.2 JPY /時間 ¥ 6990.00 JPY /月 ¥ 71298.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 14.2 JPY /時間 ¥ 14630.00 JPY /月 ¥ 149226.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 28.5 JPY /時間 ¥ 13970.00 JPY /月 ¥ 142494.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 28.5 JPY /時間 ¥ 29260.00 JPY /月 ¥ 298452.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 57 JPY /時間 ¥ 27930.00 JPY /月 ¥ 284886.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 57 JPY /時間 ¥ 58510.00 JPY /月 ¥ 596802.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 113.9 JPY /時間 ¥ 55850.00 JPY /月 ¥ 569670.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 113.9 JPY /時間 ¥ 117020.00 JPY /月 ¥ 1193604.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - linux ￥ 227.7 JPY /時間 ¥ 111700.00 JPY /月 ¥ 1139340.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - windows ￥ 227.7 JPY /時間 ¥ 234040.00 JPY /月 ¥ 2387208.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 3.7 JPY /時間 ¥ 2150.00 JPY /月 ¥ 21930.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 3.7 JPY /時間 ¥ 2910.00 JPY /月 ¥ 29682.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 7.4 JPY /時間 ¥ 4300.00 JPY /月 ¥ 43860.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 7.4 JPY /時間 ¥ 5810.00 JPY /月 ¥ 59262.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 24.4 JPY /時間 ¥ 11990.00 JPY /月 ¥ 122298.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 24.4 JPY /時間 ¥ 23400.00 JPY /月 ¥ 238680.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 48.8 JPY /時間 ¥ 23980.00 JPY /月 ¥ 244596.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 48.8 JPY /時間 ¥ 46790.00 JPY /月 ¥ 477258.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 97.6 JPY /時間 ¥ 47960.00 JPY /月 ¥ 489192.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 97.6 JPY /時間 ¥ 93570.00 JPY /月 ¥ 954414.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - linux ￥ 195 JPY /時間 ¥ 95910.00 JPY /月 ¥ 978282.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - windows ￥ 195 JPY /時間 ¥ 187130.00 JPY /月 ¥ 1908726.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 18.2 JPY /時間 ¥ 8380.00 JPY /月 ¥ 85476.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 28.7 JPY /時間 ¥ 16030.00 JPY /月 ¥ 163506.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 36.3 JPY /時間 ¥ 16760.00 JPY /月 ¥ 170952.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 57.2 JPY /時間 ¥ 32050.00 JPY /月 ¥ 326910.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 72.6 JPY /時間 ¥ 33510.00 JPY /月 ¥ 341802.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 114.5 JPY /時間 ¥ 64100.00 JPY /月 ¥ 653820.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - linux ￥ 145.4 JPY /時間 ¥ 67020.00 JPY /月 ¥ 683604.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - windows ￥ 229.1 JPY /時間 ¥ 128190.00 JPY /月 ¥ 1307538.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - linux ￥ 290.8 JPY /時間 ¥ 134040.00 JPY /月 ¥ 1367208.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - windows ￥ 458.3 JPY /時間 ¥ 256380.00 JPY /月 ¥ 2615076.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - linux ￥ 537.3 JPY /時間 ¥ 247130.00 JPY /月 ¥ 2520726.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - windows ￥ 846.3 JPY /時間 ¥ 472690.00 JPY /月 ¥ 4821438.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 19 JPY /時間 ¥ 8800.00 JPY /月 ¥ 89760.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 30.1 JPY /時間 ¥ 16830.00 JPY /月 ¥ 171666.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 38 JPY /時間 ¥ 17600.00 JPY /月 ¥ 179520.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 60 JPY /時間 ¥ 33650.00 JPY /月 ¥ 343230.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - linux ￥ 76.2 JPY /時間 ¥ 35190.00 JPY /月 ¥ 358938.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - windows ￥ 120.1 JPY /時間 ¥ 67300.00 JPY /月 ¥ 686460.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - linux ￥ 152.7 JPY /時間 ¥ 70370.00 JPY /月 ¥ 717774.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - windows ￥ 240.5 JPY /時間 ¥ 134600.00 JPY /月 ¥ 1372920.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - linux ￥ 305.3 JPY /時間 ¥ 140750.00 JPY /月 ¥ 1435650.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - windows ￥ 481.2 JPY /時間 ¥ 269200.00 JPY /月 ¥ 2745840.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - linux ￥ 564.1 JPY /時間 ¥ 259480.00 JPY /月 ¥ 2646696.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - windows ￥ 888.5 JPY /時間 ¥ 496320.00 JPY /月 ¥ 5062464.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 12.7 JPY /時間 ¥ 6000.00 JPY /月 ¥ 61200.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 21.7 JPY /時間 ¥ 12560.00 JPY /月 ¥ 128112.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 25.5 JPY /時間 ¥ 11990.00 JPY /月 ¥ 122298.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 43.5 JPY /時間 ¥ 25120.00 JPY /月 ¥ 256224.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 51 JPY /時間 ¥ 23980.00 JPY /月 ¥ 244596.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 87 JPY /時間 ¥ 50240.00 JPY /月 ¥ 512448.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - linux ￥ 101.8 JPY /時間 ¥ 47960.00 JPY /月 ¥ 489192.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - windows ￥ 173.8 JPY /時間 ¥ 100480.00 JPY /月 ¥ 1024896.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - linux ￥ 203.8 JPY /時間 ¥ 95910.00 JPY /月 ¥ 978282.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - windows ￥ 365.6 JPY /時間 ¥ 214080.00 JPY /月 ¥ 2183616.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 13.3 JPY /時間 ¥ 6300.00 JPY /月 ¥ 64260.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.7 JPY /時間 ¥ 13190.00 JPY /月 ¥ 134538.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 26.7 JPY /時間 ¥ 12590.00 JPY /月 ¥ 128418.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 45.6 JPY /時間 ¥ 26380.00 JPY /月 ¥ 269076.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 53.5 JPY /時間 ¥ 25180.00 JPY /月 ¥ 256836.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 91.2 JPY /時間 ¥ 52750.00 JPY /月 ¥ 538050.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 106.9 JPY /時間 ¥ 50350.00 JPY /月 ¥ 513570.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 182.4 JPY /時間 ¥ 105500.00 JPY /月 ¥ 1076100.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 213.9 JPY /時間 ¥ 100700.00 JPY /月 ¥ 1027140.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 383.8 JPY /時間 ¥ 224780.00 JPY /月 ¥ 2292756.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 14.2 JPY /時間 ¥ 6990.00 JPY /月 ¥ 71298.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 24.7 JPY /時間 ¥ 14630.00 JPY /月 ¥ 149226.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 28.5 JPY /時間 ¥ 13970.00 JPY /月 ¥ 142494.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 49.4 JPY /時間 ¥ 29260.00 JPY /月 ¥ 298452.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 57 JPY /時間 ¥ 27930.00 JPY /月 ¥ 284886.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 98.8 JPY /時間 ¥ 58510.00 JPY /月 ¥ 596802.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - linux ￥ 113.9 JPY /時間 ¥ 55850.00 JPY /月 ¥ 569670.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - windows ￥ 197.6 JPY /時間 ¥ 117020.00 JPY /月 ¥ 1193604.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - linux ￥ 227.7 JPY /時間 ¥ 111700.00 JPY /月 ¥ 1139340.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - windows ￥ 395.3 JPY /時間 ¥ 234040.00 JPY /月 ¥ 2387208.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - linux ￥ 398.5 JPY /時間 ¥ 195480.00 JPY /月 ¥ 1993896.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - windows ￥ 691.8 JPY /時間 ¥ 409570.00 JPY /月 ¥ 4177614.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 14.9 JPY /時間 ¥ 7330.00 JPY /月 ¥ 74766.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 25.8 JPY /時間 ¥ 15360.00 JPY /月 ¥ 156672.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 29.8 JPY /時間 ¥ 14670.00 JPY /月 ¥ 149634.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 51.8 JPY /時間 ¥ 30720.00 JPY /月 ¥ 313344.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 59.7 JPY /時間 ¥ 29330.00 JPY /月 ¥ 299166.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 103.7 JPY /時間 ¥ 61440.00 JPY /月 ¥ 626688.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 119.5 JPY /時間 ¥ 58650.00 JPY /月 ¥ 598230.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 207.4 JPY /時間 ¥ 122870.00 JPY /月 ¥ 1253274.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 239.1 JPY /時間 ¥ 117290.00 JPY /月 ¥ 1196358.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 415 JPY /時間 ¥ 245750.00 JPY /月 ¥ 2506650.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - linux ￥ 418.4 JPY /時間 ¥ 205250.00 JPY /月 ¥ 2093550.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - windows ￥ 726.3 JPY /時間 ¥ 430050.00 JPY /月 ¥ 4386510.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 4 JPY /時間 ¥ 1900.00 JPY /月 ¥ 19380.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 5.2 JPY /時間 ¥ 2780.00 JPY /月 ¥ 28356.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 7.9 JPY /時間 ¥ 3800.00 JPY /月 ¥ 38760.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 5550.00 JPY /月 ¥ 56610.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 15.7 JPY /時間 ¥ 7600.00 JPY /月 ¥ 77520.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 20.6 JPY /時間 ¥ 11090.00 JPY /月 ¥ 113118.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 31.3 JPY /時間 ¥ 15200.00 JPY /月 ¥ 155040.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 41.2 JPY /時間 ¥ 22170.00 JPY /月 ¥ 226134.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 5.5 JPY /時間 ¥ 2640.00 JPY /月 ¥ 26928.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 7.2 JPY /時間 ¥ 3850.00 JPY /月 ¥ 39270.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 10.9 JPY /時間 ¥ 5270.00 JPY /月 ¥ 53754.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 14.3 JPY /時間 ¥ 7690.00 JPY /月 ¥ 78438.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 21.7 JPY /時間 ¥ 10540.00 JPY /月 ¥ 107508.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 28.6 JPY /時間 ¥ 15370.00 JPY /月 ¥ 156774.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 43.3 JPY /時間 ¥ 21070.00 JPY /月 ¥ 214914.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 57.1 JPY /時間 ¥ 30740.00 JPY /月 ¥ 313548.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 9.2 JPY /時間 ¥ 4090.00 JPY /月 ¥ 41718.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 5550.00 JPY /月 ¥ 56610.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 18.4 JPY /時間 ¥ 8180.00 JPY /月 ¥ 83436.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 20.7 JPY /時間 ¥ 11090.00 JPY /月 ¥ 113118.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 36.8 JPY /時間 ¥ 16350.00 JPY /月 ¥ 166770.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 41.4 JPY /時間 ¥ 22180.00 JPY /月 ¥ 226236.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 1.5 JPY /時間 ¥ 700.00 JPY /月 ¥ 7140.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 2 JPY /時間 ¥ 1030.00 JPY /月 ¥ 10506.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 4.8 JPY /時間 ¥ 2310.00 JPY /月 ¥ 23562.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 6.3 JPY /時間 ¥ 3370.00 JPY /月 ¥ 34374.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 2.5 JPY /時間 ¥ 1160.00 JPY /月 ¥ 11832.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 3.2 JPY /時間 ¥ 1700.00 JPY /月 ¥ 17340.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 7.1 JPY /時間 ¥ 3430.00 JPY /月 ¥ 34986.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 8.8 JPY /時間 ¥ 4650.00 JPY /月 ¥ 47430.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - linux ￥ 0.9 JPY /時間 ¥ 380.00 JPY /月 ¥ 3876.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - windows ￥ 1.1 JPY /時間 ¥ 550.00 JPY /月 ¥ 5610.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 1.9 JPY /時間 ¥ 1080.00 JPY /月 ¥ 11016.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 1.9 JPY /時間 ¥ 1470.00 JPY /月 ¥ 14994.00 JPY /年    \nap-southeast-3    instanceType vCPU  メモリ  イントラネット帯域幅 パケット転送速度  GPU/FPGA  ローカルストレージ  OS 従量課金 サブスクリプション サブスクリプション     ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 197.5 JPY /時間 ¥ 94780.00 JPY /月 ¥ 966756.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 3 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 256.7 JPY /時間 ¥ 123210.00 JPY /月 ¥ 1256742.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 395 JPY /時間 ¥ 189560.00 JPY /月 ¥ 1933512.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 513.5 JPY /時間 ¥ 246420.00 JPY /月 ¥ 2513484.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 237.9 JPY /時間 ¥ 114130.00 JPY /月 ¥ 1164126.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 309.2 JPY /時間 ¥ 148360.00 JPY /月 ¥ 1513272.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 475.6 JPY /時間 ¥ 228250.00 JPY /月 ¥ 2328150.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 618.3 JPY /時間 ¥ 296720.00 JPY /月 ¥ 3026544.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 951 JPY /時間 ¥ 456490.00 JPY /月 ¥ 4656198.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 1236.4 JPY /時間 ¥ 593440.00 JPY /月 ¥ 6053088.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 1902 JPY /時間 ¥ 912980.00 JPY /月 ¥ 9312396.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 2472.7 JPY /時間 ¥ 1186870.00 JPY /月 ¥ 12106074.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro linux ￥ 29.5 JPY /時間 ¥ 14160.00 JPY /月 ¥ 144432.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro windows ￥ 47.2 JPY /時間 ¥ 28280.00 JPY /月 ¥ 288456.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro linux ￥ 59 JPY /時間 ¥ 28320.00 JPY /月 ¥ 288864.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro windows ￥ 94.2 JPY /時間 ¥ 56550.00 JPY /月 ¥ 576810.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro linux ￥ 118 JPY /時間 ¥ 56640.00 JPY /月 ¥ 577728.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro windows ￥ 188.5 JPY /時間 ¥ 113100.00 JPY /月 ¥ 1153620.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro linux ￥ 236 JPY /時間 ¥ 113260.00 JPY /月 ¥ 1155252.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro windows ￥ 377 JPY /時間 ¥ 226200.00 JPY /月 ¥ 2307240.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro linux ￥ 410.7 JPY /時間 ¥ 197130.00 JPY /月 ¥ 2010726.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro windows ￥ 659.8 JPY /時間 ¥ 395840.00 JPY /月 ¥ 4037568.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 3.4 JPY /時間 ¥ 1880.00 JPY /月 ¥ 19176.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 4.4 JPY /時間 ¥ 2600.00 JPY /月 ¥ 26520.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 6.6 JPY /時間 ¥ 3750.00 JPY /月 ¥ 38250.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 8.7 JPY /時間 ¥ 5190.00 JPY /月 ¥ 52938.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 21.6 JPY /時間 ¥ 10710.00 JPY /月 ¥ 109242.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 38.3 JPY /時間 ¥ 19730.00 JPY /月 ¥ 201246.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 42.9 JPY /時間 ¥ 21360.00 JPY /月 ¥ 217872.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 76.9 JPY /時間 ¥ 39580.00 JPY /月 ¥ 403716.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 85.8 JPY /時間 ¥ 42710.00 JPY /月 ¥ 435642.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 153.5 JPY /時間 ¥ 79020.00 JPY /月 ¥ 806004.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - linux ￥ 171.6 JPY /時間 ¥ 85420.00 JPY /月 ¥ 871284.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - windows ￥ 307.1 JPY /時間 ¥ 158170.00 JPY /月 ¥ 1613334.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 18.1 JPY /時間 ¥ 8480.00 JPY /月 ¥ 86496.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 28.6 JPY /時間 ¥ 15990.00 JPY /月 ¥ 163098.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 36.3 JPY /時間 ¥ 16830.00 JPY /月 ¥ 171666.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 57.1 JPY /時間 ¥ 31970.00 JPY /月 ¥ 326094.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - linux ￥ 72.6 JPY /時間 ¥ 33730.00 JPY /月 ¥ 344046.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - windows ￥ 114.4 JPY /時間 ¥ 63940.00 JPY /月 ¥ 652188.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - linux ￥ 145.4 JPY /時間 ¥ 67200.00 JPY /月 ¥ 685440.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - windows ￥ 228.9 JPY /時間 ¥ 127870.00 JPY /月 ¥ 1304274.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - linux ￥ 290.7 JPY /時間 ¥ 134280.00 JPY /月 ¥ 1369656.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - windows ￥ 457.9 JPY /時間 ¥ 255740.00 JPY /月 ¥ 2608548.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - linux ￥ 535.9 JPY /時間 ¥ 249900.00 JPY /月 ¥ 2548980.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - windows ￥ 844.1 JPY /時間 ¥ 471510.00 JPY /月 ¥ 4809402.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 11.1 JPY /時間 ¥ 5630.00 JPY /月 ¥ 57426.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 20.1 JPY /時間 ¥ 12180.00 JPY /月 ¥ 124236.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 22.5 JPY /時間 ¥ 11250.00 JPY /月 ¥ 114750.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 40.4 JPY /時間 ¥ 24350.00 JPY /月 ¥ 248370.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 45 JPY /時間 ¥ 22430.00 JPY /月 ¥ 228786.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 80.9 JPY /時間 ¥ 48620.00 JPY /月 ¥ 495924.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 90.1 JPY /時間 ¥ 44850.00 JPY /月 ¥ 457470.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 161.9 JPY /時間 ¥ 97240.00 JPY /月 ¥ 991848.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 180.1 JPY /時間 ¥ 89690.00 JPY /月 ¥ 914838.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 341.6 JPY /時間 ¥ 207560.00 JPY /月 ¥ 2117112.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 14.2 JPY /時間 ¥ 6450.00 JPY /月 ¥ 65790.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 24.5 JPY /時間 ¥ 14070.00 JPY /月 ¥ 143514.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 28.5 JPY /時間 ¥ 12890.00 JPY /月 ¥ 131478.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 49.3 JPY /時間 ¥ 28140.00 JPY /月 ¥ 287028.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 56.9 JPY /時間 ¥ 25770.00 JPY /月 ¥ 262854.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 113.7 JPY /時間 ¥ 51540.00 JPY /月 ¥ 525708.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 197 JPY /時間 ¥ 112550.00 JPY /月 ¥ 1148010.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 227.3 JPY /時間 ¥ 103070.00 JPY /月 ¥ 1051314.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 394.3 JPY /時間 ¥ 225100.00 JPY /月 ¥ 2296020.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - linux ￥ 397.6 JPY /時間 ¥ 180360.00 JPY /月 ¥ 1839672.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - windows ￥ 690 JPY /時間 ¥ 393920.00 JPY /月 ¥ 4017984.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 3.8 JPY /時間 ¥ 1680.00 JPY /月 ¥ 17136.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 5 JPY /時間 ¥ 2510.00 JPY /月 ¥ 25602.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 7.5 JPY /時間 ¥ 3350.00 JPY /月 ¥ 34170.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 9.9 JPY /時間 ¥ 5000.00 JPY /月 ¥ 51000.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 15 JPY /時間 ¥ 6690.00 JPY /月 ¥ 68238.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 19.7 JPY /時間 ¥ 10000.00 JPY /月 ¥ 102000.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 29.8 JPY /時間 ¥ 13370.00 JPY /月 ¥ 136374.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 39.3 JPY /時間 ¥ 19990.00 JPY /月 ¥ 203898.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 5.2 JPY /時間 ¥ 2320.00 JPY /月 ¥ 23664.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 6.8 JPY /時間 ¥ 3470.00 JPY /月 ¥ 35394.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 10.4 JPY /時間 ¥ 4640.00 JPY /月 ¥ 47328.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 13.6 JPY /時間 ¥ 6930.00 JPY /月 ¥ 70686.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 20.6 JPY /時間 ¥ 9270.00 JPY /月 ¥ 94554.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 27.2 JPY /時間 ¥ 13860.00 JPY /月 ¥ 141372.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 41.2 JPY /時間 ¥ 18530.00 JPY /月 ¥ 189006.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 54.3 JPY /時間 ¥ 27720.00 JPY /月 ¥ 282744.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 8.8 JPY /時間 ¥ 3600.00 JPY /月 ¥ 36720.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 9.9 JPY /時間 ¥ 4980.00 JPY /月 ¥ 50796.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 17.5 JPY /時間 ¥ 7190.00 JPY /月 ¥ 73338.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 19.7 JPY /時間 ¥ 9960.00 JPY /月 ¥ 101592.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 35 JPY /時間 ¥ 14370.00 JPY /月 ¥ 146574.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 39.4 JPY /時間 ¥ 19910.00 JPY /月 ¥ 203082.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 1.5 JPY /時間 ¥ 620.00 JPY /月 ¥ 6324.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 2 JPY /時間 ¥ 930.00 JPY /月 ¥ 9486.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 4.5 JPY /時間 ¥ 2030.00 JPY /月 ¥ 20706.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 6 JPY /時間 ¥ 3040.00 JPY /月 ¥ 31008.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 2.3 JPY /時間 ¥ 1020.00 JPY /月 ¥ 10404.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 3 JPY /時間 ¥ 1530.00 JPY /月 ¥ 15606.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 6.7 JPY /時間 ¥ 3020.00 JPY /月 ¥ 30804.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 8.4 JPY /時間 ¥ 4180.00 JPY /月 ¥ 42636.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - linux ￥ 0.9 JPY /時間 ¥ 330.00 JPY /月 ¥ 3366.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - windows ￥ 1.1 JPY /時間 ¥ 490.00 JPY /月 ¥ 4998.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 1.8 JPY /時間 ¥ 950.00 JPY /月 ¥ 9690.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 2.2 JPY /時間 ¥ 1310.00 JPY /月 ¥ 13362.00 JPY /年    \nap-southeast-5    instanceType vCPU  メモリ  イントラネット帯域幅 パケット転送速度  GPU/FPGA  ローカルストレージ  OS 従量課金 サブスクリプション サブスクリプション     ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro linux ￥ 93.3 JPY /時間 ¥ 44790.00 JPY /月 ¥ 456858.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro windows ￥ 103.2 JPY /時間 ¥ 61940.00 JPY /月 ¥ 631788.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro linux ￥ 186.6 JPY /時間 ¥ 89580.00 JPY /月 ¥ 913716.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro windows ￥ 206.5 JPY /時間 ¥ 123870.00 JPY /月 ¥ 1263474.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro linux ￥ 280 JPY /時間 ¥ 134370.00 JPY /月 ¥ 1370574.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro windows ￥ 309.6 JPY /時間 ¥ 185810.00 JPY /月 ¥ 1895262.00 JPY /年   ecs.d1.8xlarge 32 vCPU 128 GiB 10 Gbps 1000,000 PPS - local_hdd_pro linux ￥ 373.2 JPY /時間 ¥ 179160.00 JPY /月 ¥ 1827432.00 JPY /年   ecs.d1.8xlarge 32 vCPU 128 GiB 10 Gbps 1000,000 PPS - local_hdd_pro windows ￥ 412.9 JPY /時間 ¥ 247750.00 JPY /月 ¥ 2527050.00 JPY /年   ecs.d1.14xlarge 56 vCPU 224 GiB 17 Gbps 1800,000 PPS - local_hdd_pro linux ￥ 653.1 JPY /時間 ¥ 313530.00 JPY /月 ¥ 3198006.00 JPY /年   ecs.d1.14xlarge 56 vCPU 224 GiB 17 Gbps 1800,000 PPS - local_hdd_pro windows ￥ 722.6 JPY /時間 ¥ 433550.00 JPY /月 ¥ 4422210.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 207.9 JPY /時間 ¥ 99770.00 JPY /月 ¥ 1017654.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 270.2 JPY /時間 ¥ 129700.00 JPY /月 ¥ 1322940.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 415.7 JPY /時間 ¥ 199530.00 JPY /月 ¥ 2035206.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 540.4 JPY /時間 ¥ 259390.00 JPY /月 ¥ 2645778.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 250.3 JPY /時間 ¥ 120130.00 JPY /月 ¥ 1225326.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 325.4 JPY /時間 ¥ 156170.00 JPY /月 ¥ 1592934.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 500.5 JPY /時間 ¥ 240260.00 JPY /月 ¥ 2450652.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 650.7 JPY /時間 ¥ 312340.00 JPY /月 ¥ 3185868.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 1001 JPY /時間 ¥ 480520.00 JPY /月 ¥ 4901304.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 1301.4 JPY /時間 ¥ 624670.00 JPY /月 ¥ 6371634.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 2002.1 JPY /時間 ¥ 961030.00 JPY /月 ¥ 9802506.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 2602.7 JPY /時間 ¥ 1249340.00 JPY /月 ¥ 12743268.00 JPY /年   ecs.hfc5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 12.7 JPY /時間 ¥ 6310.00 JPY /月 ¥ 64362.00 JPY /年   ecs.hfc5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.7 JPY /時間 ¥ 13640.00 JPY /月 ¥ 139128.00 JPY /年   ecs.hfc5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 25.3 JPY /時間 ¥ 12610.00 JPY /月 ¥ 128622.00 JPY /年   ecs.hfc5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 45.5 JPY /時間 ¥ 27280.00 JPY /月 ¥ 278256.00 JPY /年   ecs.hfc5.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 50.5 JPY /時間 ¥ 25130.00 JPY /月 ¥ 256326.00 JPY /年   ecs.hfc5.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 90.8 JPY /時間 ¥ 54480.00 JPY /月 ¥ 555696.00 JPY /年   ecs.hfc5.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 101 JPY /時間 ¥ 50250.00 JPY /月 ¥ 512550.00 JPY /年   ecs.hfc5.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 181.4 JPY /時間 ¥ 108950.00 JPY /月 ¥ 1111290.00 JPY /年   ecs.hfc5.6xlarge 24 vCPU 48 GiB 4.5 Gbps 2000,000 PPS - - linux ￥ 151.5 JPY /時間 ¥ 75370.00 JPY /月 ¥ 768774.00 JPY /年   ecs.hfc5.6xlarge 24 vCPU 48 GiB 4.5 Gbps 2000,000 PPS - - windows ￥ 272.1 JPY /時間 ¥ 163420.00 JPY /月 ¥ 1666884.00 JPY /年   ecs.hfc5.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 202 JPY /時間 ¥ 100490.00 JPY /月 ¥ 1024998.00 JPY /年   ecs.hfc5.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 362.8 JPY /時間 ¥ 217890.00 JPY /月 ¥ 2222478.00 JPY /年   ecs.hfg5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 14 JPY /時間 ¥ 6940.00 JPY /月 ¥ 70788.00 JPY /年   ecs.hfg5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 25 JPY /時間 ¥ 15010.00 JPY /月 ¥ 153102.00 JPY /年   ecs.hfg5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 27.9 JPY /時間 ¥ 13870.00 JPY /月 ¥ 141474.00 JPY /年   ecs.hfg5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 50.1 JPY /時間 ¥ 30010.00 JPY /月 ¥ 306102.00 JPY /年   ecs.hfg5.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 55.6 JPY /時間 ¥ 27640.00 JPY /月 ¥ 281928.00 JPY /年   ecs.hfg5.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 99.9 JPY /時間 ¥ 59920.00 JPY /月 ¥ 611184.00 JPY /年   ecs.hfg5.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 111.1 JPY /時間 ¥ 55280.00 JPY /月 ¥ 563856.00 JPY /年   ecs.hfg5.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 199.6 JPY /時間 ¥ 119840.00 JPY /月 ¥ 1222368.00 JPY /年   ecs.hfg5.6xlarge 24 vCPU 96 GiB 4.5 Gbps 2000,000 PPS - - linux ￥ 166.7 JPY /時間 ¥ 82910.00 JPY /月 ¥ 845682.00 JPY /年   ecs.hfg5.6xlarge 24 vCPU 96 GiB 4.5 Gbps 2000,000 PPS - - windows ￥ 299.4 JPY /時間 ¥ 179760.00 JPY /月 ¥ 1833552.00 JPY /年   ecs.hfg5.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 222.2 JPY /時間 ¥ 110540.00 JPY /月 ¥ 1127508.00 JPY /年   ecs.hfg5.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 399.1 JPY /時間 ¥ 239680.00 JPY /月 ¥ 2444736.00 JPY /年   ecs.hfg5.14xlarge 56 vCPU 160 GiB 10 Gbps 4000,000 PPS - - linux ￥ 388.9 JPY /時間 ¥ 193450.00 JPY /月 ¥ 1973190.00 JPY /年   ecs.hfg5.14xlarge 56 vCPU 160 GiB 10 Gbps 4000,000 PPS - - windows ￥ 698.4 JPY /時間 ¥ 419440.00 JPY /月 ¥ 4278288.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro linux ￥ 31 JPY /時間 ¥ 14900.00 JPY /月 ¥ 151980.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro windows ￥ 49.6 JPY /時間 ¥ 29770.00 JPY /月 ¥ 303654.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro linux ￥ 62.1 JPY /時間 ¥ 29810.00 JPY /月 ¥ 304062.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro windows ￥ 99.2 JPY /時間 ¥ 59530.00 JPY /月 ¥ 607206.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro linux ￥ 124.2 JPY /時間 ¥ 59620.00 JPY /月 ¥ 608124.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro windows ￥ 198.4 JPY /時間 ¥ 119050.00 JPY /月 ¥ 1214310.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro linux ￥ 248.3 JPY /時間 ¥ 119220.00 JPY /月 ¥ 1216044.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro windows ￥ 396.8 JPY /時間 ¥ 238100.00 JPY /月 ¥ 2428620.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro linux ￥ 432.2 JPY /時間 ¥ 207500.00 JPY /月 ¥ 2116500.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro windows ￥ 694.4 JPY /時間 ¥ 416680.00 JPY /月 ¥ 4250136.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 19 JPY /時間 ¥ 8920.00 JPY /月 ¥ 90984.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 30.1 JPY /時間 ¥ 16830.00 JPY /月 ¥ 171666.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 38.1 JPY /時間 ¥ 17720.00 JPY /月 ¥ 180744.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 60.1 JPY /時間 ¥ 33650.00 JPY /月 ¥ 343230.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - linux ￥ 76.4 JPY /時間 ¥ 35500.00 JPY /月 ¥ 362100.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - windows ￥ 120.3 JPY /時間 ¥ 67300.00 JPY /月 ¥ 686460.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - linux ￥ 153 JPY /時間 ¥ 70740.00 JPY /月 ¥ 721548.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - windows ￥ 240.9 JPY /時間 ¥ 134600.00 JPY /月 ¥ 1372920.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - linux ￥ 305.9 JPY /時間 ¥ 141350.00 JPY /月 ¥ 1441770.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - windows ￥ 481.9 JPY /時間 ¥ 269200.00 JPY /月 ¥ 2745840.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 11.7 JPY /時間 ¥ 5920.00 JPY /月 ¥ 60384.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 21.1 JPY /時間 ¥ 12820.00 JPY /月 ¥ 130764.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 23.6 JPY /時間 ¥ 11840.00 JPY /月 ¥ 120768.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 42.5 JPY /時間 ¥ 25630.00 JPY /月 ¥ 261426.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 47.3 JPY /時間 ¥ 23610.00 JPY /月 ¥ 240822.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 85.1 JPY /時間 ¥ 51180.00 JPY /月 ¥ 522036.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 94.8 JPY /時間 ¥ 47210.00 JPY /月 ¥ 481542.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 170.4 JPY /時間 ¥ 102350.00 JPY /月 ¥ 1043970.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 189.6 JPY /時間 ¥ 94410.00 JPY /月 ¥ 962982.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 359.5 JPY /時間 ¥ 218490.00 JPY /月 ¥ 2228598.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 14.9 JPY /時間 ¥ 6780.00 JPY /月 ¥ 69156.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 25.8 JPY /時間 ¥ 14810.00 JPY /月 ¥ 151062.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 51.8 JPY /時間 ¥ 29620.00 JPY /月 ¥ 302124.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 59.7 JPY /時間 ¥ 27130.00 JPY /月 ¥ 276726.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 103.7 JPY /時間 ¥ 59240.00 JPY /月 ¥ 604248.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 119.5 JPY /時間 ¥ 54250.00 JPY /月 ¥ 553350.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 207.4 JPY /時間 ¥ 118480.00 JPY /月 ¥ 1208496.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 239.1 JPY /時間 ¥ 108490.00 JPY /月 ¥ 1106598.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 415 JPY /時間 ¥ 236950.00 JPY /月 ¥ 2416890.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 4 JPY /時間 ¥ 1760.00 JPY /月 ¥ 17952.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 5.2 JPY /時間 ¥ 2640.00 JPY /月 ¥ 26928.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 7.9 JPY /時間 ¥ 3520.00 JPY /月 ¥ 35904.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 5270.00 JPY /月 ¥ 53754.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 15.7 JPY /時間 ¥ 7040.00 JPY /月 ¥ 71808.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 20.6 JPY /時間 ¥ 10520.00 JPY /月 ¥ 107304.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 31.3 JPY /時間 ¥ 14070.00 JPY /月 ¥ 143514.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 41.2 JPY /時間 ¥ 21040.00 JPY /月 ¥ 214608.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 5.5 JPY /時間 ¥ 2440.00 JPY /月 ¥ 24888.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 7.2 JPY /時間 ¥ 3650.00 JPY /月 ¥ 37230.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 10.9 JPY /時間 ¥ 4880.00 JPY /月 ¥ 49776.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 14.3 JPY /時間 ¥ 7300.00 JPY /月 ¥ 74460.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 21.7 JPY /時間 ¥ 9760.00 JPY /月 ¥ 99552.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 28.6 JPY /時間 ¥ 14590.00 JPY /月 ¥ 148818.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 43.3 JPY /時間 ¥ 19510.00 JPY /月 ¥ 199002.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 57.1 JPY /時間 ¥ 29180.00 JPY /月 ¥ 297636.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 9.2 JPY /時間 ¥ 3780.00 JPY /月 ¥ 38556.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 5240.00 JPY /月 ¥ 53448.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 18.4 JPY /時間 ¥ 7560.00 JPY /月 ¥ 77112.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 20.7 JPY /時間 ¥ 10480.00 JPY /月 ¥ 106896.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 36.8 JPY /時間 ¥ 15120.00 JPY /月 ¥ 154224.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 41.4 JPY /時間 ¥ 20950.00 JPY /月 ¥ 213690.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 1.5 JPY /時間 ¥ 650.00 JPY /月 ¥ 6630.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 2 JPY /時間 ¥ 980.00 JPY /月 ¥ 9996.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 4.8 JPY /時間 ¥ 2140.00 JPY /月 ¥ 21828.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 6.3 JPY /時間 ¥ 3200.00 JPY /月 ¥ 32640.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 2.5 JPY /時間 ¥ 1080.00 JPY /月 ¥ 11016.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 3.2 JPY /時間 ¥ 1610.00 JPY /月 ¥ 16422.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 7.1 JPY /時間 ¥ 3170.00 JPY /月 ¥ 32334.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 8.8 JPY /時間 ¥ 4400.00 JPY /月 ¥ 44880.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - linux ￥ 0.9 JPY /時間 ¥ 350.00 JPY /月 ¥ 3570.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - windows ￥ 1.1 JPY /時間 ¥ 520.00 JPY /月 ¥ 5304.00 JPY /年    \ncn-beijing    instanceType vCPU  メモリ  イントラネット帯域幅 パケット転送速度  GPU/FPGA  ローカルストレージ  OS 従量課金 サブスクリプション サブスクリプション     ecs.c5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 15.9 JPY /時間 ¥ 4580.00 JPY /月 ¥ 46717.00 JPY /年   ecs.c5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 15.9 JPY /時間 ¥ 4580.00 JPY /月 ¥ 46717.00 JPY /年   ecs.c5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 31.8 JPY /時間 ¥ 9150.00 JPY /月 ¥ 93331.00 JPY /年   ecs.c5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 31.8 JPY /時間 ¥ 9150.00 JPY /月 ¥ 93331.00 JPY /年   ecs.c5.2xlarge 8 vCPU 16 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 63.6 JPY /時間 ¥ 18300.00 JPY /月 ¥ 186661.00 JPY /年   ecs.c5.2xlarge 8 vCPU 16 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 63.6 JPY /時間 ¥ 18300.00 JPY /月 ¥ 186661.00 JPY /年   ecs.c5.4xlarge 16 vCPU 32 GiB 5 Gbps 1000,000 PPS - - linux ￥ 127.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.c5.4xlarge 16 vCPU 32 GiB 5 Gbps 1000,000 PPS - - windows ￥ 127.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.c5.6xlarge 24 vCPU 48 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 190.6 JPY /時間 ¥ 54890.00 JPY /月 ¥ 559879.00 JPY /年   ecs.c6xlarge 24 vCPU 48 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 190.6 JPY /時間 ¥ 54890.00 JPY /月 ¥ 559879.00 JPY /年   ecs.c5.8xlarge 32 vCPU 64 GiB 10 Gbps 2000,000 PPS - - linux ￥ 254.1 JPY /時間 ¥ 73180.00 JPY /月 ¥ 746437.00 JPY /年   ecs.c5.8xlarge 32 vCPU 64 GiB 10 Gbps 2000,000 PPS - - windows ￥ 254.1 JPY /時間 ¥ 73180.00 JPY /月 ¥ 746437.00 JPY /年   ecs.c5.16xlarge 64 vCPU 128 GiB 20 Gbps 4000,000 PPS - - linux ￥ 508.2 JPY /時間 ¥ 146350.00 JPY /月 ¥ 1492771.00 JPY /年   ecs.c5.16xlarge 64 vCPU 128 GiB 20 Gbps 4000,000 PPS - - windows ￥ 508.2 JPY /時間 ¥ 146350.00 JPY /月 ¥ 1492771.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro linux ￥ 106.6 JPY /時間 ¥ 30710.00 JPY /月 ¥ 313243.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro windows ￥ 106.6 JPY /時間 ¥ 30710.00 JPY /月 ¥ 313243.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro linux ￥ 213.3 JPY /時間 ¥ 61420.00 JPY /月 ¥ 626485.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro windows ￥ 213.3 JPY /時間 ¥ 61420.00 JPY /月 ¥ 626485.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro linux ￥ 319.7 JPY /時間 ¥ 92120.00 JPY /月 ¥ 939625.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro windows ￥ 319.7 JPY /時間 ¥ 92120.00 JPY /月 ¥ 939625.00 JPY /年   ecs.d1.8xlarge 32 vCPU 128 GiB 10 Gbps 1000,000 PPS - local_hdd_pro linux ￥ 426.5 JPY /時間 ¥ 122830.00 JPY /月 ¥ 1252867.00 JPY /年   ecs.d1.8xlarge 32 vCPU 128 GiB 10 Gbps 1000,000 PPS - local_hdd_pro windows ￥ 426.5 JPY /時間 ¥ 122830.00 JPY /月 ¥ 1252867.00 JPY /年   ecs.d1.14xlarge 56 vCPU 224 GiB 17 Gbps 1800,000 PPS - local_hdd_pro linux ￥ 746.3 JPY /時間 ¥ 214950.00 JPY /月 ¥ 2192491.00 JPY /年   ecs.d1.14xlarge 56 vCPU 224 GiB 17 Gbps 1800,000 PPS - local_hdd_pro windows ￥ 746.3 JPY /時間 ¥ 214950.00 JPY /月 ¥ 2192491.00 JPY /年   ecs.e3.small 1 vCPU 8 GiB - - - - linux ￥ 14.5 JPY /時間 ¥ 4280.00 JPY /月 ¥ 43657.00 JPY /年   ecs.e3.small 1 vCPU 8 GiB - - - - windows ￥ 14.5 JPY /時間 ¥ 4280.00 JPY /月 ¥ 43657.00 JPY /年   ecs.e3.medium 2 vCPU 16 GiB - - - - linux ￥ 29.1 JPY /時間 ¥ 8900.00 JPY /月 ¥ 90781.00 JPY /年   ecs.e3.medium 2 vCPU 16 GiB - - - - windows ￥ 29.1 JPY /時間 ¥ 8900.00 JPY /月 ¥ 90781.00 JPY /年   ecs.e3.large 4 vCPU 32 GiB - - - - linux ￥ 58.1 JPY /時間 ¥ 18130.00 JPY /月 ¥ 184927.00 JPY /年   ecs.e3.large 4 vCPU 32 GiB - - - - windows ￥ 58.1 JPY /時間 ¥ 18130.00 JPY /月 ¥ 184927.00 JPY /年   ecs.e3.xlarge 8 vCPU 64 GiB - - - - linux ￥ 116.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.e3.xlarge 8 vCPU 64 GiB - - - - windows ￥ 116.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.e3.3xlarge 16 vCPU 128 GiB - - - - linux ￥ 231.8 JPY /時間 ¥ 73510.00 JPY /月 ¥ 749803.00 JPY /年   ecs.e3.3xlarge 16 vCPU 128 GiB - - - - windows ￥ 231.8 JPY /時間 ¥ 73510.00 JPY /月 ¥ 749803.00 JPY /年   ecs.g5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.g5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.g5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 35 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.g5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 35 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.g5.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.g5.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.g5.4xlarge 16 vCPU 64 GiB 5 Gbps 1000,000 PPS - - linux ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.g5.4xlarge 16 vCPU 64 GiB 5 Gbps 1000,000 PPS - - windows ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.g5.6xlarge 24 vCPU 96 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 209.5 JPY /時間 ¥ 60310.00 JPY /月 ¥ 615163.00 JPY /年   ecs.g5.6xlarge 24 vCPU 96 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 209.5 JPY /時間 ¥ 60310.00 JPY /月 ¥ 615163.00 JPY /年   ecs.g5.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS - - linux ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.g5.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS - - windows ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.g5.16xlarge 64 vCPU 256 GiB 20 Gbps 4000,000 PPS - - windows ￥ 558.5 JPY /時間 ¥ 160830.00 JPY /月 ¥ 1640467.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 251.9 JPY /時間 ¥ 72560.00 JPY /月 ¥ 740113.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 251.9 JPY /時間 ¥ 72560.00 JPY /月 ¥ 740113.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 503.9 JPY /時間 ¥ 145110.00 JPY /月 ¥ 1480123.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 503.9 JPY /時間 ¥ 145110.00 JPY /月 ¥ 1480123.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 303.3 JPY /時間 ¥ 87370.00 JPY /月 ¥ 891175.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 303.3 JPY /時間 ¥ 87370.00 JPY /月 ¥ 891175.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 606.7 JPY /時間 ¥ 174730.00 JPY /月 ¥ 1782247.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 606.7 JPY /時間 ¥ 174730.00 JPY /月 ¥ 1782247.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 1213.4 JPY /時間 ¥ 349460.00 JPY /月 ¥ 3564493.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 1213.4 JPY /時間 ¥ 349460.00 JPY /月 ¥ 3564493.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 2426.8 JPY /時間 ¥ 698910.00 JPY /月 ¥ 7128883.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 2426.8 JPY /時間 ¥ 698910.00 JPY /月 ¥ 7128883.00 JPY /年   ecs.gn6v-c8g1.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS NVIDIA V100 - linux ￥ 471 JPY /時間 ¥ 135630.00 JPY /月 ¥ 1383427.00 JPY /年   ecs.gn6v-c8g1.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS NVIDIA V100 - windows ￥ 471 JPY /時間 ¥ 135630.00 JPY /月 ¥ 1383427.00 JPY /年   ecs.gn6v-c8g1.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS NVIDIA V100 - linux ￥ 1883.7 JPY /時間 ¥ 542520.00 JPY /月 ¥ 5533705.00 JPY /年   ecs.gn6v-c8g1.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS NVIDIA V100 - windows ￥ 1883.7 JPY /時間 ¥ 542520.00 JPY /月 ¥ 5533705.00 JPY /年   ecs.gn6v-c8g1.16xlarge 64 vCPU 256 GiB 20 Gbps 2500,000 PPS NVIDIA V100 - linux ￥ 3767.4 JPY /時間 ¥ 1085040.00 JPY /月 ¥ 11067409.00 JPY /年   ecs.gn6v-c8g1.16xlarge 64 vCPU 256 GiB 20 Gbps 2500,000 PPS NVIDIA V100 - windows ￥ 3767.4 JPY /時間 ¥ 1085040.00 JPY /月 ¥ 11067409.00 JPY /年   ecs.hfc5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 19.1 JPY /時間 ¥ 5500.00 JPY /月 ¥ 56101.00 JPY /年   ecs.hfc5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 19.1 JPY /時間 ¥ 5500.00 JPY /月 ¥ 56101.00 JPY /年   ecs.hfc5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 38.2 JPY /時間 ¥ 10990.00 JPY /月 ¥ 112099.00 JPY /年   ecs.hfc5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 38.2 JPY /時間 ¥ 10990.00 JPY /月 ¥ 112099.00 JPY /年   ecs.hfc5.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 76.4 JPY /時間 ¥ 21980.00 JPY /月 ¥ 224197.00 JPY /年   ecs.hfc5.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 76.4 JPY /時間 ¥ 21980.00 JPY /月 ¥ 224197.00 JPY /年   ecs.hfc5.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 152.7 JPY /時間 ¥ 43960.00 JPY /月 ¥ 448393.00 JPY /年   ecs.hfc5.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 152.7 JPY /時間 ¥ 43960.00 JPY /月 ¥ 448393.00 JPY /年   ecs.hfc5.6xlarge 24 vCPU 48 GiB 4.5 Gbps 2000,000 PPS - - linux ￥ 229 JPY /時間 ¥ 65940.00 JPY /月 ¥ 672589.00 JPY /年   ecs.hfc5.6xlarge 24 vCPU 48 GiB 4.5 Gbps 2000,000 PPS - - windows ￥ 229 JPY /時間 ¥ 65940.00 JPY /月 ¥ 672589.00 JPY /年   ecs.hfc5.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 305.3 JPY /時間 ¥ 87920.00 JPY /月 ¥ 896785.00 JPY /年   ecs.hfc5.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 305.3 JPY /時間 ¥ 87920.00 JPY /月 ¥ 896785.00 JPY /年   ecs.hfg5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 21.1 JPY /時間 ¥ 6070.00 JPY /月 ¥ 61915.00 JPY /年   ecs.hfg5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 21.1 JPY /時間 ¥ 6070.00 JPY /月 ¥ 61915.00 JPY /年   ecs.hfg5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 42.2 JPY /時間 ¥ 12130.00 JPY /月 ¥ 123727.00 JPY /年   ecs.hfg5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 42.2 JPY /時間 ¥ 12130.00 JPY /月 ¥ 123727.00 JPY /年   ecs.hfg5.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 84.3 JPY /時間 ¥ 24260.00 JPY /月 ¥ 247453.00 JPY /年   ecs.hfg5.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 84.3 JPY /時間 ¥ 24260.00 JPY /月 ¥ 247453.00 JPY /年   ecs.hfg5.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 168.5 JPY /時間 ¥ 48520.00 JPY /月 ¥ 494905.00 JPY /年   ecs.hfg5.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 168.5 JPY /時間 ¥ 48520.00 JPY /月 ¥ 494905.00 JPY /年   ecs.hfg5.6xlarge 24 vCPU 96 GiB 4.5 Gbps 2000,000 PPS - - linux ￥ 252.7 JPY /時間 ¥ 72780.00 JPY /月 ¥ 742357.00 JPY /年   ecs.hfg5.6xlarge 24 vCPU 96 GiB 4.5 Gbps 2000,000 PPS - - windows ￥ 252.7 JPY /時間 ¥ 72780.00 JPY /月 ¥ 742357.00 JPY /年   ecs.hfg5.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 337 JPY /時間 ¥ 97030.00 JPY /月 ¥ 989707.00 JPY /年   ecs.hfg5.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 337 JPY /時間 ¥ 97030.00 JPY /月 ¥ 989707.00 JPY /年   ecs.hfg5.14xlarge 56 vCPU 160 GiB 10 Gbps 4000,000 PPS - - linux ￥ 589.6 JPY /時間 ¥ 169810.00 JPY /月 ¥ 1732063.00 JPY /年   ecs.hfg5.14xlarge 56 vCPU 160 GiB 10 Gbps 4000,000 PPS - - windows ￥ 589.6 JPY /時間 ¥ 169810.00 JPY /月 ¥ 1732063.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro linux ￥ 39.1 JPY /時間 ¥ 11380.00 JPY /月 ¥ 116077.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro windows ￥ 39.1 JPY /時間 ¥ 11380.00 JPY /月 ¥ 116077.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro linux ￥ 79.4 JPY /時間 ¥ 22750.00 JPY /月 ¥ 232051.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro windows ￥ 79.4 JPY /時間 ¥ 22750.00 JPY /月 ¥ 232051.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro linux ￥ 157.6 JPY /時間 ¥ 45500.00 JPY /月 ¥ 464101.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro windows ￥ 157.6 JPY /時間 ¥ 45500.00 JPY /月 ¥ 464101.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro linux ￥ 316.3 JPY /時間 ¥ 91000.00 JPY /月 ¥ 928201.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro windows ￥ 316.3 JPY /時間 ¥ 91000.00 JPY /月 ¥ 928201.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro linux ￥ 553.2 JPY /時間 ¥ 159240.00 JPY /月 ¥ 1624249.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro windows ￥ 553.2 JPY /時間 ¥ 159240.00 JPY /月 ¥ 1624249.00 JPY /年   ecs.i2.xlarge 4 vCPU 32 GiB 1 Gbps 500,000 PPS - local_ssd_pro linux ￥ 65.2 JPY /時間 ¥ 18770.00 JPY /月 ¥ 191455.00 JPY /年   ecs.i2.xlarge 4 vCPU 32 GiB 1 Gbps 500,000 PPS - local_ssd_pro windows ￥ 65.2 JPY /時間 ¥ 18770.00 JPY /月 ¥ 191455.00 JPY /年   ecs.i2.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - local_ssd_pro linux ￥ 130.3 JPY /時間 ¥ 37530.00 JPY /月 ¥ 382807.00 JPY /年   ecs.i2.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - local_ssd_pro windows ￥ 130.3 JPY /時間 ¥ 37530.00 JPY /月 ¥ 382807.00 JPY /年   ecs.i2.4xlarge 16 vCPU 128 GiB 3 Gbps 1500,000 PPS - local_ssd_pro linux ￥ 260.6 JPY /時間 ¥ 75050.00 JPY /月 ¥ 765511.00 JPY /年   ecs.i2.4xlarge 16 vCPU 128 GiB 3 Gbps 1500,000 PPS - local_ssd_pro windows ￥ 260.6 JPY /時間 ¥ 75050.00 JPY /月 ¥ 765511.00 JPY /年   ecs.i2.8xlarge 32 vCPU 256 GiB 6 Gbps 2000,000 PPS - local_ssd_pro linux ￥ 521.2 JPY /時間 ¥ 150100.00 JPY /月 ¥ 1531021.00 JPY /年   ecs.i2.8xlarge 32 vCPU 256 GiB 6 Gbps 2000,000 PPS - local_ssd_pro windows ￥ 521.2 JPY /時間 ¥ 150100.00 JPY /月 ¥ 1531021.00 JPY /年   ecs.i2.16xlarge 64 vCPU 512 GiB 10 Gbps 4000,000 PPS - local_ssd_pro linux ￥ 1042.4 JPY /時間 ¥ 300200.00 JPY /月 ¥ 3062041.00 JPY /年   ecs.i2.16xlarge 64 vCPU 512 GiB 10 Gbps 4000,000 PPS - local_ssd_pro windows ￥ 1042.4 JPY /時間 ¥ 300200.00 JPY /月 ¥ 3062041.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 9.1 JPY /時間 ¥ 2650.00 JPY /月 ¥ 27031.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 9.1 JPY /時間 ¥ 2650.00 JPY /月 ¥ 27031.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 18.2 JPY /時間 ¥ 5640.00 JPY /月 ¥ 57529.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 36.2 JPY /時間 ¥ 11620.00 JPY /月 ¥ 118525.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 36.2 JPY /時間 ¥ 11620.00 JPY /月 ¥ 118525.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 72.2 JPY /時間 ¥ 23460.00 JPY /月 ¥ 239293.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 72.2 JPY /時間 ¥ 23460.00 JPY /月 ¥ 239293.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 144.4 JPY /時間 ¥ 47270.00 JPY /月 ¥ 482155.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 144.4 JPY /時間 ¥ 47270.00 JPY /月 ¥ 482155.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - linux ￥ 288.6 JPY /時間 ¥ 94880.00 JPY /月 ¥ 967777.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - windows ￥ 288.6 JPY /時間 ¥ 94880.00 JPY /月 ¥ 967777.00 JPY /年   ecs.n1.tiny 1 vCPU 1 GiB - - - - linux ￥ 3.3 JPY /時間 ¥ 1050.00 JPY /月 ¥ 10711.00 JPY /年   ecs.n1.tiny 1 vCPU 1 GiB - - - - windows ￥ 3.3 JPY /時間 ¥ 1050.00 JPY /月 ¥ 10711.00 JPY /年   ecs.n1.small 1 vCPU 2 GiB - - - - linux ￥ 4.8 JPY /時間 ¥ 1490.00 JPY /月 ¥ 15199.00 JPY /年   ecs.n1.small 1 vCPU 2 GiB - - - - windows ￥ 4.8 JPY /時間 ¥ 1490.00 JPY /月 ¥ 15199.00 JPY /年   ecs.n1.medium 2 vCPU 4 GiB - - - - linux ￥ 11 JPY /時間 ¥ 3290.00 JPY /月 ¥ 33559.00 JPY /年   ecs.n1.medium 2 vCPU 4 GiB - - - - windows ￥ 11 JPY /時間 ¥ 3290.00 JPY /月 ¥ 33559.00 JPY /年   ecs.n1.large 4 vCPU 8 GiB - - - - linux ￥ 22.7 JPY /時間 ¥ 6920.00 JPY /月 ¥ 70585.00 JPY /年   ecs.n1.large 4 vCPU 8 GiB - - - - windows ￥ 22.7 JPY /時間 ¥ 6920.00 JPY /月 ¥ 70585.00 JPY /年   ecs.n1.xlarge 8 vCPU 16 GiB - - - - linux ￥ 45.1 JPY /時間 ¥ 14170.00 JPY /月 ¥ 144535.00 JPY /年   ecs.n1.xlarge 8 vCPU 16 GiB - - - - windows ￥ 45.1 JPY /時間 ¥ 14170.00 JPY /月 ¥ 144535.00 JPY /年   ecs.n1.3xlarge 16 vCPU 32 GiB - - - - linux ￥ 90.4 JPY /時間 ¥ 28670.00 JPY /月 ¥ 292435.00 JPY /年   ecs.n1.3xlarge 16 vCPU 32 GiB - - - - windows ￥ 90.4 JPY /時間 ¥ 28670.00 JPY /月 ¥ 292435.00 JPY /年   ecs.n1.7xlarge 32 vCPU 64 GiB - - - - linux ￥ 180.7 JPY /時間 ¥ 57670.00 JPY /月 ¥ 588235.00 JPY /年   ecs.n1.7xlarge 32 vCPU 64 GiB - - - - windows ￥ 180.7 JPY /時間 ¥ 57670.00 JPY /月 ¥ 588235.00 JPY /年   ecs.n2.small 1 vCPU 4 GiB - - - - linux ￥ 8.3 JPY /時間 ¥ 2380.00 JPY /月 ¥ 24277.00 JPY /年   ecs.n2.small 1 vCPU 4 GiB - - - - windows ￥ 8.3 JPY /時間 ¥ 2380.00 JPY /月 ¥ 24277.00 JPY /年   ecs.n2.medium 2 vCPU 8 GiB - - - - linux ￥ 17.2 JPY /時間 ¥ 5080.00 JPY /月 ¥ 51817.00 JPY /年   ecs.n2.medium 2 vCPU 8 GiB - - - - windows ￥ 17.2 JPY /時間 ¥ 5080.00 JPY /月 ¥ 51817.00 JPY /年   ecs.n2.large 4 vCPU 16 GiB - - - - linux ￥ 34.3 JPY /時間 ¥ 10480.00 JPY /月 ¥ 106897.00 JPY /年   ecs.n2.large 4 vCPU 16 GiB - - - - windows ￥ 34.3 JPY /時間 ¥ 10480.00 JPY /月 ¥ 106897.00 JPY /年   ecs.n2.xlarge 8 vCPU 32 GiB - - - - linux ￥ 68.5 JPY /時間 ¥ 21290.00 JPY /月 ¥ 217159.00 JPY /年   ecs.n2.xlarge 8 vCPU 32 GiB - - - - windows ￥ 68.5 JPY /時間 ¥ 21290.00 JPY /月 ¥ 217159.00 JPY /年   ecs.n2.3xlarge 16 vCPU 64 GiB - - - - linux ￥ 137 JPY /時間 ¥ 42900.00 JPY /月 ¥ 437581.00 JPY /年   ecs.n2.3xlarge 16 vCPU 64 GiB - - - - windows ￥ 137 JPY /時間 ¥ 42900.00 JPY /月 ¥ 437581.00 JPY /年   ecs.n2.7xlarge 32 vCPU 128 GiB - - - - linux ￥ 273.6 JPY /時間 ¥ 86120.00 JPY /月 ¥ 878425.00 JPY /年   ecs.n2.7xlarge 32 vCPU 128 GiB - - - - windows ￥ 273.6 JPY /時間 ¥ 86120.00 JPY /月 ¥ 878425.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 5.9 JPY /時間 ¥ 1730.00 JPY /月 ¥ 17647.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 5.9 JPY /時間 ¥ 1730.00 JPY /月 ¥ 17647.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 12 JPY /時間 ¥ 3680.00 JPY /月 ¥ 37537.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 12 JPY /時間 ¥ 3680.00 JPY /月 ¥ 37537.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 24 JPY /時間 ¥ 7710.00 JPY /月 ¥ 78643.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 24 JPY /時間 ¥ 7710.00 JPY /月 ¥ 78643.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 47.5 JPY /時間 ¥ 15640.00 JPY /月 ¥ 159529.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 47.5 JPY /時間 ¥ 15640.00 JPY /月 ¥ 159529.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 95.3 JPY /時間 ¥ 31630.00 JPY /月 ¥ 322627.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 95.3 JPY /時間 ¥ 31630.00 JPY /月 ¥ 322627.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - linux ￥ 190.3 JPY /時間 ¥ 63480.00 JPY /月 ¥ 647497.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - windows ￥ 190.3 JPY /時間 ¥ 63480.00 JPY /月 ¥ 647497.00 JPY /年   ecs.r5.16xlarge 64 vCPU 512 GiB 20 Gbps 4000,000 PPS - - linux ￥ 714.8 JPY /時間 ¥ 205860.00 JPY /月 ¥ 2099773.00 JPY /年   ecs.r5.16xlarge 64 vCPU 512 GiB 20 Gbps 4000,000 PPS - - windows ￥ 714.8 JPY /時間 ¥ 205860.00 JPY /月 ¥ 2099773.00 JPY /年   ecs.r5.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.r5.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.r5.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.r5.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.r5.2xlarge 8 vCPU 64 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.r5.2xlarge 8 vCPU 64 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.r5.4xlarge 16 vCPU 128 GiB 5 Gbps 1000,000 PPS - - linux ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.r5.4xlarge 16 vCPU 128 GiB 5 Gbps 1000,000 PPS - - windows ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.r5.6xlarge 24 vCPU 192 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 268.1 JPY /時間 ¥ 77200.00 JPY /月 ¥ 787441.00 JPY /年   ecs.r5.6xlarge 24 vCPU 192 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 268.1 JPY /時間 ¥ 77200.00 JPY /月 ¥ 787441.00 JPY /年   ecs.r5.8xlarge 32 vCPU 256 GiB 10 Gbps 2000,000 PPS - - linux ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.r5.8xlarge 32 vCPU 256 GiB 10 Gbps 2000,000 PPS - - windows ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 25.8 JPY /時間 ¥ 7410.00 JPY /月 ¥ 75583.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 30.4 JPY /時間 ¥ 8740.00 JPY /月 ¥ 89149.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 51.6 JPY /時間 ¥ 14810.00 JPY /月 ¥ 151063.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 60.5 JPY /時間 ¥ 17480.00 JPY /月 ¥ 178297.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 103 JPY /時間 ¥ 29620.00 JPY /月 ¥ 302125.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 121 JPY /時間 ¥ 34850.00 JPY /月 ¥ 355471.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - linux ￥ 205.8 JPY /時間 ¥ 59240.00 JPY /月 ¥ 604249.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - windows ￥ 242 JPY /時間 ¥ 69690.00 JPY /月 ¥ 710839.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - linux ￥ 411.5 JPY /時間 ¥ 118480.00 JPY /月 ¥ 1208497.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - windows ￥ 484.1 JPY /時間 ¥ 139380.00 JPY /月 ¥ 1421677.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - linux ￥ 742.1 JPY /時間 ¥ 213700.00 JPY /月 ¥ 2179741.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - windows ￥ 892.3 JPY /時間 ¥ 257030.00 JPY /月 ¥ 2621707.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - linux ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - windows ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - linux ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - windows ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - linux ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - windows ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - linux ￥ 625.5 JPY /時間 ¥ 180120.00 JPY /月 ¥ 1837225.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - windows ￥ 625.5 JPY /時間 ¥ 180120.00 JPY /月 ¥ 1837225.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 15.2 JPY /時間 ¥ 4370.00 JPY /月 ¥ 44575.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 15.2 JPY /時間 ¥ 4370.00 JPY /月 ¥ 44575.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 30.3 JPY /時間 ¥ 8740.00 JPY /月 ¥ 89149.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 30.3 JPY /時間 ¥ 8740.00 JPY /月 ¥ 89149.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 60.4 JPY /時間 ¥ 17370.00 JPY /月 ¥ 177175.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 60.4 JPY /時間 ¥ 17370.00 JPY /月 ¥ 177175.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - linux ￥ 120.6 JPY /時間 ¥ 34730.00 JPY /月 ¥ 354247.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - windows ￥ 120.6 JPY /時間 ¥ 34730.00 JPY /月 ¥ 354247.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - linux ￥ 241.2 JPY /時間 ¥ 69460.00 JPY /月 ¥ 708493.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - windows ￥ 241.2 JPY /時間 ¥ 69460.00 JPY /月 ¥ 708493.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 15.9 JPY /時間 ¥ 4560.00 JPY /月 ¥ 46513.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 15.9 JPY /時間 ¥ 4560.00 JPY /月 ¥ 46513.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 31.7 JPY /時間 ¥ 9120.00 JPY /月 ¥ 93025.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 31.7 JPY /時間 ¥ 9120.00 JPY /月 ¥ 93025.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 63.3 JPY /時間 ¥ 18230.00 JPY /月 ¥ 185947.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 63.3 JPY /時間 ¥ 18230.00 JPY /月 ¥ 185947.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 126.6 JPY /時間 ¥ 36460.00 JPY /月 ¥ 371893.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 126.6 JPY /時間 ¥ 36460.00 JPY /月 ¥ 371893.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 253.1 JPY /時間 ¥ 72890.00 JPY /月 ¥ 743479.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 253.1 JPY /時間 ¥ 72890.00 JPY /月 ¥ 743479.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 20.3 JPY /時間 ¥ 5820.00 JPY /月 ¥ 59365.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 22.6 JPY /時間 ¥ 6560.00 JPY /月 ¥ 66913.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 40.5 JPY /時間 ¥ 11630.00 JPY /月 ¥ 118627.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 44.8 JPY /時間 ¥ 13000.00 JPY /月 ¥ 132601.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 80.9 JPY /時間 ¥ 23260.00 JPY /月 ¥ 237253.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 89.7 JPY /時間 ¥ 25880.00 JPY /月 ¥ 263977.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - linux ￥ 161.6 JPY /時間 ¥ 46510.00 JPY /月 ¥ 474403.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - windows ￥ 179.3 JPY /時間 ¥ 51640.00 JPY /月 ¥ 526729.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - linux ￥ 323.1 JPY /時間 ¥ 93010.00 JPY /月 ¥ 948703.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - windows ￥ 358.6 JPY /時間 ¥ 103270.00 JPY /月 ¥ 1053355.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - linux ￥ 561.2 JPY /時間 ¥ 161690.00 JPY /月 ¥ 1649239.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - windows ￥ 561.2 JPY /時間 ¥ 161690.00 JPY /月 ¥ 1649239.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 34.9 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 34.9 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - linux ￥ 488.7 JPY /時間 ¥ 140720.00 JPY /月 ¥ 1435345.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - windows ￥ 488.7 JPY /時間 ¥ 140720.00 JPY /月 ¥ 1435345.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 5.8 JPY /時間 ¥ 1530.00 JPY /月 ¥ 15607.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 5.8 JPY /時間 ¥ 1530.00 JPY /月 ¥ 15607.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 10.4 JPY /時間 ¥ 3070.00 JPY /月 ¥ 31315.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 3070.00 JPY /月 ¥ 31315.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 20.7 JPY /時間 ¥ 6120.00 JPY /月 ¥ 62425.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 20.7 JPY /時間 ¥ 6120.00 JPY /月 ¥ 62425.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 42.6 JPY /時間 ¥ 12240.00 JPY /月 ¥ 124849.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 42.6 JPY /時間 ¥ 12240.00 JPY /月 ¥ 124849.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 6.9 JPY /時間 ¥ 2140.00 JPY /月 ¥ 21829.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 6.9 JPY /時間 ¥ 2140.00 JPY /月 ¥ 21829.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 15 JPY /時間 ¥ 4250.00 JPY /月 ¥ 43351.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 15 JPY /時間 ¥ 4250.00 JPY /月 ¥ 43351.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 29.9 JPY /時間 ¥ 8490.00 JPY /月 ¥ 86599.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 29.9 JPY /時間 ¥ 8490.00 JPY /月 ¥ 86599.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 58.7 JPY /時間 ¥ 16980.00 JPY /月 ¥ 173197.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 58.7 JPY /時間 ¥ 16980.00 JPY /月 ¥ 173197.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 11.5 JPY /時間 ¥ 3310.00 JPY /月 ¥ 33763.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 11.5 JPY /時間 ¥ 3310.00 JPY /月 ¥ 33763.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 23 JPY /時間 ¥ 6620.00 JPY /月 ¥ 67525.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 23 JPY /時間 ¥ 6620.00 JPY /月 ¥ 67525.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 46 JPY /時間 ¥ 13230.00 JPY /月 ¥ 134947.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 46 JPY /時間 ¥ 13230.00 JPY /月 ¥ 134947.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 1.2 JPY /時間 ¥ 430.00 JPY /月 ¥ 4387.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 1.2 JPY /時間 ¥ 430.00 JPY /月 ¥ 4387.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 5.8 JPY /時間 ¥ 1690.00 JPY /月 ¥ 17239.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 5.8 JPY /時間 ¥ 1690.00 JPY /月 ¥ 17239.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 3.5 JPY /時間 ¥ 850.00 JPY /月 ¥ 8671.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 3.5 JPY /時間 ¥ 850.00 JPY /月 ¥ 8671.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 10.4 JPY /時間 ¥ 2930.00 JPY /月 ¥ 29887.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 2930.00 JPY /月 ¥ 29887.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - linux ￥ 1.2 JPY /時間 ¥ 320.00 JPY /月 ¥ 3265.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 4.8 JPY /時間 ¥ 1380.00 JPY /月 ¥ 14077.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 4.8 JPY /時間 ¥ 1380.00 JPY /月 ¥ 14077.00 JPY /年    \ncn-hangzhou    instanceType vCPU  メモリ  イントラネット帯域幅 パケット転送速度  GPU/FPGA  ローカルストレージ  OS 従量課金 サブスクリプション サブスクリプション     ecs.c5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 15.9 JPY /時間 ¥ 4580.00 JPY /月 ¥ 46717.00 JPY /年   ecs.c5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 15.9 JPY /時間 ¥ 4580.00 JPY /月 ¥ 46717.00 JPY /年   ecs.c5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 31.8 JPY /時間 ¥ 9150.00 JPY /月 ¥ 93331.00 JPY /年   ecs.c5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 31.8 JPY /時間 ¥ 9150.00 JPY /月 ¥ 93331.00 JPY /年   ecs.c5.2xlarge 8 vCPU 16 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 63.6 JPY /時間 ¥ 18300.00 JPY /月 ¥ 186661.00 JPY /年   ecs.c5.2xlarge 8 vCPU 16 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 63.6 JPY /時間 ¥ 18300.00 JPY /月 ¥ 186661.00 JPY /年   ecs.c5.4xlarge 16 vCPU 32 GiB 5 Gbps 1000,000 PPS - - linux ￥ 127.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.c5.4xlarge 16 vCPU 32 GiB 5 Gbps 1000,000 PPS - - windows ￥ 127.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.c5.6xlarge 24 vCPU 48 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 190.6 JPY /時間 ¥ 54890.00 JPY /月 ¥ 559879.00 JPY /年   ecs.c5.6xlarge 24 vCPU 48 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 190.6 JPY /時間 ¥ 54890.00 JPY /月 ¥ 559879.00 JPY /年   ecs.c5.8xlarge 32 vCPU 64 GiB 10 Gbps 2000,000 PPS - - linux ￥ 254.1 JPY /時間 ¥ 73180.00 JPY /月 ¥ 746437.00 JPY /年   ecs.c5.8xlarge 32 vCPU 64 GiB 10 Gbps 2000,000 PPS - - windows ￥ 254.1 JPY /時間 ¥ 73180.00 JPY /月 ¥ 746437.00 JPY /年   ecs.c5.16xlarge 64 vCPU 128 GiB 20 Gbps 4000,000 PPS - - linux ￥ 508.2 JPY /時間 ¥ 146350.00 JPY /月 ¥ 1492771.00 JPY /年   ecs.c5.16xlarge 64 vCPU 128 GiB 20 Gbps 4000,000 PPS - - windows ￥ 508.2 JPY /時間 ¥ 146350.00 JPY /月 ¥ 1492771.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro linux ￥ 106.6 JPY /時間 ¥ 30710.00 JPY /月 ¥ 313243.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro windows ￥ 106.6 JPY /時間 ¥ 30710.00 JPY /月 ¥ 313243.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro linux ￥ 213.3 JPY /時間 ¥ 61420.00 JPY /月 ¥ 626485.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro windows ￥ 213.3 JPY /時間 ¥ 61420.00 JPY /月 ¥ 626485.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro linux ￥ 319.7 JPY /時間 ¥ 92120.00 JPY /月 ¥ 939625.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro windows ￥ 319.7 JPY /時間 ¥ 92120.00 JPY /月 ¥ 939625.00 JPY /年   ecs.e3.small 1 vCPU 8 GiB - - - - linux ￥ 14.5 JPY /時間 ¥ 4280.00 JPY /月 ¥ 43657.00 JPY /年   ecs.e3.small 1 vCPU 8 GiB - - - - windows ￥ 14.5 JPY /時間 ¥ 4280.00 JPY /月 ¥ 43657.00 JPY /年   ecs.e3.medium 2 vCPU 16 GiB - - - - linux ￥ 29.1 JPY /時間 ¥ 8900.00 JPY /月 ¥ 90781.00 JPY /年   ecs.e3.medium 2 vCPU 16 GiB - - - - windows ￥ 29.1 JPY /時間 ¥ 8900.00 JPY /月 ¥ 90781.00 JPY /年   ecs.e3.large 4 vCPU 32 GiB - - - - linux ￥ 58.1 JPY /時間 ¥ 18130.00 JPY /月 ¥ 184927.00 JPY /年   ecs.e3.large 4 vCPU 32 GiB - - - - windows ￥ 58.1 JPY /時間 ¥ 18130.00 JPY /月 ¥ 184927.00 JPY /年   ecs.e3.xlarge 8 vCPU 64 GiB - - - - linux ￥ 116.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.e3.xlarge 8 vCPU 64 GiB - - - - windows ￥ 116.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.e3.3xlarge 16 vCPU 128 GiB - - - - linux ￥ 231.8 JPY /時間 ¥ 73510.00 JPY /月 ¥ 749803.00 JPY /年   ecs.e3.3xlarge 16 vCPU 128 GiB - - - - windows ￥ 231.8 JPY /時間 ¥ 73510.00 JPY /月 ¥ 749803.00 JPY /年   ecs.g5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.g5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.g5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 35 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.g5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 35 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.g5.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.g5.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.g5.4xlarge 16 vCPU 64 GiB 5 Gbps 1000,000 PPS - - linux ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.g5.4xlarge 16 vCPU 64 GiB 5 Gbps 1000,000 PPS - - windows ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.g5.6xlarge 24 vCPU 96 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 209.5 JPY /時間 ¥ 60310.00 JPY /月 ¥ 615163.00 JPY /年   ecs.g5.6xlarge 24 vCPU 96 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 209.5 JPY /時間 ¥ 60310.00 JPY /月 ¥ 615163.00 JPY /年   ecs.g5.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS - - linux ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.g5.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS - - windows ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.g5.16xlarge 64 vCPU 256 GiB 20 Gbps 4000,000 PPS - - linux ￥ 558.5 JPY /時間 ¥ 160830.00 JPY /月 ¥ 1640467.00 JPY /年   ecs.g5.16xlarge 64 vCPU 256 GiB 20 Gbps 4000,000 PPS - - windows ￥ 558.5 JPY /時間 ¥ 160830.00 JPY /月 ¥ 1640467.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 251.9 JPY /時間 ¥ 72560.00 JPY /月 ¥ 740113.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 251.9 JPY /時間 ¥ 72560.00 JPY /月 ¥ 740113.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 503.9 JPY /時間 ¥ 145110.00 JPY /月 ¥ 1480123.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 503.9 JPY /時間 ¥ 145110.00 JPY /月 ¥ 1480123.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 303.3 JPY /時間 ¥ 87370.00 JPY /月 ¥ 891175.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 303.3 JPY /時間 ¥ 87370.00 JPY /月 ¥ 891175.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 606.7 JPY /時間 ¥ 174730.00 JPY /月 ¥ 1782247.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 606.7 JPY /時間 ¥ 174730.00 JPY /月 ¥ 1782247.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 1213.4 JPY /時間 ¥ 349460.00 JPY /月 ¥ 3564493.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 1213.4 JPY /時間 ¥ 349460.00 JPY /月 ¥ 3564493.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 2426.8 JPY /時間 ¥ 698910.00 JPY /月 ¥ 7128883.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 2426.8 JPY /時間 ¥ 698910.00 JPY /月 ¥ 7128883.00 JPY /年   ecs.gn6v-c8g1.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS NVIDIA V100 - linux ￥ 471 JPY /時間 ¥ 135630.00 JPY /月 ¥ 1383427.00 JPY /年   ecs.gn6v-c8g1.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS NVIDIA V100 - windows ￥ 471 JPY /時間 ¥ 135630.00 JPY /月 ¥ 1383427.00 JPY /年   ecs.gn6v-c8g1.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS NVIDIA V100 - linux ￥ 1883.7 JPY /時間 ¥ 542520.00 JPY /月 ¥ 5533705.00 JPY /年   ecs.gn6v-c8g1.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS NVIDIA V100 - windows ￥ 1883.7 JPY /時間 ¥ 542520.00 JPY /月 ¥ 5533705.00 JPY /年   ecs.gn6v-c8g1.16xlarge 64 vCPU 256 GiB 20 Gbps 2500,000 PPS NVIDIA V100 - linux ￥ 3767.4 JPY /時間 ¥ 1085040.00 JPY /月 ¥ 11067409.00 JPY /年   ecs.gn6v-c8g1.16xlarge 64 vCPU 256 GiB 20 Gbps 2500,000 PPS NVIDIA V100 - windows ￥ 3767.4 JPY /時間 ¥ 1085040.00 JPY /月 ¥ 11067409.00 JPY /年   ecs.hfc5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 19.1 JPY /時間 ¥ 5500.00 JPY /月 ¥ 56101.00 JPY /年   ecs.hfc5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 19.1 JPY /時間 ¥ 5500.00 JPY /月 ¥ 56101.00 JPY /年   ecs.hfc5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 38.2 JPY /時間 ¥ 10990.00 JPY /月 ¥ 112099.00 JPY /年   ecs.hfc5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 38.2 JPY /時間 ¥ 10990.00 JPY /月 ¥ 112099.00 JPY /年   ecs.hfc5.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 76.4 JPY /時間 ¥ 21980.00 JPY /月 ¥ 224197.00 JPY /年   ecs.hfc5.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 76.4 JPY /時間 ¥ 21980.00 JPY /月 ¥ 224197.00 JPY /年   ecs.hfc5.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 152.7 JPY /時間 ¥ 43960.00 JPY /月 ¥ 448393.00 JPY /年   ecs.hfc5.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 152.7 JPY /時間 ¥ 43960.00 JPY /月 ¥ 448393.00 JPY /年   ecs.hfc5.6xlarge 24 vCPU 48 GiB 4.5 Gbps 2000,000 PPS - - linux ￥ 229 JPY /時間 ¥ 65940.00 JPY /月 ¥ 672589.00 JPY /年   ecs.hfc5.6xlarge 24 vCPU 48 GiB 4.5 Gbps 2000,000 PPS - - windows ￥ 229 JPY /時間 ¥ 65940.00 JPY /月 ¥ 672589.00 JPY /年   ecs.hfc5.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 305.3 JPY /時間 ¥ 87920.00 JPY /月 ¥ 896785.00 JPY /年   ecs.hfc5.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 305.3 JPY /時間 ¥ 87920.00 JPY /月 ¥ 896785.00 JPY /年   ecs.hfg5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 21.1 JPY /時間 ¥ 6070.00 JPY /月 ¥ 61915.00 JPY /年   ecs.hfg5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 21.1 JPY /時間 ¥ 6070.00 JPY /月 ¥ 61915.00 JPY /年   ecs.hfg5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 42.2 JPY /時間 ¥ 12130.00 JPY /月 ¥ 123727.00 JPY /年   ecs.hfg5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 42.2 JPY /時間 ¥ 12130.00 JPY /月 ¥ 123727.00 JPY /年   ecs.hfg5.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 84.3 JPY /時間 ¥ 24260.00 JPY /月 ¥ 247453.00 JPY /年   ecs.hfg5.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 84.3 JPY /時間 ¥ 24260.00 JPY /月 ¥ 247453.00 JPY /年   ecs.hfg5.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 168.5 JPY /時間 ¥ 48520.00 JPY /月 ¥ 494905.00 JPY /年   ecs.hfg5.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 168.5 JPY /時間 ¥ 48520.00 JPY /月 ¥ 494905.00 JPY /年   ecs.hfg5.6xlarge 24 vCPU 96 GiB 4.5 Gbps 2000,000 PPS - - linux ￥ 252.7 JPY /時間 ¥ 72780.00 JPY /月 ¥ 742357.00 JPY /年   ecs.hfg5.6xlarge 24 vCPU 96 GiB 4.5 Gbps 2000,000 PPS - - windows ￥ 252.7 JPY /時間 ¥ 72780.00 JPY /月 ¥ 742357.00 JPY /年   ecs.hfg5.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 337 JPY /時間 ¥ 97030.00 JPY /月 ¥ 989707.00 JPY /年   ecs.hfg5.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 337 JPY /時間 ¥ 97030.00 JPY /月 ¥ 989707.00 JPY /年   ecs.hfg5.14xlarge 56 vCPU 160 GiB 10 Gbps 4000,000 PPS - - linux ￥ 589.6 JPY /時間 ¥ 169810.00 JPY /月 ¥ 1732063.00 JPY /年   ecs.hfg5.14xlarge 56 vCPU 160 GiB 10 Gbps 4000,000 PPS - - windows ￥ 589.6 JPY /時間 ¥ 169810.00 JPY /月 ¥ 1732063.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro linux ￥ 39.1 JPY /時間 ¥ 11380.00 JPY /月 ¥ 116077.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro windows ￥ 39.1 JPY /時間 ¥ 11380.00 JPY /月 ¥ 116077.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro linux ￥ 79.4 JPY /時間 ¥ 22750.00 JPY /月 ¥ 232051.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro windows ￥ 79.4 JPY /時間 ¥ 22750.00 JPY /月 ¥ 232051.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro linux ￥ 157.6 JPY /時間 ¥ 45500.00 JPY /月 ¥ 464101.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro windows ￥ 157.6 JPY /時間 ¥ 45500.00 JPY /月 ¥ 464101.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro linux ￥ 316.3 JPY /時間 ¥ 91000.00 JPY /月 ¥ 928201.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro windows ￥ 316.3 JPY /時間 ¥ 91000.00 JPY /月 ¥ 928201.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro linux ￥ 553.2 JPY /時間 ¥ 159240.00 JPY /月 ¥ 1624249.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro windows ￥ 553.2 JPY /時間 ¥ 159240.00 JPY /月 ¥ 1624249.00 JPY /年   ecs.i2.xlarge 4 vCPU 32 GiB 1 Gbps 500,000 PPS - local_ssd_pro linux ￥ 65.2 JPY /時間 ¥ 18770.00 JPY /月 ¥ 191455.00 JPY /年   ecs.i2.xlarge 4 vCPU 32 GiB 1 Gbps 500,000 PPS - local_ssd_pro windows ￥ 65.2 JPY /時間 ¥ 18770.00 JPY /月 ¥ 191455.00 JPY /年   ecs.i2.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - local_ssd_pro linux ￥ 130.3 JPY /時間 ¥ 37530.00 JPY /月 ¥ 382807.00 JPY /年   ecs.i2.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - local_ssd_pro windows ￥ 130.3 JPY /時間 ¥ 37530.00 JPY /月 ¥ 382807.00 JPY /年   ecs.i2.4xlarge 16 vCPU 128 GiB 3 Gbps 1500,000 PPS - local_ssd_pro linux ￥ 260.6 JPY /時間 ¥ 75050.00 JPY /月 ¥ 765511.00 JPY /年   ecs.i2.4xlarge 16 vCPU 128 GiB 3 Gbps 1500,000 PPS - local_ssd_pro windows ￥ 260.6 JPY /時間 ¥ 75050.00 JPY /月 ¥ 765511.00 JPY /年   ecs.i2.8xlarge 32 vCPU 256 GiB 6 Gbps 2000,000 PPS - local_ssd_pro linux ￥ 521.2 JPY /時間 ¥ 150100.00 JPY /月 ¥ 1531021.00 JPY /年   ecs.i2.8xlarge 32 vCPU 256 GiB 6 Gbps 2000,000 PPS - local_ssd_pro windows ￥ 521.2 JPY /時間 ¥ 150100.00 JPY /月 ¥ 1531021.00 JPY /年   ecs.i2.16xlarge 64 vCPU 512 GiB 10 Gbps 4000,000 PPS - local_ssd_pro linux ￥ 1042.4 JPY /時間 ¥ 300200.00 JPY /月 ¥ 3062041.00 JPY /年   ecs.i2.16xlarge 64 vCPU 512 GiB 10 Gbps 4000,000 PPS - local_ssd_pro windows ￥ 1042.4 JPY /時間 ¥ 300200.00 JPY /月 ¥ 3062041.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 9.1 JPY /時間 ¥ 2650.00 JPY /月 ¥ 27031.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 9.1 JPY /時間 ¥ 2650.00 JPY /月 ¥ 27031.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 18.2 JPY /時間 ¥ 5640.00 JPY /月 ¥ 57529.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 18.2 JPY /時間 ¥ 5640.00 JPY /月 ¥ 57529.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 36.2 JPY /時間 ¥ 11620.00 JPY /月 ¥ 118525.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 36.2 JPY /時間 ¥ 11620.00 JPY /月 ¥ 118525.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 72.2 JPY /時間 ¥ 23460.00 JPY /月 ¥ 239293.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 72.2 JPY /時間 ¥ 23460.00 JPY /月 ¥ 239293.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 144.4 JPY /時間 ¥ 47270.00 JPY /月 ¥ 482155.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 144.4 JPY /時間 ¥ 47270.00 JPY /月 ¥ 482155.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - linux ￥ 288.6 JPY /時間 ¥ 94880.00 JPY /月 ¥ 967777.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - windows ￥ 288.6 JPY /時間 ¥ 94880.00 JPY /月 ¥ 967777.00 JPY /年   ecs.n1.tiny 1 vCPU 1 GiB - - - - linux ￥ 3.3 JPY /時間 ¥ 1050.00 JPY /月 ¥ 10711.00 JPY /年   ecs.n1.small 1 vCPU 2 GiB - - - - linux ￥ 4.8 JPY /時間 ¥ 1490.00 JPY /月 ¥ 15199.00 JPY /年   ecs.n1.small 1 vCPU 2 GiB - - - - windows ￥ 4.8 JPY /時間 ¥ 1490.00 JPY /月 ¥ 15199.00 JPY /年   ecs.n1.medium 2 vCPU 4 GiB - - - - linux ￥ 11 JPY /時間 ¥ 3290.00 JPY /月 ¥ 33559.00 JPY /年   ecs.n1.medium 2 vCPU 4 GiB - - - - windows ￥ 11 JPY /時間 ¥ 3290.00 JPY /月 ¥ 33559.00 JPY /年   ecs.n1.large 4 vCPU 8 GiB - - - - linux ￥ 22.7 JPY /時間 ¥ 6920.00 JPY /月 ¥ 70585.00 JPY /年   ecs.n1.large 4 vCPU 8 GiB - - - - windows ￥ 22.7 JPY /時間 ¥ 6920.00 JPY /月 ¥ 70585.00 JPY /年   ecs.n1.xlarge 8 vCPU 16 GiB - - - - linux ￥ 45.1 JPY /時間 ¥ 14170.00 JPY /月 ¥ 144535.00 JPY /年   ecs.n1.xlarge 8 vCPU 16 GiB - - - - windows ￥ 45.1 JPY /時間 ¥ 14170.00 JPY /月 ¥ 144535.00 JPY /年   ecs.n1.3xlarge 16 vCPU 32 GiB - - - - linux ￥ 90.4 JPY /時間 ¥ 28670.00 JPY /月 ¥ 292435.00 JPY /年   ecs.n1.3xlarge 16 vCPU 32 GiB - - - - windows ￥ 90.4 JPY /時間 ¥ 28670.00 JPY /月 ¥ 292435.00 JPY /年   ecs.n1.7xlarge 32 vCPU 64 GiB - - - - linux ￥ 180.7 JPY /時間 ¥ 57670.00 JPY /月 ¥ 588235.00 JPY /年   ecs.n1.7xlarge 32 vCPU 64 GiB - - - - windows ￥ 180.7 JPY /時間 ¥ 57670.00 JPY /月 ¥ 588235.00 JPY /年   ecs.n2.small 1 vCPU 4 GiB - - - - linux ￥ 8.3 JPY /時間 ¥ 2380.00 JPY /月 ¥ 24277.00 JPY /年   ecs.n2.small 1 vCPU 4 GiB - - - - windows ￥ 8.3 JPY /時間 ¥ 2380.00 JPY /月 ¥ 24277.00 JPY /年   ecs.n2.medium 2 vCPU 8 GiB - - - - linux ￥ 17.2 JPY /時間 ¥ 5080.00 JPY /月 ¥ 51817.00 JPY /年   ecs.n2.medium 2 vCPU 8 GiB - - - - windows ￥ 17.2 JPY /時間 ¥ 5080.00 JPY /月 ¥ 51817.00 JPY /年   ecs.n2.large 4 vCPU 16 GiB - - - - linux ￥ 34.3 JPY /時間 ¥ 10480.00 JPY /月 ¥ 106897.00 JPY /年   ecs.n2.large 4 vCPU 16 GiB - - - - windows ￥ 34.3 JPY /時間 ¥ 10480.00 JPY /月 ¥ 106897.00 JPY /年   ecs.n2.xlarge 8 vCPU 32 GiB - - - - linux ￥ 68.5 JPY /時間 ¥ 21290.00 JPY /月 ¥ 217159.00 JPY /年   ecs.n2.xlarge 8 vCPU 32 GiB - - - - windows ￥ 68.5 JPY /時間 ¥ 21290.00 JPY /月 ¥ 217159.00 JPY /年   ecs.n2.3xlarge 16 vCPU 64 GiB - - - - linux ￥ 137 JPY /時間 ¥ 42900.00 JPY /月 ¥ 437581.00 JPY /年   ecs.n2.3xlarge 16 vCPU 64 GiB - - - - windows ￥ 137 JPY /時間 ¥ 42900.00 JPY /月 ¥ 437581.00 JPY /年   ecs.n2.7xlarge 32 vCPU 128 GiB - - - - linux ￥ 273.6 JPY /時間 ¥ 86120.00 JPY /月 ¥ 878425.00 JPY /年   ecs.n2.7xlarge 32 vCPU 128 GiB - - - - windows ￥ 273.6 JPY /時間 ¥ 86120.00 JPY /月 ¥ 878425.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 5.9 JPY /時間 ¥ 1730.00 JPY /月 ¥ 17647.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 5.9 JPY /時間 ¥ 1730.00 JPY /月 ¥ 17647.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 12 JPY /時間 ¥ 3680.00 JPY /月 ¥ 37537.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 12 JPY /時間 ¥ 3680.00 JPY /月 ¥ 37537.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 24 JPY /時間 ¥ 7710.00 JPY /月 ¥ 78643.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 24 JPY /時間 ¥ 7710.00 JPY /月 ¥ 78643.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 47.5 JPY /時間 ¥ 15640.00 JPY /月 ¥ 159529.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 47.5 JPY /時間 ¥ 15640.00 JPY /月 ¥ 159529.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 95.3 JPY /時間 ¥ 31630.00 JPY /月 ¥ 322627.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 95.3 JPY /時間 ¥ 31630.00 JPY /月 ¥ 322627.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - linux ￥ 190.3 JPY /時間 ¥ 63480.00 JPY /月 ¥ 647497.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - windows ￥ 190.3 JPY /時間 ¥ 63480.00 JPY /月 ¥ 647497.00 JPY /年   ecs.r5.16xlarge 64 vCPU 512 GiB 20 Gbps 4000,000 PPS - - linux ￥ 714.8 JPY /時間 ¥ 205860.00 JPY /月 ¥ 2099773.00 JPY /年   ecs.r5.16xlarge 64 vCPU 512 GiB 20 Gbps 4000,000 PPS - - windows ￥ 714.8 JPY /時間 ¥ 205860.00 JPY /月 ¥ 2099773.00 JPY /年   ecs.r5.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.r5.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.r5.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.r5.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.r5.2xlarge 8 vCPU 64 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.r5.2xlarge 8 vCPU 64 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.r5.4xlarge 16 vCPU 128 GiB 5 Gbps 1000,000 PPS - - linux ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.r5.4xlarge 16 vCPU 128 GiB 5 Gbps 1000,000 PPS - - windows ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.r5.6xlarge 24 vCPU 192 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 268.1 JPY /時間 ¥ 77200.00 JPY /月 ¥ 787441.00 JPY /年   ecs.r5.6xlarge 24 vCPU 192 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 268.1 JPY /時間 ¥ 77200.00 JPY /月 ¥ 787441.00 JPY /年   ecs.r5.8xlarge 32 vCPU 256 GiB 10 Gbps 2000,000 PPS - - linux ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.r5.8xlarge 32 vCPU 256 GiB 10 Gbps 2000,000 PPS - - windows ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.scch5.16xlarge 64 vCPU 192 GiB 10 Gbps 4500,000 PPS - - linux ￥ 742.9 JPY /時間 ¥ 213820.00 JPY /月 ¥ 2180965.00 JPY /年   ecs.scch5.16xlarge 64 vCPU 192 GiB 10 Gbps 4500,000 PPS - - windows ￥ 742.9 JPY /時間 ¥ 213820.00 JPY /月 ¥ 2180965.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 25.8 JPY /時間 ¥ 7410.00 JPY /月 ¥ 75583.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 30.4 JPY /時間 ¥ 8740.00 JPY /月 ¥ 89149.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 51.6 JPY /時間 ¥ 14810.00 JPY /月 ¥ 151063.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 60.5 JPY /時間 ¥ 17480.00 JPY /月 ¥ 178297.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 103 JPY /時間 ¥ 29620.00 JPY /月 ¥ 302125.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 121 JPY /時間 ¥ 34850.00 JPY /月 ¥ 355471.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - linux ￥ 205.8 JPY /時間 ¥ 59240.00 JPY /月 ¥ 604249.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - windows ￥ 242 JPY /時間 ¥ 69690.00 JPY /月 ¥ 710839.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - linux ￥ 411.5 JPY /時間 ¥ 118480.00 JPY /月 ¥ 1208497.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - windows ￥ 484.1 JPY /時間 ¥ 139380.00 JPY /月 ¥ 1421677.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - linux ￥ 742.1 JPY /時間 ¥ 213700.00 JPY /月 ¥ 2179741.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - windows ￥ 892.3 JPY /時間 ¥ 257030.00 JPY /月 ¥ 2621707.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - linux ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - windows ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - linux ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - windows ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - linux ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - windows ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - linux ￥ 625.5 JPY /時間 ¥ 180120.00 JPY /月 ¥ 1837225.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - windows ￥ 625.5 JPY /時間 ¥ 180120.00 JPY /月 ¥ 1837225.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 15.2 JPY /時間 ¥ 4370.00 JPY /月 ¥ 44575.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 15.2 JPY /時間 ¥ 4370.00 JPY /月 ¥ 44575.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 30.3 JPY /時間 ¥ 8740.00 JPY /月 ¥ 89149.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 30.3 JPY /時間 ¥ 8740.00 JPY /月 ¥ 89149.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 60.4 JPY /時間 ¥ 17370.00 JPY /月 ¥ 177175.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 60.4 JPY /時間 ¥ 17370.00 JPY /月 ¥ 177175.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - linux ￥ 120.6 JPY /時間 ¥ 34730.00 JPY /月 ¥ 354247.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - windows ￥ 120.6 JPY /時間 ¥ 34730.00 JPY /月 ¥ 354247.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - linux ￥ 241.2 JPY /時間 ¥ 69460.00 JPY /月 ¥ 708493.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - windows ￥ 241.2 JPY /時間 ¥ 69460.00 JPY /月 ¥ 708493.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 15.9 JPY /時間 ¥ 4560.00 JPY /月 ¥ 46513.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 15.9 JPY /時間 ¥ 4560.00 JPY /月 ¥ 46513.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 31.7 JPY /時間 ¥ 9120.00 JPY /月 ¥ 93025.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 31.7 JPY /時間 ¥ 9120.00 JPY /月 ¥ 93025.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 63.3 JPY /時間 ¥ 18230.00 JPY /月 ¥ 185947.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 63.3 JPY /時間 ¥ 18230.00 JPY /月 ¥ 185947.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 126.6 JPY /時間 ¥ 36460.00 JPY /月 ¥ 371893.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 126.6 JPY /時間 ¥ 36460.00 JPY /月 ¥ 371893.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 253.1 JPY /時間 ¥ 72890.00 JPY /月 ¥ 743479.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 253.1 JPY /時間 ¥ 72890.00 JPY /月 ¥ 743479.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 20.3 JPY /時間 ¥ 5820.00 JPY /月 ¥ 59365.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 22.6 JPY /時間 ¥ 6560.00 JPY /月 ¥ 66913.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 40.5 JPY /時間 ¥ 11630.00 JPY /月 ¥ 118627.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 44.8 JPY /時間 ¥ 13000.00 JPY /月 ¥ 132601.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 80.9 JPY /時間 ¥ 23260.00 JPY /月 ¥ 237253.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 89.7 JPY /時間 ¥ 25880.00 JPY /月 ¥ 263977.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - linux ￥ 161.6 JPY /時間 ¥ 46510.00 JPY /月 ¥ 474403.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - windows ￥ 179.3 JPY /時間 ¥ 51640.00 JPY /月 ¥ 526729.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - linux ￥ 323.1 JPY /時間 ¥ 93010.00 JPY /月 ¥ 948703.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - windows ￥ 358.6 JPY /時間 ¥ 103270.00 JPY /月 ¥ 1053355.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - linux ￥ 561.2 JPY /時間 ¥ 161690.00 JPY /月 ¥ 1649239.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - windows ￥ 561.2 JPY /時間 ¥ 161690.00 JPY /月 ¥ 1649239.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 34.9 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 34.9 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - linux ￥ 488.7 JPY /時間 ¥ 140720.00 JPY /月 ¥ 1435345.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - windows ￥ 488.7 JPY /時間 ¥ 140720.00 JPY /月 ¥ 1435345.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 5.8 JPY /時間 ¥ 1530.00 JPY /月 ¥ 15607.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 5.8 JPY /時間 ¥ 1530.00 JPY /月 ¥ 15607.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 10.4 JPY /時間 ¥ 3070.00 JPY /月 ¥ 31315.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 3070.00 JPY /月 ¥ 31315.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 20.7 JPY /時間 ¥ 6120.00 JPY /月 ¥ 62425.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 20.7 JPY /時間 ¥ 6120.00 JPY /月 ¥ 62425.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 42.6 JPY /時間 ¥ 12240.00 JPY /月 ¥ 124849.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 42.6 JPY /時間 ¥ 12240.00 JPY /月 ¥ 124849.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 6.9 JPY /時間 ¥ 2140.00 JPY /月 ¥ 21829.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 6.9 JPY /時間 ¥ 2140.00 JPY /月 ¥ 21829.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 15 JPY /時間 ¥ 4250.00 JPY /月 ¥ 43351.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 15 JPY /時間 ¥ 4250.00 JPY /月 ¥ 43351.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 29.9 JPY /時間 ¥ 8490.00 JPY /月 ¥ 86599.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 29.9 JPY /時間 ¥ 8490.00 JPY /月 ¥ 86599.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 58.7 JPY /時間 ¥ 16980.00 JPY /月 ¥ 173197.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 58.7 JPY /時間 ¥ 16980.00 JPY /月 ¥ 173197.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 11.5 JPY /時間 ¥ 3310.00 JPY /月 ¥ 33763.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 11.5 JPY /時間 ¥ 3310.00 JPY /月 ¥ 33763.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 23 JPY /時間 ¥ 6620.00 JPY /月 ¥ 67525.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 23 JPY /時間 ¥ 6620.00 JPY /月 ¥ 67525.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 46 JPY /時間 ¥ 13230.00 JPY /月 ¥ 134947.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 46 JPY /時間 ¥ 13230.00 JPY /月 ¥ 134947.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 1.2 JPY /時間 ¥ 430.00 JPY /月 ¥ 4387.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 1.2 JPY /時間 ¥ 430.00 JPY /月 ¥ 4387.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 5.8 JPY /時間 ¥ 1690.00 JPY /月 ¥ 17239.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 5.8 JPY /時間 ¥ 1690.00 JPY /月 ¥ 17239.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 3.5 JPY /時間 ¥ 850.00 JPY /月 ¥ 8671.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 3.5 JPY /時間 ¥ 850.00 JPY /月 ¥ 8671.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 10.4 JPY /時間 ¥ 2930.00 JPY /月 ¥ 29887.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 2930.00 JPY /月 ¥ 29887.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - linux ￥ 1.2 JPY /時間 ¥ 320.00 JPY /月 ¥ 3265.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - windows ￥ 1.2 JPY /時間 ¥ 320.00 JPY /月 ¥ 3265.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 4.8 JPY /時間 ¥ 1380.00 JPY /月 ¥ 14077.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 4.8 JPY /時間 ¥ 1380.00 JPY /月 ¥ 14077.00 JPY /年    \ncn-hongkon    instanceType vCPU  メモリ  イントラネット帯域幅 パケット転送速度  GPU/FPGA  ローカルストレージ  OS 従量課金 サブスクリプション サブスクリプション     ecs.c4.xlarge 4 vCPU 8 GiB 1.5 Gbps 200,000 PPS - - linux ￥ 25.3 JPY /時間 ¥ 13460.00 JPY /月 ¥ 137292.00 JPY /年   ecs.c4.xlarge 4 vCPU 8 GiB 1.5 Gbps 200,000 PPS - - windows ￥ 46 JPY /時間 ¥ 28980.00 JPY /月 ¥ 295596.00 JPY /年   ecs.c4.2xlarge 8 vCPU 16 GiB 3 Gbps 400,000 PPS - - linux ￥ 50.6 JPY /時間 ¥ 26910.00 JPY /月 ¥ 274482.00 JPY /年   ecs.c4.2xlarge 8 vCPU 16 GiB 3 Gbps 400,000 PPS - - windows ￥ 92 JPY /時間 ¥ 57960.00 JPY /月 ¥ 591192.00 JPY /年   ecs.c4.4xlarge 16 vCPU 32 GiB 6 Gbps 800,000 PPS - - linux ￥ 101.2 JPY /時間 ¥ 53820.00 JPY /月 ¥ 548964.00 JPY /年   ecs.c4.4xlarge 16 vCPU 32 GiB 6 Gbps 800,000 PPS - - windows ￥ 184 JPY /時間 ¥ 115920.00 JPY /月 ¥ 1182384.00 JPY /年   ecs.ce4.xlarge 4 vCPU 32 GiB 1.5 Gbps 200,000 PPS - - linux ￥ 43.6 JPY /時間 ¥ 20250.00 JPY /月 ¥ 206550.00 JPY /年   ecs.ce4.xlarge 4 vCPU 32 GiB 1.5 Gbps 200,000 PPS - - windows ￥ 68.7 JPY /時間 ¥ 38460.00 JPY /月 ¥ 392292.00 JPY /年   ecs.cm4.xlarge 4 vCPU 16 GiB 1.5 Gbps 200,000 PPS - - linux ￥ 33.4 JPY /時間 ¥ 15500.00 JPY /月 ¥ 158100.00 JPY /年   ecs.cm4.xlarge 4 vCPU 16 GiB 1.5 Gbps 200,000 PPS - - windows ￥ 58.7 JPY /時間 ¥ 33850.00 JPY /月 ¥ 345270.00 JPY /年   ecs.cm4.2xlarge 8 vCPU 32 GiB 3 Gbps 400,000 PPS - - linux ￥ 67.9 JPY /時間 ¥ 31000.00 JPY /月 ¥ 316200.00 JPY /年   ecs.cm4.2xlarge 8 vCPU 32 GiB 3 Gbps 400,000 PPS - - windows ￥ 118.5 JPY /時間 ¥ 67700.00 JPY /月 ¥ 690540.00 JPY /年   ecs.cm4.4xlarge 16 vCPU 64 GiB 6 Gbps 800,000 PPS - - linux ￥ 135.7 JPY /時間 ¥ 62000.00 JPY /月 ¥ 632400.00 JPY /年   ecs.cm4.4xlarge 16 vCPU 64 GiB 6 Gbps 800,000 PPS - - windows ￥ 236.9 JPY /時間 ¥ 135400.00 JPY /月 ¥ 1381080.00 JPY /年   ecs.cm4.6xlarge 24 vCPU 96 GiB 10 Gbps 1200,000 PPS - - linux ￥ 203.6 JPY /時間 ¥ 92990.00 JPY /月 ¥ 948498.00 JPY /年   ecs.cm4.6xlarge 24 vCPU 96 GiB 10 Gbps 1200,000 PPS - - windows ￥ 355.4 JPY /時間 ¥ 203100.00 JPY /月 ¥ 2071620.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro linux ￥ 88.6 JPY /時間 ¥ 42550.00 JPY /月 ¥ 434010.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro windows ￥ 103.2 JPY /時間 ¥ 61940.00 JPY /月 ¥ 631788.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro linux ￥ 177.3 JPY /時間 ¥ 85100.00 JPY /月 ¥ 868020.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro windows ￥ 206.5 JPY /時間 ¥ 123870.00 JPY /月 ¥ 1263474.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro linux ￥ 265.9 JPY /時間 ¥ 127650.00 JPY /月 ¥ 1302030.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro windows ￥ 309.6 JPY /時間 ¥ 185810.00 JPY /月 ¥ 1895262.00 JPY /年   ecs.d1.8xlarge 32 vCPU 128 GiB 10 Gbps 1000,000 PPS - local_hdd_pro linux ￥ 354.6 JPY /時間 ¥ 170200.00 JPY /月 ¥ 1736040.00 JPY /年   ecs.d1.8xlarge 32 vCPU 128 GiB 10 Gbps 1000,000 PPS - local_hdd_pro windows ￥ 412.9 JPY /時間 ¥ 247750.00 JPY /月 ¥ 2527050.00 JPY /年   ecs.d1.14xlarge 56 vCPU 224 GiB 17 Gbps 1800,000 PPS - local_hdd_pro linux ￥ 620.5 JPY /時間 ¥ 297850.00 JPY /月 ¥ 3038070.00 JPY /年   ecs.d1.14xlarge 56 vCPU 224 GiB 17 Gbps 1800,000 PPS - local_hdd_pro windows ￥ 722.6 JPY /時間 ¥ 433550.00 JPY /月 ¥ 4422210.00 JPY /年   ecs.e3.small 1 vCPU 8 GiB - - - - linux ￥ 9.1 JPY /時間 ¥ 4250.00 JPY /月 ¥ 43350.00 JPY /年   ecs.e3.small 1 vCPU 8 GiB - - - - windows ￥ 14.3 JPY /時間 ¥ 7650.00 JPY /月 ¥ 78030.00 JPY /年   ecs.e3.medium 2 vCPU 16 GiB - - - - linux ￥ 18.2 JPY /時間 ¥ 8500.00 JPY /月 ¥ 86700.00 JPY /年   ecs.e3.medium 2 vCPU 16 GiB - - - - windows ￥ 28.7 JPY /時間 ¥ 15280.00 JPY /月 ¥ 155856.00 JPY /年   ecs.e3.large 4 vCPU 32 GiB - - - - linux ￥ 36.4 JPY /時間 ¥ 16870.00 JPY /月 ¥ 172074.00 JPY /年   ecs.e3.large 4 vCPU 32 GiB - - - - windows ￥ 57.3 JPY /時間 ¥ 30550.00 JPY /月 ¥ 311610.00 JPY /年   ecs.e3.xlarge 8 vCPU 64 GiB - - - - linux ￥ 72.8 JPY /時間 ¥ 33810.00 JPY /月 ¥ 344862.00 JPY /年   ecs.e3.xlarge 8 vCPU 64 GiB - - - - windows ￥ 114.7 JPY /時間 ¥ 61090.00 JPY /月 ¥ 623118.00 JPY /年   ecs.e3.3xlarge 16 vCPU 128 GiB - - - - linux ￥ 145.8 JPY /時間 ¥ 67370.00 JPY /月 ¥ 687174.00 JPY /年   ecs.e3.3xlarge 16 vCPU 128 GiB - - - - windows ￥ 229.5 JPY /時間 ¥ 122170.00 JPY /月 ¥ 1246134.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 197.4 JPY /時間 ¥ 94780.00 JPY /月 ¥ 966756.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 256.7 JPY /時間 ¥ 123210.00 JPY /月 ¥ 1256742.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 394.8 JPY /時間 ¥ 189560.00 JPY /月 ¥ 1933512.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 513.4 JPY /時間 ¥ 246420.00 JPY /月 ¥ 2513484.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 237.8 JPY /時間 ¥ 114130.00 JPY /月 ¥ 1164126.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 309.1 JPY /時間 ¥ 148360.00 JPY /月 ¥ 1513272.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 475.5 JPY /時間 ¥ 228250.00 JPY /月 ¥ 2328150.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 618.2 JPY /時間 ¥ 296720.00 JPY /月 ¥ 3026544.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro linux ￥ 29.5 JPY /時間 ¥ 14150.00 JPY /月 ¥ 144330.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro windows ￥ 49.6 JPY /時間 ¥ 29770.00 JPY /月 ¥ 303654.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro linux ￥ 59 JPY /時間 ¥ 28320.00 JPY /月 ¥ 288864.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro windows ￥ 99.2 JPY /時間 ¥ 59530.00 JPY /月 ¥ 607206.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro linux ￥ 118 JPY /時間 ¥ 56640.00 JPY /月 ¥ 577728.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro windows ￥ 198.4 JPY /時間 ¥ 119050.00 JPY /月 ¥ 1214310.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro linux ￥ 235.9 JPY /時間 ¥ 113260.00 JPY /月 ¥ 1155252.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro windows ￥ 396.8 JPY /時間 ¥ 238100.00 JPY /月 ¥ 2428620.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro linux ￥ 410.7 JPY /時間 ¥ 197120.00 JPY /月 ¥ 2010624.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro windows ￥ 694.4 JPY /時間 ¥ 416680.00 JPY /月 ¥ 4250136.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 6 JPY /時間 ¥ 3140.00 JPY /月 ¥ 32028.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 6 JPY /時間 ¥ 5330.00 JPY /月 ¥ 54366.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 12.1 JPY /時間 ¥ 6270.00 JPY /月 ¥ 63954.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 12.1 JPY /時間 ¥ 10660.00 JPY /月 ¥ 108732.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 24.2 JPY /時間 ¥ 12470.00 JPY /月 ¥ 127194.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 24.2 JPY /時間 ¥ 21190.00 JPY /月 ¥ 216138.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 48.6 JPY /時間 ¥ 25010.00 JPY /月 ¥ 255102.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 48.6 JPY /時間 ¥ 42510.00 JPY /月 ¥ 433602.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 97.2 JPY /時間 ¥ 50090.00 JPY /月 ¥ 510918.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 97.2 JPY /時間 ¥ 85150.00 JPY /月 ¥ 868530.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - linux ￥ 194.4 JPY /時間 ¥ 100170.00 JPY /月 ¥ 1021734.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - windows ￥ 194.4 JPY /時間 ¥ 170290.00 JPY /月 ¥ 1736958.00 JPY /年   ecs.n1.tiny 1 vCPU 1 GiB - - - - linux ￥ 1.8 JPY /時間 ¥ 1000.00 JPY /月 ¥ 10200.00 JPY /年   ecs.n1.tiny 1 vCPU 1 GiB - - - - windows ￥ 2.3 JPY /時間 ¥ 1380.00 JPY /月 ¥ 14076.00 JPY /年   ecs.n1.small 1 vCPU 2 GiB - - - - linux ￥ 3.5 JPY /時間 ¥ 1980.00 JPY /月 ¥ 20196.00 JPY /年   ecs.n1.small 1 vCPU 2 GiB - - - - windows ￥ 4.5 JPY /時間 ¥ 2730.00 JPY /月 ¥ 27846.00 JPY /年   ecs.n1.medium 2 vCPU 4 GiB - - - - linux ￥ 6.9 JPY /時間 ¥ 3950.00 JPY /月 ¥ 40290.00 JPY /年   ecs.n1.medium 2 vCPU 4 GiB - - - - windows ￥ 9 JPY /時間 ¥ 5460.00 JPY /月 ¥ 55692.00 JPY /年   ecs.n1.large 4 vCPU 8 GiB - - - - linux ￥ 17.8 JPY /時間 ¥ 9130.00 JPY /月 ¥ 93126.00 JPY /年   ecs.n1.large 4 vCPU 8 GiB - - - - windows ￥ 23.1 JPY /時間 ¥ 11900.00 JPY /月 ¥ 121380.00 JPY /年   ecs.n1.xlarge 8 vCPU 16 GiB - - - - linux ￥ 35.5 JPY /時間 ¥ 18260.00 JPY /月 ¥ 186252.00 JPY /年   ecs.n1.xlarge 8 vCPU 16 GiB - - - - windows ￥ 46.1 JPY /時間 ¥ 23750.00 JPY /月 ¥ 242250.00 JPY /年   ecs.n1.3xlarge 16 vCPU 32 GiB - - - - linux ￥ 70.9 JPY /時間 ¥ 36520.00 JPY /月 ¥ 372504.00 JPY /年   ecs.n1.3xlarge 16 vCPU 32 GiB - - - - windows ￥ 92.2 JPY /時間 ¥ 47480.00 JPY /月 ¥ 484296.00 JPY /年   ecs.n1.7xlarge 32 vCPU 64 GiB - - - - linux ￥ 141.7 JPY /時間 ¥ 73030.00 JPY /月 ¥ 744906.00 JPY /年   ecs.n1.7xlarge 32 vCPU 64 GiB - - - - windows ￥ 184.3 JPY /時間 ¥ 94960.00 JPY /月 ¥ 968592.00 JPY /年   ecs.n2.small 1 vCPU 4 GiB - - - - linux ￥ 5.8 JPY /時間 ¥ 2990.00 JPY /月 ¥ 30498.00 JPY /年   ecs.n2.small 1 vCPU 4 GiB - - - - windows ￥ 8.8 JPY /時間 ¥ 4490.00 JPY /月 ¥ 45798.00 JPY /年   ecs.n2.medium 2 vCPU 8 GiB - - - - linux ￥ 11.5 JPY /時間 ¥ 5980.00 JPY /月 ¥ 60996.00 JPY /年   ecs.n2.medium 2 vCPU 8 GiB - - - - windows ￥ 17.4 JPY /時間 ¥ 8960.00 JPY /月 ¥ 91392.00 JPY /年   ecs.n2.large 4 vCPU 16 GiB - - - - linux ￥ 23 JPY /時間 ¥ 11870.00 JPY /月 ¥ 121074.00 JPY /年   ecs.n2.large 4 vCPU 16 GiB - - - - windows ￥ 34.8 JPY /時間 ¥ 17900.00 JPY /月 ¥ 182580.00 JPY /年   ecs.n2.xlarge 8 vCPU 32 GiB - - - - linux ￥ 46.3 JPY /時間 ¥ 23820.00 JPY /月 ¥ 242964.00 JPY /年   ecs.n2.xlarge 8 vCPU 32 GiB - - - - windows ￥ 69.6 JPY /時間 ¥ 35790.00 JPY /月 ¥ 365058.00 JPY /年   ecs.n2.3xlarge 16 vCPU 64 GiB - - - - linux ￥ 92.6 JPY /時間 ¥ 47700.00 JPY /月 ¥ 486540.00 JPY /年   ecs.n2.3xlarge 16 vCPU 64 GiB - - - - windows ￥ 139 JPY /時間 ¥ 71560.00 JPY /月 ¥ 729912.00 JPY /年   ecs.n2.7xlarge 32 vCPU 128 GiB - - - - linux ￥ 185.2 JPY /時間 ¥ 95410.00 JPY /月 ¥ 973182.00 JPY /年   ecs.n2.7xlarge 32 vCPU 128 GiB - - - - windows ￥ 277.8 JPY /時間 ¥ 143110.00 JPY /月 ¥ 1459722.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 3.5 JPY /時間 ¥ 1980.00 JPY /月 ¥ 20196.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 3.5 JPY /時間 ¥ 2730.00 JPY /月 ¥ 27846.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 6.9 JPY /時間 ¥ 3950.00 JPY /月 ¥ 40290.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 6.9 JPY /時間 ¥ 5460.00 JPY /月 ¥ 55692.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 19.5 JPY /時間 ¥ 10030.00 JPY /月 ¥ 102306.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 19.5 JPY /時間 ¥ 14540.00 JPY /月 ¥ 148308.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 38.9 JPY /時間 ¥ 20050.00 JPY /月 ¥ 204510.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 38.9 JPY /時間 ¥ 29070.00 JPY /月 ¥ 296514.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 77.8 JPY /時間 ¥ 40090.00 JPY /月 ¥ 408918.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 77.8 JPY /時間 ¥ 58130.00 JPY /月 ¥ 592926.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - linux ￥ 155.5 JPY /時間 ¥ 80170.00 JPY /月 ¥ 817734.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - windows ￥ 155.5 JPY /時間 ¥ 116240.00 JPY /月 ¥ 1185648.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 18.2 JPY /時間 ¥ 8500.00 JPY /月 ¥ 86700.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 28.7 JPY /時間 ¥ 16030.00 JPY /月 ¥ 163506.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 36.4 JPY /時間 ¥ 16870.00 JPY /月 ¥ 172074.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 57.3 JPY /時間 ¥ 32050.00 JPY /月 ¥ 326910.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 72.8 JPY /時間 ¥ 33810.00 JPY /月 ¥ 344862.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 114.7 JPY /時間 ¥ 64100.00 JPY /月 ¥ 653820.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - linux ￥ 145.8 JPY /時間 ¥ 67370.00 JPY /月 ¥ 687174.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - windows ￥ 229.5 JPY /時間 ¥ 128190.00 JPY /月 ¥ 1307538.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - linux ￥ 291.5 JPY /時間 ¥ 134620.00 JPY /月 ¥ 1373124.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - windows ￥ 459 JPY /時間 ¥ 256380.00 JPY /月 ¥ 2615076.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - linux ￥ 537.3 JPY /時間 ¥ 250520.00 JPY /月 ¥ 2555304.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 19 JPY /時間 ¥ 8920.00 JPY /月 ¥ 90984.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 30.1 JPY /時間 ¥ 16830.00 JPY /月 ¥ 171666.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 38.1 JPY /時間 ¥ 17720.00 JPY /月 ¥ 180744.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 60.1 JPY /時間 ¥ 33650.00 JPY /月 ¥ 343230.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - linux ￥ 76.4 JPY /時間 ¥ 35500.00 JPY /月 ¥ 362100.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - windows ￥ 120.3 JPY /時間 ¥ 67300.00 JPY /月 ¥ 686460.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - linux ￥ 153 JPY /時間 ¥ 70740.00 JPY /月 ¥ 721548.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - windows ￥ 240.9 JPY /時間 ¥ 134600.00 JPY /月 ¥ 1372920.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - linux ￥ 305.9 JPY /時間 ¥ 141350.00 JPY /月 ¥ 1441770.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - windows ￥ 481.9 JPY /時間 ¥ 269200.00 JPY /月 ¥ 2745840.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - linux ￥ 564.1 JPY /時間 ¥ 263050.00 JPY /月 ¥ 2683110.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - windows ￥ 888.5 JPY /時間 ¥ 496320.00 JPY /月 ¥ 5062464.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 10.9 JPY /時間 ¥ 5640.00 JPY /月 ¥ 57528.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 19.4 JPY /時間 ¥ 12190.00 JPY /月 ¥ 124338.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 21.8 JPY /時間 ¥ 11280.00 JPY /月 ¥ 115056.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 38.7 JPY /時間 ¥ 24150.00 JPY /月 ¥ 246330.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 43.6 JPY /時間 ¥ 22480.00 JPY /月 ¥ 229296.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 77.2 JPY /時間 ¥ 48420.00 JPY /月 ¥ 493884.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - linux ￥ 87 JPY /時間 ¥ 44960.00 JPY /月 ¥ 458592.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - windows ￥ 154.3 JPY /時間 ¥ 96950.00 JPY /月 ¥ 988890.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - linux ￥ 173.9 JPY /時間 ¥ 89920.00 JPY /月 ¥ 917184.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - windows ￥ 325.5 JPY /時間 ¥ 206430.00 JPY /月 ¥ 2105586.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 11.3 JPY /時間 ¥ 5920.00 JPY /月 ¥ 60384.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 20.3 JPY /時間 ¥ 12800.00 JPY /月 ¥ 130560.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 22.8 JPY /時間 ¥ 11840.00 JPY /月 ¥ 120768.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 40.5 JPY /時間 ¥ 25360.00 JPY /月 ¥ 258672.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 45.7 JPY /時間 ¥ 23610.00 JPY /月 ¥ 240822.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 81 JPY /時間 ¥ 50840.00 JPY /月 ¥ 518568.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 91.2 JPY /時間 ¥ 47210.00 JPY /月 ¥ 481542.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 162 JPY /時間 ¥ 101800.00 JPY /月 ¥ 1038360.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 182.6 JPY /時間 ¥ 94410.00 JPY /月 ¥ 962982.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 341.7 JPY /時間 ¥ 216750.00 JPY /月 ¥ 2210850.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 14.2 JPY /時間 ¥ 6460.00 JPY /月 ¥ 65892.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 24.7 JPY /時間 ¥ 14110.00 JPY /月 ¥ 143922.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 28.5 JPY /時間 ¥ 12920.00 JPY /月 ¥ 131784.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 49.4 JPY /時間 ¥ 28210.00 JPY /月 ¥ 287742.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 57 JPY /時間 ¥ 25840.00 JPY /月 ¥ 263568.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 98.8 JPY /時間 ¥ 56420.00 JPY /月 ¥ 575484.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - linux ￥ 113.9 JPY /時間 ¥ 51670.00 JPY /月 ¥ 527034.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - windows ￥ 197.6 JPY /時間 ¥ 112830.00 JPY /月 ¥ 1150866.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - linux ￥ 227.7 JPY /時間 ¥ 103330.00 JPY /月 ¥ 1053966.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - windows ￥ 395.3 JPY /時間 ¥ 225670.00 JPY /月 ¥ 2301834.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - linux ￥ 398.5 JPY /時間 ¥ 180820.00 JPY /月 ¥ 1844364.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - windows ￥ 691.8 JPY /時間 ¥ 394910.00 JPY /月 ¥ 4028082.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 14.9 JPY /時間 ¥ 6780.00 JPY /月 ¥ 69156.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 25.8 JPY /時間 ¥ 14810.00 JPY /月 ¥ 151062.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 29.8 JPY /時間 ¥ 13560.00 JPY /月 ¥ 138312.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 51.8 JPY /時間 ¥ 29620.00 JPY /月 ¥ 302124.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 59.7 JPY /時間 ¥ 27130.00 JPY /月 ¥ 276726.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 103.7 JPY /時間 ¥ 59240.00 JPY /月 ¥ 604248.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 119.5 JPY /時間 ¥ 54250.00 JPY /月 ¥ 553350.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 207.4 JPY /時間 ¥ 118480.00 JPY /月 ¥ 1208496.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 239.1 JPY /時間 ¥ 108490.00 JPY /月 ¥ 1106598.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 415 JPY /時間 ¥ 236950.00 JPY /月 ¥ 2416890.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - linux ￥ 418.4 JPY /時間 ¥ 189860.00 JPY /月 ¥ 1936572.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - windows ￥ 726.3 JPY /時間 ¥ 414650.00 JPY /月 ¥ 4229430.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 3.8 JPY /時間 ¥ 1680.00 JPY /月 ¥ 17136.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 5 JPY /時間 ¥ 2510.00 JPY /月 ¥ 25602.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 7.5 JPY /時間 ¥ 3350.00 JPY /月 ¥ 34170.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 9.9 JPY /時間 ¥ 5000.00 JPY /月 ¥ 51000.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 15 JPY /時間 ¥ 6690.00 JPY /月 ¥ 68238.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 19.7 JPY /時間 ¥ 10000.00 JPY /月 ¥ 102000.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 29.8 JPY /時間 ¥ 13370.00 JPY /月 ¥ 136374.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 39.3 JPY /時間 ¥ 19990.00 JPY /月 ¥ 203898.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 5.2 JPY /時間 ¥ 2320.00 JPY /月 ¥ 23664.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 6.8 JPY /時間 ¥ 3470.00 JPY /月 ¥ 35394.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 10.4 JPY /時間 ¥ 4640.00 JPY /月 ¥ 47328.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 13.6 JPY /時間 ¥ 6930.00 JPY /月 ¥ 70686.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 20.6 JPY /時間 ¥ 9270.00 JPY /月 ¥ 94554.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 27.2 JPY /時間 ¥ 13860.00 JPY /月 ¥ 141372.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 41.2 JPY /時間 ¥ 18530.00 JPY /月 ¥ 189006.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 54.3 JPY /時間 ¥ 27720.00 JPY /月 ¥ 282744.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 8.8 JPY /時間 ¥ 3600.00 JPY /月 ¥ 36720.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 9.9 JPY /時間 ¥ 4980.00 JPY /月 ¥ 50796.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 17.5 JPY /時間 ¥ 7190.00 JPY /月 ¥ 73338.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 19.7 JPY /時間 ¥ 9960.00 JPY /月 ¥ 101592.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 35 JPY /時間 ¥ 14370.00 JPY /月 ¥ 146574.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 39.4 JPY /時間 ¥ 19910.00 JPY /月 ¥ 203082.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 1.5 JPY /時間 ¥ 620.00 JPY /月 ¥ 6324.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 2 JPY /時間 ¥ 930.00 JPY /月 ¥ 9486.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 4.5 JPY /時間 ¥ 2030.00 JPY /月 ¥ 20706.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 6 JPY /時間 ¥ 3040.00 JPY /月 ¥ 31008.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 2.3 JPY /時間 ¥ 1020.00 JPY /月 ¥ 10404.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 3 JPY /時間 ¥ 1530.00 JPY /月 ¥ 15606.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 6.7 JPY /時間 ¥ 3020.00 JPY /月 ¥ 30804.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 8.4 JPY /時間 ¥ 4180.00 JPY /月 ¥ 42636.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - linux ￥ 0.9 JPY /時間 ¥ 330.00 JPY /月 ¥ 3366.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - windows ￥ 1.1 JPY /時間 ¥ 490.00 JPY /月 ¥ 4998.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 1.8 JPY /時間 ¥ 1000.00 JPY /月 ¥ 10200.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 1.8 JPY /時間 ¥ 1380.00 JPY /月 ¥ 14076.00 JPY /年    \ncn-huhehaote    instanceType vCPU  メモリ  イントラネット帯域幅 パケット転送速度  GPU/FPGA  ローカルストレージ  OS 従量課金 サブスクリプション サブスクリプション     ecs.c5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 15.9 JPY /時間 ¥ 4580.00 JPY /月 ¥ 46717.00 JPY /年   ecs.c5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 15.9 JPY /時間 ¥ 4580.00 JPY /月 ¥ 46717.00 JPY /年   ecs.c5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 31.8 JPY /時間 ¥ 9150.00 JPY /月 ¥ 93331.00 JPY /年   ecs.c5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 31.8 JPY /時間 ¥ 9150.00 JPY /月 ¥ 93331.00 JPY /年   ecs.c5.2xlarge 8 vCPU 16 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 63.6 JPY /時間 ¥ 18300.00 JPY /月 ¥ 186661.00 JPY /年   ecs.c5.2xlarge 8 vCPU 16 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 63.6 JPY /時間 ¥ 18300.00 JPY /月 ¥ 186661.00 JPY /年   ecs.c5.4xlarge 16 vCPU 32 GiB 5 Gbps 1000,000 PPS - - linux ￥ 127.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.c5.4xlarge 16 vCPU 32 GiB 5 Gbps 1000,000 PPS - - windows ￥ 127.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.c5.6xlarge 24 vCPU 48 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 190.6 JPY /時間 ¥ 54890.00 JPY /月 ¥ 559879.00 JPY /年   ecs.c5.6xlarge 24 vCPU 48 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 190.6 JPY /時間 ¥ 54890.00 JPY /月 ¥ 559879.00 JPY /年   ecs.c5.8xlarge 32 vCPU 64 GiB 10 Gbps 2000,000 PPS - - linux ￥ 254.1 JPY /時間 ¥ 73180.00 JPY /月 ¥ 746437.00 JPY /年   ecs.c5.8xlarge 32 vCPU 64 GiB 10 Gbps 2000,000 PPS - - windows ￥ 254.1 JPY /時間 ¥ 73180.00 JPY /月 ¥ 746437.00 JPY /年   ecs.c5.16xlarge 64 vCPU 128 GiB 20 Gbps 4000,000 PPS - - linux ￥ 508.2 JPY /時間 ¥ 146350.00 JPY /月 ¥ 1492771.00 JPY /年   ecs.c5.16xlarge 64 vCPU 128 GiB 20 Gbps 4000,000 PPS - - windows ￥ 508.2 JPY /時間 ¥ 146350.00 JPY /月 ¥ 1492771.00 JPY /年   ecs.g5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.g5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.g5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 35 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.g5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 35 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.g5.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.g5.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.g5.4xlarge 16 vCPU 64 GiB 5 Gbps 1000,000 PPS - - linux ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.g5.4xlarge 16 vCPU 64 GiB 5 Gbps 1000,000 PPS - - windows ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.g5.6xlarge 24 vCPU 96 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 209.5 JPY /時間 ¥ 60310.00 JPY /月 ¥ 615163.00 JPY /年   ecs.g5.6xlarge 24 vCPU 96 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 209.5 JPY /時間 ¥ 60310.00 JPY /月 ¥ 615163.00 JPY /年   ecs.g5.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS - - linux ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.g5.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS - - windows ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.g5.16xlarge 64 vCPU 256 GiB 20 Gbps 4000,000 PPS - - linux ￥ 558.5 JPY /時間 ¥ 160830.00 JPY /月 ¥ 1640467.00 JPY /年   ecs.g5.16xlarge 64 vCPU 256 GiB 20 Gbps 4000,000 PPS - - windows ￥ 558.5 JPY /時間 ¥ 160830.00 JPY /月 ¥ 1640467.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 303.3 JPY /時間 ¥ 87370.00 JPY /月 ¥ 891175.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 303.3 JPY /時間 ¥ 87370.00 JPY /月 ¥ 891175.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 606.7 JPY /時間 ¥ 174730.00 JPY /月 ¥ 1782247.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 606.7 JPY /時間 ¥ 174730.00 JPY /月 ¥ 1782247.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 1213.4 JPY /時間 ¥ 349460.00 JPY /月 ¥ 3564493.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 1213.4 JPY /時間 ¥ 349460.00 JPY /月 ¥ 3564493.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 2426.8 JPY /時間 ¥ 698910.00 JPY /月 ¥ 7128883.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 2426.8 JPY /時間 ¥ 698910.00 JPY /月 ¥ 7128883.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 9.1 JPY /時間 ¥ 2650.00 JPY /月 ¥ 27031.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 9.1 JPY /時間 ¥ 2650.00 JPY /月 ¥ 27031.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 5.9 JPY /時間 ¥ 1730.00 JPY /月 ¥ 17647.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 5.9 JPY /時間 ¥ 1730.00 JPY /月 ¥ 17647.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 12 JPY /時間 ¥ 3680.00 JPY /月 ¥ 37537.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 12 JPY /時間 ¥ 3680.00 JPY /月 ¥ 37537.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 24 JPY /時間 ¥ 7710.00 JPY /月 ¥ 78643.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 24 JPY /時間 ¥ 7710.00 JPY /月 ¥ 78643.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 47.5 JPY /時間 ¥ 15640.00 JPY /月 ¥ 159529.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 47.5 JPY /時間 ¥ 15640.00 JPY /月 ¥ 159529.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 95.3 JPY /時間 ¥ 31630.00 JPY /月 ¥ 322627.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 95.3 JPY /時間 ¥ 31630.00 JPY /月 ¥ 322627.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - linux ￥ 190.3 JPY /時間 ¥ 63480.00 JPY /月 ¥ 647497.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - windows ￥ 190.3 JPY /時間 ¥ 63480.00 JPY /月 ¥ 647497.00 JPY /年   ecs.r5.16xlarge 64 vCPU 512 GiB 20 Gbps 4000,000 PPS - - linux ￥ 714.8 JPY /時間 ¥ 205860.00 JPY /月 ¥ 2099773.00 JPY /年   ecs.r5.16xlarge 64 vCPU 512 GiB 20 Gbps 4000,000 PPS - - windows ￥ 714.8 JPY /時間 ¥ 205860.00 JPY /月 ¥ 2099773.00 JPY /年   ecs.r5.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.r5.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.r5.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.r5.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.r5.2xlarge 8 vCPU 64 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.r5.2xlarge 8 vCPU 64 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.r5.4xlarge 16 vCPU 128 GiB 5 Gbps 1000,000 PPS - - linux ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.r5.4xlarge 16 vCPU 128 GiB 5 Gbps 1000,000 PPS - - windows ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.r5.6xlarge 24 vCPU 192 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 268.1 JPY /時間 ¥ 77200.00 JPY /月 ¥ 787441.00 JPY /年   ecs.r5.6xlarge 24 vCPU 192 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 268.1 JPY /時間 ¥ 77200.00 JPY /月 ¥ 787441.00 JPY /年   ecs.r5.8xlarge 32 vCPU 256 GiB 10 Gbps 2000,000 PPS - - linux ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.r5.8xlarge 32 vCPU 256 GiB 10 Gbps 2000,000 PPS - - windows ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 4.6 JPY /時間 ¥ 1380.00 JPY /月 ¥ 14077.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 9.2 JPY /時間 ¥ 2750.00 JPY /月 ¥ 28051.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 9.2 JPY /時間 ¥ 2750.00 JPY /月 ¥ 28051.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 19.6 JPY /時間 ¥ 5500.00 JPY /月 ¥ 56101.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 19.6 JPY /時間 ¥ 5500.00 JPY /月 ¥ 56101.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 38 JPY /時間 ¥ 11000.00 JPY /月 ¥ 112201.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 38 JPY /時間 ¥ 11000.00 JPY /月 ¥ 112201.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 6.9 JPY /時間 ¥ 1920.00 JPY /月 ¥ 19585.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 6.9 JPY /時間 ¥ 1920.00 JPY /月 ¥ 19585.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 13.8 JPY /時間 ¥ 3840.00 JPY /月 ¥ 39169.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 13.8 JPY /時間 ¥ 3840.00 JPY /月 ¥ 39169.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 26.5 JPY /時間 ¥ 7680.00 JPY /月 ¥ 78337.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 26.5 JPY /時間 ¥ 7680.00 JPY /月 ¥ 78337.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 52.9 JPY /時間 ¥ 15360.00 JPY /月 ¥ 156673.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 52.9 JPY /時間 ¥ 15360.00 JPY /月 ¥ 156673.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 10.4 JPY /時間 ¥ 2980.00 JPY /月 ¥ 30397.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 2980.00 JPY /月 ¥ 30397.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 20.7 JPY /時間 ¥ 5960.00 JPY /月 ¥ 60793.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 20.7 JPY /時間 ¥ 5960.00 JPY /月 ¥ 60793.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 41.4 JPY /時間 ¥ 11910.00 JPY /月 ¥ 121483.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 41.4 JPY /時間 ¥ 11910.00 JPY /月 ¥ 121483.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 1.2 JPY /時間 ¥ 430.00 JPY /月 ¥ 4387.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 1.2 JPY /時間 ¥ 430.00 JPY /月 ¥ 4387.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 5.8 JPY /時間 ¥ 1690.00 JPY /月 ¥ 17239.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 5.8 JPY /時間 ¥ 1690.00 JPY /月 ¥ 17239.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 3.5 JPY /時間 ¥ 850.00 JPY /月 ¥ 8671.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 3.5 JPY /時間 ¥ 850.00 JPY /月 ¥ 8671.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 9.2 JPY /時間 ¥ 2640.00 JPY /月 ¥ 26929.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 9.2 JPY /時間 ¥ 2640.00 JPY /月 ¥ 26929.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - linux ￥ 1.2 JPY /時間 ¥ 320.00 JPY /月 ¥ 3265.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - windows ￥ 1.2 JPY /時間 ¥ 320.00 JPY /月 ¥ 3265.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 4.8 JPY /時間 ¥ 1380.00 JPY /月 ¥ 14077.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 4.8 JPY /時間 ¥ 1380.00 JPY /月 ¥ 14077.00 JPY /年    \ncn-qingdao    instanceType vCPU  メモリ  イントラネット帯域幅 パケット転送速度  GPU/FPGA  ローカルストレージ  OS 従量課金 サブスクリプション サブスクリプション     ecs.c5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 15.9 JPY /時間 ¥ 4580.00 JPY /月 ¥ 46717.00 JPY /年   ecs.c5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 15.9 JPY /時間 ¥ 4580.00 JPY /月 ¥ 46717.00 JPY /年   ecs.c5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 31.8 JPY /時間 ¥ 9150.00 JPY /月 ¥ 93331.00 JPY /年   ecs.c5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 31.8 JPY /時間 ¥ 9150.00 JPY /月 ¥ 93331.00 JPY /年   ecs.c5.2xlarge 8 vCPU 16 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 63.6 JPY /時間 ¥ 18300.00 JPY /月 ¥ 186661.00 JPY /年   ecs.c5.2xlarge 8 vCPU 16 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 63.6 JPY /時間 ¥ 18300.00 JPY /月 ¥ 186661.00 JPY /年   ecs.c5.4xlarge 16 vCPU 32 GiB 5 Gbps 1000,000 PPS - - linux ￥ 127.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.c5.4xlarge 16 vCPU 32 GiB 5 Gbps 1000,000 PPS - - windows ￥ 127.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.c5.6xlarge 24 vCPU 48 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 190.6 JPY /時間 ¥ 54890.00 JPY /月 ¥ 559879.00 JPY /年   ecs.c5.6xlarge 24 vCPU 48 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 190.6 JPY /時間 ¥ 54890.00 JPY /月 ¥ 559879.00 JPY /年   ecs.c5.8xlarge 32 vCPU 64 GiB 10 Gbps 2000,000 PPS - - linux ￥ 254.1 JPY /時間 ¥ 73180.00 JPY /月 ¥ 746437.00 JPY /年   ecs.c5.8xlarge 32 vCPU 64 GiB 10 Gbps 2000,000 PPS - - windows ￥ 254.1 JPY /時間 ¥ 73180.00 JPY /月 ¥ 746437.00 JPY /年   ecs.c5.16xlarge 64 vCPU 128 GiB 20 Gbps 4000,000 PPS - - linux ￥ 508.2 JPY /時間 ¥ 146350.00 JPY /月 ¥ 1492771.00 JPY /年   ecs.c5.16xlarge 64 vCPU 128 GiB 20 Gbps 4000,000 PPS - - windows ￥ 508.2 JPY /時間 ¥ 146350.00 JPY /月 ¥ 1492771.00 JPY /年   ecs.e3.small 1 vCPU 8 GiB - - - - linux ￥ 14.5 JPY /時間 ¥ 4280.00 JPY /月 ¥ 43657.00 JPY /年   ecs.e3.small 1 vCPU 8 GiB - - - - windows ￥ 14.5 JPY /時間 ¥ 4280.00 JPY /月 ¥ 43657.00 JPY /年   ecs.e3.medium 2 vCPU 16 GiB - - - - linux ￥ 29.1 JPY /時間 ¥ 8900.00 JPY /月 ¥ 90781.00 JPY /年   ecs.e3.medium 2 vCPU 16 GiB - - - - windows ￥ 29.1 JPY /時間 ¥ 8900.00 JPY /月 ¥ 90781.00 JPY /年   ecs.e3.large 4 vCPU 32 GiB - - - - linux ￥ 58.1 JPY /時間 ¥ 18130.00 JPY /月 ¥ 184927.00 JPY /年   ecs.e3.large 4 vCPU 32 GiB - - - - windows ￥ 58.1 JPY /時間 ¥ 18130.00 JPY /月 ¥ 184927.00 JPY /年   ecs.e3.xlarge 8 vCPU 64 GiB - - - - linux ￥ 116.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.e3.xlarge 8 vCPU 64 GiB - - - - windows ￥ 116.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.e3.3xlarge 16 vCPU 128 GiB - - - - linux ￥ 231.8 JPY /時間 ¥ 73510.00 JPY /月 ¥ 749803.00 JPY /年   ecs.e3.3xlarge 16 vCPU 128 GiB - - - - windows ￥ 231.8 JPY /時間 ¥ 73510.00 JPY /月 ¥ 749803.00 JPY /年   ecs.e4.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 30.4 JPY /時間 ¥ 8740.00 JPY /月 ¥ 89149.00 JPY /年   ecs.e4.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 30.4 JPY /時間 ¥ 8740.00 JPY /月 ¥ 89149.00 JPY /年   ecs.e4.xlarge 4 vCPU 32 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 60.5 JPY /時間 ¥ 17480.00 JPY /月 ¥ 178297.00 JPY /年   ecs.e4.xlarge 4 vCPU 32 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 60.5 JPY /時間 ¥ 17480.00 JPY /月 ¥ 178297.00 JPY /年   ecs.e4.2xlarge 8 vCPU 64 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 121 JPY /時間 ¥ 34850.00 JPY /月 ¥ 355471.00 JPY /年   ecs.e4.2xlarge 8 vCPU 64 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 121 JPY /時間 ¥ 34850.00 JPY /月 ¥ 355471.00 JPY /年   ecs.e4.4xlarge 16 vCPU 128 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 242 JPY /時間 ¥ 69690.00 JPY /月 ¥ 710839.00 JPY /年   ecs.e4.4xlarge 16 vCPU 128 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 242 JPY /時間 ¥ 69690.00 JPY /月 ¥ 710839.00 JPY /年   ecs.g5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.g5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.g5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 35 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.g5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 35 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.g5.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.g5.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.g5.4xlarge 16 vCPU 64 GiB 5 Gbps 1000,000 PPS - - linux ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.g5.4xlarge 16 vCPU 64 GiB 5 Gbps 1000,000 PPS - - windows ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.g5.6xlarge 24 vCPU 96 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 209.5 JPY /時間 ¥ 60310.00 JPY /月 ¥ 615163.00 JPY /年   ecs.g5.6xlarge 24 vCPU 96 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 209.5 JPY /時間 ¥ 60310.00 JPY /月 ¥ 615163.00 JPY /年   ecs.g5.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS - - linux ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.g5.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS - - windows ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.g5.16xlarge 64 vCPU 256 GiB 20 Gbps 4000,000 PPS - - linux ￥ 558.5 JPY /時間 ¥ 160830.00 JPY /月 ¥ 1640467.00 JPY /年   ecs.g5.16xlarge 64 vCPU 256 GiB 20 Gbps 4000,000 PPS - - windows ￥ 558.5 JPY /時間 ¥ 160830.00 JPY /月 ¥ 1640467.00 JPY /年   ecs.hfc5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 19.1 JPY /時間 ¥ 5500.00 JPY /月 ¥ 56101.00 JPY /年   ecs.hfc5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 19.1 JPY /時間 ¥ 5500.00 JPY /月 ¥ 56101.00 JPY /年   ecs.hfc5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 38.2 JPY /時間 ¥ 10990.00 JPY /月 ¥ 112099.00 JPY /年   ecs.hfc5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 38.2 JPY /時間 ¥ 10990.00 JPY /月 ¥ 112099.00 JPY /年   ecs.hfc5.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 76.4 JPY /時間 ¥ 21980.00 JPY /月 ¥ 224197.00 JPY /年   ecs.hfc5.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 76.4 JPY /時間 ¥ 21980.00 JPY /月 ¥ 224197.00 JPY /年   ecs.hfc5.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 152.7 JPY /時間 ¥ 43960.00 JPY /月 ¥ 448393.00 JPY /年   ecs.hfc5.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 152.7 JPY /時間 ¥ 43960.00 JPY /月 ¥ 448393.00 JPY /年   ecs.hfc5.6xlarge 24 vCPU 48 GiB 4.5 Gbps 2000,000 PPS - - linux ￥ 229 JPY /時間 ¥ 65940.00 JPY /月 ¥ 672589.00 JPY /年   ecs.hfc5.6xlarge 24 vCPU 48 GiB 4.5 Gbps 2000,000 PPS - - windows ￥ 229 JPY /時間 ¥ 65940.00 JPY /月 ¥ 672589.00 JPY /年   ecs.hfc5.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 305.3 JPY /時間 ¥ 87920.00 JPY /月 ¥ 896785.00 JPY /年   ecs.hfc5.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 305.3 JPY /時間 ¥ 87920.00 JPY /月 ¥ 896785.00 JPY /年   ecs.hfg5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 21.1 JPY /時間 ¥ 6070.00 JPY /月 ¥ 61915.00 JPY /年   ecs.hfg5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 21.1 JPY /時間 ¥ 6070.00 JPY /月 ¥ 61915.00 JPY /年   ecs.hfg5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 42.2 JPY /時間 ¥ 12130.00 JPY /月 ¥ 123727.00 JPY /年   ecs.hfg5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 42.2 JPY /時間 ¥ 12130.00 JPY /月 ¥ 123727.00 JPY /年   ecs.hfg5.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 84.3 JPY /時間 ¥ 24260.00 JPY /月 ¥ 247453.00 JPY /年   ecs.hfg5.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 84.3 JPY /時間 ¥ 24260.00 JPY /月 ¥ 247453.00 JPY /年   ecs.hfg5.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 168.5 JPY /時間 ¥ 48520.00 JPY /月 ¥ 494905.00 JPY /年   ecs.hfg5.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 168.5 JPY /時間 ¥ 48520.00 JPY /月 ¥ 494905.00 JPY /年   ecs.hfg5.6xlarge 24 vCPU 96 GiB 4.5 Gbps 2000,000 PPS - - linux ￥ 252.7 JPY /時間 ¥ 72780.00 JPY /月 ¥ 742357.00 JPY /年   ecs.hfg5.6xlarge 24 vCPU 96 GiB 4.5 Gbps 2000,000 PPS - - windows ￥ 252.7 JPY /時間 ¥ 72780.00 JPY /月 ¥ 742357.00 JPY /年   ecs.hfg5.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 337 JPY /時間 ¥ 97030.00 JPY /月 ¥ 989707.00 JPY /年   ecs.hfg5.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 337 JPY /時間 ¥ 97030.00 JPY /月 ¥ 989707.00 JPY /年   ecs.hfg5.14xlarge 56 vCPU 160 GiB 10 Gbps 4000,000 PPS - - linux ￥ 589.6 JPY /時間 ¥ 169810.00 JPY /月 ¥ 1732063.00 JPY /年   ecs.hfg5.14xlarge 56 vCPU 160 GiB 10 Gbps 4000,000 PPS - - windows ￥ 589.6 JPY /時間 ¥ 169810.00 JPY /月 ¥ 1732063.00 JPY /年   ecs.i2.xlarge 4 vCPU 32 GiB 1 Gbps 500,000 PPS - local_ssd_pro linux ￥ 65.2 JPY /時間 ¥ 18770.00 JPY /月 ¥ 191455.00 JPY /年   ecs.i2.xlarge 4 vCPU 32 GiB 1 Gbps 500,000 PPS - local_ssd_pro windows ￥ 65.2 JPY /時間 ¥ 18770.00 JPY /月 ¥ 191455.00 JPY /年   ecs.i2.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - local_ssd_pro linux ￥ 130.3 JPY /時間 ¥ 37530.00 JPY /月 ¥ 382807.00 JPY /年   ecs.i2.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - local_ssd_pro windows ￥ 130.3 JPY /時間 ¥ 37530.00 JPY /月 ¥ 382807.00 JPY /年   ecs.i2.4xlarge 16 vCPU 128 GiB 3 Gbps 1500,000 PPS - local_ssd_pro linux ￥ 260.6 JPY /時間 ¥ 75050.00 JPY /月 ¥ 765511.00 JPY /年   ecs.i2.4xlarge 16 vCPU 128 GiB 3 Gbps 1500,000 PPS - local_ssd_pro windows ￥ 260.6 JPY /時間 ¥ 75050.00 JPY /月 ¥ 765511.00 JPY /年   ecs.i2.8xlarge 32 vCPU 256 GiB 6 Gbps 2000,000 PPS - local_ssd_pro linux ￥ 521.2 JPY /時間 ¥ 150100.00 JPY /月 ¥ 1531021.00 JPY /年   ecs.i2.8xlarge 32 vCPU 256 GiB 6 Gbps 2000,000 PPS - local_ssd_pro windows ￥ 521.2 JPY /時間 ¥ 150100.00 JPY /月 ¥ 1531021.00 JPY /年   ecs.i2.16xlarge 64 vCPU 512 GiB 10 Gbps 4000,000 PPS - local_ssd_pro linux ￥ 1042.4 JPY /時間 ¥ 300200.00 JPY /月 ¥ 3062041.00 JPY /年   ecs.i2.16xlarge 64 vCPU 512 GiB 10 Gbps 4000,000 PPS - local_ssd_pro windows ￥ 1042.4 JPY /時間 ¥ 300200.00 JPY /月 ¥ 3062041.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 9.1 JPY /時間 ¥ 2650.00 JPY /月 ¥ 27031.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 9.1 JPY /時間 ¥ 2650.00 JPY /月 ¥ 27031.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 18.2 JPY /時間 ¥ 5640.00 JPY /月 ¥ 57529.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 18.2 JPY /時間 ¥ 5640.00 JPY /月 ¥ 57529.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 36.2 JPY /時間 ¥ 11620.00 JPY /月 ¥ 118525.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 36.2 JPY /時間 ¥ 11620.00 JPY /月 ¥ 118525.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 72.2 JPY /時間 ¥ 23460.00 JPY /月 ¥ 239293.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 72.2 JPY /時間 ¥ 23460.00 JPY /月 ¥ 239293.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 144.4 JPY /時間 ¥ 47270.00 JPY /月 ¥ 482155.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 144.4 JPY /時間 ¥ 47270.00 JPY /月 ¥ 482155.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - linux ￥ 288.6 JPY /時間 ¥ 94880.00 JPY /月 ¥ 967777.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - windows ￥ 288.6 JPY /時間 ¥ 94880.00 JPY /月 ¥ 967777.00 JPY /年   ecs.n1.tiny 1 vCPU 1 GiB - - - - linux ￥ 3.3 JPY /時間 ¥ 1050.00 JPY /月 ¥ 10711.00 JPY /年   ecs.n1.tiny 1 vCPU 1 GiB - - - - windows ￥ 3.3 JPY /時間 ¥ 1050.00 JPY /月 ¥ 10711.00 JPY /年   ecs.n1.small 1 vCPU 2 GiB - - - - linux ￥ 4.8 JPY /時間 ¥ 1490.00 JPY /月 ¥ 15199.00 JPY /年   ecs.n1.small 1 vCPU 2 GiB - - - - windows ￥ 4.8 JPY /時間 ¥ 1490.00 JPY /月 ¥ 15199.00 JPY /年   ecs.n1.medium 2 vCPU 4 GiB - - - - linux ￥ 11 JPY /時間 ¥ 3290.00 JPY /月 ¥ 33559.00 JPY /年   ecs.n1.medium 2 vCPU 4 GiB - - - - windows ￥ 11 JPY /時間 ¥ 3290.00 JPY /月 ¥ 33559.00 JPY /年   ecs.n1.large 4 vCPU 8 GiB - - - - linux ￥ 22.7 JPY /時間 ¥ 6920.00 JPY /月 ¥ 70585.00 JPY /年   ecs.n1.large 4 vCPU 8 GiB - - - - windows ￥ 22.7 JPY /時間 ¥ 6920.00 JPY /月 ¥ 70585.00 JPY /年   ecs.n1.xlarge 8 vCPU 16 GiB - - - - linux ￥ 45.1 JPY /時間 ¥ 14170.00 JPY /月 ¥ 144535.00 JPY /年   ecs.n1.xlarge 8 vCPU 16 GiB - - - - windows ￥ 45.1 JPY /時間 ¥ 14170.00 JPY /月 ¥ 144535.00 JPY /年   ecs.n1.3xlarge 16 vCPU 32 GiB - - - - linux ￥ 90.4 JPY /時間 ¥ 28670.00 JPY /月 ¥ 292435.00 JPY /年   ecs.n1.3xlarge 16 vCPU 32 GiB - - - - windows ￥ 90.4 JPY /時間 ¥ 28670.00 JPY /月 ¥ 292435.00 JPY /年   ecs.n1.7xlarge 32 vCPU 64 GiB - - - - linux ￥ 180.7 JPY /時間 ¥ 57670.00 JPY /月 ¥ 588235.00 JPY /年   ecs.n1.7xlarge 32 vCPU 64 GiB - - - - windows ￥ 180.7 JPY /時間 ¥ 57670.00 JPY /月 ¥ 588235.00 JPY /年   ecs.n2.small 1 vCPU 4 GiB - - - - linux ￥ 8.3 JPY /時間 ¥ 2380.00 JPY /月 ¥ 24277.00 JPY /年   ecs.n2.small 1 vCPU 4 GiB - - - - windows ￥ 8.3 JPY /時間 ¥ 2380.00 JPY /月 ¥ 24277.00 JPY /年   ecs.n2.medium 2 vCPU 8 GiB - - - - linux ￥ 17.2 JPY /時間 ¥ 5080.00 JPY /月 ¥ 51817.00 JPY /年   ecs.n2.medium 2 vCPU 8 GiB - - - - windows ￥ 17.2 JPY /時間 ¥ 5080.00 JPY /月 ¥ 51817.00 JPY /年   ecs.n2.large 4 vCPU 16 GiB - - - - linux ￥ 34.3 JPY /時間 ¥ 10480.00 JPY /月 ¥ 106897.00 JPY /年   ecs.n2.large 4 vCPU 16 GiB - - - - windows ￥ 34.3 JPY /時間 ¥ 10480.00 JPY /月 ¥ 106897.00 JPY /年   ecs.n2.xlarge 8 vCPU 32 GiB - - - - linux ￥ 68.5 JPY /時間 ¥ 21290.00 JPY /月 ¥ 217159.00 JPY /年   ecs.n2.xlarge 8 vCPU 32 GiB - - - - windows ￥ 68.5 JPY /時間 ¥ 21290.00 JPY /月 ¥ 217159.00 JPY /年   ecs.n2.3xlarge 16 vCPU 64 GiB - - - - linux ￥ 137 JPY /時間 ¥ 42900.00 JPY /月 ¥ 437581.00 JPY /年   ecs.n2.3xlarge 16 vCPU 64 GiB - - - - windows ￥ 137 JPY /時間 ¥ 42900.00 JPY /月 ¥ 437581.00 JPY /年   ecs.n2.7xlarge 32 vCPU 128 GiB - - - - linux ￥ 273.6 JPY /時間 ¥ 86120.00 JPY /月 ¥ 878425.00 JPY /年   ecs.n2.7xlarge 32 vCPU 128 GiB - - - - windows ￥ 273.6 JPY /時間 ¥ 86120.00 JPY /月 ¥ 878425.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 5.9 JPY /時間 ¥ 1730.00 JPY /月 ¥ 17647.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 5.9 JPY /時間 ¥ 1730.00 JPY /月 ¥ 17647.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 12 JPY /時間 ¥ 3680.00 JPY /月 ¥ 37537.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 24 JPY /時間 ¥ 7710.00 JPY /月 ¥ 78643.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 24 JPY /時間 ¥ 7710.00 JPY /月 ¥ 78643.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 47.5 JPY /時間 ¥ 15640.00 JPY /月 ¥ 159529.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 47.5 JPY /時間 ¥ 15640.00 JPY /月 ¥ 159529.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 95.3 JPY /時間 ¥ 31630.00 JPY /月 ¥ 322627.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 95.3 JPY /時間 ¥ 31630.00 JPY /月 ¥ 322627.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - linux ￥ 190.3 JPY /時間 ¥ 63480.00 JPY /月 ¥ 647497.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - windows ￥ 190.3 JPY /時間 ¥ 63480.00 JPY /月 ¥ 647497.00 JPY /年   ecs.r5.16xlarge 64 vCPU 512 GiB 20 Gbps 4000,000 PPS - - linux ￥ 714.8 JPY /時間 ¥ 205860.00 JPY /月 ¥ 2099773.00 JPY /年   ecs.r5.16xlarge 64 vCPU 512 GiB 20 Gbps 4000,000 PPS - - windows ￥ 714.8 JPY /時間 ¥ 205860.00 JPY /月 ¥ 2099773.00 JPY /年   ecs.r5.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.r5.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.r5.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.r5.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.r5.2xlarge 8 vCPU 64 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.r5.2xlarge 8 vCPU 64 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.r5.4xlarge 16 vCPU 128 GiB 5 Gbps 1000,000 PPS - - linux ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.r5.4xlarge 16 vCPU 128 GiB 5 Gbps 1000,000 PPS - - windows ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.r5.6xlarge 24 vCPU 192 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 268.1 JPY /時間 ¥ 77200.00 JPY /月 ¥ 787441.00 JPY /年   ecs.r5.6xlarge 24 vCPU 192 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 268.1 JPY /時間 ¥ 77200.00 JPY /月 ¥ 787441.00 JPY /年   ecs.r5.8xlarge 32 vCPU 256 GiB 10 Gbps 2000,000 PPS - - linux ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.r5.8xlarge 32 vCPU 256 GiB 10 Gbps 2000,000 PPS - - windows ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.scch5.16xlarge 64 vCPU 192 GiB 10 Gbps 4500,000 PPS - - linux ￥ 742.9 JPY /時間 ¥ 213820.00 JPY /月 ¥ 2180965.00 JPY /年   ecs.scch5.16xlarge 64 vCPU 192 GiB 10 Gbps 4500,000 PPS - - windows ￥ 742.9 JPY /時間 ¥ 213820.00 JPY /月 ¥ 2180965.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 25.8 JPY /時間 ¥ 7410.00 JPY /月 ¥ 75583.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 30.4 JPY /時間 ¥ 8740.00 JPY /月 ¥ 89149.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 51.6 JPY /時間 ¥ 14810.00 JPY /月 ¥ 151063.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 60.5 JPY /時間 ¥ 17480.00 JPY /月 ¥ 178297.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 103 JPY /時間 ¥ 29620.00 JPY /月 ¥ 302125.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 121 JPY /時間 ¥ 34850.00 JPY /月 ¥ 355471.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - linux ￥ 205.8 JPY /時間 ¥ 59240.00 JPY /月 ¥ 604249.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - windows ￥ 242 JPY /時間 ¥ 69690.00 JPY /月 ¥ 710839.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - linux ￥ 411.5 JPY /時間 ¥ 118480.00 JPY /月 ¥ 1208497.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - windows ￥ 484.1 JPY /時間 ¥ 139380.00 JPY /月 ¥ 1421677.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - linux ￥ 742.1 JPY /時間 ¥ 213700.00 JPY /月 ¥ 2179741.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - windows ￥ 892.3 JPY /時間 ¥ 257030.00 JPY /月 ¥ 2621707.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - linux ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - windows ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - linux ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - windows ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - linux ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - windows ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - linux ￥ 625.5 JPY /時間 ¥ 180120.00 JPY /月 ¥ 1837225.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - windows ￥ 625.5 JPY /時間 ¥ 180120.00 JPY /月 ¥ 1837225.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 15.2 JPY /時間 ¥ 4370.00 JPY /月 ¥ 44575.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 15.2 JPY /時間 ¥ 4370.00 JPY /月 ¥ 44575.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 30.3 JPY /時間 ¥ 8740.00 JPY /月 ¥ 89149.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 30.3 JPY /時間 ¥ 8740.00 JPY /月 ¥ 89149.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 60.4 JPY /時間 ¥ 17370.00 JPY /月 ¥ 177175.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 60.4 JPY /時間 ¥ 17370.00 JPY /月 ¥ 177175.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - linux ￥ 120.6 JPY /時間 ¥ 34730.00 JPY /月 ¥ 354247.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - windows ￥ 120.6 JPY /時間 ¥ 34730.00 JPY /月 ¥ 354247.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - linux ￥ 241.2 JPY /時間 ¥ 69460.00 JPY /月 ¥ 708493.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - windows ￥ 241.2 JPY /時間 ¥ 69460.00 JPY /月 ¥ 708493.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 15.9 JPY /時間 ¥ 4560.00 JPY /月 ¥ 46513.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 15.9 JPY /時間 ¥ 4560.00 JPY /月 ¥ 46513.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 31.7 JPY /時間 ¥ 9120.00 JPY /月 ¥ 93025.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 31.7 JPY /時間 ¥ 9120.00 JPY /月 ¥ 93025.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 63.3 JPY /時間 ¥ 18230.00 JPY /月 ¥ 185947.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 63.3 JPY /時間 ¥ 18230.00 JPY /月 ¥ 185947.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 126.6 JPY /時間 ¥ 36460.00 JPY /月 ¥ 371893.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 126.6 JPY /時間 ¥ 36460.00 JPY /月 ¥ 371893.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 253.1 JPY /時間 ¥ 72890.00 JPY /月 ¥ 743479.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 253.1 JPY /時間 ¥ 72890.00 JPY /月 ¥ 743479.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 20.3 JPY /時間 ¥ 5820.00 JPY /月 ¥ 59365.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 22.6 JPY /時間 ¥ 6560.00 JPY /月 ¥ 66913.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 40.5 JPY /時間 ¥ 11630.00 JPY /月 ¥ 118627.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 44.8 JPY /時間 ¥ 13000.00 JPY /月 ¥ 132601.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 80.9 JPY /時間 ¥ 23260.00 JPY /月 ¥ 237253.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 89.7 JPY /時間 ¥ 25880.00 JPY /月 ¥ 263977.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - linux ￥ 161.6 JPY /時間 ¥ 46510.00 JPY /月 ¥ 474403.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - windows ￥ 179.3 JPY /時間 ¥ 51640.00 JPY /月 ¥ 526729.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - linux ￥ 323.1 JPY /時間 ¥ 93010.00 JPY /月 ¥ 948703.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - windows ￥ 358.6 JPY /時間 ¥ 103270.00 JPY /月 ¥ 1053355.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - linux ￥ 561.2 JPY /時間 ¥ 161690.00 JPY /月 ¥ 1649239.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - windows ￥ 561.2 JPY /時間 ¥ 161690.00 JPY /月 ¥ 1649239.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 34.9 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 34.9 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - linux ￥ 488.7 JPY /時間 ¥ 140720.00 JPY /月 ¥ 1435345.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - windows ￥ 488.7 JPY /時間 ¥ 140720.00 JPY /月 ¥ 1435345.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 5.8 JPY /時間 ¥ 1530.00 JPY /月 ¥ 15607.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 5.8 JPY /時間 ¥ 1530.00 JPY /月 ¥ 15607.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 10.4 JPY /時間 ¥ 3070.00 JPY /月 ¥ 31315.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 3070.00 JPY /月 ¥ 31315.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 20.7 JPY /時間 ¥ 6120.00 JPY /月 ¥ 62425.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 42.6 JPY /時間 ¥ 12240.00 JPY /月 ¥ 124849.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 42.6 JPY /時間 ¥ 12240.00 JPY /月 ¥ 124849.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 6.9 JPY /時間 ¥ 2140.00 JPY /月 ¥ 21829.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 6.9 JPY /時間 ¥ 2140.00 JPY /月 ¥ 21829.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 15 JPY /時間 ¥ 4250.00 JPY /月 ¥ 43351.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 15 JPY /時間 ¥ 4250.00 JPY /月 ¥ 43351.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 29.9 JPY /時間 ¥ 8490.00 JPY /月 ¥ 86599.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 29.9 JPY /時間 ¥ 8490.00 JPY /月 ¥ 86599.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 58.7 JPY /時間 ¥ 16980.00 JPY /月 ¥ 173197.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 58.7 JPY /時間 ¥ 16980.00 JPY /月 ¥ 173197.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 11.5 JPY /時間 ¥ 3310.00 JPY /月 ¥ 33763.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 11.5 JPY /時間 ¥ 3310.00 JPY /月 ¥ 33763.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 23 JPY /時間 ¥ 6620.00 JPY /月 ¥ 67525.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 23 JPY /時間 ¥ 6620.00 JPY /月 ¥ 67525.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 46 JPY /時間 ¥ 13230.00 JPY /月 ¥ 134947.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 46 JPY /時間 ¥ 13230.00 JPY /月 ¥ 134947.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 1.2 JPY /時間 ¥ 430.00 JPY /月 ¥ 4387.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 1.2 JPY /時間 ¥ 430.00 JPY /月 ¥ 4387.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 5.8 JPY /時間 ¥ 1690.00 JPY /月 ¥ 17239.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 5.8 JPY /時間 ¥ 1690.00 JPY /月 ¥ 17239.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 3.5 JPY /時間 ¥ 850.00 JPY /月 ¥ 8671.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 3.5 JPY /時間 ¥ 850.00 JPY /月 ¥ 8671.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 10.4 JPY /時間 ¥ 2930.00 JPY /月 ¥ 29887.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 2930.00 JPY /月 ¥ 29887.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - linux ￥ 1.2 JPY /時間 ¥ 320.00 JPY /月 ¥ 3265.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - windows ￥ 1.2 JPY /時間 ¥ 320.00 JPY /月 ¥ 3265.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 4.8 JPY /時間 ¥ 1380.00 JPY /月 ¥ 14077.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 4.8 JPY /時間 ¥ 1380.00 JPY /月 ¥ 14077.00 JPY /年    \ncn-shanghai    instanceType vCPU  メモリ  イントラネット帯域幅 パケット転送速度  GPU/FPGA  ローカルストレージ  OS 従量課金 サブスクリプション サブスクリプション     ecs.c5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 15.9 JPY /時間 ¥ 4580.00 JPY /月 ¥ 46717.00 JPY /年   ecs.c5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 15.9 JPY /時間 ¥ 4580.00 JPY /月 ¥ 46717.00 JPY /年   ecs.c5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 31.8 JPY /時間 ¥ 9150.00 JPY /月 ¥ 93331.00 JPY /年   ecs.c5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 31.8 JPY /時間 ¥ 9150.00 JPY /月 ¥ 93331.00 JPY /年   ecs.c5.2xlarge 8 vCPU 16 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 63.6 JPY /時間 ¥ 18300.00 JPY /月 ¥ 186661.00 JPY /年   ecs.c5.2xlarge 8 vCPU 16 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 63.6 JPY /時間 ¥ 18300.00 JPY /月 ¥ 186661.00 JPY /年   ecs.c5.4xlarge 16 vCPU 32 GiB 5 Gbps 1000,000 PPS - - linux ￥ 127.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.c5.6xlarge 24 vCPU 48 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 190.6 JPY /時間 ¥ 54890.00 JPY /月 ¥ 559879.00 JPY /年   ecs.c5.8xlarge 32 vCPU 64 GiB 10 Gbps 2000,000 PPS - - linux ￥ 254.1 JPY /時間 ¥ 73180.00 JPY /月 ¥ 746437.00 JPY /年   ecs.c5.8xlarge 32 vCPU 64 GiB 10 Gbps 2000,000 PPS - - windows ￥ 254.1 JPY /時間 ¥ 73180.00 JPY /月 ¥ 746437.00 JPY /年   ecs.c5.16xlarge 64 vCPU 128 GiB 20 Gbps 4000,000 PPS - - linux ￥ 508.2 JPY /時間 ¥ 146350.00 JPY /月 ¥ 1492771.00 JPY /年   ecs.c5.16xlarge 64 vCPU 128 GiB 20 Gbps 4000,000 PPS - - windows ￥ 508.2 JPY /時間 ¥ 146350.00 JPY /月 ¥ 1492771.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro linux ￥ 106.6 JPY /時間 ¥ 30710.00 JPY /月 ¥ 313243.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro windows ￥ 106.6 JPY /時間 ¥ 30710.00 JPY /月 ¥ 313243.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro linux ￥ 213.3 JPY /時間 ¥ 61420.00 JPY /月 ¥ 626485.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro windows ￥ 213.3 JPY /時間 ¥ 61420.00 JPY /月 ¥ 626485.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro linux ￥ 319.7 JPY /時間 ¥ 92120.00 JPY /月 ¥ 939625.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro windows ￥ 319.7 JPY /時間 ¥ 92120.00 JPY /月 ¥ 939625.00 JPY /年   ecs.d1.8xlarge 32 vCPU 128 GiB 10 Gbps 1000,000 PPS - local_hdd_pro linux ￥ 426.5 JPY /時間 ¥ 122830.00 JPY /月 ¥ 1252867.00 JPY /年   ecs.d1.8xlarge 32 vCPU 128 GiB 10 Gbps 1000,000 PPS - local_hdd_pro windows ￥ 426.5 JPY /時間 ¥ 122830.00 JPY /月 ¥ 1252867.00 JPY /年   ecs.d1.14xlarge 56 vCPU 224 GiB 17 Gbps 1800,000 PPS - local_hdd_pro linux ￥ 746.3 JPY /時間 ¥ 214950.00 JPY /月 ¥ 2192491.00 JPY /年   ecs.d1.14xlarge 56 vCPU 224 GiB 17 Gbps 1800,000 PPS - local_hdd_pro windows ￥ 746.3 JPY /時間 ¥ 214950.00 JPY /月 ¥ 2192491.00 JPY /年   ecs.e3.small 1 vCPU 8 GiB - - - - linux ￥ 14.5 JPY /時間 ¥ 4280.00 JPY /月 ¥ 43657.00 JPY /年   ecs.e3.small 1 vCPU 8 GiB - - - - windows ￥ 14.5 JPY /時間 ¥ 4280.00 JPY /月 ¥ 43657.00 JPY /年   ecs.e3.medium 2 vCPU 16 GiB - - - - linux ￥ 29.1 JPY /時間 ¥ 8900.00 JPY /月 ¥ 90781.00 JPY /年   ecs.e3.medium 2 vCPU 16 GiB - - - - windows ￥ 29.1 JPY /時間 ¥ 8900.00 JPY /月 ¥ 90781.00 JPY /年   ecs.e3.large 4 vCPU 32 GiB - - - - linux ￥ 58.1 JPY /時間 ¥ 18130.00 JPY /月 ¥ 184927.00 JPY /年   ecs.e3.large 4 vCPU 32 GiB - - - - windows ￥ 58.1 JPY /時間 ¥ 18130.00 JPY /月 ¥ 184927.00 JPY /年   ecs.e3.xlarge 8 vCPU 64 GiB - - - - linux ￥ 116.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.e3.xlarge 8 vCPU 64 GiB - - - - windows ￥ 116.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.e3.3xlarge 16 vCPU 128 GiB - - - - linux ￥ 231.8 JPY /時間 ¥ 73510.00 JPY /月 ¥ 749803.00 JPY /年   ecs.e3.3xlarge 16 vCPU 128 GiB - - - - windows ￥ 231.8 JPY /時間 ¥ 73510.00 JPY /月 ¥ 749803.00 JPY /年   ecs.g5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.g5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.g5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 35 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.g5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 35 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.g5.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.g5.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.g5.4xlarge 16 vCPU 64 GiB 5 Gbps 1000,000 PPS - - linux ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.g5.4xlarge 16 vCPU 64 GiB 5 Gbps 1000,000 PPS - - windows ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.g5.6xlarge 24 vCPU 96 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 209.5 JPY /時間 ¥ 60310.00 JPY /月 ¥ 615163.00 JPY /年   ecs.g5.6xlarge 24 vCPU 96 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 209.5 JPY /時間 ¥ 60310.00 JPY /月 ¥ 615163.00 JPY /年   ecs.g5.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS - - linux ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.g5.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS - - windows ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.g5.16xlarge 64 vCPU 256 GiB 20 Gbps 4000,000 PPS - - linux ￥ 558.5 JPY /時間 ¥ 160830.00 JPY /月 ¥ 1640467.00 JPY /年   ecs.g5.16xlarge 64 vCPU 256 GiB 20 Gbps 4000,000 PPS - - windows ￥ 558.5 JPY /時間 ¥ 160830.00 JPY /月 ¥ 1640467.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 251.9 JPY /時間 ¥ 72560.00 JPY /月 ¥ 740113.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 251.9 JPY /時間 ¥ 72560.00 JPY /月 ¥ 740113.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 503.9 JPY /時間 ¥ 145110.00 JPY /月 ¥ 1480123.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 503.9 JPY /時間 ¥ 145110.00 JPY /月 ¥ 1480123.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 303.3 JPY /時間 ¥ 87370.00 JPY /月 ¥ 891175.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 303.3 JPY /時間 ¥ 87370.00 JPY /月 ¥ 891175.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 606.7 JPY /時間 ¥ 174730.00 JPY /月 ¥ 1782247.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 606.7 JPY /時間 ¥ 174730.00 JPY /月 ¥ 1782247.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 1213.4 JPY /時間 ¥ 349460.00 JPY /月 ¥ 3564493.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 1213.4 JPY /時間 ¥ 349460.00 JPY /月 ¥ 3564493.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 2426.8 JPY /時間 ¥ 698910.00 JPY /月 ¥ 7128883.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 2426.8 JPY /時間 ¥ 698910.00 JPY /月 ¥ 7128883.00 JPY /年   ecs.gn6v-c8g1.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS NVIDIA V100 - linux ￥ 471 JPY /時間 ¥ 135630.00 JPY /月 ¥ 1383427.00 JPY /年   ecs.gn6v-c8g1.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS NVIDIA V100 - windows ￥ 471 JPY /時間 ¥ 135630.00 JPY /月 ¥ 1383427.00 JPY /年   ecs.gn6v-c8g1.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS NVIDIA V100 - linux ￥ 1883.7 JPY /時間 ¥ 542520.00 JPY /月 ¥ 5533705.00 JPY /年   ecs.gn6v-c8g1.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS NVIDIA V100 - windows ￥ 1883.7 JPY /時間 ¥ 542520.00 JPY /月 ¥ 5533705.00 JPY /年   ecs.gn6v-c8g1.16xlarge 64 vCPU 256 GiB 20 Gbps 2500,000 PPS NVIDIA V100 - linux ￥ 3767.4 JPY /時間 ¥ 1085040.00 JPY /月 ¥ 11067409.00 JPY /年   ecs.gn6v-c8g1.16xlarge 64 vCPU 256 GiB 20 Gbps 2500,000 PPS NVIDIA V100 - windows ￥ 3767.4 JPY /時間 ¥ 1085040.00 JPY /月 ¥ 11067409.00 JPY /年   ecs.hfc5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 19.1 JPY /時間 ¥ 5500.00 JPY /月 ¥ 56101.00 JPY /年   ecs.hfc5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 19.1 JPY /時間 ¥ 5500.00 JPY /月 ¥ 56101.00 JPY /年   ecs.hfc5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 38.2 JPY /時間 ¥ 10990.00 JPY /月 ¥ 112099.00 JPY /年   ecs.hfc5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 38.2 JPY /時間 ¥ 10990.00 JPY /月 ¥ 112099.00 JPY /年   ecs.hfc5.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 76.4 JPY /時間 ¥ 21980.00 JPY /月 ¥ 224197.00 JPY /年   ecs.hfc5.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 76.4 JPY /時間 ¥ 21980.00 JPY /月 ¥ 224197.00 JPY /年   ecs.hfc5.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 152.7 JPY /時間 ¥ 43960.00 JPY /月 ¥ 448393.00 JPY /年   ecs.hfc5.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 152.7 JPY /時間 ¥ 43960.00 JPY /月 ¥ 448393.00 JPY /年   ecs.hfc5.6xlarge 24 vCPU 48 GiB 4.5 Gbps 2000,000 PPS - - linux ￥ 229 JPY /時間 ¥ 65940.00 JPY /月 ¥ 672589.00 JPY /年   ecs.hfc5.6xlarge 24 vCPU 48 GiB 4.5 Gbps 2000,000 PPS - - windows ￥ 229 JPY /時間 ¥ 65940.00 JPY /月 ¥ 672589.00 JPY /年   ecs.hfc5.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 305.3 JPY /時間 ¥ 87920.00 JPY /月 ¥ 896785.00 JPY /年   ecs.hfc5.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 305.3 JPY /時間 ¥ 87920.00 JPY /月 ¥ 896785.00 JPY /年   ecs.hfg5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 21.1 JPY /時間 ¥ 6070.00 JPY /月 ¥ 61915.00 JPY /年   ecs.hfg5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 21.1 JPY /時間 ¥ 6070.00 JPY /月 ¥ 61915.00 JPY /年   ecs.hfg5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 42.2 JPY /時間 ¥ 12130.00 JPY /月 ¥ 123727.00 JPY /年   ecs.hfg5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 42.2 JPY /時間 ¥ 12130.00 JPY /月 ¥ 123727.00 JPY /年   ecs.hfg5.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 84.3 JPY /時間 ¥ 24260.00 JPY /月 ¥ 247453.00 JPY /年   ecs.hfg5.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 84.3 JPY /時間 ¥ 24260.00 JPY /月 ¥ 247453.00 JPY /年   ecs.hfg5.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 168.5 JPY /時間 ¥ 48520.00 JPY /月 ¥ 494905.00 JPY /年   ecs.hfg5.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 168.5 JPY /時間 ¥ 48520.00 JPY /月 ¥ 494905.00 JPY /年   ecs.hfg5.6xlarge 24 vCPU 96 GiB 4.5 Gbps 2000,000 PPS - - linux ￥ 252.7 JPY /時間 ¥ 72780.00 JPY /月 ¥ 742357.00 JPY /年   ecs.hfg5.6xlarge 24 vCPU 96 GiB 4.5 Gbps 2000,000 PPS - - windows ￥ 252.7 JPY /時間 ¥ 72780.00 JPY /月 ¥ 742357.00 JPY /年   ecs.hfg5.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 337 JPY /時間 ¥ 97030.00 JPY /月 ¥ 989707.00 JPY /年   ecs.hfg5.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 337 JPY /時間 ¥ 97030.00 JPY /月 ¥ 989707.00 JPY /年   ecs.hfg5.14xlarge 56 vCPU 160 GiB 10 Gbps 4000,000 PPS - - linux ￥ 589.6 JPY /時間 ¥ 169810.00 JPY /月 ¥ 1732063.00 JPY /年   ecs.hfg5.14xlarge 56 vCPU 160 GiB 10 Gbps 4000,000 PPS - - windows ￥ 589.6 JPY /時間 ¥ 169810.00 JPY /月 ¥ 1732063.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro linux ￥ 39.1 JPY /時間 ¥ 11380.00 JPY /月 ¥ 116077.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro windows ￥ 39.1 JPY /時間 ¥ 11380.00 JPY /月 ¥ 116077.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro linux ￥ 79.4 JPY /時間 ¥ 22750.00 JPY /月 ¥ 232051.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro windows ￥ 79.4 JPY /時間 ¥ 22750.00 JPY /月 ¥ 232051.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro linux ￥ 157.6 JPY /時間 ¥ 45500.00 JPY /月 ¥ 464101.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro windows ￥ 157.6 JPY /時間 ¥ 45500.00 JPY /月 ¥ 464101.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro linux ￥ 316.3 JPY /時間 ¥ 91000.00 JPY /月 ¥ 928201.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro windows ￥ 316.3 JPY /時間 ¥ 91000.00 JPY /月 ¥ 928201.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro linux ￥ 553.2 JPY /時間 ¥ 159240.00 JPY /月 ¥ 1624249.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro windows ￥ 553.2 JPY /時間 ¥ 159240.00 JPY /月 ¥ 1624249.00 JPY /年   ecs.i2.xlarge 4 vCPU 32 GiB 1 Gbps 500,000 PPS - local_ssd_pro linux ￥ 65.2 JPY /時間 ¥ 18770.00 JPY /月 ¥ 191455.00 JPY /年   ecs.i2.xlarge 4 vCPU 32 GiB 1 Gbps 500,000 PPS - local_ssd_pro windows ￥ 65.2 JPY /時間 ¥ 18770.00 JPY /月 ¥ 191455.00 JPY /年   ecs.i2.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - local_ssd_pro linux ￥ 130.3 JPY /時間 ¥ 37530.00 JPY /月 ¥ 382807.00 JPY /年   ecs.i2.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - local_ssd_pro windows ￥ 130.3 JPY /時間 ¥ 37530.00 JPY /月 ¥ 382807.00 JPY /年   ecs.i2.4xlarge 16 vCPU 128 GiB 3 Gbps 1500,000 PPS - local_ssd_pro windows ￥ 260.6 JPY /時間 ¥ 75050.00 JPY /月 ¥ 765511.00 JPY /年   ecs.i2.8xlarge 32 vCPU 256 GiB 6 Gbps 2000,000 PPS - local_ssd_pro linux ￥ 521.2 JPY /時間 ¥ 150100.00 JPY /月 ¥ 1531021.00 JPY /年   ecs.i2.8xlarge 32 vCPU 256 GiB 6 Gbps 2000,000 PPS - local_ssd_pro windows ￥ 521.2 JPY /時間 ¥ 150100.00 JPY /月 ¥ 1531021.00 JPY /年   ecs.i2.16xlarge 64 vCPU 512 GiB 10 Gbps 4000,000 PPS - local_ssd_pro linux ￥ 1042.4 JPY /時間 ¥ 300200.00 JPY /月 ¥ 3062041.00 JPY /年   ecs.i2.16xlarge 64 vCPU 512 GiB 10 Gbps 4000,000 PPS - local_ssd_pro windows ￥ 1042.4 JPY /時間 ¥ 300200.00 JPY /月 ¥ 3062041.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 9.1 JPY /時間 ¥ 2650.00 JPY /月 ¥ 27031.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 9.1 JPY /時間 ¥ 2650.00 JPY /月 ¥ 27031.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 18.2 JPY /時間 ¥ 5640.00 JPY /月 ¥ 57529.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 18.2 JPY /時間 ¥ 5640.00 JPY /月 ¥ 57529.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 36.2 JPY /時間 ¥ 11620.00 JPY /月 ¥ 118525.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 36.2 JPY /時間 ¥ 11620.00 JPY /月 ¥ 118525.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 72.2 JPY /時間 ¥ 23460.00 JPY /月 ¥ 239293.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 72.2 JPY /時間 ¥ 23460.00 JPY /月 ¥ 239293.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 144.4 JPY /時間 ¥ 47270.00 JPY /月 ¥ 482155.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 144.4 JPY /時間 ¥ 47270.00 JPY /月 ¥ 482155.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - linux ￥ 288.6 JPY /時間 ¥ 94880.00 JPY /月 ¥ 967777.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - windows ￥ 288.6 JPY /時間 ¥ 94880.00 JPY /月 ¥ 967777.00 JPY /年   ecs.n1.tiny 1 vCPU 1 GiB - - - - linux ￥ 3.3 JPY /時間 ¥ 1050.00 JPY /月 ¥ 10711.00 JPY /年   ecs.n1.tiny 1 vCPU 1 GiB - - - - windows ￥ 3.3 JPY /時間 ¥ 1050.00 JPY /月 ¥ 10711.00 JPY /年   ecs.n1.small 1 vCPU 2 GiB - - - - linux ￥ 4.8 JPY /時間 ¥ 1490.00 JPY /月 ¥ 15199.00 JPY /年   ecs.n1.small 1 vCPU 2 GiB - - - - windows ￥ 4.8 JPY /時間 ¥ 1490.00 JPY /月 ¥ 15199.00 JPY /年   ecs.n1.medium 2 vCPU 4 GiB - - - - linux ￥ 11 JPY /時間 ¥ 3290.00 JPY /月 ¥ 33559.00 JPY /年   ecs.n1.medium 2 vCPU 4 GiB - - - - windows ￥ 11 JPY /時間 ¥ 3290.00 JPY /月 ¥ 33559.00 JPY /年   ecs.n1.large 4 vCPU 8 GiB - - - - linux ￥ 22.7 JPY /時間 ¥ 6920.00 JPY /月 ¥ 70585.00 JPY /年   ecs.n1.large 4 vCPU 8 GiB - - - - windows ￥ 22.7 JPY /時間 ¥ 6920.00 JPY /月 ¥ 70585.00 JPY /年   ecs.n1.xlarge 8 vCPU 16 GiB - - - - linux ￥ 45.1 JPY /時間 ¥ 14170.00 JPY /月 ¥ 144535.00 JPY /年   ecs.n1.xlarge 8 vCPU 16 GiB - - - - windows ￥ 45.1 JPY /時間 ¥ 14170.00 JPY /月 ¥ 144535.00 JPY /年   ecs.n1.3xlarge 16 vCPU 32 GiB - - - - linux ￥ 90.4 JPY /時間 ¥ 28670.00 JPY /月 ¥ 292435.00 JPY /年   ecs.n1.3xlarge 16 vCPU 32 GiB - - - - windows ￥ 90.4 JPY /時間 ¥ 28670.00 JPY /月 ¥ 292435.00 JPY /年   ecs.n1.7xlarge 32 vCPU 64 GiB - - - - linux ￥ 180.7 JPY /時間 ¥ 57670.00 JPY /月 ¥ 588235.00 JPY /年   ecs.n1.7xlarge 32 vCPU 64 GiB - - - - windows ￥ 180.7 JPY /時間 ¥ 57670.00 JPY /月 ¥ 588235.00 JPY /年   ecs.n2.small 1 vCPU 4 GiB - - - - linux ￥ 8.3 JPY /時間 ¥ 2380.00 JPY /月 ¥ 24277.00 JPY /年   ecs.n2.small 1 vCPU 4 GiB - - - - windows ￥ 8.3 JPY /時間 ¥ 2380.00 JPY /月 ¥ 24277.00 JPY /年   ecs.n2.medium 2 vCPU 8 GiB - - - - linux ￥ 17.2 JPY /時間 ¥ 5080.00 JPY /月 ¥ 51817.00 JPY /年   ecs.n2.medium 2 vCPU 8 GiB - - - - windows ￥ 17.2 JPY /時間 ¥ 5080.00 JPY /月 ¥ 51817.00 JPY /年   ecs.n2.large 4 vCPU 16 GiB - - - - linux ￥ 34.3 JPY /時間 ¥ 10480.00 JPY /月 ¥ 106897.00 JPY /年   ecs.n2.large 4 vCPU 16 GiB - - - - windows ￥ 34.3 JPY /時間 ¥ 10480.00 JPY /月 ¥ 106897.00 JPY /年   ecs.n2.xlarge 8 vCPU 32 GiB - - - - linux ￥ 68.5 JPY /時間 ¥ 21290.00 JPY /月 ¥ 217159.00 JPY /年   ecs.n2.xlarge 8 vCPU 32 GiB - - - - windows ￥ 68.5 JPY /時間 ¥ 21290.00 JPY /月 ¥ 217159.00 JPY /年   ecs.n2.3xlarge 16 vCPU 64 GiB - - - - linux ￥ 137 JPY /時間 ¥ 42900.00 JPY /月 ¥ 437581.00 JPY /年   ecs.n2.3xlarge 16 vCPU 64 GiB - - - - windows ￥ 137 JPY /時間 ¥ 42900.00 JPY /月 ¥ 437581.00 JPY /年   ecs.n2.7xlarge 32 vCPU 128 GiB - - - - linux ￥ 273.6 JPY /時間 ¥ 86120.00 JPY /月 ¥ 878425.00 JPY /年   ecs.n2.7xlarge 32 vCPU 128 GiB - - - - windows ￥ 273.6 JPY /時間 ¥ 86120.00 JPY /月 ¥ 878425.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 5.9 JPY /時間 ¥ 1730.00 JPY /月 ¥ 17647.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 5.9 JPY /時間 ¥ 1730.00 JPY /月 ¥ 17647.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 12 JPY /時間 ¥ 3680.00 JPY /月 ¥ 37537.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 12 JPY /時間 ¥ 3680.00 JPY /月 ¥ 37537.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 24 JPY /時間 ¥ 7710.00 JPY /月 ¥ 78643.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 24 JPY /時間 ¥ 7710.00 JPY /月 ¥ 78643.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 47.5 JPY /時間 ¥ 15640.00 JPY /月 ¥ 159529.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 47.5 JPY /時間 ¥ 15640.00 JPY /月 ¥ 159529.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 95.3 JPY /時間 ¥ 31630.00 JPY /月 ¥ 322627.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 95.3 JPY /時間 ¥ 31630.00 JPY /月 ¥ 322627.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - linux ￥ 190.3 JPY /時間 ¥ 63480.00 JPY /月 ¥ 647497.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - windows ￥ 190.3 JPY /時間 ¥ 63480.00 JPY /月 ¥ 647497.00 JPY /年   ecs.r5.16xlarge 64 vCPU 512 GiB 20 Gbps 4000,000 PPS - - linux ￥ 714.8 JPY /時間 ¥ 205860.00 JPY /月 ¥ 2099773.00 JPY /年   ecs.r5.16xlarge 64 vCPU 512 GiB 20 Gbps 4000,000 PPS - - windows ￥ 714.8 JPY /時間 ¥ 205860.00 JPY /月 ¥ 2099773.00 JPY /年   ecs.r5.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.r5.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.r5.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.r5.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.r5.2xlarge 8 vCPU 64 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.r5.2xlarge 8 vCPU 64 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.r5.4xlarge 16 vCPU 128 GiB 5 Gbps 1000,000 PPS - - linux ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.r5.4xlarge 16 vCPU 128 GiB 5 Gbps 1000,000 PPS - - windows ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.r5.6xlarge 24 vCPU 192 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 268.1 JPY /時間 ¥ 77200.00 JPY /月 ¥ 787441.00 JPY /年   ecs.r5.6xlarge 24 vCPU 192 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 268.1 JPY /時間 ¥ 77200.00 JPY /月 ¥ 787441.00 JPY /年   ecs.r5.8xlarge 32 vCPU 256 GiB 10 Gbps 2000,000 PPS - - linux ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.r5.8xlarge 32 vCPU 256 GiB 10 Gbps 2000,000 PPS - - windows ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.scch5.16xlarge 64 vCPU 192 GiB 10 Gbps 4500,000 PPS - - linux ￥ 742.9 JPY /時間 ¥ 213820.00 JPY /月 ¥ 2180965.00 JPY /年   ecs.scch5.16xlarge 64 vCPU 192 GiB 10 Gbps 4500,000 PPS - - windows ￥ 742.9 JPY /時間 ¥ 213820.00 JPY /月 ¥ 2180965.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 25.8 JPY /時間 ¥ 7410.00 JPY /月 ¥ 75583.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 30.4 JPY /時間 ¥ 8740.00 JPY /月 ¥ 89149.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 51.6 JPY /時間 ¥ 14810.00 JPY /月 ¥ 151063.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 60.5 JPY /時間 ¥ 17480.00 JPY /月 ¥ 178297.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 103 JPY /時間 ¥ 29620.00 JPY /月 ¥ 302125.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 121 JPY /時間 ¥ 34850.00 JPY /月 ¥ 355471.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - linux ￥ 205.8 JPY /時間 ¥ 59240.00 JPY /月 ¥ 604249.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - windows ￥ 242 JPY /時間 ¥ 69690.00 JPY /月 ¥ 710839.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - linux ￥ 411.5 JPY /時間 ¥ 118480.00 JPY /月 ¥ 1208497.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - windows ￥ 484.1 JPY /時間 ¥ 139380.00 JPY /月 ¥ 1421677.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - linux ￥ 742.1 JPY /時間 ¥ 213700.00 JPY /月 ¥ 2179741.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - windows ￥ 892.3 JPY /時間 ¥ 257030.00 JPY /月 ¥ 2621707.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - linux ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - windows ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - linux ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - windows ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - linux ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - windows ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - linux ￥ 625.5 JPY /時間 ¥ 180120.00 JPY /月 ¥ 1837225.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - windows ￥ 625.5 JPY /時間 ¥ 180120.00 JPY /月 ¥ 1837225.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 15.2 JPY /時間 ¥ 4370.00 JPY /月 ¥ 44575.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 15.2 JPY /時間 ¥ 4370.00 JPY /月 ¥ 44575.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 30.3 JPY /時間 ¥ 8740.00 JPY /月 ¥ 89149.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 30.3 JPY /時間 ¥ 8740.00 JPY /月 ¥ 89149.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 60.4 JPY /時間 ¥ 17370.00 JPY /月 ¥ 177175.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 60.4 JPY /時間 ¥ 17370.00 JPY /月 ¥ 177175.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - linux ￥ 120.6 JPY /時間 ¥ 34730.00 JPY /月 ¥ 354247.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - windows ￥ 120.6 JPY /時間 ¥ 34730.00 JPY /月 ¥ 354247.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - linux ￥ 241.2 JPY /時間 ¥ 69460.00 JPY /月 ¥ 708493.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - windows ￥ 241.2 JPY /時間 ¥ 69460.00 JPY /月 ¥ 708493.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 15.9 JPY /時間 ¥ 4560.00 JPY /月 ¥ 46513.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 15.9 JPY /時間 ¥ 4560.00 JPY /月 ¥ 46513.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 31.7 JPY /時間 ¥ 9120.00 JPY /月 ¥ 93025.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 31.7 JPY /時間 ¥ 9120.00 JPY /月 ¥ 93025.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 63.3 JPY /時間 ¥ 18230.00 JPY /月 ¥ 185947.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 63.3 JPY /時間 ¥ 18230.00 JPY /月 ¥ 185947.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 126.6 JPY /時間 ¥ 36460.00 JPY /月 ¥ 371893.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 126.6 JPY /時間 ¥ 36460.00 JPY /月 ¥ 371893.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 253.1 JPY /時間 ¥ 72890.00 JPY /月 ¥ 743479.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 253.1 JPY /時間 ¥ 72890.00 JPY /月 ¥ 743479.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 20.3 JPY /時間 ¥ 5820.00 JPY /月 ¥ 59365.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 22.6 JPY /時間 ¥ 6560.00 JPY /月 ¥ 66913.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 40.5 JPY /時間 ¥ 11630.00 JPY /月 ¥ 118627.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 44.8 JPY /時間 ¥ 13000.00 JPY /月 ¥ 132601.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 80.9 JPY /時間 ¥ 23260.00 JPY /月 ¥ 237253.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 89.7 JPY /時間 ¥ 25880.00 JPY /月 ¥ 263977.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - linux ￥ 161.6 JPY /時間 ¥ 46510.00 JPY /月 ¥ 474403.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - windows ￥ 179.3 JPY /時間 ¥ 51640.00 JPY /月 ¥ 526729.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - linux ￥ 323.1 JPY /時間 ¥ 93010.00 JPY /月 ¥ 948703.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - windows ￥ 358.6 JPY /時間 ¥ 103270.00 JPY /月 ¥ 1053355.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - linux ￥ 561.2 JPY /時間 ¥ 161690.00 JPY /月 ¥ 1649239.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - windows ￥ 561.2 JPY /時間 ¥ 161690.00 JPY /月 ¥ 1649239.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 34.9 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 34.9 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - linux ￥ 488.7 JPY /時間 ¥ 140720.00 JPY /月 ¥ 1435345.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - windows ￥ 488.7 JPY /時間 ¥ 140720.00 JPY /月 ¥ 1435345.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 5.8 JPY /時間 ¥ 1530.00 JPY /月 ¥ 15607.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 5.8 JPY /時間 ¥ 1530.00 JPY /月 ¥ 15607.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 10.4 JPY /時間 ¥ 3070.00 JPY /月 ¥ 31315.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 3070.00 JPY /月 ¥ 31315.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 20.7 JPY /時間 ¥ 6120.00 JPY /月 ¥ 62425.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 20.7 JPY /時間 ¥ 6120.00 JPY /月 ¥ 62425.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 42.6 JPY /時間 ¥ 12240.00 JPY /月 ¥ 124849.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 42.6 JPY /時間 ¥ 12240.00 JPY /月 ¥ 124849.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 6.9 JPY /時間 ¥ 2140.00 JPY /月 ¥ 21829.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 6.9 JPY /時間 ¥ 2140.00 JPY /月 ¥ 21829.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 15 JPY /時間 ¥ 4250.00 JPY /月 ¥ 43351.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 15 JPY /時間 ¥ 4250.00 JPY /月 ¥ 43351.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 29.9 JPY /時間 ¥ 8490.00 JPY /月 ¥ 86599.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 29.9 JPY /時間 ¥ 8490.00 JPY /月 ¥ 86599.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 58.7 JPY /時間 ¥ 16980.00 JPY /月 ¥ 173197.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 58.7 JPY /時間 ¥ 16980.00 JPY /月 ¥ 173197.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 11.5 JPY /時間 ¥ 3310.00 JPY /月 ¥ 33763.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 11.5 JPY /時間 ¥ 3310.00 JPY /月 ¥ 33763.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 23 JPY /時間 ¥ 6620.00 JPY /月 ¥ 67525.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 23 JPY /時間 ¥ 6620.00 JPY /月 ¥ 67525.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 46 JPY /時間 ¥ 13230.00 JPY /月 ¥ 134947.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 46 JPY /時間 ¥ 13230.00 JPY /月 ¥ 134947.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 1.2 JPY /時間 ¥ 430.00 JPY /月 ¥ 4387.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 1.2 JPY /時間 ¥ 430.00 JPY /月 ¥ 4387.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 5.8 JPY /時間 ¥ 1690.00 JPY /月 ¥ 17239.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 5.8 JPY /時間 ¥ 1690.00 JPY /月 ¥ 17239.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 3.5 JPY /時間 ¥ 850.00 JPY /月 ¥ 8671.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 10.4 JPY /時間 ¥ 2930.00 JPY /月 ¥ 29887.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 2930.00 JPY /月 ¥ 29887.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - linux ￥ 1.2 JPY /時間 ¥ 320.00 JPY /月 ¥ 3265.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - windows ￥ 1.2 JPY /時間 ¥ 320.00 JPY /月 ¥ 3265.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 4.8 JPY /時間 ¥ 1380.00 JPY /月 ¥ 14077.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 4.8 JPY /時間 ¥ 1380.00 JPY /月 ¥ 14077.00 JPY /年    \ncn-shenzhen    instanceType vCPU  メモリ  イントラネット帯域幅 パケット転送速度  GPU/FPGA  ローカルストレージ  OS 従量課金 サブスクリプション サブスクリプション     ecs.c5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 15.9 JPY /時間 ¥ 4580.00 JPY /月 ¥ 46717.00 JPY /年   ecs.c5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 15.9 JPY /時間 ¥ 4580.00 JPY /月 ¥ 46717.00 JPY /年   ecs.c5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 31.8 JPY /時間 ¥ 9150.00 JPY /月 ¥ 93331.00 JPY /年   ecs.c5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 31.8 JPY /時間 ¥ 9150.00 JPY /月 ¥ 93331.00 JPY /年   ecs.c5.2xlarge 8 vCPU 16 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 63.6 JPY /時間 ¥ 18300.00 JPY /月 ¥ 186661.00 JPY /年   ecs.c5.2xlarge 8 vCPU 16 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 63.6 JPY /時間 ¥ 18300.00 JPY /月 ¥ 186661.00 JPY /年   ecs.c5.4xlarge 16 vCPU 32 GiB 5 Gbps 1000,000 PPS - - linux ￥ 127.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.c5.4xlarge 16 vCPU 32 GiB 5 Gbps 1000,000 PPS - - windows ￥ 127.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.c5.6xlarge 24 vCPU 48 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 190.6 JPY /時間 ¥ 54890.00 JPY /月 ¥ 559879.00 JPY /年   ecs.c5.6xlarge 24 vCPU 48 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 190.6 JPY /時間 ¥ 54890.00 JPY /月 ¥ 559879.00 JPY /年   ecs.c5.8xlarge 32 vCPU 64 GiB 10 Gbps 2000,000 PPS - - linux ￥ 254.1 JPY /時間 ¥ 73180.00 JPY /月 ¥ 746437.00 JPY /年   ecs.c5.8xlarge 32 vCPU 64 GiB 10 Gbps 2000,000 PPS - - windows ￥ 254.1 JPY /時間 ¥ 73180.00 JPY /月 ¥ 746437.00 JPY /年   ecs.c5.16xlarge 64 vCPU 128 GiB 20 Gbps 4000,000 PPS - - linux ￥ 508.2 JPY /時間 ¥ 146350.00 JPY /月 ¥ 1492771.00 JPY /年   ecs.c5.16xlarge 64 vCPU 128 GiB 20 Gbps 4000,000 PPS - - windows ￥ 508.2 JPY /時間 ¥ 146350.00 JPY /月 ¥ 1492771.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro linux ￥ 106.6 JPY /時間 ¥ 30710.00 JPY /月 ¥ 313243.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro windows ￥ 106.6 JPY /時間 ¥ 30710.00 JPY /月 ¥ 313243.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro linux ￥ 213.3 JPY /時間 ¥ 61420.00 JPY /月 ¥ 626485.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro windows ￥ 213.3 JPY /時間 ¥ 61420.00 JPY /月 ¥ 626485.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro linux ￥ 319.7 JPY /時間 ¥ 92120.00 JPY /月 ¥ 939625.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro windows ￥ 319.7 JPY /時間 ¥ 92120.00 JPY /月 ¥ 939625.00 JPY /年   ecs.d1.8xlarge 32 vCPU 128 GiB 10 Gbps 1000,000 PPS - local_hdd_pro linux ￥ 426.5 JPY /時間 ¥ 122830.00 JPY /月 ¥ 1252867.00 JPY /年   ecs.d1.8xlarge 32 vCPU 128 GiB 10 Gbps 1000,000 PPS - local_hdd_pro windows ￥ 426.5 JPY /時間 ¥ 122830.00 JPY /月 ¥ 1252867.00 JPY /年   ecs.d1.14xlarge 56 vCPU 224 GiB 17 Gbps 1800,000 PPS - local_hdd_pro linux ￥ 746.3 JPY /時間 ¥ 214950.00 JPY /月 ¥ 2192491.00 JPY /年   ecs.d1.14xlarge 56 vCPU 224 GiB 17 Gbps 1800,000 PPS - local_hdd_pro windows ￥ 746.3 JPY /時間 ¥ 214950.00 JPY /月 ¥ 2192491.00 JPY /年   ecs.e3.small 1 vCPU 8 GiB - - - - linux ￥ 14.5 JPY /時間 ¥ 4280.00 JPY /月 ¥ 43657.00 JPY /年   ecs.e3.small 1 vCPU 8 GiB - - - - windows ￥ 14.5 JPY /時間 ¥ 4280.00 JPY /月 ¥ 43657.00 JPY /年   ecs.e3.medium 2 vCPU 16 GiB - - - - linux ￥ 29.1 JPY /時間 ¥ 8900.00 JPY /月 ¥ 90781.00 JPY /年   ecs.e3.medium 2 vCPU 16 GiB - - - - windows ￥ 29.1 JPY /時間 ¥ 8900.00 JPY /月 ¥ 90781.00 JPY /年   ecs.e3.large 4 vCPU 32 GiB - - - - linux ￥ 58.1 JPY /時間 ¥ 18130.00 JPY /月 ¥ 184927.00 JPY /年   ecs.e3.large 4 vCPU 32 GiB - - - - windows ￥ 58.1 JPY /時間 ¥ 18130.00 JPY /月 ¥ 184927.00 JPY /年   ecs.e3.xlarge 8 vCPU 64 GiB - - - - linux ￥ 116.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.e3.xlarge 8 vCPU 64 GiB - - - - windows ￥ 116.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.e3.3xlarge 16 vCPU 128 GiB - - - - linux ￥ 231.8 JPY /時間 ¥ 73510.00 JPY /月 ¥ 749803.00 JPY /年   ecs.e3.3xlarge 16 vCPU 128 GiB - - - - windows ￥ 231.8 JPY /時間 ¥ 73510.00 JPY /月 ¥ 749803.00 JPY /年   ecs.g5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.g5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.g5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 35 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.g5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 35 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.g5.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.g5.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.g5.4xlarge 16 vCPU 64 GiB 5 Gbps 1000,000 PPS - - linux ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.g5.4xlarge 16 vCPU 64 GiB 5 Gbps 1000,000 PPS - - windows ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.g5.6xlarge 24 vCPU 96 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 209.5 JPY /時間 ¥ 60310.00 JPY /月 ¥ 615163.00 JPY /年   ecs.g5.6xlarge 24 vCPU 96 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 209.5 JPY /時間 ¥ 60310.00 JPY /月 ¥ 615163.00 JPY /年   ecs.g5.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS - - linux ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.g5.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS - - windows ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.g5.16xlarge 64 vCPU 256 GiB 20 Gbps 4000,000 PPS - - linux ￥ 558.5 JPY /時間 ¥ 160830.00 JPY /月 ¥ 1640467.00 JPY /年   ecs.g5.16xlarge 64 vCPU 256 GiB 20 Gbps 4000,000 PPS - - windows ￥ 558.5 JPY /時間 ¥ 160830.00 JPY /月 ¥ 1640467.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 251.9 JPY /時間 ¥ 72560.00 JPY /月 ¥ 740113.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 251.9 JPY /時間 ¥ 72560.00 JPY /月 ¥ 740113.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 503.9 JPY /時間 ¥ 145110.00 JPY /月 ¥ 1480123.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 503.9 JPY /時間 ¥ 145110.00 JPY /月 ¥ 1480123.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 303.3 JPY /時間 ¥ 87370.00 JPY /月 ¥ 891175.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 303.3 JPY /時間 ¥ 87370.00 JPY /月 ¥ 891175.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 606.7 JPY /時間 ¥ 174730.00 JPY /月 ¥ 1782247.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 606.7 JPY /時間 ¥ 174730.00 JPY /月 ¥ 1782247.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 1213.4 JPY /時間 ¥ 349460.00 JPY /月 ¥ 3564493.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 1213.4 JPY /時間 ¥ 349460.00 JPY /月 ¥ 3564493.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 2426.8 JPY /時間 ¥ 698910.00 JPY /月 ¥ 7128883.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 2426.8 JPY /時間 ¥ 698910.00 JPY /月 ¥ 7128883.00 JPY /年   ecs.hfc5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 19.1 JPY /時間 ¥ 5500.00 JPY /月 ¥ 56101.00 JPY /年   ecs.hfc5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 19.1 JPY /時間 ¥ 5500.00 JPY /月 ¥ 56101.00 JPY /年   ecs.hfc5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 38.2 JPY /時間 ¥ 10990.00 JPY /月 ¥ 112099.00 JPY /年   ecs.hfc5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 38.2 JPY /時間 ¥ 10990.00 JPY /月 ¥ 112099.00 JPY /年   ecs.hfc5.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 76.4 JPY /時間 ¥ 21980.00 JPY /月 ¥ 224197.00 JPY /年   ecs.hfc5.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 76.4 JPY /時間 ¥ 21980.00 JPY /月 ¥ 224197.00 JPY /年   ecs.hfc5.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 152.7 JPY /時間 ¥ 43960.00 JPY /月 ¥ 448393.00 JPY /年   ecs.hfc5.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 152.7 JPY /時間 ¥ 43960.00 JPY /月 ¥ 448393.00 JPY /年   ecs.hfc5.6xlarge 24 vCPU 48 GiB 4.5 Gbps 2000,000 PPS - - linux ￥ 229 JPY /時間 ¥ 65940.00 JPY /月 ¥ 672589.00 JPY /年   ecs.hfc5.6xlarge 24 vCPU 48 GiB 4.5 Gbps 2000,000 PPS - - windows ￥ 229 JPY /時間 ¥ 65940.00 JPY /月 ¥ 672589.00 JPY /年   ecs.hfc5.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 305.3 JPY /時間 ¥ 87920.00 JPY /月 ¥ 896785.00 JPY /年   ecs.hfc5.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 305.3 JPY /時間 ¥ 87920.00 JPY /月 ¥ 896785.00 JPY /年   ecs.hfg5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 21.1 JPY /時間 ¥ 6070.00 JPY /月 ¥ 61915.00 JPY /年   ecs.hfg5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 21.1 JPY /時間 ¥ 6070.00 JPY /月 ¥ 61915.00 JPY /年   ecs.hfg5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 42.2 JPY /時間 ¥ 12130.00 JPY /月 ¥ 123727.00 JPY /年   ecs.hfg5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 42.2 JPY /時間 ¥ 12130.00 JPY /月 ¥ 123727.00 JPY /年   ecs.hfg5.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 84.3 JPY /時間 ¥ 24260.00 JPY /月 ¥ 247453.00 JPY /年   ecs.hfg5.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 84.3 JPY /時間 ¥ 24260.00 JPY /月 ¥ 247453.00 JPY /年   ecs.hfg5.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 168.5 JPY /時間 ¥ 48520.00 JPY /月 ¥ 494905.00 JPY /年   ecs.hfg5.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 168.5 JPY /時間 ¥ 48520.00 JPY /月 ¥ 494905.00 JPY /年   ecs.hfg5.6xlarge 24 vCPU 96 GiB 4.5 Gbps 2000,000 PPS - - linux ￥ 252.7 JPY /時間 ¥ 72780.00 JPY /月 ¥ 742357.00 JPY /年   ecs.hfg5.6xlarge 24 vCPU 96 GiB 4.5 Gbps 2000,000 PPS - - windows ￥ 252.7 JPY /時間 ¥ 72780.00 JPY /月 ¥ 742357.00 JPY /年   ecs.hfg5.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 337 JPY /時間 ¥ 97030.00 JPY /月 ¥ 989707.00 JPY /年   ecs.hfg5.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 337 JPY /時間 ¥ 97030.00 JPY /月 ¥ 989707.00 JPY /年   ecs.hfg5.14xlarge 56 vCPU 160 GiB 10 Gbps 4000,000 PPS - - linux ￥ 589.6 JPY /時間 ¥ 169810.00 JPY /月 ¥ 1732063.00 JPY /年   ecs.hfg5.14xlarge 56 vCPU 160 GiB 10 Gbps 4000,000 PPS - - windows ￥ 589.6 JPY /時間 ¥ 169810.00 JPY /月 ¥ 1732063.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro linux ￥ 39.1 JPY /時間 ¥ 11380.00 JPY /月 ¥ 116077.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro windows ￥ 39.1 JPY /時間 ¥ 11380.00 JPY /月 ¥ 116077.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro linux ￥ 79.4 JPY /時間 ¥ 22750.00 JPY /月 ¥ 232051.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro windows ￥ 79.4 JPY /時間 ¥ 22750.00 JPY /月 ¥ 232051.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro linux ￥ 157.6 JPY /時間 ¥ 45500.00 JPY /月 ¥ 464101.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro windows ￥ 157.6 JPY /時間 ¥ 45500.00 JPY /月 ¥ 464101.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro linux ￥ 316.3 JPY /時間 ¥ 91000.00 JPY /月 ¥ 928201.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro windows ￥ 316.3 JPY /時間 ¥ 91000.00 JPY /月 ¥ 928201.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro linux ￥ 553.2 JPY /時間 ¥ 159240.00 JPY /月 ¥ 1624249.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro windows ￥ 553.2 JPY /時間 ¥ 159240.00 JPY /月 ¥ 1624249.00 JPY /年   ecs.i2.xlarge 4 vCPU 32 GiB 1 Gbps 500,000 PPS - local_ssd_pro linux ￥ 65.2 JPY /時間 ¥ 18770.00 JPY /月 ¥ 191455.00 JPY /年   ecs.i2.xlarge 4 vCPU 32 GiB 1 Gbps 500,000 PPS - local_ssd_pro windows ￥ 65.2 JPY /時間 ¥ 18770.00 JPY /月 ¥ 191455.00 JPY /年   ecs.i2.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - local_ssd_pro linux ￥ 130.3 JPY /時間 ¥ 37530.00 JPY /月 ¥ 382807.00 JPY /年   ecs.i2.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - local_ssd_pro windows ￥ 130.3 JPY /時間 ¥ 37530.00 JPY /月 ¥ 382807.00 JPY /年   ecs.i2.4xlarge 16 vCPU 128 GiB 3 Gbps 1500,000 PPS - local_ssd_pro linux ￥ 260.6 JPY /時間 ¥ 75050.00 JPY /月 ¥ 765511.00 JPY /年   ecs.i2.4xlarge 16 vCPU 128 GiB 3 Gbps 1500,000 PPS - local_ssd_pro windows ￥ 260.6 JPY /時間 ¥ 75050.00 JPY /月 ¥ 765511.00 JPY /年   ecs.i2.8xlarge 32 vCPU 256 GiB 6 Gbps 2000,000 PPS - local_ssd_pro linux ￥ 521.2 JPY /時間 ¥ 150100.00 JPY /月 ¥ 1531021.00 JPY /年   ecs.i2.8xlarge 32 vCPU 256 GiB 6 Gbps 2000,000 PPS - local_ssd_pro windows ￥ 521.2 JPY /時間 ¥ 150100.00 JPY /月 ¥ 1531021.00 JPY /年   ecs.i2.16xlarge 64 vCPU 512 GiB 10 Gbps 4000,000 PPS - local_ssd_pro linux ￥ 1042.4 JPY /時間 ¥ 300200.00 JPY /月 ¥ 3062041.00 JPY /年   ecs.i2.16xlarge 64 vCPU 512 GiB 10 Gbps 4000,000 PPS - local_ssd_pro windows ￥ 1042.4 JPY /時間 ¥ 300200.00 JPY /月 ¥ 3062041.00 JPY /年   ecs.n1.tiny 1 vCPU 1 GiB - - - - linux ￥ 3.3 JPY /時間 ¥ 1050.00 JPY /月 ¥ 10711.00 JPY /年   ecs.n1.tiny 1 vCPU 1 GiB - - - - windows ￥ 3.3 JPY /時間 ¥ 1050.00 JPY /月 ¥ 10711.00 JPY /年   ecs.n1.small 1 vCPU 2 GiB - - - - linux ￥ 4.8 JPY /時間 ¥ 1490.00 JPY /月 ¥ 15199.00 JPY /年   ecs.n1.small 1 vCPU 2 GiB - - - - windows ￥ 4.8 JPY /時間 ¥ 1490.00 JPY /月 ¥ 15199.00 JPY /年   ecs.n1.medium 2 vCPU 4 GiB - - - - linux ￥ 11 JPY /時間 ¥ 3290.00 JPY /月 ¥ 33559.00 JPY /年   ecs.n1.medium 2 vCPU 4 GiB - - - - windows ￥ 11 JPY /時間 ¥ 3290.00 JPY /月 ¥ 33559.00 JPY /年   ecs.n1.large 4 vCPU 8 GiB - - - - linux ￥ 22.7 JPY /時間 ¥ 6920.00 JPY /月 ¥ 70585.00 JPY /年   ecs.n1.large 4 vCPU 8 GiB - - - - windows ￥ 22.7 JPY /時間 ¥ 6920.00 JPY /月 ¥ 70585.00 JPY /年   ecs.n1.xlarge 8 vCPU 16 GiB - - - - linux ￥ 45.1 JPY /時間 ¥ 14170.00 JPY /月 ¥ 144535.00 JPY /年   ecs.n1.xlarge 8 vCPU 16 GiB - - - - windows ￥ 45.1 JPY /時間 ¥ 14170.00 JPY /月 ¥ 144535.00 JPY /年   ecs.n1.3xlarge 16 vCPU 32 GiB - - - - linux ￥ 90.4 JPY /時間 ¥ 28670.00 JPY /月 ¥ 292435.00 JPY /年   ecs.n1.3xlarge 16 vCPU 32 GiB - - - - windows ￥ 90.4 JPY /時間 ¥ 28670.00 JPY /月 ¥ 292435.00 JPY /年   ecs.n1.7xlarge 32 vCPU 64 GiB - - - - linux ￥ 180.7 JPY /時間 ¥ 57670.00 JPY /月 ¥ 588235.00 JPY /年   ecs.n1.7xlarge 32 vCPU 64 GiB - - - - windows ￥ 180.7 JPY /時間 ¥ 57670.00 JPY /月 ¥ 588235.00 JPY /年   ecs.n2.small 1 vCPU 4 GiB - - - - linux ￥ 8.3 JPY /時間 ¥ 2380.00 JPY /月 ¥ 24277.00 JPY /年   ecs.n2.small 1 vCPU 4 GiB - - - - windows ￥ 8.3 JPY /時間 ¥ 2380.00 JPY /月 ¥ 24277.00 JPY /年   ecs.n2.medium 2 vCPU 8 GiB - - - - linux ￥ 17.2 JPY /時間 ¥ 5080.00 JPY /月 ¥ 51817.00 JPY /年   ecs.n2.medium 2 vCPU 8 GiB - - - - windows ￥ 17.2 JPY /時間 ¥ 5080.00 JPY /月 ¥ 51817.00 JPY /年   ecs.n2.large 4 vCPU 16 GiB - - - - linux ￥ 34.3 JPY /時間 ¥ 10480.00 JPY /月 ¥ 106897.00 JPY /年   ecs.n2.large 4 vCPU 16 GiB - - - - windows ￥ 34.3 JPY /時間 ¥ 10480.00 JPY /月 ¥ 106897.00 JPY /年   ecs.n2.xlarge 8 vCPU 32 GiB - - - - linux ￥ 68.5 JPY /時間 ¥ 21290.00 JPY /月 ¥ 217159.00 JPY /年   ecs.n2.xlarge 8 vCPU 32 GiB - - - - windows ￥ 68.5 JPY /時間 ¥ 21290.00 JPY /月 ¥ 217159.00 JPY /年   ecs.n2.3xlarge 16 vCPU 64 GiB - - - - linux ￥ 137 JPY /時間 ¥ 42900.00 JPY /月 ¥ 437581.00 JPY /年   ecs.n2.3xlarge 16 vCPU 64 GiB - - - - windows ￥ 137 JPY /時間 ¥ 42900.00 JPY /月 ¥ 437581.00 JPY /年   ecs.n2.7xlarge 32 vCPU 128 GiB - - - - linux ￥ 273.6 JPY /時間 ¥ 86120.00 JPY /月 ¥ 878425.00 JPY /年   ecs.n2.7xlarge 32 vCPU 128 GiB - - - - windows ￥ 273.6 JPY /時間 ¥ 86120.00 JPY /月 ¥ 878425.00 JPY /年   ecs.r5.16xlarge 64 vCPU 512 GiB 20 Gbps 4000,000 PPS - - linux ￥ 714.8 JPY /時間 ¥ 205860.00 JPY /月 ¥ 2099773.00 JPY /年   ecs.r5.16xlarge 64 vCPU 512 GiB 20 Gbps 4000,000 PPS - - windows ￥ 714.8 JPY /時間 ¥ 205860.00 JPY /月 ¥ 2099773.00 JPY /年   ecs.r5.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.r5.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.r5.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.r5.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.r5.2xlarge 8 vCPU 64 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.r5.2xlarge 8 vCPU 64 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.r5.4xlarge 16 vCPU 128 GiB 5 Gbps 1000,000 PPS - - linux ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.r5.4xlarge 16 vCPU 128 GiB 5 Gbps 1000,000 PPS - - windows ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.r5.6xlarge 24 vCPU 192 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 268.1 JPY /時間 ¥ 77200.00 JPY /月 ¥ 787441.00 JPY /年   ecs.r5.6xlarge 24 vCPU 192 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 268.1 JPY /時間 ¥ 77200.00 JPY /月 ¥ 787441.00 JPY /年   ecs.r5.8xlarge 32 vCPU 256 GiB 10 Gbps 2000,000 PPS - - linux ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.r5.8xlarge 32 vCPU 256 GiB 10 Gbps 2000,000 PPS - - windows ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 25.8 JPY /時間 ¥ 7410.00 JPY /月 ¥ 75583.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 30.4 JPY /時間 ¥ 8740.00 JPY /月 ¥ 89149.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 51.6 JPY /時間 ¥ 14810.00 JPY /月 ¥ 151063.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 60.5 JPY /時間 ¥ 17480.00 JPY /月 ¥ 178297.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 103 JPY /時間 ¥ 29620.00 JPY /月 ¥ 302125.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 121 JPY /時間 ¥ 34850.00 JPY /月 ¥ 355471.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - linux ￥ 205.8 JPY /時間 ¥ 59240.00 JPY /月 ¥ 604249.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - windows ￥ 242 JPY /時間 ¥ 69690.00 JPY /月 ¥ 710839.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - linux ￥ 411.5 JPY /時間 ¥ 118480.00 JPY /月 ¥ 1208497.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - windows ￥ 484.1 JPY /時間 ¥ 139380.00 JPY /月 ¥ 1421677.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - linux ￥ 742.1 JPY /時間 ¥ 213700.00 JPY /月 ¥ 2179741.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - windows ￥ 892.3 JPY /時間 ¥ 257030.00 JPY /月 ¥ 2621707.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - linux ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - windows ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - linux ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - windows ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - linux ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - windows ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - linux ￥ 625.5 JPY /時間 ¥ 180120.00 JPY /月 ¥ 1837225.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - windows ￥ 625.5 JPY /時間 ¥ 180120.00 JPY /月 ¥ 1837225.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 15.2 JPY /時間 ¥ 4370.00 JPY /月 ¥ 44575.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 15.2 JPY /時間 ¥ 4370.00 JPY /月 ¥ 44575.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 30.3 JPY /時間 ¥ 8740.00 JPY /月 ¥ 89149.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 60.4 JPY /時間 ¥ 17370.00 JPY /月 ¥ 177175.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 60.4 JPY /時間 ¥ 17370.00 JPY /月 ¥ 177175.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - linux ￥ 120.6 JPY /時間 ¥ 34730.00 JPY /月 ¥ 354247.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - windows ￥ 120.6 JPY /時間 ¥ 34730.00 JPY /月 ¥ 354247.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - linux ￥ 241.2 JPY /時間 ¥ 69460.00 JPY /月 ¥ 708493.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - windows ￥ 241.2 JPY /時間 ¥ 69460.00 JPY /月 ¥ 708493.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 15.9 JPY /時間 ¥ 4560.00 JPY /月 ¥ 46513.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 15.9 JPY /時間 ¥ 4560.00 JPY /月 ¥ 46513.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 31.7 JPY /時間 ¥ 9120.00 JPY /月 ¥ 93025.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 31.7 JPY /時間 ¥ 9120.00 JPY /月 ¥ 93025.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 63.3 JPY /時間 ¥ 18230.00 JPY /月 ¥ 185947.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 63.3 JPY /時間 ¥ 18230.00 JPY /月 ¥ 185947.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 126.6 JPY /時間 ¥ 36460.00 JPY /月 ¥ 371893.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 126.6 JPY /時間 ¥ 36460.00 JPY /月 ¥ 371893.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 253.1 JPY /時間 ¥ 72890.00 JPY /月 ¥ 743479.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 253.1 JPY /時間 ¥ 72890.00 JPY /月 ¥ 743479.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 20.3 JPY /時間 ¥ 5820.00 JPY /月 ¥ 59365.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 22.6 JPY /時間 ¥ 6560.00 JPY /月 ¥ 66913.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 40.5 JPY /時間 ¥ 11630.00 JPY /月 ¥ 118627.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 44.8 JPY /時間 ¥ 13000.00 JPY /月 ¥ 132601.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 80.9 JPY /時間 ¥ 23260.00 JPY /月 ¥ 237253.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 89.7 JPY /時間 ¥ 25880.00 JPY /月 ¥ 263977.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - linux ￥ 161.6 JPY /時間 ¥ 46510.00 JPY /月 ¥ 474403.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - windows ￥ 179.3 JPY /時間 ¥ 51640.00 JPY /月 ¥ 526729.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - linux ￥ 323.1 JPY /時間 ¥ 93010.00 JPY /月 ¥ 948703.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - windows ￥ 358.6 JPY /時間 ¥ 103270.00 JPY /月 ¥ 1053355.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - linux ￥ 561.2 JPY /時間 ¥ 161690.00 JPY /月 ¥ 1649239.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - windows ￥ 561.2 JPY /時間 ¥ 161690.00 JPY /月 ¥ 1649239.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 34.9 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 34.9 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - windows ￥ 488.7 JPY /時間 ¥ 140720.00 JPY /月 ¥ 1435345.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 5.8 JPY /時間 ¥ 1530.00 JPY /月 ¥ 15607.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 5.8 JPY /時間 ¥ 1530.00 JPY /月 ¥ 15607.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 10.4 JPY /時間 ¥ 3070.00 JPY /月 ¥ 31315.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 3070.00 JPY /月 ¥ 31315.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 20.7 JPY /時間 ¥ 6120.00 JPY /月 ¥ 62425.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 20.7 JPY /時間 ¥ 6120.00 JPY /月 ¥ 62425.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 42.6 JPY /時間 ¥ 12240.00 JPY /月 ¥ 124849.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 42.6 JPY /時間 ¥ 12240.00 JPY /月 ¥ 124849.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 6.9 JPY /時間 ¥ 2140.00 JPY /月 ¥ 21829.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 15 JPY /時間 ¥ 4250.00 JPY /月 ¥ 43351.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 15 JPY /時間 ¥ 4250.00 JPY /月 ¥ 43351.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 29.9 JPY /時間 ¥ 8490.00 JPY /月 ¥ 86599.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 58.7 JPY /時間 ¥ 16980.00 JPY /月 ¥ 173197.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 58.7 JPY /時間 ¥ 16980.00 JPY /月 ¥ 173197.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 11.5 JPY /時間 ¥ 3310.00 JPY /月 ¥ 33763.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 11.5 JPY /時間 ¥ 3310.00 JPY /月 ¥ 33763.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 23 JPY /時間 ¥ 6620.00 JPY /月 ¥ 67525.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 23 JPY /時間 ¥ 6620.00 JPY /月 ¥ 67525.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 46 JPY /時間 ¥ 13230.00 JPY /月 ¥ 134947.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 46 JPY /時間 ¥ 13230.00 JPY /月 ¥ 134947.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 1.2 JPY /時間 ¥ 430.00 JPY /月 ¥ 4387.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 1.2 JPY /時間 ¥ 430.00 JPY /月 ¥ 4387.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 5.8 JPY /時間 ¥ 1690.00 JPY /月 ¥ 17239.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 5.8 JPY /時間 ¥ 1690.00 JPY /月 ¥ 17239.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 3.5 JPY /時間 ¥ 850.00 JPY /月 ¥ 8671.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 3.5 JPY /時間 ¥ 850.00 JPY /月 ¥ 8671.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 10.4 JPY /時間 ¥ 2930.00 JPY /月 ¥ 29887.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 2930.00 JPY /月 ¥ 29887.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - linux ￥ 1.2 JPY /時間 ¥ 320.00 JPY /月 ¥ 3265.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - windows ￥ 1.2 JPY /時間 ¥ 320.00 JPY /月 ¥ 3265.00 JPY /年    \ncn-zhangjiakou    instanceType vCPU  メモリ  イントラネット帯域幅 パケット転送速度  GPU/FPGA  ローカルストレージ  OS 従量課金 サブスクリプション サブスクリプション     ecs.c5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 15.9 JPY /時間 ¥ 4580.00 JPY /月 ¥ 46717.00 JPY /年   ecs.c5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 15.9 JPY /時間 ¥ 4580.00 JPY /月 ¥ 46717.00 JPY /年   ecs.c5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 31.8 JPY /時間 ¥ 9150.00 JPY /月 ¥ 93331.00 JPY /年   ecs.c5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 31.8 JPY /時間 ¥ 9150.00 JPY /月 ¥ 93331.00 JPY /年   ecs.c5.2xlarge 8 vCPU 16 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 63.6 JPY /時間 ¥ 18300.00 JPY /月 ¥ 186661.00 JPY /年   ecs.c5.2xlarge 8 vCPU 16 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 63.6 JPY /時間 ¥ 18300.00 JPY /月 ¥ 186661.00 JPY /年   ecs.c5.4xlarge 16 vCPU 32 GiB 5 Gbps 1000,000 PPS - - linux ￥ 127.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.c5.4xlarge 16 vCPU 32 GiB 5 Gbps 1000,000 PPS - - windows ￥ 127.1 JPY /時間 ¥ 36590.00 JPY /月 ¥ 373219.00 JPY /年   ecs.c5.6xlarge 24 vCPU 48 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 190.6 JPY /時間 ¥ 54890.00 JPY /月 ¥ 559879.00 JPY /年   ecs.c5.6xlarge 24 vCPU 48 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 190.6 JPY /時間 ¥ 54890.00 JPY /月 ¥ 559879.00 JPY /年   ecs.c5.8xlarge 32 vCPU 64 GiB 10 Gbps 2000,000 PPS - - linux ￥ 254.1 JPY /時間 ¥ 73180.00 JPY /月 ¥ 746437.00 JPY /年   ecs.c5.8xlarge 32 vCPU 64 GiB 10 Gbps 2000,000 PPS - - windows ￥ 254.1 JPY /時間 ¥ 73180.00 JPY /月 ¥ 746437.00 JPY /年   ecs.c5.16xlarge 64 vCPU 128 GiB 20 Gbps 4000,000 PPS - - linux ￥ 508.2 JPY /時間 ¥ 146350.00 JPY /月 ¥ 1492771.00 JPY /年   ecs.c5.16xlarge 64 vCPU 128 GiB 20 Gbps 4000,000 PPS - - windows ￥ 508.2 JPY /時間 ¥ 146350.00 JPY /月 ¥ 1492771.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro linux ￥ 106.6 JPY /時間 ¥ 30710.00 JPY /月 ¥ 313243.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro windows ￥ 106.6 JPY /時間 ¥ 30710.00 JPY /月 ¥ 313243.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro linux ￥ 213.3 JPY /時間 ¥ 61420.00 JPY /月 ¥ 626485.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro windows ￥ 213.3 JPY /時間 ¥ 61420.00 JPY /月 ¥ 626485.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro linux ￥ 319.7 JPY /時間 ¥ 92120.00 JPY /月 ¥ 939625.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro windows ￥ 319.7 JPY /時間 ¥ 92120.00 JPY /月 ¥ 939625.00 JPY /年   ecs.d1.8xlarge 32 vCPU 128 GiB 10 Gbps 1000,000 PPS - local_hdd_pro linux ￥ 426.5 JPY /時間 ¥ 122830.00 JPY /月 ¥ 1252867.00 JPY /年   ecs.d1.8xlarge 32 vCPU 128 GiB 10 Gbps 1000,000 PPS - local_hdd_pro windows ￥ 426.5 JPY /時間 ¥ 122830.00 JPY /月 ¥ 1252867.00 JPY /年   ecs.d1.14xlarge 56 vCPU 224 GiB 17 Gbps 1800,000 PPS - local_hdd_pro linux ￥ 746.3 JPY /時間 ¥ 214950.00 JPY /月 ¥ 2192491.00 JPY /年   ecs.d1.14xlarge 56 vCPU 224 GiB 17 Gbps 1800,000 PPS - local_hdd_pro windows ￥ 746.3 JPY /時間 ¥ 214950.00 JPY /月 ¥ 2192491.00 JPY /年   ecs.g5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.g5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.g5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 35 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.g5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 35 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.g5.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.g5.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.g5.4xlarge 16 vCPU 64 GiB 5 Gbps 1000,000 PPS - - linux ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.g5.4xlarge 16 vCPU 64 GiB 5 Gbps 1000,000 PPS - - windows ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.g5.6xlarge 24 vCPU 96 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 209.5 JPY /時間 ¥ 60310.00 JPY /月 ¥ 615163.00 JPY /年   ecs.g5.6xlarge 24 vCPU 96 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 209.5 JPY /時間 ¥ 60310.00 JPY /月 ¥ 615163.00 JPY /年   ecs.g5.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS - - linux ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.g5.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS - - windows ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.g5.16xlarge 64 vCPU 256 GiB 20 Gbps 4000,000 PPS - - linux ￥ 558.5 JPY /時間 ¥ 160830.00 JPY /月 ¥ 1640467.00 JPY /年   ecs.g5.16xlarge 64 vCPU 256 GiB 20 Gbps 4000,000 PPS - - windows ￥ 558.5 JPY /時間 ¥ 160830.00 JPY /月 ¥ 1640467.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 303.3 JPY /時間 ¥ 87370.00 JPY /月 ¥ 891175.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 303.3 JPY /時間 ¥ 87370.00 JPY /月 ¥ 891175.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 606.7 JPY /時間 ¥ 174730.00 JPY /月 ¥ 1782247.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 606.7 JPY /時間 ¥ 174730.00 JPY /月 ¥ 1782247.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 1213.4 JPY /時間 ¥ 349460.00 JPY /月 ¥ 3564493.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 1213.4 JPY /時間 ¥ 349460.00 JPY /月 ¥ 3564493.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 2426.8 JPY /時間 ¥ 698910.00 JPY /月 ¥ 7128883.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 2426.8 JPY /時間 ¥ 698910.00 JPY /月 ¥ 7128883.00 JPY /年   ecs.gn6v-c8g1.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS NVIDIA V100 - linux ￥ 471 JPY /時間 ¥ 135630.00 JPY /月 ¥ 1383427.00 JPY /年   ecs.gn6v-c8g1.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS NVIDIA V100 - windows ￥ 471 JPY /時間 ¥ 135630.00 JPY /月 ¥ 1383427.00 JPY /年   ecs.gn6v-c8g1.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS NVIDIA V100 - linux ￥ 1883.7 JPY /時間 ¥ 542520.00 JPY /月 ¥ 5533705.00 JPY /年   ecs.gn6v-c8g1.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS NVIDIA V100 - windows ￥ 1883.7 JPY /時間 ¥ 542520.00 JPY /月 ¥ 5533705.00 JPY /年   ecs.gn6v-c8g1.16xlarge 64 vCPU 256 GiB 20 Gbps 2500,000 PPS NVIDIA V100 - linux ￥ 3767.4 JPY /時間 ¥ 1085040.00 JPY /月 ¥ 11067409.00 JPY /年   ecs.gn6v-c8g1.16xlarge 64 vCPU 256 GiB 20 Gbps 2500,000 PPS NVIDIA V100 - windows ￥ 3767.4 JPY /時間 ¥ 1085040.00 JPY /月 ¥ 11067409.00 JPY /年   ecs.hfc5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 19.1 JPY /時間 ¥ 5500.00 JPY /月 ¥ 56101.00 JPY /年   ecs.hfc5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 19.1 JPY /時間 ¥ 5500.00 JPY /月 ¥ 56101.00 JPY /年   ecs.hfc5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 38.2 JPY /時間 ¥ 10990.00 JPY /月 ¥ 112099.00 JPY /年   ecs.hfc5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 38.2 JPY /時間 ¥ 10990.00 JPY /月 ¥ 112099.00 JPY /年   ecs.hfc5.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 76.4 JPY /時間 ¥ 21980.00 JPY /月 ¥ 224197.00 JPY /年   ecs.hfc5.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 76.4 JPY /時間 ¥ 21980.00 JPY /月 ¥ 224197.00 JPY /年   ecs.hfc5.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 152.7 JPY /時間 ¥ 43960.00 JPY /月 ¥ 448393.00 JPY /年   ecs.hfc5.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 152.7 JPY /時間 ¥ 43960.00 JPY /月 ¥ 448393.00 JPY /年   ecs.hfc5.6xlarge 24 vCPU 48 GiB 4.5 Gbps 2000,000 PPS - - linux ￥ 229 JPY /時間 ¥ 65940.00 JPY /月 ¥ 672589.00 JPY /年   ecs.hfc5.6xlarge 24 vCPU 48 GiB 4.5 Gbps 2000,000 PPS - - windows ￥ 229 JPY /時間 ¥ 65940.00 JPY /月 ¥ 672589.00 JPY /年   ecs.hfc5.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 305.3 JPY /時間 ¥ 87920.00 JPY /月 ¥ 896785.00 JPY /年   ecs.hfc5.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 305.3 JPY /時間 ¥ 87920.00 JPY /月 ¥ 896785.00 JPY /年   ecs.hfg5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 21.1 JPY /時間 ¥ 6070.00 JPY /月 ¥ 61915.00 JPY /年   ecs.hfg5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 21.1 JPY /時間 ¥ 6070.00 JPY /月 ¥ 61915.00 JPY /年   ecs.hfg5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 42.2 JPY /時間 ¥ 12130.00 JPY /月 ¥ 123727.00 JPY /年   ecs.hfg5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 42.2 JPY /時間 ¥ 12130.00 JPY /月 ¥ 123727.00 JPY /年   ecs.hfg5.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 84.3 JPY /時間 ¥ 24260.00 JPY /月 ¥ 247453.00 JPY /年   ecs.hfg5.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 84.3 JPY /時間 ¥ 24260.00 JPY /月 ¥ 247453.00 JPY /年   ecs.hfg5.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 168.5 JPY /時間 ¥ 48520.00 JPY /月 ¥ 494905.00 JPY /年   ecs.hfg5.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 168.5 JPY /時間 ¥ 48520.00 JPY /月 ¥ 494905.00 JPY /年   ecs.hfg5.6xlarge 24 vCPU 96 GiB 4.5 Gbps 2000,000 PPS - - linux ￥ 252.7 JPY /時間 ¥ 72780.00 JPY /月 ¥ 742357.00 JPY /年   ecs.hfg5.6xlarge 24 vCPU 96 GiB 4.5 Gbps 2000,000 PPS - - windows ￥ 252.7 JPY /時間 ¥ 72780.00 JPY /月 ¥ 742357.00 JPY /年   ecs.hfg5.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 337 JPY /時間 ¥ 97030.00 JPY /月 ¥ 989707.00 JPY /年   ecs.hfg5.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 337 JPY /時間 ¥ 97030.00 JPY /月 ¥ 989707.00 JPY /年   ecs.hfg5.14xlarge 56 vCPU 160 GiB 10 Gbps 4000,000 PPS - - linux ￥ 589.6 JPY /時間 ¥ 169810.00 JPY /月 ¥ 1732063.00 JPY /年   ecs.hfg5.14xlarge 56 vCPU 160 GiB 10 Gbps 4000,000 PPS - - windows ￥ 589.6 JPY /時間 ¥ 169810.00 JPY /月 ¥ 1732063.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro linux ￥ 39.1 JPY /時間 ¥ 11380.00 JPY /月 ¥ 116077.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro windows ￥ 39.1 JPY /時間 ¥ 11380.00 JPY /月 ¥ 116077.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro linux ￥ 79.4 JPY /時間 ¥ 22750.00 JPY /月 ¥ 232051.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro windows ￥ 79.4 JPY /時間 ¥ 22750.00 JPY /月 ¥ 232051.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro linux ￥ 157.6 JPY /時間 ¥ 45500.00 JPY /月 ¥ 464101.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro windows ￥ 157.6 JPY /時間 ¥ 45500.00 JPY /月 ¥ 464101.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro linux ￥ 316.3 JPY /時間 ¥ 91000.00 JPY /月 ¥ 928201.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro windows ￥ 316.3 JPY /時間 ¥ 91000.00 JPY /月 ¥ 928201.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro linux ￥ 553.2 JPY /時間 ¥ 159240.00 JPY /月 ¥ 1624249.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro windows ￥ 553.2 JPY /時間 ¥ 159240.00 JPY /月 ¥ 1624249.00 JPY /年   ecs.i2.xlarge 4 vCPU 32 GiB 1 Gbps 500,000 PPS - local_ssd_pro linux ￥ 65.2 JPY /時間 ¥ 18770.00 JPY /月 ¥ 191455.00 JPY /年   ecs.i2.xlarge 4 vCPU 32 GiB 1 Gbps 500,000 PPS - local_ssd_pro windows ￥ 65.2 JPY /時間 ¥ 18770.00 JPY /月 ¥ 191455.00 JPY /年   ecs.i2.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - local_ssd_pro linux ￥ 130.3 JPY /時間 ¥ 37530.00 JPY /月 ¥ 382807.00 JPY /年   ecs.i2.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - local_ssd_pro windows ￥ 130.3 JPY /時間 ¥ 37530.00 JPY /月 ¥ 382807.00 JPY /年   ecs.i2.4xlarge 16 vCPU 128 GiB 3 Gbps 1500,000 PPS - local_ssd_pro linux ￥ 260.6 JPY /時間 ¥ 75050.00 JPY /月 ¥ 765511.00 JPY /年   ecs.i2.4xlarge 16 vCPU 128 GiB 3 Gbps 1500,000 PPS - local_ssd_pro windows ￥ 260.6 JPY /時間 ¥ 75050.00 JPY /月 ¥ 765511.00 JPY /年   ecs.i2.8xlarge 32 vCPU 256 GiB 6 Gbps 2000,000 PPS - local_ssd_pro linux ￥ 521.2 JPY /時間 ¥ 150100.00 JPY /月 ¥ 1531021.00 JPY /年   ecs.i2.8xlarge 32 vCPU 256 GiB 6 Gbps 2000,000 PPS - local_ssd_pro windows ￥ 521.2 JPY /時間 ¥ 150100.00 JPY /月 ¥ 1531021.00 JPY /年   ecs.i2.16xlarge 64 vCPU 512 GiB 10 Gbps 4000,000 PPS - local_ssd_pro linux ￥ 1042.4 JPY /時間 ¥ 300200.00 JPY /月 ¥ 3062041.00 JPY /年   ecs.i2.16xlarge 64 vCPU 512 GiB 10 Gbps 4000,000 PPS - local_ssd_pro windows ￥ 1042.4 JPY /時間 ¥ 300200.00 JPY /月 ¥ 3062041.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 9.1 JPY /時間 ¥ 2650.00 JPY /月 ¥ 27031.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 9.1 JPY /時間 ¥ 2650.00 JPY /月 ¥ 27031.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 18.2 JPY /時間 ¥ 5640.00 JPY /月 ¥ 57529.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 18.2 JPY /時間 ¥ 5640.00 JPY /月 ¥ 57529.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 36.2 JPY /時間 ¥ 11620.00 JPY /月 ¥ 118525.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 36.2 JPY /時間 ¥ 11620.00 JPY /月 ¥ 118525.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 72.2 JPY /時間 ¥ 23460.00 JPY /月 ¥ 239293.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 72.2 JPY /時間 ¥ 23460.00 JPY /月 ¥ 239293.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 144.4 JPY /時間 ¥ 47270.00 JPY /月 ¥ 482155.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 144.4 JPY /時間 ¥ 47270.00 JPY /月 ¥ 482155.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - linux ￥ 288.6 JPY /時間 ¥ 94880.00 JPY /月 ¥ 967777.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - windows ￥ 288.6 JPY /時間 ¥ 94880.00 JPY /月 ¥ 967777.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 5.9 JPY /時間 ¥ 1730.00 JPY /月 ¥ 17647.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 12 JPY /時間 ¥ 3680.00 JPY /月 ¥ 37537.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 12 JPY /時間 ¥ 3680.00 JPY /月 ¥ 37537.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 24 JPY /時間 ¥ 7710.00 JPY /月 ¥ 78643.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 24 JPY /時間 ¥ 7710.00 JPY /月 ¥ 78643.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 47.5 JPY /時間 ¥ 15640.00 JPY /月 ¥ 159529.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 47.5 JPY /時間 ¥ 15640.00 JPY /月 ¥ 159529.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 95.3 JPY /時間 ¥ 31630.00 JPY /月 ¥ 322627.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 95.3 JPY /時間 ¥ 31630.00 JPY /月 ¥ 322627.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - linux ￥ 190.3 JPY /時間 ¥ 63480.00 JPY /月 ¥ 647497.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - windows ￥ 190.3 JPY /時間 ¥ 63480.00 JPY /月 ¥ 647497.00 JPY /年   ecs.r5.16xlarge 64 vCPU 512 GiB 20 Gbps 4000,000 PPS - - linux ￥ 714.8 JPY /時間 ¥ 205860.00 JPY /月 ¥ 2099773.00 JPY /年   ecs.r5.16xlarge 64 vCPU 512 GiB 20 Gbps 4000,000 PPS - - windows ￥ 714.8 JPY /時間 ¥ 205860.00 JPY /月 ¥ 2099773.00 JPY /年   ecs.r5.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.r5.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.r5.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.r5.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.r5.2xlarge 8 vCPU 64 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.r5.2xlarge 8 vCPU 64 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.r5.4xlarge 16 vCPU 128 GiB 5 Gbps 1000,000 PPS - - linux ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.r5.4xlarge 16 vCPU 128 GiB 5 Gbps 1000,000 PPS - - windows ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.r5.6xlarge 24 vCPU 192 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 268.1 JPY /時間 ¥ 77200.00 JPY /月 ¥ 787441.00 JPY /年   ecs.r5.6xlarge 24 vCPU 192 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 268.1 JPY /時間 ¥ 77200.00 JPY /月 ¥ 787441.00 JPY /年   ecs.r5.8xlarge 32 vCPU 256 GiB 10 Gbps 2000,000 PPS - - linux ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.r5.8xlarge 32 vCPU 256 GiB 10 Gbps 2000,000 PPS - - windows ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.scch5.16xlarge 64 vCPU 192 GiB 10 Gbps 4500,000 PPS - - linux ￥ 742.9 JPY /時間 ¥ 213820.00 JPY /月 ¥ 2180965.00 JPY /年   ecs.scch5.16xlarge 64 vCPU 192 GiB 10 Gbps 4500,000 PPS - - windows ￥ 742.9 JPY /時間 ¥ 213820.00 JPY /月 ¥ 2180965.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 25.8 JPY /時間 ¥ 7410.00 JPY /月 ¥ 75583.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 30.4 JPY /時間 ¥ 8740.00 JPY /月 ¥ 89149.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 51.6 JPY /時間 ¥ 14810.00 JPY /月 ¥ 151063.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 60.5 JPY /時間 ¥ 17480.00 JPY /月 ¥ 178297.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 103 JPY /時間 ¥ 29620.00 JPY /月 ¥ 302125.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 121 JPY /時間 ¥ 34850.00 JPY /月 ¥ 355471.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - linux ￥ 205.8 JPY /時間 ¥ 59240.00 JPY /月 ¥ 604249.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - windows ￥ 242 JPY /時間 ¥ 69690.00 JPY /月 ¥ 710839.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - linux ￥ 411.5 JPY /時間 ¥ 118480.00 JPY /月 ¥ 1208497.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - windows ￥ 484.1 JPY /時間 ¥ 139380.00 JPY /月 ¥ 1421677.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - linux ￥ 742.1 JPY /時間 ¥ 213700.00 JPY /月 ¥ 2179741.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - windows ￥ 892.3 JPY /時間 ¥ 257030.00 JPY /月 ¥ 2621707.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65689.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131275.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - linux ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - windows ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262549.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - linux ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - windows ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524995.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - linux ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - windows ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049887.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - linux ￥ 625.5 JPY /時間 ¥ 180120.00 JPY /月 ¥ 1837225.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - windows ￥ 625.5 JPY /時間 ¥ 180120.00 JPY /月 ¥ 1837225.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 15.2 JPY /時間 ¥ 4370.00 JPY /月 ¥ 44575.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 15.2 JPY /時間 ¥ 4370.00 JPY /月 ¥ 44575.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 30.3 JPY /時間 ¥ 8740.00 JPY /月 ¥ 89149.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 30.3 JPY /時間 ¥ 8740.00 JPY /月 ¥ 89149.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 60.4 JPY /時間 ¥ 17370.00 JPY /月 ¥ 177175.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 60.4 JPY /時間 ¥ 17370.00 JPY /月 ¥ 177175.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - linux ￥ 120.6 JPY /時間 ¥ 34730.00 JPY /月 ¥ 354247.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - windows ￥ 120.6 JPY /時間 ¥ 34730.00 JPY /月 ¥ 354247.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - linux ￥ 241.2 JPY /時間 ¥ 69460.00 JPY /月 ¥ 708493.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - windows ￥ 241.2 JPY /時間 ¥ 69460.00 JPY /月 ¥ 708493.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 15.9 JPY /時間 ¥ 4560.00 JPY /月 ¥ 46513.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 15.9 JPY /時間 ¥ 4560.00 JPY /月 ¥ 46513.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 31.7 JPY /時間 ¥ 9120.00 JPY /月 ¥ 93025.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 31.7 JPY /時間 ¥ 9120.00 JPY /月 ¥ 93025.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 63.3 JPY /時間 ¥ 18230.00 JPY /月 ¥ 185947.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 63.3 JPY /時間 ¥ 18230.00 JPY /月 ¥ 185947.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 126.6 JPY /時間 ¥ 36460.00 JPY /月 ¥ 371893.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 126.6 JPY /時間 ¥ 36460.00 JPY /月 ¥ 371893.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 253.1 JPY /時間 ¥ 72890.00 JPY /月 ¥ 743479.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 253.1 JPY /時間 ¥ 72890.00 JPY /月 ¥ 743479.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 20.3 JPY /時間 ¥ 5820.00 JPY /月 ¥ 59365.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 22.6 JPY /時間 ¥ 6560.00 JPY /月 ¥ 66913.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 40.5 JPY /時間 ¥ 11630.00 JPY /月 ¥ 118627.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 44.8 JPY /時間 ¥ 13000.00 JPY /月 ¥ 132601.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 80.9 JPY /時間 ¥ 23260.00 JPY /月 ¥ 237253.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 89.7 JPY /時間 ¥ 25880.00 JPY /月 ¥ 263977.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - linux ￥ 161.6 JPY /時間 ¥ 46510.00 JPY /月 ¥ 474403.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - windows ￥ 179.3 JPY /時間 ¥ 51640.00 JPY /月 ¥ 526729.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - linux ￥ 323.1 JPY /時間 ¥ 93010.00 JPY /月 ¥ 948703.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - windows ￥ 358.6 JPY /時間 ¥ 103270.00 JPY /月 ¥ 1053355.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - linux ￥ 561.2 JPY /時間 ¥ 161690.00 JPY /月 ¥ 1649239.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - windows ￥ 561.2 JPY /時間 ¥ 161690.00 JPY /月 ¥ 1649239.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51307.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 34.9 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 34.9 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102613.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205123.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410143.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820285.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - linux ￥ 488.7 JPY /時間 ¥ 140720.00 JPY /月 ¥ 1435345.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - windows ￥ 488.7 JPY /時間 ¥ 140720.00 JPY /月 ¥ 1435345.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 5.8 JPY /時間 ¥ 1530.00 JPY /月 ¥ 15607.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 10.4 JPY /時間 ¥ 3070.00 JPY /月 ¥ 31315.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 3070.00 JPY /月 ¥ 31315.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 20.7 JPY /時間 ¥ 6120.00 JPY /月 ¥ 62425.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 20.7 JPY /時間 ¥ 6120.00 JPY /月 ¥ 62425.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 42.6 JPY /時間 ¥ 12240.00 JPY /月 ¥ 124849.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 42.6 JPY /時間 ¥ 12240.00 JPY /月 ¥ 124849.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 6.9 JPY /時間 ¥ 2140.00 JPY /月 ¥ 21829.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 6.9 JPY /時間 ¥ 2140.00 JPY /月 ¥ 21829.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 15 JPY /時間 ¥ 4250.00 JPY /月 ¥ 43351.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 15 JPY /時間 ¥ 4250.00 JPY /月 ¥ 43351.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 29.9 JPY /時間 ¥ 8490.00 JPY /月 ¥ 86599.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 29.9 JPY /時間 ¥ 8490.00 JPY /月 ¥ 86599.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 58.7 JPY /時間 ¥ 16980.00 JPY /月 ¥ 173197.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 58.7 JPY /時間 ¥ 16980.00 JPY /月 ¥ 173197.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 11.5 JPY /時間 ¥ 3310.00 JPY /月 ¥ 33763.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 11.5 JPY /時間 ¥ 3310.00 JPY /月 ¥ 33763.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 23 JPY /時間 ¥ 6620.00 JPY /月 ¥ 67525.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 23 JPY /時間 ¥ 6620.00 JPY /月 ¥ 67525.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 46 JPY /時間 ¥ 13230.00 JPY /月 ¥ 134947.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 46 JPY /時間 ¥ 13230.00 JPY /月 ¥ 134947.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 1.2 JPY /時間 ¥ 430.00 JPY /月 ¥ 4387.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 5.8 JPY /時間 ¥ 1690.00 JPY /月 ¥ 17239.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 5.8 JPY /時間 ¥ 1690.00 JPY /月 ¥ 17239.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 3.5 JPY /時間 ¥ 850.00 JPY /月 ¥ 8671.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 3.5 JPY /時間 ¥ 850.00 JPY /月 ¥ 8671.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 10.4 JPY /時間 ¥ 2930.00 JPY /月 ¥ 29887.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 2930.00 JPY /月 ¥ 29887.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - linux ￥ 1.2 JPY /時間 ¥ 320.00 JPY /月 ¥ 3265.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - windows ￥ 1.2 JPY /時間 ¥ 320.00 JPY /月 ¥ 3265.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 4.8 JPY /時間 ¥ 1380.00 JPY /月 ¥ 14077.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 4.8 JPY /時間 ¥ 1380.00 JPY /月 ¥ 14077.00 JPY /年    \neu-central-1    instanceType vCPU  メモリ  イントラネット帯域幅 パケット転送速度  GPU/FPGA  ローカルストレージ  OS 従量課金 サブスクリプション サブスクリプション     ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro linux ￥ 87.7 JPY /時間 ¥ 42090.00 JPY /月 ¥ 429318.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro windows ￥ 105.5 JPY /時間 ¥ 63340.00 JPY /月 ¥ 646068.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro linux ￥ 175.3 JPY /時間 ¥ 84170.00 JPY /月 ¥ 858534.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro windows ￥ 211.1 JPY /時間 ¥ 126670.00 JPY /月 ¥ 1292034.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro linux ￥ 263.1 JPY /時間 ¥ 126250.00 JPY /月 ¥ 1287750.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro windows ￥ 316.6 JPY /時間 ¥ 190000.00 JPY /月 ¥ 1938000.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 214.1 JPY /時間 ¥ 102740.00 JPY /月 ¥ 1047948.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 205.4 JPY /時間 ¥ 129700.00 JPY /月 ¥ 1322940.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 428.1 JPY /時間 ¥ 205480.00 JPY /月 ¥ 2095896.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 410.9 JPY /時間 ¥ 259390.00 JPY /月 ¥ 2645778.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 257.8 JPY /時間 ¥ 123710.00 JPY /月 ¥ 1261842.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 247.4 JPY /時間 ¥ 156170.00 JPY /月 ¥ 1592934.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 515.5 JPY /時間 ¥ 247410.00 JPY /月 ¥ 2523582.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 494.8 JPY /時間 ¥ 312340.00 JPY /月 ¥ 3185868.00 JPY /年   ecs.hfc5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 12.6 JPY /時間 ¥ 6310.00 JPY /月 ¥ 64362.00 JPY /年   ecs.hfc5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.6 JPY /時間 ¥ 13640.00 JPY /月 ¥ 139128.00 JPY /年   ecs.hfc5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 24.9 JPY /時間 ¥ 12610.00 JPY /月 ¥ 128622.00 JPY /年   ecs.hfc5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 45 JPY /時間 ¥ 27280.00 JPY /月 ¥ 278256.00 JPY /年   ecs.hfc5.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 49.7 JPY /時間 ¥ 25130.00 JPY /月 ¥ 256326.00 JPY /年   ecs.hfc5.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 89.9 JPY /時間 ¥ 54480.00 JPY /月 ¥ 555696.00 JPY /年   ecs.hfc5.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 99.4 JPY /時間 ¥ 50250.00 JPY /月 ¥ 512550.00 JPY /年   ecs.hfc5.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 179.8 JPY /時間 ¥ 108950.00 JPY /月 ¥ 1111290.00 JPY /年   ecs.hfc5.6xlarge 24 vCPU 48 GiB 4.5 Gbps 2000,000 PPS - - linux ￥ 149.1 JPY /時間 ¥ 75370.00 JPY /月 ¥ 768774.00 JPY /年   ecs.hfc5.6xlarge 24 vCPU 48 GiB 4.5 Gbps 2000,000 PPS - - windows ￥ 269.7 JPY /時間 ¥ 163420.00 JPY /月 ¥ 1666884.00 JPY /年   ecs.hfc5.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 198.8 JPY /時間 ¥ 100490.00 JPY /月 ¥ 1024998.00 JPY /年   ecs.hfc5.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 359.5 JPY /時間 ¥ 217890.00 JPY /月 ¥ 2222478.00 JPY /年   ecs.hfg5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 13.8 JPY /時間 ¥ 6940.00 JPY /月 ¥ 70788.00 JPY /年   ecs.hfg5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 24.9 JPY /時間 ¥ 15010.00 JPY /月 ¥ 153102.00 JPY /年   ecs.hfg5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 27.4 JPY /時間 ¥ 13870.00 JPY /月 ¥ 141474.00 JPY /年   ecs.hfg5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 49.6 JPY /時間 ¥ 30010.00 JPY /月 ¥ 306102.00 JPY /年   ecs.hfg5.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 54.8 JPY /時間 ¥ 27640.00 JPY /月 ¥ 281928.00 JPY /年   ecs.hfg5.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 98.9 JPY /時間 ¥ 59920.00 JPY /月 ¥ 611184.00 JPY /年   ecs.hfg5.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 109.4 JPY /時間 ¥ 55280.00 JPY /月 ¥ 563856.00 JPY /年   ecs.hfg5.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 197.8 JPY /時間 ¥ 119840.00 JPY /月 ¥ 1222368.00 JPY /年   ecs.hfg5.6xlarge 24 vCPU 96 GiB 4.5 Gbps 2000,000 PPS - - linux ￥ 164 JPY /時間 ¥ 82910.00 JPY /月 ¥ 845682.00 JPY /年   ecs.hfg5.6xlarge 24 vCPU 96 GiB 4.5 Gbps 2000,000 PPS - - windows ￥ 296.7 JPY /時間 ¥ 179760.00 JPY /月 ¥ 1833552.00 JPY /年   ecs.hfg5.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 218.7 JPY /時間 ¥ 110540.00 JPY /月 ¥ 1127508.00 JPY /年   ecs.hfg5.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 395.5 JPY /時間 ¥ 239680.00 JPY /月 ¥ 2444736.00 JPY /年   ecs.hfg5.14xlarge 56 vCPU 160 GiB 10 Gbps 4000,000 PPS - - linux ￥ 382.7 JPY /時間 ¥ 193450.00 JPY /月 ¥ 1973190.00 JPY /年   ecs.hfg5.14xlarge 56 vCPU 160 GiB 10 Gbps 4000,000 PPS - - windows ￥ 692.2 JPY /時間 ¥ 419440.00 JPY /月 ¥ 4278288.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 19 JPY /時間 ¥ 8800.00 JPY /月 ¥ 89760.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 30.1 JPY /時間 ¥ 16830.00 JPY /月 ¥ 171666.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 38.1 JPY /時間 ¥ 17600.00 JPY /月 ¥ 179520.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 60.1 JPY /時間 ¥ 33650.00 JPY /月 ¥ 343230.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - linux ￥ 76.4 JPY /時間 ¥ 35190.00 JPY /月 ¥ 358938.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - windows ￥ 120.3 JPY /時間 ¥ 67300.00 JPY /月 ¥ 686460.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - linux ￥ 153 JPY /時間 ¥ 70370.00 JPY /月 ¥ 717774.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - windows ￥ 240.9 JPY /時間 ¥ 134600.00 JPY /月 ¥ 1372920.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - linux ￥ 306.1 JPY /時間 ¥ 140750.00 JPY /月 ¥ 1435650.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - windows ￥ 482 JPY /時間 ¥ 269200.00 JPY /月 ¥ 2745840.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - linux ￥ 564.1 JPY /時間 ¥ 259480.00 JPY /月 ¥ 2646696.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - windows ￥ 888.5 JPY /時間 ¥ 496320.00 JPY /月 ¥ 5062464.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 11.5 JPY /時間 ¥ 5820.00 JPY /月 ¥ 59364.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 21.1 JPY /時間 ¥ 12820.00 JPY /月 ¥ 130764.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 23.2 JPY /時間 ¥ 11840.00 JPY /月 ¥ 120768.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 42.1 JPY /時間 ¥ 25630.00 JPY /月 ¥ 261426.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 46.5 JPY /時間 ¥ 23610.00 JPY /月 ¥ 240822.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 84.2 JPY /時間 ¥ 51180.00 JPY /月 ¥ 522036.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 93.2 JPY /時間 ¥ 47210.00 JPY /月 ¥ 481542.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 168.8 JPY /時間 ¥ 102350.00 JPY /月 ¥ 1043970.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 186.5 JPY /時間 ¥ 94410.00 JPY /月 ¥ 962982.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 356.4 JPY /時間 ¥ 218490.00 JPY /月 ¥ 2228598.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 14.2 JPY /時間 ¥ 7150.00 JPY /月 ¥ 72930.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 25.2 JPY /時間 ¥ 15180.00 JPY /月 ¥ 154836.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 28.6 JPY /時間 ¥ 14300.00 JPY /月 ¥ 145860.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 50.5 JPY /時間 ¥ 30350.00 JPY /月 ¥ 309570.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 57.3 JPY /時間 ¥ 28590.00 JPY /月 ¥ 291618.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 101.2 JPY /時間 ¥ 60710.00 JPY /月 ¥ 619242.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 114.7 JPY /時間 ¥ 57180.00 JPY /月 ¥ 583236.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 202.7 JPY /時間 ¥ 121410.00 JPY /月 ¥ 1238382.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 229.5 JPY /時間 ¥ 114360.00 JPY /月 ¥ 1166472.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 405.4 JPY /時間 ¥ 242810.00 JPY /月 ¥ 2476662.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - linux ￥ 401.6 JPY /時間 ¥ 200130.00 JPY /月 ¥ 2041326.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - windows ￥ 709.5 JPY /時間 ¥ 424930.00 JPY /月 ¥ 4334286.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 3.7 JPY /時間 ¥ 1860.00 JPY /月 ¥ 18972.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 4.9 JPY /時間 ¥ 2730.00 JPY /月 ¥ 27846.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 7.3 JPY /時間 ¥ 3710.00 JPY /月 ¥ 37842.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 9.7 JPY /時間 ¥ 5450.00 JPY /月 ¥ 55590.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 14.4 JPY /時間 ¥ 7410.00 JPY /月 ¥ 75582.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 19.4 JPY /時間 ¥ 10890.00 JPY /月 ¥ 111078.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 28.7 JPY /時間 ¥ 14810.00 JPY /月 ¥ 151062.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 38.6 JPY /時間 ¥ 21780.00 JPY /月 ¥ 222156.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 5 JPY /時間 ¥ 2570.00 JPY /月 ¥ 26214.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 6.7 JPY /時間 ¥ 3780.00 JPY /月 ¥ 38556.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 9.9 JPY /時間 ¥ 5140.00 JPY /月 ¥ 52428.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 13.4 JPY /時間 ¥ 7550.00 JPY /月 ¥ 77010.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 19.8 JPY /時間 ¥ 10270.00 JPY /月 ¥ 104754.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 26.7 JPY /時間 ¥ 15100.00 JPY /月 ¥ 154020.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 39.6 JPY /時間 ¥ 20540.00 JPY /月 ¥ 209508.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 53.4 JPY /時間 ¥ 30200.00 JPY /月 ¥ 308040.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 8.1 JPY /時間 ¥ 3980.00 JPY /月 ¥ 40596.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 5440.00 JPY /月 ¥ 55488.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 16.1 JPY /時間 ¥ 7960.00 JPY /月 ¥ 81192.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 20.7 JPY /時間 ¥ 10870.00 JPY /月 ¥ 110874.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 32.2 JPY /時間 ¥ 15910.00 JPY /月 ¥ 162282.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 41.4 JPY /時間 ¥ 21740.00 JPY /月 ¥ 221748.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 1.4 JPY /時間 ¥ 690.00 JPY /月 ¥ 7038.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 1.9 JPY /時間 ¥ 1020.00 JPY /月 ¥ 10404.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 4.4 JPY /時間 ¥ 2250.00 JPY /月 ¥ 22950.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 5.9 JPY /時間 ¥ 3310.00 JPY /月 ¥ 33762.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 2.2 JPY /時間 ¥ 1130.00 JPY /月 ¥ 11526.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 3 JPY /時間 ¥ 1670.00 JPY /月 ¥ 17034.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 6.5 JPY /時間 ¥ 3340.00 JPY /月 ¥ 34068.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 8.2 JPY /時間 ¥ 4560.00 JPY /月 ¥ 46512.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - linux ￥ 0.9 JPY /時間 ¥ 370.00 JPY /月 ¥ 3774.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - windows ￥ 1.1 JPY /時間 ¥ 540.00 JPY /月 ¥ 5508.00 JPY /年    \neu-west-1    instanceType vCPU  メモリ  イントラネット帯域幅 パケット転送速度  GPU/FPGA  ローカルストレージ  OS 従量課金 サブスクリプション サブスクリプション     ecs.c5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 9.7 JPY /時間 ¥ 4600.00 JPY /月 ¥ 46920.00 JPY /年   ecs.c5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 19.1 JPY /時間 ¥ 10140.00 JPY /月 ¥ 103428.00 JPY /年   ecs.c5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 19.3 JPY /時間 ¥ 9200.00 JPY /月 ¥ 93840.00 JPY /年   ecs.c5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 38.2 JPY /時間 ¥ 20280.00 JPY /月 ¥ 206856.00 JPY /年   ecs.c5.2xlarge 8 vCPU 16 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 38.5 JPY /時間 ¥ 18400.00 JPY /月 ¥ 187680.00 JPY /年   ecs.c5.2xlarge 8 vCPU 16 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 76.4 JPY /時間 ¥ 40550.00 JPY /月 ¥ 413610.00 JPY /年   ecs.c5.4xlarge 16 vCPU 32 GiB 5 Gbps 1000,000 PPS - - linux ￥ 76.8 JPY /時間 ¥ 36790.00 JPY /月 ¥ 375258.00 JPY /年   ecs.c5.4xlarge 16 vCPU 32 GiB 5 Gbps 1000,000 PPS - - windows ￥ 152.8 JPY /時間 ¥ 81100.00 JPY /月 ¥ 827220.00 JPY /年   ecs.c5.6xlarge 24 vCPU 48 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 115 JPY /時間 ¥ 55180.00 JPY /月 ¥ 562836.00 JPY /年   ecs.c5.6xlarge 24 vCPU 48 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 229.1 JPY /時間 ¥ 121650.00 JPY /月 ¥ 1240830.00 JPY /年   ecs.c5.8xlarge 32 vCPU 64 GiB 10 Gbps 2000,000 PPS - - linux ￥ 153.3 JPY /時間 ¥ 73570.00 JPY /月 ¥ 750414.00 JPY /年   ecs.c5.8xlarge 32 vCPU 64 GiB 10 Gbps 2000,000 PPS - - windows ￥ 305.5 JPY /時間 ¥ 162200.00 JPY /月 ¥ 1654440.00 JPY /年   ecs.c5.16xlarge 64 vCPU 128 GiB 20 Gbps 4000,000 PPS - - linux ￥ 306.6 JPY /時間 ¥ 147130.00 JPY /月 ¥ 1500726.00 JPY /年   ecs.c5.16xlarge 64 vCPU 128 GiB 20 Gbps 4000,000 PPS - - windows ￥ 610.9 JPY /時間 ¥ 324400.00 JPY /月 ¥ 3308880.00 JPY /年   ecs.g5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 12.8 JPY /時間 ¥ 6230.00 JPY /月 ¥ 63546.00 JPY /年   ecs.g5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 23.3 JPY /時間 ¥ 13560.00 JPY /月 ¥ 138312.00 JPY /年   ecs.g5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 25.6 JPY /時間 ¥ 12450.00 JPY /月 ¥ 126990.00 JPY /年   ecs.g5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 46.5 JPY /時間 ¥ 27120.00 JPY /月 ¥ 276624.00 JPY /年   ecs.g5.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 51.1 JPY /時間 ¥ 24890.00 JPY /月 ¥ 253878.00 JPY /年   ecs.g5.2xlarge 8 vCPU 32 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 93 JPY /時間 ¥ 54240.00 JPY /月 ¥ 553248.00 JPY /年   ecs.g5.4xlarge 16 vCPU 64 GiB 5 Gbps 1000,000 PPS - - linux ￥ 102.2 JPY /時間 ¥ 49770.00 JPY /月 ¥ 507654.00 JPY /年   ecs.g5.4xlarge 16 vCPU 64 GiB 5 Gbps 1000,000 PPS - - windows ￥ 185.9 JPY /時間 ¥ 108470.00 JPY /月 ¥ 1106394.00 JPY /年   ecs.g5.6xlarge 24 vCPU 96 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 153.2 JPY /時間 ¥ 74650.00 JPY /月 ¥ 761430.00 JPY /年   ecs.g5.6xlarge 24 vCPU 96 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 278.8 JPY /時間 ¥ 162710.00 JPY /月 ¥ 1659642.00 JPY /年   ecs.g5.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS - - linux ￥ 204.3 JPY /時間 ¥ 99530.00 JPY /月 ¥ 1015206.00 JPY /年   ecs.g5.8xlarge 32 vCPU 128 GiB 10 Gbps 2000,000 PPS - - windows ￥ 371.7 JPY /時間 ¥ 216940.00 JPY /月 ¥ 2212788.00 JPY /年   ecs.g5.16xlarge 64 vCPU 256 GiB 20 Gbps 4000,000 PPS - - linux ￥ 408.5 JPY /時間 ¥ 199060.00 JPY /月 ¥ 2030412.00 JPY /年   ecs.g5.16xlarge 64 vCPU 256 GiB 20 Gbps 4000,000 PPS - - windows ￥ 743.4 JPY /時間 ¥ 433880.00 JPY /月 ¥ 4425576.00 JPY /年   ecs.hfc5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 11.5 JPY /時間 ¥ 5510.00 JPY /月 ¥ 56202.00 JPY /年   ecs.hfc5.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.1 JPY /時間 ¥ 12840.00 JPY /月 ¥ 130968.00 JPY /年   ecs.hfc5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 23 JPY /時間 ¥ 11010.00 JPY /月 ¥ 112302.00 JPY /年   ecs.hfc5.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 44.2 JPY /時間 ¥ 25680.00 JPY /月 ¥ 261936.00 JPY /年   ecs.hfc5.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 45.9 JPY /時間 ¥ 22020.00 JPY /月 ¥ 224604.00 JPY /年   ecs.hfc5.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 88.4 JPY /時間 ¥ 51360.00 JPY /月 ¥ 523872.00 JPY /年   ecs.hfc5.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 91.8 JPY /時間 ¥ 44030.00 JPY /月 ¥ 449106.00 JPY /年   ecs.hfc5.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 176.7 JPY /時間 ¥ 102720.00 JPY /月 ¥ 1047744.00 JPY /年   ecs.hfc5.6xlarge 24 vCPU 48 GiB 4.5 Gbps 2000,000 PPS - - linux ￥ 137.7 JPY /時間 ¥ 66040.00 JPY /月 ¥ 673608.00 JPY /年   ecs.hfc5.6xlarge 24 vCPU 48 GiB 4.5 Gbps 2000,000 PPS - - windows ￥ 265 JPY /時間 ¥ 154080.00 JPY /月 ¥ 1571616.00 JPY /年   ecs.hfc5.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 183.5 JPY /時間 ¥ 88050.00 JPY /月 ¥ 898110.00 JPY /年   ecs.hfc5.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 353.3 JPY /時間 ¥ 205440.00 JPY /月 ¥ 2095488.00 JPY /年   ecs.hfg5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 14.3 JPY /時間 ¥ 7160.00 JPY /月 ¥ 73032.00 JPY /年   ecs.hfg5.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 25.2 JPY /時間 ¥ 15190.00 JPY /月 ¥ 154938.00 JPY /年   ecs.hfg5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 28.6 JPY /時間 ¥ 14310.00 JPY /月 ¥ 145962.00 JPY /年   ecs.hfg5.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 50.4 JPY /時間 ¥ 30380.00 JPY /月 ¥ 309876.00 JPY /年   ecs.hfg5.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 57.1 JPY /時間 ¥ 28620.00 JPY /月 ¥ 291924.00 JPY /年   ecs.hfg5.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 100.8 JPY /時間 ¥ 60760.00 JPY /月 ¥ 619752.00 JPY /年   ecs.hfg5.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 114.1 JPY /時間 ¥ 57230.00 JPY /月 ¥ 583746.00 JPY /年   ecs.hfg5.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 201.5 JPY /時間 ¥ 121520.00 JPY /月 ¥ 1239504.00 JPY /年   ecs.hfg5.6xlarge 24 vCPU 96 GiB 4.5 Gbps 2000,000 PPS - - linux ￥ 171.2 JPY /時間 ¥ 85850.00 JPY /月 ¥ 875670.00 JPY /年   ecs.hfg5.6xlarge 24 vCPU 96 GiB 4.5 Gbps 2000,000 PPS - - windows ￥ 302.3 JPY /時間 ¥ 182280.00 JPY /月 ¥ 1859256.00 JPY /年   ecs.hfg5.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 228.2 JPY /時間 ¥ 114460.00 JPY /月 ¥ 1167492.00 JPY /年   ecs.hfg5.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 403 JPY /時間 ¥ 243030.00 JPY /月 ¥ 2478906.00 JPY /年   ecs.hfg5.14xlarge 56 vCPU 160 GiB 10 Gbps 4000,000 PPS - - linux ￥ 399.3 JPY /時間 ¥ 200320.00 JPY /月 ¥ 2043264.00 JPY /年   ecs.hfg5.14xlarge 56 vCPU 160 GiB 10 Gbps 4000,000 PPS - - windows ￥ 705.2 JPY /時間 ¥ 425300.00 JPY /月 ¥ 4338060.00 JPY /年   ecs.i2.xlarge 4 vCPU 32 GiB 1 Gbps 500,000 PPS - local_ssd_pro linux ￥ 40.3 JPY /時間 ¥ 19780.00 JPY /月 ¥ 201756.00 JPY /年   ecs.i2.xlarge 4 vCPU 32 GiB 1 Gbps 500,000 PPS - local_ssd_pro windows ￥ 60.5 JPY /時間 ¥ 34460.00 JPY /月 ¥ 351492.00 JPY /年   ecs.i2.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - local_ssd_pro linux ￥ 80.5 JPY /時間 ¥ 39560.00 JPY /月 ¥ 403512.00 JPY /年   ecs.i2.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - local_ssd_pro windows ￥ 121 JPY /時間 ¥ 68910.00 JPY /月 ¥ 702882.00 JPY /年   ecs.i2.4xlarge 16 vCPU 128 GiB 3 Gbps 1500,000 PPS - local_ssd_pro linux ￥ 161 JPY /時間 ¥ 79120.00 JPY /月 ¥ 807024.00 JPY /年   ecs.i2.4xlarge 16 vCPU 128 GiB 3 Gbps 1500,000 PPS - local_ssd_pro windows ￥ 242 JPY /時間 ¥ 137820.00 JPY /月 ¥ 1405764.00 JPY /年   ecs.i2.8xlarge 32 vCPU 256 GiB 6 Gbps 2000,000 PPS - local_ssd_pro linux ￥ 322 JPY /時間 ¥ 158230.00 JPY /月 ¥ 1613946.00 JPY /年   ecs.i2.8xlarge 32 vCPU 256 GiB 6 Gbps 2000,000 PPS - local_ssd_pro windows ￥ 484 JPY /時間 ¥ 275640.00 JPY /月 ¥ 2811528.00 JPY /年   ecs.i2.16xlarge 64 vCPU 512 GiB 10 Gbps 4000,000 PPS - local_ssd_pro linux ￥ 644 JPY /時間 ¥ 316450.00 JPY /月 ¥ 3227790.00 JPY /年   ecs.i2.16xlarge 64 vCPU 512 GiB 10 Gbps 4000,000 PPS - local_ssd_pro windows ￥ 967.9 JPY /時間 ¥ 551270.00 JPY /月 ¥ 5622954.00 JPY /年   ecs.r5.16xlarge 64 vCPU 512 GiB 20 Gbps 4000,000 PPS - - linux ￥ 497.3 JPY /時間 ¥ 238650.00 JPY /月 ¥ 2434230.00 JPY /年   ecs.r5.16xlarge 64 vCPU 512 GiB 20 Gbps 4000,000 PPS - - windows ￥ 912.7 JPY /時間 ¥ 461070.00 JPY /月 ¥ 4702914.00 JPY /年   ecs.r5.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 15.7 JPY /時間 ¥ 7460.00 JPY /月 ¥ 76092.00 JPY /年   ecs.r5.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 28.6 JPY /時間 ¥ 14410.00 JPY /月 ¥ 146982.00 JPY /年   ecs.r5.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 31.2 JPY /時間 ¥ 14920.00 JPY /月 ¥ 152184.00 JPY /年   ecs.r5.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 57.1 JPY /時間 ¥ 28820.00 JPY /月 ¥ 293964.00 JPY /年   ecs.r5.2xlarge 8 vCPU 64 GiB 2.5 Gbps 800,000 PPS - - linux ￥ 62.3 JPY /時間 ¥ 29840.00 JPY /月 ¥ 304368.00 JPY /年   ecs.r5.2xlarge 8 vCPU 64 GiB 2.5 Gbps 800,000 PPS - - windows ￥ 114.1 JPY /時間 ¥ 57640.00 JPY /月 ¥ 587928.00 JPY /年   ecs.r5.4xlarge 16 vCPU 128 GiB 5 Gbps 1000,000 PPS - - linux ￥ 124.4 JPY /時間 ¥ 59670.00 JPY /月 ¥ 608634.00 JPY /年   ecs.r5.4xlarge 16 vCPU 128 GiB 5 Gbps 1000,000 PPS - - windows ￥ 228.2 JPY /時間 ¥ 115270.00 JPY /月 ¥ 1175754.00 JPY /年   ecs.r5.6xlarge 24 vCPU 192 GiB 7.5 Gbps 1500,000 PPS - - linux ￥ 186.6 JPY /時間 ¥ 89500.00 JPY /月 ¥ 912900.00 JPY /年   ecs.r5.6xlarge 24 vCPU 192 GiB 7.5 Gbps 1500,000 PPS - - windows ￥ 342.3 JPY /時間 ¥ 172910.00 JPY /月 ¥ 1763682.00 JPY /年   ecs.r5.8xlarge 32 vCPU 256 GiB 10 Gbps 2000,000 PPS - - linux ￥ 248.7 JPY /時間 ¥ 119330.00 JPY /月 ¥ 1217166.00 JPY /年   ecs.r5.8xlarge 32 vCPU 256 GiB 10 Gbps 2000,000 PPS - - windows ￥ 456.4 JPY /時間 ¥ 230540.00 JPY /月 ¥ 2351508.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 3.7 JPY /時間 ¥ 1860.00 JPY /月 ¥ 18972.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 4.9 JPY /時間 ¥ 2730.00 JPY /月 ¥ 27846.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 7.3 JPY /時間 ¥ 3710.00 JPY /月 ¥ 37842.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 9.7 JPY /時間 ¥ 5450.00 JPY /月 ¥ 55590.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 14.4 JPY /時間 ¥ 7410.00 JPY /月 ¥ 75582.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 19.4 JPY /時間 ¥ 10890.00 JPY /月 ¥ 111078.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 28.7 JPY /時間 ¥ 14810.00 JPY /月 ¥ 151062.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 38.6 JPY /時間 ¥ 21780.00 JPY /月 ¥ 222156.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 5 JPY /時間 ¥ 2570.00 JPY /月 ¥ 26214.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 6.7 JPY /時間 ¥ 3780.00 JPY /月 ¥ 38556.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 9.9 JPY /時間 ¥ 5140.00 JPY /月 ¥ 52428.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 13.4 JPY /時間 ¥ 7550.00 JPY /月 ¥ 77010.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 19.8 JPY /時間 ¥ 10270.00 JPY /月 ¥ 104754.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 26.7 JPY /時間 ¥ 15100.00 JPY /月 ¥ 154020.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 39.6 JPY /時間 ¥ 20540.00 JPY /月 ¥ 209508.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 53.4 JPY /時間 ¥ 30200.00 JPY /月 ¥ 308040.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 8.1 JPY /時間 ¥ 3980.00 JPY /月 ¥ 40596.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 5440.00 JPY /月 ¥ 55488.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 16.1 JPY /時間 ¥ 7960.00 JPY /月 ¥ 81192.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 20.7 JPY /時間 ¥ 10870.00 JPY /月 ¥ 110874.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 32.2 JPY /時間 ¥ 15910.00 JPY /月 ¥ 162282.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 1.4 JPY /時間 ¥ 690.00 JPY /月 ¥ 7038.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 1.9 JPY /時間 ¥ 1020.00 JPY /月 ¥ 10404.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 4.4 JPY /時間 ¥ 2250.00 JPY /月 ¥ 22950.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 5.9 JPY /時間 ¥ 3310.00 JPY /月 ¥ 33762.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 2.2 JPY /時間 ¥ 1130.00 JPY /月 ¥ 11526.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 3 JPY /時間 ¥ 1670.00 JPY /月 ¥ 17034.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 6.5 JPY /時間 ¥ 3340.00 JPY /月 ¥ 34068.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 8.2 JPY /時間 ¥ 4560.00 JPY /月 ¥ 46512.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - linux ￥ 0.9 JPY /時間 ¥ 370.00 JPY /月 ¥ 3774.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - windows ￥ 1.1 JPY /時間 ¥ 540.00 JPY /月 ¥ 5508.00 JPY /年    \nme-east-1    instanceType vCPU  メモリ  イントラネット帯域幅 パケット転送速度  GPU/FPGA  ローカルストレージ  OS 従量課金 サブスクリプション サブスクリプション     ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro linux ￥ 105.2 JPY /時間 ¥ 50500.00 JPY /月 ¥ 515100.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro windows ￥ 124.8 JPY /時間 ¥ 74900.00 JPY /月 ¥ 763980.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro linux ￥ 210.4 JPY /時間 ¥ 101000.00 JPY /月 ¥ 1030200.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro windows ￥ 249.6 JPY /時間 ¥ 149790.00 JPY /月 ¥ 1527858.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro linux ￥ 315.6 JPY /時間 ¥ 151500.00 JPY /月 ¥ 1545300.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro windows ￥ 374.5 JPY /時間 ¥ 224690.00 JPY /月 ¥ 2291838.00 JPY /年   ecs.i2.xlarge 4 vCPU 32 GiB 1 Gbps 500,000 PPS - local_ssd_pro linux ￥ 49 JPY /時間 ¥ 24130.00 JPY /月 ¥ 246126.00 JPY /年   ecs.i2.xlarge 4 vCPU 32 GiB 1 Gbps 500,000 PPS - local_ssd_pro windows ￥ 73.2 JPY /時間 ¥ 41730.00 JPY /月 ¥ 425646.00 JPY /年   ecs.i2.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - local_ssd_pro linux ￥ 98 JPY /時間 ¥ 48250.00 JPY /月 ¥ 492150.00 JPY /年   ecs.i2.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - local_ssd_pro windows ￥ 146.3 JPY /時間 ¥ 83460.00 JPY /月 ¥ 851292.00 JPY /年   ecs.i2.4xlarge 16 vCPU 128 GiB 3 Gbps 1500,000 PPS - local_ssd_pro linux ￥ 196 JPY /時間 ¥ 96490.00 JPY /月 ¥ 984198.00 JPY /年   ecs.i2.4xlarge 16 vCPU 128 GiB 3 Gbps 1500,000 PPS - local_ssd_pro windows ￥ 292.6 JPY /時間 ¥ 166920.00 JPY /月 ¥ 1702584.00 JPY /年   ecs.i2.8xlarge 32 vCPU 256 GiB 6 Gbps 2000,000 PPS - local_ssd_pro linux ￥ 392 JPY /時間 ¥ 192970.00 JPY /月 ¥ 1968294.00 JPY /年   ecs.i2.8xlarge 32 vCPU 256 GiB 6 Gbps 2000,000 PPS - local_ssd_pro windows ￥ 585.2 JPY /時間 ¥ 333840.00 JPY /月 ¥ 3405168.00 JPY /年   ecs.i2.16xlarge 64 vCPU 512 GiB 10 Gbps 4000,000 PPS - local_ssd_pro linux ￥ 783.9 JPY /時間 ¥ 385930.00 JPY /月 ¥ 3936486.00 JPY /年   ecs.i2.16xlarge 64 vCPU 512 GiB 10 Gbps 4000,000 PPS - local_ssd_pro windows ￥ 1170.3 JPY /時間 ¥ 667670.00 JPY /月 ¥ 6810234.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65688.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.4 JPY /時間 ¥ 6440.00 JPY /月 ¥ 65688.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 44.7 JPY /時間 ¥ 12870.00 JPY /月 ¥ 131274.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - linux ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262548.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - windows ￥ 89.4 JPY /時間 ¥ 25740.00 JPY /月 ¥ 262548.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - linux ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524994.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - windows ￥ 178.7 JPY /時間 ¥ 51470.00 JPY /月 ¥ 524994.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - linux ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049886.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - windows ￥ 357.4 JPY /時間 ¥ 102930.00 JPY /月 ¥ 1049886.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 15.9 JPY /時間 ¥ 4560.00 JPY /月 ¥ 46512.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 15.9 JPY /時間 ¥ 4560.00 JPY /月 ¥ 46512.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 31.7 JPY /時間 ¥ 9120.00 JPY /月 ¥ 93024.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 31.7 JPY /時間 ¥ 9120.00 JPY /月 ¥ 93024.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 63.3 JPY /時間 ¥ 18230.00 JPY /月 ¥ 185946.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 63.3 JPY /時間 ¥ 18230.00 JPY /月 ¥ 185946.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 126.6 JPY /時間 ¥ 36460.00 JPY /月 ¥ 371892.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 126.6 JPY /時間 ¥ 36460.00 JPY /月 ¥ 371892.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 253.1 JPY /時間 ¥ 72890.00 JPY /月 ¥ 743478.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 253.1 JPY /時間 ¥ 72890.00 JPY /月 ¥ 743478.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51306.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 17.5 JPY /時間 ¥ 5030.00 JPY /月 ¥ 51306.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 34.9 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102612.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 34.9 JPY /時間 ¥ 10060.00 JPY /月 ¥ 102612.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205122.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 69.9 JPY /時間 ¥ 20110.00 JPY /月 ¥ 205122.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410142.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 139.7 JPY /時間 ¥ 40210.00 JPY /月 ¥ 410142.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820284.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 279.3 JPY /時間 ¥ 80420.00 JPY /月 ¥ 820284.00 JPY /年    \nus-east-1    instanceType vCPU  メモリ  イントラネット帯域幅 パケット転送速度  GPU/FPGA  ローカルストレージ  OS 従量課金 サブスクリプション サブスクリプション     ecs.c4.xlarge 4 vCPU 8 GiB 1.5 Gbps 200,000 PPS - - linux ￥ 21.9 JPY /時間 ¥ 10470.00 JPY /月 ¥ 106794.00 JPY /年   ecs.c4.xlarge 4 vCPU 8 GiB 1.5 Gbps 200,000 PPS - - windows ￥ 43.7 JPY /時間 ¥ 25990.00 JPY /月 ¥ 265098.00 JPY /年   ecs.c4.2xlarge 8 vCPU 16 GiB 3 Gbps 400,000 PPS - - linux ￥ 43.7 JPY /時間 ¥ 20930.00 JPY /月 ¥ 213486.00 JPY /年   ecs.c4.2xlarge 8 vCPU 16 GiB 3 Gbps 400,000 PPS - - windows ￥ 87.4 JPY /時間 ¥ 51980.00 JPY /月 ¥ 530196.00 JPY /年   ecs.c4.4xlarge 16 vCPU 32 GiB 6 Gbps 800,000 PPS - - linux ￥ 87.4 JPY /時間 ¥ 41860.00 JPY /月 ¥ 426972.00 JPY /年   ecs.c4.4xlarge 16 vCPU 32 GiB 6 Gbps 800,000 PPS - - windows ￥ 174.8 JPY /時間 ¥ 103960.00 JPY /月 ¥ 1060392.00 JPY /年   ecs.ce4.xlarge 4 vCPU 32 GiB 1.5 Gbps 200,000 PPS - - linux ￥ 36.3 JPY /時間 ¥ 16500.00 JPY /月 ¥ 168300.00 JPY /年   ecs.ce4.xlarge 4 vCPU 32 GiB 1.5 Gbps 200,000 PPS - - windows ￥ 61.5 JPY /時間 ¥ 35110.00 JPY /月 ¥ 358122.00 JPY /年   ecs.cm4.xlarge 4 vCPU 16 GiB 1.5 Gbps 200,000 PPS - - linux ￥ 26.5 JPY /時間 ¥ 12360.00 JPY /月 ¥ 126072.00 JPY /年   ecs.cm4.xlarge 4 vCPU 16 GiB 1.5 Gbps 200,000 PPS - - windows ￥ 51.8 JPY /時間 ¥ 30710.00 JPY /月 ¥ 313242.00 JPY /年   ecs.cm4.2xlarge 8 vCPU 32 GiB 3 Gbps 400,000 PPS - - linux ￥ 54.1 JPY /時間 ¥ 24720.00 JPY /月 ¥ 252144.00 JPY /年   ecs.cm4.2xlarge 8 vCPU 32 GiB 3 Gbps 400,000 PPS - - windows ￥ 104.7 JPY /時間 ¥ 61420.00 JPY /月 ¥ 626484.00 JPY /年   ecs.cm4.4xlarge 16 vCPU 64 GiB 6 Gbps 800,000 PPS - - linux ￥ 109.3 JPY /時間 ¥ 49430.00 JPY /月 ¥ 504186.00 JPY /年   ecs.cm4.4xlarge 16 vCPU 64 GiB 6 Gbps 800,000 PPS - - windows ￥ 209.3 JPY /時間 ¥ 122830.00 JPY /月 ¥ 1252866.00 JPY /年   ecs.cm4.6xlarge 24 vCPU 96 GiB 10 Gbps 1200,000 PPS - - linux ￥ 163.3 JPY /時間 ¥ 74140.00 JPY /月 ¥ 756228.00 JPY /年   ecs.cm4.6xlarge 24 vCPU 96 GiB 10 Gbps 1200,000 PPS - - windows ￥ 314 JPY /時間 ¥ 184250.00 JPY /月 ¥ 1879350.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro linux ￥ 73.5 JPY /時間 ¥ 35320.00 JPY /月 ¥ 360264.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro windows ￥ 94.5 JPY /時間 ¥ 56700.00 JPY /月 ¥ 578340.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro linux ￥ 147.1 JPY /時間 ¥ 70630.00 JPY /月 ¥ 720426.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro windows ￥ 189 JPY /時間 ¥ 113400.00 JPY /月 ¥ 1156680.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro linux ￥ 220.7 JPY /時間 ¥ 105940.00 JPY /月 ¥ 1080588.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro windows ￥ 283.5 JPY /時間 ¥ 170100.00 JPY /月 ¥ 1735020.00 JPY /年   ecs.d1.8xlarge 32 vCPU 128 GiB 10 Gbps 1000,000 PPS - local_hdd_pro linux ￥ 294.2 JPY /時間 ¥ 141260.00 JPY /月 ¥ 1440852.00 JPY /年   ecs.d1.8xlarge 32 vCPU 128 GiB 10 Gbps 1000,000 PPS - local_hdd_pro windows ￥ 377.9 JPY /時間 ¥ 226800.00 JPY /月 ¥ 2313360.00 JPY /年   ecs.d1.14xlarge 56 vCPU 224 GiB 17 Gbps 1800,000 PPS - local_hdd_pro linux ￥ 515 JPY /時間 ¥ 247190.00 JPY /月 ¥ 2521338.00 JPY /年   ecs.d1.14xlarge 56 vCPU 224 GiB 17 Gbps 1800,000 PPS - local_hdd_pro windows ￥ 661.6 JPY /時間 ¥ 397020.00 JPY /月 ¥ 4049604.00 JPY /年   ecs.e3.small 1 vCPU 8 GiB - - - - linux ￥ 7.5 JPY /時間 ¥ 3530.00 JPY /月 ¥ 36006.00 JPY /年   ecs.e3.small 1 vCPU 8 GiB - - - - windows ￥ 9.5 JPY /時間 ¥ 4860.00 JPY /月 ¥ 49572.00 JPY /年   ecs.e3.medium 2 vCPU 16 GiB - - - - linux ￥ 15.1 JPY /時間 ¥ 7050.00 JPY /月 ¥ 71910.00 JPY /年   ecs.e3.medium 2 vCPU 16 GiB - - - - windows ￥ 18.9 JPY /時間 ¥ 9680.00 JPY /月 ¥ 98736.00 JPY /年   ecs.e3.large 4 vCPU 32 GiB - - - - linux ￥ 30.3 JPY /時間 ¥ 13750.00 JPY /月 ¥ 140250.00 JPY /年   ecs.e3.large 4 vCPU 32 GiB - - - - windows ￥ 37.7 JPY /時間 ¥ 19340.00 JPY /月 ¥ 197268.00 JPY /年   ecs.e3.xlarge 8 vCPU 64 GiB - - - - linux ￥ 60.5 JPY /時間 ¥ 27150.00 JPY /月 ¥ 276930.00 JPY /年   ecs.e3.xlarge 8 vCPU 64 GiB - - - - windows ￥ 75.2 JPY /時間 ¥ 38670.00 JPY /月 ¥ 394434.00 JPY /年   ecs.e3.3xlarge 16 vCPU 128 GiB - - - - linux ￥ 121.1 JPY /時間 ¥ 53940.00 JPY /月 ¥ 550188.00 JPY /年   ecs.e3.3xlarge 16 vCPU 128 GiB - - - - windows ￥ 150.2 JPY /時間 ¥ 77330.00 JPY /月 ¥ 788766.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 178.3 JPY /時間 ¥ 85620.00 JPY /月 ¥ 873324.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 231.9 JPY /時間 ¥ 111300.00 JPY /月 ¥ 1135260.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 356.7 JPY /時間 ¥ 171230.00 JPY /月 ¥ 1746546.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 463.7 JPY /時間 ¥ 222600.00 JPY /月 ¥ 2270520.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 214.8 JPY /時間 ¥ 103090.00 JPY /月 ¥ 1051518.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 279.2 JPY /時間 ¥ 134020.00 JPY /月 ¥ 1367004.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 429.6 JPY /時間 ¥ 206180.00 JPY /月 ¥ 2103036.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 558.4 JPY /時間 ¥ 268030.00 JPY /月 ¥ 2733906.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 859.1 JPY /時間 ¥ 412360.00 JPY /月 ¥ 4206072.00 JPY /年   ecs.gn5-c8g1.8xlarge 32 vCPU 240 GiB 10 Gbps 2000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 1116.8 JPY /時間 ¥ 536060.00 JPY /月 ¥ 5467812.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 1718.1 JPY /時間 ¥ 824710.00 JPY /月 ¥ 8412042.00 JPY /年   ecs.gn5-c8g1.14xlarge 54 vCPU 480 GiB 25 Gbps 4000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 2233.6 JPY /時間 ¥ 1072120.00 JPY /月 ¥ 10935624.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro linux ￥ 26 JPY /時間 ¥ 12490.00 JPY /月 ¥ 127398.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro windows ￥ 44.7 JPY /時間 ¥ 26790.00 JPY /月 ¥ 273258.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro linux ￥ 52 JPY /時間 ¥ 24990.00 JPY /月 ¥ 254898.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro windows ￥ 89.3 JPY /時間 ¥ 53580.00 JPY /月 ¥ 546516.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro linux ￥ 104.1 JPY /時間 ¥ 49980.00 JPY /月 ¥ 509796.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro windows ￥ 178.5 JPY /時間 ¥ 107150.00 JPY /月 ¥ 1092930.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro linux ￥ 208.2 JPY /時間 ¥ 99940.00 JPY /月 ¥ 1019388.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro windows ￥ 357.1 JPY /時間 ¥ 214290.00 JPY /月 ¥ 2185758.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro linux ￥ 329.4 JPY /時間 ¥ 158130.00 JPY /月 ¥ 1612926.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro windows ￥ 625.2 JPY /時間 ¥ 375120.00 JPY /月 ¥ 3826224.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 5.1 JPY /時間 ¥ 2580.00 JPY /月 ¥ 26316.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 5.1 JPY /時間 ¥ 4550.00 JPY /月 ¥ 46410.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 10.2 JPY /時間 ¥ 5160.00 JPY /月 ¥ 52632.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 10.2 JPY /時間 ¥ 9100.00 JPY /月 ¥ 92820.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 20.3 JPY /時間 ¥ 10300.00 JPY /月 ¥ 105060.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 20.3 JPY /時間 ¥ 18200.00 JPY /月 ¥ 185640.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 40.6 JPY /時間 ¥ 20600.00 JPY /月 ¥ 210120.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 40.6 JPY /時間 ¥ 36530.00 JPY /月 ¥ 372606.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 81.1 JPY /時間 ¥ 41190.00 JPY /月 ¥ 420138.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 81.1 JPY /時間 ¥ 73060.00 JPY /月 ¥ 745212.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - linux ￥ 162.1 JPY /時間 ¥ 82380.00 JPY /月 ¥ 840276.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - windows ￥ 162.1 JPY /時間 ¥ 146120.00 JPY /月 ¥ 1490424.00 JPY /年   ecs.n1.tiny 1 vCPU 1 GiB - - - - linux ￥ 1.4 JPY /時間 ¥ 710.00 JPY /月 ¥ 7242.00 JPY /年   ecs.n1.tiny 1 vCPU 1 GiB - - - - windows ￥ 1.9 JPY /時間 ¥ 950.00 JPY /月 ¥ 9690.00 JPY /年   ecs.n1.small 1 vCPU 2 GiB - - - - linux ￥ 2.7 JPY /時間 ¥ 1410.00 JPY /月 ¥ 14382.00 JPY /年   ecs.n1.small 1 vCPU 2 GiB - - - - windows ￥ 3.7 JPY /時間 ¥ 2170.00 JPY /月 ¥ 22134.00 JPY /年   ecs.n1.medium 2 vCPU 4 GiB - - - - linux ￥ 5.5 JPY /時間 ¥ 2830.00 JPY /月 ¥ 28866.00 JPY /年   ecs.n1.medium 2 vCPU 4 GiB - - - - windows ￥ 7.5 JPY /時間 ¥ 4340.00 JPY /月 ¥ 44268.00 JPY /年   ecs.n1.large 4 vCPU 8 GiB - - - - linux ￥ 17.6 JPY /時間 ¥ 9000.00 JPY /月 ¥ 91800.00 JPY /年   ecs.n1.large 4 vCPU 8 GiB - - - - windows ￥ 21.7 JPY /時間 ¥ 11140.00 JPY /月 ¥ 113628.00 JPY /年   ecs.n1.xlarge 8 vCPU 16 GiB - - - - linux ￥ 35.2 JPY /時間 ¥ 17990.00 JPY /月 ¥ 183498.00 JPY /年   ecs.n1.xlarge 8 vCPU 16 GiB - - - - windows ￥ 43.3 JPY /時間 ¥ 22250.00 JPY /月 ¥ 226950.00 JPY /年   ecs.n1.3xlarge 16 vCPU 32 GiB - - - - linux ￥ 70.4 JPY /時間 ¥ 35970.00 JPY /月 ¥ 366894.00 JPY /年   ecs.n1.3xlarge 16 vCPU 32 GiB - - - - windows ￥ 86.4 JPY /時間 ¥ 44480.00 JPY /月 ¥ 453696.00 JPY /年   ecs.n1.7xlarge 32 vCPU 64 GiB - - - - linux ￥ 141 JPY /時間 ¥ 71930.00 JPY /月 ¥ 733686.00 JPY /年   ecs.n1.7xlarge 32 vCPU 64 GiB - - - - windows ￥ 172.7 JPY /時間 ¥ 88940.00 JPY /月 ¥ 907188.00 JPY /年   ecs.n2.small 1 vCPU 4 GiB - - - - linux ￥ 4.9 JPY /時間 ¥ 2480.00 JPY /月 ¥ 25296.00 JPY /年   ecs.n2.small 1 vCPU 4 GiB - - - - windows ￥ 7.5 JPY /時間 ¥ 3830.00 JPY /月 ¥ 39066.00 JPY /年   ecs.n2.medium 2 vCPU 8 GiB - - - - linux ￥ 9.6 JPY /時間 ¥ 4950.00 JPY /月 ¥ 50490.00 JPY /年   ecs.n2.medium 2 vCPU 8 GiB - - - - windows ￥ 15 JPY /時間 ¥ 7660.00 JPY /月 ¥ 78132.00 JPY /年   ecs.n2.large 4 vCPU 16 GiB - - - - linux ￥ 19.3 JPY /時間 ¥ 9910.00 JPY /月 ¥ 101082.00 JPY /年   ecs.n2.large 4 vCPU 16 GiB - - - - windows ￥ 29.9 JPY /時間 ¥ 15320.00 JPY /月 ¥ 156264.00 JPY /年   ecs.n2.xlarge 8 vCPU 32 GiB - - - - linux ￥ 38.7 JPY /時間 ¥ 19890.00 JPY /月 ¥ 202878.00 JPY /年   ecs.n2.xlarge 8 vCPU 32 GiB - - - - windows ￥ 59.6 JPY /時間 ¥ 30620.00 JPY /月 ¥ 312324.00 JPY /年   ecs.n2.3xlarge 16 vCPU 64 GiB - - - - linux ￥ 77.2 JPY /時間 ¥ 39760.00 JPY /月 ¥ 405552.00 JPY /年   ecs.n2.3xlarge 16 vCPU 64 GiB - - - - windows ￥ 119 JPY /時間 ¥ 61230.00 JPY /月 ¥ 624546.00 JPY /年   ecs.n2.7xlarge 32 vCPU 128 GiB - - - - linux ￥ 154.3 JPY /時間 ¥ 79520.00 JPY /月 ¥ 811104.00 JPY /年   ecs.n2.7xlarge 32 vCPU 128 GiB - - - - windows ￥ 237.6 JPY /時間 ¥ 122430.00 JPY /月 ¥ 1248786.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 2.7 JPY /時間 ¥ 1410.00 JPY /月 ¥ 14382.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 2.7 JPY /時間 ¥ 2170.00 JPY /月 ¥ 22134.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 5.5 JPY /時間 ¥ 2830.00 JPY /月 ¥ 28866.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 5.5 JPY /時間 ¥ 4340.00 JPY /月 ¥ 44268.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 19.4 JPY /時間 ¥ 9000.00 JPY /月 ¥ 91800.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 19.4 JPY /時間 ¥ 13480.00 JPY /月 ¥ 137496.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 38.7 JPY /時間 ¥ 17990.00 JPY /月 ¥ 183498.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 38.7 JPY /時間 ¥ 26960.00 JPY /月 ¥ 274992.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 77.3 JPY /時間 ¥ 35970.00 JPY /月 ¥ 366894.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 77.3 JPY /時間 ¥ 53800.00 JPY /月 ¥ 548760.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - linux ￥ 154.7 JPY /時間 ¥ 71930.00 JPY /月 ¥ 733686.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - windows ￥ 154.7 JPY /時間 ¥ 107600.00 JPY /月 ¥ 1097520.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 15.1 JPY /時間 ¥ 7050.00 JPY /月 ¥ 71910.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 25.6 JPY /時間 ¥ 14630.00 JPY /月 ¥ 149226.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 30.3 JPY /時間 ¥ 13750.00 JPY /月 ¥ 140250.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 51.2 JPY /時間 ¥ 29260.00 JPY /月 ¥ 298452.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 60.5 JPY /時間 ¥ 27150.00 JPY /月 ¥ 276930.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 102.5 JPY /時間 ¥ 58510.00 JPY /月 ¥ 596802.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - linux ￥ 121.1 JPY /時間 ¥ 53940.00 JPY /月 ¥ 550188.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - windows ￥ 205 JPY /時間 ¥ 117020.00 JPY /月 ¥ 1193604.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - linux ￥ 242.2 JPY /時間 ¥ 107540.00 JPY /月 ¥ 1096908.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - windows ￥ 409.9 JPY /時間 ¥ 234040.00 JPY /月 ¥ 2387208.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - linux ￥ 446.7 JPY /時間 ¥ 207810.00 JPY /月 ¥ 2119662.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - windows ￥ 755.7 JPY /時間 ¥ 431510.00 JPY /月 ¥ 4401402.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 15.8 JPY /時間 ¥ 7400.00 JPY /月 ¥ 75480.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 26.8 JPY /時間 ¥ 15360.00 JPY /月 ¥ 156672.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 31.8 JPY /時間 ¥ 14430.00 JPY /月 ¥ 147186.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 53.8 JPY /時間 ¥ 30720.00 JPY /月 ¥ 313344.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - linux ￥ 63.5 JPY /時間 ¥ 28500.00 JPY /月 ¥ 290700.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - windows ￥ 107.6 JPY /時間 ¥ 61440.00 JPY /月 ¥ 626688.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - linux ￥ 127.1 JPY /時間 ¥ 56640.00 JPY /月 ¥ 577728.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - windows ￥ 215.2 JPY /時間 ¥ 122870.00 JPY /月 ¥ 1253274.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - linux ￥ 254.3 JPY /時間 ¥ 112910.00 JPY /月 ¥ 1151682.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - windows ￥ 430.4 JPY /時間 ¥ 245750.00 JPY /月 ¥ 2506650.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - linux ￥ 469 JPY /時間 ¥ 218200.00 JPY /月 ¥ 2225640.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - windows ￥ 793.4 JPY /時間 ¥ 453090.00 JPY /月 ¥ 4621518.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 9.8 JPY /時間 ¥ 4500.00 JPY /月 ¥ 45900.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 18.8 JPY /時間 ¥ 11060.00 JPY /月 ¥ 112812.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 19.5 JPY /時間 ¥ 9000.00 JPY /月 ¥ 91800.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 37.4 JPY /時間 ¥ 22130.00 JPY /月 ¥ 225726.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 38.9 JPY /時間 ¥ 17990.00 JPY /月 ¥ 183498.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 74.9 JPY /時間 ¥ 44250.00 JPY /月 ¥ 451350.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - linux ￥ 77.8 JPY /時間 ¥ 35970.00 JPY /月 ¥ 366894.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - windows ￥ 149.8 JPY /時間 ¥ 88490.00 JPY /月 ¥ 902598.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - linux ￥ 155.5 JPY /時間 ¥ 71930.00 JPY /月 ¥ 733686.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - windows ￥ 302.2 JPY /時間 ¥ 190100.00 JPY /月 ¥ 1939020.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 10.3 JPY /時間 ¥ 4720.00 JPY /月 ¥ 48144.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 19.7 JPY /時間 ¥ 11620.00 JPY /月 ¥ 118524.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 20.4 JPY /時間 ¥ 9440.00 JPY /月 ¥ 96288.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 39.3 JPY /時間 ¥ 23230.00 JPY /月 ¥ 236946.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 40.8 JPY /時間 ¥ 18880.00 JPY /月 ¥ 192576.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 78.6 JPY /時間 ¥ 46460.00 JPY /月 ¥ 473892.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 81.6 JPY /時間 ¥ 37770.00 JPY /月 ¥ 385254.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 157.3 JPY /時間 ¥ 92910.00 JPY /月 ¥ 947682.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 163.2 JPY /時間 ¥ 75530.00 JPY /月 ¥ 770406.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 317.2 JPY /時間 ¥ 199610.00 JPY /月 ¥ 2036022.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 11.4 JPY /時間 ¥ 5160.00 JPY /月 ¥ 52632.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 21.9 JPY /時間 ¥ 12800.00 JPY /月 ¥ 130560.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 22.8 JPY /時間 ¥ 10300.00 JPY /月 ¥ 105060.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 43.7 JPY /時間 ¥ 25590.00 JPY /月 ¥ 261018.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 45.6 JPY /時間 ¥ 20600.00 JPY /月 ¥ 210120.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 87.4 JPY /時間 ¥ 51180.00 JPY /月 ¥ 522036.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - linux ￥ 91.1 JPY /時間 ¥ 41190.00 JPY /月 ¥ 420138.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - windows ￥ 174.8 JPY /時間 ¥ 102360.00 JPY /月 ¥ 1044072.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - linux ￥ 182.2 JPY /時間 ¥ 82380.00 JPY /月 ¥ 840276.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - windows ￥ 349.8 JPY /時間 ¥ 204720.00 JPY /月 ¥ 2088144.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - linux ￥ 318.8 JPY /時間 ¥ 144280.00 JPY /月 ¥ 1471656.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - windows ￥ 612.1 JPY /時間 ¥ 358380.00 JPY /月 ¥ 3655476.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 11.9 JPY /時間 ¥ 5410.00 JPY /月 ¥ 55182.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.9 JPY /時間 ¥ 13440.00 JPY /月 ¥ 137088.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 23.9 JPY /時間 ¥ 10820.00 JPY /月 ¥ 110364.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 45.9 JPY /時間 ¥ 26870.00 JPY /月 ¥ 274074.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 47.8 JPY /時間 ¥ 21630.00 JPY /月 ¥ 220626.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 91.8 JPY /時間 ¥ 53740.00 JPY /月 ¥ 548148.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 95.6 JPY /時間 ¥ 43250.00 JPY /月 ¥ 441150.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 183.6 JPY /時間 ¥ 107480.00 JPY /月 ¥ 1096296.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 191.3 JPY /時間 ¥ 86500.00 JPY /月 ¥ 882300.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 367.2 JPY /時間 ¥ 214960.00 JPY /月 ¥ 2192592.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 5.8 JPY /時間 ¥ 1530.00 JPY /月 ¥ 15606.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 5.8 JPY /時間 ¥ 1530.00 JPY /月 ¥ 15606.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 10.4 JPY /時間 ¥ 3070.00 JPY /月 ¥ 31314.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 3070.00 JPY /月 ¥ 31314.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 20.7 JPY /時間 ¥ 6120.00 JPY /月 ¥ 62424.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 20.7 JPY /時間 ¥ 6120.00 JPY /月 ¥ 62424.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 42.6 JPY /時間 ¥ 12240.00 JPY /月 ¥ 124848.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 42.6 JPY /時間 ¥ 12240.00 JPY /月 ¥ 124848.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 6.9 JPY /時間 ¥ 2140.00 JPY /月 ¥ 21828.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 6.9 JPY /時間 ¥ 2140.00 JPY /月 ¥ 21828.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 15 JPY /時間 ¥ 4250.00 JPY /月 ¥ 43350.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 15 JPY /時間 ¥ 4250.00 JPY /月 ¥ 43350.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 29.9 JPY /時間 ¥ 8490.00 JPY /月 ¥ 86598.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 29.9 JPY /時間 ¥ 8490.00 JPY /月 ¥ 86598.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 58.7 JPY /時間 ¥ 16980.00 JPY /月 ¥ 173196.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 58.7 JPY /時間 ¥ 16980.00 JPY /月 ¥ 173196.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 11.5 JPY /時間 ¥ 3310.00 JPY /月 ¥ 33762.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 11.5 JPY /時間 ¥ 3310.00 JPY /月 ¥ 33762.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 23 JPY /時間 ¥ 6620.00 JPY /月 ¥ 67524.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 23 JPY /時間 ¥ 6620.00 JPY /月 ¥ 67524.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 46 JPY /時間 ¥ 13230.00 JPY /月 ¥ 134946.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 46 JPY /時間 ¥ 13230.00 JPY /月 ¥ 134946.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 1.2 JPY /時間 ¥ 430.00 JPY /月 ¥ 4386.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 1.2 JPY /時間 ¥ 430.00 JPY /月 ¥ 4386.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 5.8 JPY /時間 ¥ 1690.00 JPY /月 ¥ 17238.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 5.8 JPY /時間 ¥ 1690.00 JPY /月 ¥ 17238.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 3.5 JPY /時間 ¥ 850.00 JPY /月 ¥ 8670.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 3.5 JPY /時間 ¥ 850.00 JPY /月 ¥ 8670.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 10.4 JPY /時間 ¥ 2930.00 JPY /月 ¥ 29886.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 2930.00 JPY /月 ¥ 29886.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - linux ￥ 1.2 JPY /時間 ¥ 320.00 JPY /月 ¥ 3264.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - windows ￥ 1.2 JPY /時間 ¥ 320.00 JPY /月 ¥ 3264.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 1.4 JPY /時間 ¥ 710.00 JPY /月 ¥ 7242.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 1.4 JPY /時間 ¥ 1090.00 JPY /月 ¥ 11118.00 JPY /年    \nus-west-1    instanceType vCPU  メモリ  イントラネット帯域幅 パケット転送速度  GPU/FPGA  ローカルストレージ  OS 従量課金 サブスクリプション サブスクリプション     ecs.c4.xlarge 4 vCPU 8 GiB 1.5 Gbps 200,000 PPS - - linux ￥ 27.6 JPY /時間 ¥ 14260.00 JPY /月 ¥ 145452.00 JPY /年   ecs.c4.xlarge 4 vCPU 8 GiB 1.5 Gbps 200,000 PPS - - windows ￥ 49.5 JPY /時間 ¥ 29670.00 JPY /月 ¥ 302634.00 JPY /年   ecs.c4.2xlarge 8 vCPU 16 GiB 3 Gbps 400,000 PPS - - linux ￥ 55.2 JPY /時間 ¥ 28520.00 JPY /月 ¥ 290904.00 JPY /年   ecs.c4.4xlarge 16 vCPU 32 GiB 6 Gbps 800,000 PPS - - linux ￥ 110.4 JPY /時間 ¥ 57040.00 JPY /月 ¥ 581808.00 JPY /年   ecs.c4.4xlarge 16 vCPU 32 GiB 6 Gbps 800,000 PPS - - windows ￥ 197.8 JPY /時間 ¥ 118680.00 JPY /月 ¥ 1210536.00 JPY /年   ecs.ce4.xlarge 4 vCPU 32 GiB 1.5 Gbps 200,000 PPS - - linux ￥ 40.4 JPY /時間 ¥ 18640.00 JPY /月 ¥ 190128.00 JPY /年   ecs.ce4.xlarge 4 vCPU 32 GiB 1.5 Gbps 200,000 PPS - - windows ￥ 65.6 JPY /時間 ¥ 37000.00 JPY /月 ¥ 377400.00 JPY /年   ecs.cm4.xlarge 4 vCPU 16 GiB 1.5 Gbps 200,000 PPS - - linux ￥ 31.1 JPY /時間 ¥ 16280.00 JPY /月 ¥ 166056.00 JPY /年   ecs.cm4.xlarge 4 vCPU 16 GiB 1.5 Gbps 200,000 PPS - - windows ￥ 56.4 JPY /時間 ¥ 35320.00 JPY /月 ¥ 360264.00 JPY /年   ecs.cm4.2xlarge 8 vCPU 32 GiB 3 Gbps 400,000 PPS - - linux ￥ 63.3 JPY /時間 ¥ 32560.00 JPY /月 ¥ 332112.00 JPY /年   ecs.cm4.2xlarge 8 vCPU 32 GiB 3 Gbps 400,000 PPS - - windows ￥ 113.9 JPY /時間 ¥ 70640.00 JPY /月 ¥ 720528.00 JPY /年   ecs.cm4.4xlarge 16 vCPU 64 GiB 6 Gbps 800,000 PPS - - linux ￥ 127.7 JPY /時間 ¥ 65120.00 JPY /月 ¥ 664224.00 JPY /年   ecs.cm4.4xlarge 16 vCPU 64 GiB 6 Gbps 800,000 PPS - - windows ￥ 227.7 JPY /時間 ¥ 141270.00 JPY /月 ¥ 1440954.00 JPY /年   ecs.cm4.6xlarge 24 vCPU 96 GiB 10 Gbps 1200,000 PPS - - linux ￥ 190.9 JPY /時間 ¥ 97680.00 JPY /月 ¥ 996336.00 JPY /年   ecs.cm4.6xlarge 24 vCPU 96 GiB 10 Gbps 1200,000 PPS - - windows ￥ 341.6 JPY /時間 ¥ 211900.00 JPY /月 ¥ 2161380.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro linux ￥ 89.4 JPY /時間 ¥ 42910.00 JPY /月 ¥ 437682.00 JPY /年   ecs.d1.2xlarge 8 vCPU 32 GiB 3 Gbps 300,000 PPS - local_hdd_pro windows ￥ 107.3 JPY /時間 ¥ 64380.00 JPY /月 ¥ 656676.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro linux ￥ 178.8 JPY /時間 ¥ 85810.00 JPY /月 ¥ 875262.00 JPY /年   ecs.d1.4xlarge 16 vCPU 64 GiB 6 Gbps 600,000 PPS - local_hdd_pro windows ￥ 214.6 JPY /時間 ¥ 128760.00 JPY /月 ¥ 1313352.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro linux ￥ 268.1 JPY /時間 ¥ 128710.00 JPY /月 ¥ 1312842.00 JPY /年   ecs.d1.6xlarge 24 vCPU 96 GiB 8 Gbps 800,000 PPS - local_hdd_pro windows ￥ 321.9 JPY /時間 ¥ 193140.00 JPY /月 ¥ 1970028.00 JPY /年   ecs.d1.8xlarge 32 vCPU 128 GiB 10 Gbps 1000,000 PPS - local_hdd_pro linux ￥ 357.5 JPY /時間 ¥ 171610.00 JPY /月 ¥ 1750422.00 JPY /年   ecs.d1.8xlarge 32 vCPU 128 GiB 10 Gbps 1000,000 PPS - local_hdd_pro windows ￥ 429.2 JPY /時間 ¥ 257520.00 JPY /月 ¥ 2626704.00 JPY /年   ecs.d1.14xlarge 56 vCPU 224 GiB 17 Gbps 1800,000 PPS - local_hdd_pro linux ￥ 625.6 JPY /時間 ¥ 300320.00 JPY /月 ¥ 3063264.00 JPY /年   ecs.d1.14xlarge 56 vCPU 224 GiB 17 Gbps 1800,000 PPS - local_hdd_pro windows ￥ 751.2 JPY /時間 ¥ 450760.00 JPY /月 ¥ 4597752.00 JPY /年   ecs.e3.small 1 vCPU 8 GiB - - - - linux ￥ 8.4 JPY /時間 ¥ 3890.00 JPY /月 ¥ 39678.00 JPY /年   ecs.e3.small 1 vCPU 8 GiB - - - - windows ￥ 11.8 JPY /時間 ¥ 6050.00 JPY /月 ¥ 61710.00 JPY /年   ecs.e3.medium 2 vCPU 16 GiB - - - - linux ￥ 16.8 JPY /時間 ¥ 7770.00 JPY /月 ¥ 79254.00 JPY /年   ecs.e3.medium 2 vCPU 16 GiB - - - - windows ￥ 23.6 JPY /時間 ¥ 12090.00 JPY /月 ¥ 123318.00 JPY /年   ecs.e3.large 4 vCPU 32 GiB - - - - linux ￥ 33.7 JPY /時間 ¥ 15540.00 JPY /月 ¥ 158508.00 JPY /年   ecs.e3.large 4 vCPU 32 GiB - - - - windows ￥ 47 JPY /時間 ¥ 24170.00 JPY /月 ¥ 246534.00 JPY /年   ecs.e3.xlarge 8 vCPU 64 GiB - - - - linux ￥ 67.6 JPY /時間 ¥ 31070.00 JPY /月 ¥ 316914.00 JPY /年   ecs.e3.xlarge 8 vCPU 64 GiB - - - - windows ￥ 93.9 JPY /時間 ¥ 48340.00 JPY /月 ¥ 493068.00 JPY /年   ecs.e3.3xlarge 16 vCPU 128 GiB - - - - linux ￥ 135.1 JPY /時間 ¥ 62140.00 JPY /月 ¥ 633828.00 JPY /年   ecs.e3.3xlarge 16 vCPU 128 GiB - - - - windows ￥ 187.7 JPY /時間 ¥ 96660.00 JPY /月 ¥ 985932.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 196.2 JPY /時間 ¥ 94180.00 JPY /月 ¥ 960636.00 JPY /年   ecs.gn5-c4g1.xlarge 4 vCPU 30 GiB 3 Gbps 300,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 255 JPY /時間 ¥ 122430.00 JPY /月 ¥ 1248786.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 392.4 JPY /時間 ¥ 188350.00 JPY /月 ¥ 1921170.00 JPY /年   ecs.gn5-c4g1.2xlarge 8 vCPU 60 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 510.1 JPY /時間 ¥ 244860.00 JPY /月 ¥ 2497572.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 236.3 JPY /時間 ¥ 113400.00 JPY /月 ¥ 1156680.00 JPY /年   ecs.gn5-c8g1.2xlarge 8 vCPU 60 GiB 3 Gbps 400,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 307.1 JPY /時間 ¥ 147420.00 JPY /月 ¥ 1503684.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro linux ￥ 472.5 JPY /時間 ¥ 226800.00 JPY /月 ¥ 2313360.00 JPY /年   ecs.gn5-c8g1.4xlarge 16 vCPU 120 GiB 5 Gbps 1000,000 PPS NVIDIA P100 local_ssd_pro windows ￥ 614.3 JPY /時間 ¥ 294840.00 JPY /月 ¥ 3007368.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro linux ￥ 28.5 JPY /時間 ¥ 13680.00 JPY /月 ¥ 139536.00 JPY /年   ecs.i1.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - local_ssd_pro windows ￥ 51 JPY /時間 ¥ 30630.00 JPY /月 ¥ 312426.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro linux ￥ 57 JPY /時間 ¥ 27370.00 JPY /月 ¥ 279174.00 JPY /年   ecs.i1.2xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - local_ssd_pro windows ￥ 102.1 JPY /時間 ¥ 61260.00 JPY /月 ¥ 624852.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro linux ￥ 114 JPY /時間 ¥ 54740.00 JPY /月 ¥ 558348.00 JPY /年   ecs.i1.4xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - local_ssd_pro windows ￥ 204.2 JPY /時間 ¥ 122510.00 JPY /月 ¥ 1249602.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro linux ￥ 228 JPY /時間 ¥ 109450.00 JPY /月 ¥ 1116390.00 JPY /年   ecs.i1.8xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - local_ssd_pro windows ￥ 408.3 JPY /時間 ¥ 245010.00 JPY /月 ¥ 2499102.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro linux ￥ 396.8 JPY /時間 ¥ 190500.00 JPY /月 ¥ 1943100.00 JPY /年   ecs.i1.14xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - local_ssd_pro windows ￥ 714.8 JPY /時間 ¥ 428870.00 JPY /月 ¥ 4374474.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 6.6 JPY /時間 ¥ 3400.00 JPY /月 ¥ 34680.00 JPY /年   ecs.mn4.small 1 vCPU 4 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 6.6 JPY /時間 ¥ 6110.00 JPY /月 ¥ 62322.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 13.3 JPY /時間 ¥ 6790.00 JPY /月 ¥ 69258.00 JPY /年   ecs.mn4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 13.3 JPY /時間 ¥ 12210.00 JPY /月 ¥ 124542.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 26.6 JPY /時間 ¥ 13570.00 JPY /月 ¥ 138414.00 JPY /年   ecs.mn4.xlarge 4 vCPU 16 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 26.6 JPY /時間 ¥ 24550.00 JPY /月 ¥ 250410.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 53.3 JPY /時間 ¥ 27140.00 JPY /月 ¥ 276828.00 JPY /年   ecs.mn4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 53.3 JPY /時間 ¥ 48950.00 JPY /月 ¥ 499290.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 106.5 JPY /時間 ¥ 54270.00 JPY /月 ¥ 553554.00 JPY /年   ecs.mn4.4xlarge 16 vCPU 64 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 106.5 JPY /時間 ¥ 97910.00 JPY /月 ¥ 998682.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - linux ￥ 213.1 JPY /時間 ¥ 108530.00 JPY /月 ¥ 1107006.00 JPY /年   ecs.mn4.8xlarge 32 vCPU 128 GiB 5 Gbps 500,000 PPS - - windows ￥ 213.1 JPY /時間 ¥ 195810.00 JPY /月 ¥ 1997262.00 JPY /年   ecs.n1.tiny 1 vCPU 1 GiB - - - - linux ￥ 1.8 JPY /時間 ¥ 940.00 JPY /月 ¥ 9588.00 JPY /年   ecs.n1.tiny 1 vCPU 1 GiB - - - - windows ￥ 2.3 JPY /時間 ¥ 1210.00 JPY /月 ¥ 12342.00 JPY /年   ecs.n1.small 1 vCPU 2 GiB - - - - linux ￥ 3.5 JPY /時間 ¥ 1870.00 JPY /月 ¥ 19074.00 JPY /年   ecs.n1.small 1 vCPU 2 GiB - - - - windows ￥ 4.5 JPY /時間 ¥ 2630.00 JPY /月 ¥ 26826.00 JPY /年   ecs.n1.medium 2 vCPU 4 GiB - - - - linux ￥ 7.1 JPY /時間 ¥ 3740.00 JPY /月 ¥ 38148.00 JPY /年   ecs.n1.medium 2 vCPU 4 GiB - - - - windows ￥ 9.1 JPY /時間 ¥ 5250.00 JPY /月 ¥ 53550.00 JPY /年   ecs.n1.large 4 vCPU 8 GiB - - - - linux ￥ 22.3 JPY /時間 ¥ 11420.00 JPY /月 ¥ 116484.00 JPY /年   ecs.n1.large 4 vCPU 8 GiB - - - - windows ￥ 26.7 JPY /時間 ¥ 13700.00 JPY /月 ¥ 139740.00 JPY /年   ecs.n1.xlarge 8 vCPU 16 GiB - - - - linux ￥ 44.4 JPY /時間 ¥ 22830.00 JPY /月 ¥ 232866.00 JPY /年   ecs.n1.xlarge 8 vCPU 16 GiB - - - - windows ￥ 53.3 JPY /時間 ¥ 27390.00 JPY /月 ¥ 279378.00 JPY /年   ecs.n1.3xlarge 16 vCPU 32 GiB - - - - linux ￥ 88.7 JPY /時間 ¥ 45650.00 JPY /月 ¥ 465630.00 JPY /年   ecs.n1.3xlarge 16 vCPU 32 GiB - - - - windows ￥ 106.4 JPY /時間 ¥ 54780.00 JPY /月 ¥ 558756.00 JPY /年   ecs.n1.7xlarge 32 vCPU 64 GiB - - - - linux ￥ 177.3 JPY /時間 ¥ 91290.00 JPY /月 ¥ 931158.00 JPY /年   ecs.n1.7xlarge 32 vCPU 64 GiB - - - - windows ￥ 212.7 JPY /時間 ¥ 109550.00 JPY /月 ¥ 1117410.00 JPY /年   ecs.n2.small 1 vCPU 4 GiB - - - - linux ￥ 6.6 JPY /時間 ¥ 3400.00 JPY /月 ¥ 34680.00 JPY /年   ecs.n2.small 1 vCPU 4 GiB - - - - windows ￥ 9.8 JPY /時間 ¥ 5040.00 JPY /月 ¥ 51408.00 JPY /年   ecs.n2.medium 2 vCPU 8 GiB - - - - linux ￥ 13.3 JPY /時間 ¥ 6790.00 JPY /月 ¥ 69258.00 JPY /年   ecs.n2.medium 2 vCPU 8 GiB - - - - windows ￥ 19.6 JPY /時間 ¥ 10080.00 JPY /月 ¥ 102816.00 JPY /年   ecs.n2.large 4 vCPU 16 GiB - - - - linux ￥ 26.6 JPY /時間 ¥ 13570.00 JPY /月 ¥ 138414.00 JPY /年   ecs.n2.large 4 vCPU 16 GiB - - - - windows ￥ 39.2 JPY /時間 ¥ 20150.00 JPY /月 ¥ 205530.00 JPY /年   ecs.n2.xlarge 8 vCPU 32 GiB - - - - linux ￥ 53.3 JPY /時間 ¥ 27140.00 JPY /月 ¥ 276828.00 JPY /年   ecs.n2.xlarge 8 vCPU 32 GiB - - - - windows ￥ 78.3 JPY /時間 ¥ 40290.00 JPY /月 ¥ 410958.00 JPY /年   ecs.n2.3xlarge 16 vCPU 64 GiB - - - - linux ￥ 106.5 JPY /時間 ¥ 54270.00 JPY /月 ¥ 553554.00 JPY /年   ecs.n2.3xlarge 16 vCPU 64 GiB - - - - windows ￥ 156.5 JPY /時間 ¥ 80560.00 JPY /月 ¥ 821712.00 JPY /年   ecs.n2.7xlarge 32 vCPU 128 GiB - - - - linux ￥ 212.9 JPY /時間 ¥ 108530.00 JPY /月 ¥ 1107006.00 JPY /年   ecs.n2.7xlarge 32 vCPU 128 GiB - - - - windows ￥ 312.8 JPY /時間 ¥ 161100.00 JPY /月 ¥ 1643220.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 3.5 JPY /時間 ¥ 1870.00 JPY /月 ¥ 19074.00 JPY /年   ecs.n4.small 1 vCPU 2 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 3.5 JPY /時間 ¥ 2630.00 JPY /月 ¥ 26826.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 7.1 JPY /時間 ¥ 3740.00 JPY /月 ¥ 38148.00 JPY /年   ecs.n4.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 7.1 JPY /時間 ¥ 5250.00 JPY /月 ¥ 53550.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - linux ￥ 24.3 JPY /時間 ¥ 12140.00 JPY /月 ¥ 123828.00 JPY /年   ecs.n4.xlarge 4 vCPU 8 GiB 0.8 Gbps 150,000 PPS - - windows ￥ 24.3 JPY /時間 ¥ 16300.00 JPY /月 ¥ 166260.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - linux ￥ 48.7 JPY /時間 ¥ 24270.00 JPY /月 ¥ 247554.00 JPY /年   ecs.n4.2xlarge 8 vCPU 16 GiB 1.2 Gbps 300,000 PPS - - windows ￥ 48.7 JPY /時間 ¥ 32580.00 JPY /月 ¥ 332316.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - linux ￥ 97.3 JPY /時間 ¥ 48530.00 JPY /月 ¥ 495006.00 JPY /年   ecs.n4.4xlarge 16 vCPU 32 GiB 2.5 Gbps 400,000 PPS - - windows ￥ 97.3 JPY /時間 ¥ 65150.00 JPY /月 ¥ 664530.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - linux ￥ 194.5 JPY /時間 ¥ 97120.00 JPY /月 ¥ 990624.00 JPY /年   ecs.n4.8xlarge 32 vCPU 64 GiB 5 Gbps 500,000 PPS - - windows ￥ 194.5 JPY /時間 ¥ 130280.00 JPY /月 ¥ 1328856.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 16.8 JPY /時間 ¥ 7770.00 JPY /月 ¥ 79254.00 JPY /年   ecs.se1.large 2 vCPU 16 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 27.3 JPY /時間 ¥ 15410.00 JPY /月 ¥ 157182.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 33.7 JPY /時間 ¥ 15540.00 JPY /月 ¥ 158508.00 JPY /年   ecs.se1.xlarge 4 vCPU 32 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 54.7 JPY /時間 ¥ 30830.00 JPY /月 ¥ 314466.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 67.6 JPY /時間 ¥ 31070.00 JPY /月 ¥ 316914.00 JPY /年   ecs.se1.2xlarge 8 vCPU 64 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 109.4 JPY /時間 ¥ 61660.00 JPY /月 ¥ 628932.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - linux ￥ 135.1 JPY /時間 ¥ 62140.00 JPY /月 ¥ 633828.00 JPY /年   ecs.se1.4xlarge 16 vCPU 128 GiB 3 Gbps 500,000 PPS - - windows ￥ 218.8 JPY /時間 ¥ 123310.00 JPY /月 ¥ 1257762.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - linux ￥ 270 JPY /時間 ¥ 124270.00 JPY /月 ¥ 1267554.00 JPY /年   ecs.se1.8xlarge 32 vCPU 256 GiB 6 Gbps 800,000 PPS - - windows ￥ 437.5 JPY /時間 ¥ 246610.00 JPY /月 ¥ 2515422.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - linux ￥ 497.1 JPY /時間 ¥ 232440.00 JPY /月 ¥ 2370888.00 JPY /年   ecs.se1.14xlarge 56 vCPU 480 GiB 10 Gbps 1200,000 PPS - - windows ￥ 806.1 JPY /時間 ¥ 454550.00 JPY /月 ¥ 4636410.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - linux ￥ 17.6 JPY /時間 ¥ 8150.00 JPY /月 ¥ 83130.00 JPY /年   ecs.se1ne.large 2 vCPU 16 GiB 1 Gbps 300,000 PPS - - windows ￥ 28.6 JPY /時間 ¥ 16180.00 JPY /月 ¥ 165036.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 35.4 JPY /時間 ¥ 16310.00 JPY /月 ¥ 166362.00 JPY /年   ecs.se1ne.xlarge 4 vCPU 32 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 57.3 JPY /時間 ¥ 32370.00 JPY /月 ¥ 330174.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - linux ￥ 70.9 JPY /時間 ¥ 32620.00 JPY /月 ¥ 332724.00 JPY /年   ecs.se1ne.2xlarge 8 vCPU 64 GiB 2 Gbps 1000,000 PPS - - windows ￥ 114.8 JPY /時間 ¥ 64740.00 JPY /月 ¥ 660348.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - linux ￥ 141.7 JPY /時間 ¥ 65240.00 JPY /月 ¥ 665448.00 JPY /年   ecs.se1ne.4xlarge 16 vCPU 128 GiB 3 Gbps 1600,000 PPS - - windows ￥ 229.7 JPY /時間 ¥ 129470.00 JPY /月 ¥ 1320594.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - linux ￥ 283.4 JPY /時間 ¥ 130480.00 JPY /月 ¥ 1330896.00 JPY /年   ecs.se1ne.8xlarge 32 vCPU 256 GiB 6 Gbps 2500,000 PPS - - windows ￥ 459.4 JPY /時間 ¥ 258940.00 JPY /月 ¥ 2641188.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - linux ￥ 521.9 JPY /時間 ¥ 244060.00 JPY /月 ¥ 2489412.00 JPY /年   ecs.se1ne.14xlarge 56 vCPU 480 GiB 10 Gbps 4500,000 PPS - - windows ￥ 846.3 JPY /時間 ¥ 477280.00 JPY /月 ¥ 4868256.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 12.1 JPY /時間 ¥ 6070.00 JPY /月 ¥ 61914.00 JPY /年   ecs.sn1.medium 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 21.1 JPY /時間 ¥ 12630.00 JPY /月 ¥ 128826.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 24.3 JPY /時間 ¥ 12140.00 JPY /月 ¥ 123828.00 JPY /年   ecs.sn1.large 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 42.4 JPY /時間 ¥ 25260.00 JPY /月 ¥ 257652.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 48.7 JPY /時間 ¥ 24270.00 JPY /月 ¥ 247554.00 JPY /年   ecs.sn1.xlarge 8 vCPU 16 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 84.7 JPY /時間 ¥ 50530.00 JPY /月 ¥ 515406.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - linux ￥ 97.5 JPY /時間 ¥ 48530.00 JPY /月 ¥ 495006.00 JPY /年   ecs.sn1.3xlarge 16 vCPU 32 GiB 3 Gbps 500,000 PPS - - windows ￥ 169.4 JPY /時間 ¥ 101050.00 JPY /月 ¥ 1030710.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - linux ￥ 194.9 JPY /時間 ¥ 97120.00 JPY /月 ¥ 990624.00 JPY /年   ecs.sn1.7xlarge 32 vCPU 64 GiB 6 Gbps 800,000 PPS - - windows ￥ 345.6 JPY /時間 ¥ 215290.00 JPY /月 ¥ 2195958.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - linux ￥ 12.7 JPY /時間 ¥ 6370.00 JPY /月 ¥ 64974.00 JPY /年   ecs.sn1ne.large 2 vCPU 4 GiB 1 Gbps 300,000 PPS - - windows ￥ 22.1 JPY /時間 ¥ 13270.00 JPY /月 ¥ 135354.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 25.5 JPY /時間 ¥ 12740.00 JPY /月 ¥ 129948.00 JPY /年   ecs.sn1ne.xlarge 4 vCPU 8 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 44.4 JPY /時間 ¥ 26530.00 JPY /月 ¥ 270606.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - linux ￥ 51.1 JPY /時間 ¥ 25480.00 JPY /月 ¥ 259896.00 JPY /年   ecs.sn1ne.2xlarge 8 vCPU 16 GiB 2 Gbps 1000,000 PPS - - windows ￥ 88.8 JPY /時間 ¥ 53050.00 JPY /月 ¥ 541110.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - linux ￥ 102.3 JPY /時間 ¥ 50950.00 JPY /月 ¥ 519690.00 JPY /年   ecs.sn1ne.4xlarge 16 vCPU 32 GiB 3 Gbps 1600,000 PPS - - windows ￥ 177.8 JPY /時間 ¥ 106100.00 JPY /月 ¥ 1082220.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - linux ￥ 204.5 JPY /時間 ¥ 101980.00 JPY /月 ¥ 1040196.00 JPY /年   ecs.sn1ne.8xlarge 32 vCPU 64 GiB 6 Gbps 2500,000 PPS - - windows ￥ 362.9 JPY /時間 ¥ 226050.00 JPY /月 ¥ 2305710.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 13.3 JPY /時間 ¥ 6790.00 JPY /月 ¥ 69258.00 JPY /年   ecs.sn2.medium 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 23.7 JPY /時間 ¥ 14720.00 JPY /月 ¥ 150144.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 26.6 JPY /時間 ¥ 13570.00 JPY /月 ¥ 138414.00 JPY /年   ecs.sn2.large 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 47.5 JPY /時間 ¥ 29430.00 JPY /月 ¥ 300186.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - linux ￥ 53.3 JPY /時間 ¥ 27140.00 JPY /月 ¥ 276828.00 JPY /年   ecs.sn2.xlarge 8 vCPU 32 GiB 1.5 Gbps 400,000 PPS - - windows ￥ 95.2 JPY /時間 ¥ 58860.00 JPY /月 ¥ 600372.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - linux ￥ 106.5 JPY /時間 ¥ 54270.00 JPY /月 ¥ 553554.00 JPY /年   ecs.sn2.3xlarge 16 vCPU 64 GiB 3 Gbps 500,000 PPS - - windows ￥ 190.4 JPY /時間 ¥ 117720.00 JPY /月 ¥ 1200744.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - linux ￥ 213.1 JPY /時間 ¥ 108530.00 JPY /月 ¥ 1107006.00 JPY /年   ecs.sn2.7xlarge 32 vCPU 128 GiB 6 Gbps 800,000 PPS - - windows ￥ 380.7 JPY /時間 ¥ 235440.00 JPY /月 ¥ 2401488.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - linux ￥ 373 JPY /時間 ¥ 190030.00 JPY /月 ¥ 1938306.00 JPY /年   ecs.sn2.13xlarge 56 vCPU 224 GiB 10 Gbps 1200,000 PPS - - windows ￥ 666.2 JPY /時間 ¥ 412120.00 JPY /月 ¥ 4203624.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - linux ￥ 13.8 JPY /時間 ¥ 7130.00 JPY /月 ¥ 72726.00 JPY /年   ecs.sn2ne.large 2 vCPU 8 GiB 1 Gbps 300,000 PPS - - windows ￥ 24.9 JPY /時間 ¥ 15460.00 JPY /月 ¥ 157692.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - linux ￥ 27.9 JPY /時間 ¥ 14250.00 JPY /月 ¥ 145350.00 JPY /年   ecs.sn2ne.xlarge 4 vCPU 16 GiB 1.5 Gbps 500,000 PPS - - windows ￥ 49.8 JPY /時間 ¥ 30900.00 JPY /月 ¥ 315180.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - linux ￥ 55.9 JPY /時間 ¥ 28490.00 JPY /月 ¥ 290598.00 JPY /年   ecs.sn2ne.2xlarge 8 vCPU 32 GiB 2 Gbps 1000,000 PPS - - windows ￥ 99.9 JPY /時間 ¥ 61810.00 JPY /月 ¥ 630462.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - linux ￥ 111.8 JPY /時間 ¥ 56980.00 JPY /月 ¥ 581196.00 JPY /年   ecs.sn2ne.4xlarge 16 vCPU 64 GiB 3 Gbps 1600,000 PPS - - windows ￥ 199.8 JPY /時間 ¥ 123610.00 JPY /月 ¥ 1260822.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - linux ￥ 223.7 JPY /時間 ¥ 113960.00 JPY /月 ¥ 1162392.00 JPY /年   ecs.sn2ne.8xlarge 32 vCPU 128 GiB 6 Gbps 2500,000 PPS - - windows ￥ 399.7 JPY /時間 ¥ 247210.00 JPY /月 ¥ 2521542.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - linux ￥ 391.6 JPY /時間 ¥ 199530.00 JPY /月 ¥ 2035206.00 JPY /年   ecs.sn2ne.14xlarge 56 vCPU 224 GiB 10 Gbps 4500,000 PPS - - windows ￥ 699.5 JPY /時間 ¥ 432730.00 JPY /月 ¥ 4413846.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 3.8 JPY /時間 ¥ 1950.00 JPY /月 ¥ 19890.00 JPY /年   ecs.t5-c1m1.large 2 vCPU 2 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 5 JPY /時間 ¥ 2820.00 JPY /月 ¥ 28764.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 7.5 JPY /時間 ¥ 3890.00 JPY /月 ¥ 39678.00 JPY /年   ecs.t5-c1m1.xlarge 4 vCPU 4 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 9.9 JPY /時間 ¥ 5630.00 JPY /月 ¥ 57426.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 15 JPY /時間 ¥ 7770.00 JPY /月 ¥ 79254.00 JPY /年   ecs.t5-c1m1.2xlarge 8 vCPU 8 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 19.7 JPY /時間 ¥ 11260.00 JPY /月 ¥ 114852.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 29.9 JPY /時間 ¥ 15540.00 JPY /月 ¥ 158508.00 JPY /年   ecs.t5-c1m1.4xlarge 16 vCPU 16 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 39.3 JPY /時間 ¥ 22510.00 JPY /月 ¥ 229602.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 5.2 JPY /時間 ¥ 2700.00 JPY /月 ¥ 27540.00 JPY /年   ecs.t5-c1m2.large 2 vCPU 4 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 6.8 JPY /時間 ¥ 3910.00 JPY /月 ¥ 39882.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 10.4 JPY /時間 ¥ 5390.00 JPY /月 ¥ 54978.00 JPY /年   ecs.t5-c1m2.xlarge 4 vCPU 8 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 13.6 JPY /時間 ¥ 7810.00 JPY /月 ¥ 79662.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 20.7 JPY /時間 ¥ 10780.00 JPY /月 ¥ 109956.00 JPY /年   ecs.t5-c1m2.2xlarge 8 vCPU 16 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 27.2 JPY /時間 ¥ 15610.00 JPY /月 ¥ 159222.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - linux ￥ 41.4 JPY /時間 ¥ 21550.00 JPY /月 ¥ 219810.00 JPY /年   ecs.t5-c1m2.4xlarge 16 vCPU 32 GiB 1.2 Gbps 600,000 PPS - - windows ￥ 54.3 JPY /時間 ¥ 31210.00 JPY /月 ¥ 318342.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - linux ￥ 8.1 JPY /時間 ¥ 4190.00 JPY /月 ¥ 42738.00 JPY /年   ecs.t5-c1m4.large 2 vCPU 8 GiB 0.5 Gbps 100,000 PPS - - windows ￥ 10.4 JPY /時間 ¥ 5640.00 JPY /月 ¥ 57528.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - linux ￥ 16.1 JPY /時間 ¥ 8370.00 JPY /月 ¥ 85374.00 JPY /年   ecs.t5-c1m4.xlarge 4 vCPU 16 GiB 0.8 Gbps 200,000 PPS - - windows ￥ 20.7 JPY /時間 ¥ 11280.00 JPY /月 ¥ 115056.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - linux ￥ 32.2 JPY /時間 ¥ 16730.00 JPY /月 ¥ 170646.00 JPY /年   ecs.t5-c1m4.2xlarge 8 vCPU 32 GiB 1.2 Gbps 400,000 PPS - - windows ￥ 41.4 JPY /時間 ¥ 22550.00 JPY /月 ¥ 230010.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 1.4 JPY /時間 ¥ 720.00 JPY /月 ¥ 7344.00 JPY /年   ecs.t5-lc1m1.small 1 vCPU 1 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 1.9 JPY /時間 ¥ 1050.00 JPY /月 ¥ 10710.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 4.5 JPY /時間 ¥ 2360.00 JPY /月 ¥ 24072.00 JPY /年   ecs.t5-lc1m2.large 2 vCPU 4 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 6 JPY /時間 ¥ 3420.00 JPY /月 ¥ 34884.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - linux ￥ 2.3 JPY /時間 ¥ 1190.00 JPY /月 ¥ 12138.00 JPY /年   ecs.t5-lc1m2.small 1 vCPU 2 GiB 0.2 Gbps 60,000 PPS - - windows ￥ 3 JPY /時間 ¥ 1730.00 JPY /月 ¥ 17646.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - linux ￥ 6.7 JPY /時間 ¥ 3510.00 JPY /月 ¥ 35802.00 JPY /年   ecs.t5-lc1m4.large 2 vCPU 8 GiB 0.4 Gbps 100,000 PPS - - windows ￥ 8.3 JPY /時間 ¥ 4730.00 JPY /月 ¥ 48246.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - linux ￥ 0.9 JPY /時間 ¥ 380.00 JPY /月 ¥ 3876.00 JPY /年   ecs.t5-lc2m1.nano 1 vCPU 0.5 GiB 0.1 Gbps 40,000 PPS - - windows ￥ 1.1 JPY /時間 ¥ 560.00 JPY /月 ¥ 5712.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - linux ￥ 1.8 JPY /時間 ¥ 940.00 JPY /月 ¥ 9588.00 JPY /年   ecs.xn4.small 1 vCPU 1 GiB 0.5 Gbps 50,000 PPS - - windows ￥ 1.8 JPY /時間 ¥ 1320.00 JPY /月 ¥ 13464.00 JPY /年    "
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/product/cloudmonitor/cloudmonitor/",
	"title": "CloudMonitor",
	"tags": [],
	"description": "CloudMonitorを用いたAlibabaCloudリソースの監視について解説します。",
	"content": " 本記事の狙い パブリッククラウドのメリットは、インフラ作業から開放し、サービス自体に集中できると言われていますが、基盤監視が不要ということではありません。オンプレミス環境と同様に、システム全体におけるパフォーマンス変化の把握、異常動作の検知、アラームの設定、自動バッチの実行、ログの可視化などを行う必要があります。\nAlibabaCloudが提供する無料監視プロダクトCloudMonitorを利用することにより、コンソール操作、または簡単なバッチ仕込むことから、AlibabaCloud上のリソースを監視することができます。本文は、下記5つのポイントからCloudMonitorの利用方法を紹介します。\n 性能監視  ECS編 RDS編 SLB編  イベント監視  ECS編 RDS編 SLB編  カスタム監視 APIにより監視データの外部連携 Grafanaにより監視データの可視化 サイト監視の実装  \n1. 性能監視 AlibabaCloudの製品を利用するだけで、無料で付いてくるCloudMonitor監視です。手間かかる設定が必要ありません。CloudMonitorのコンソールにて、下記リストされた各製品のメトリック項目の時系列監視図の確認はもちろん、アラームを設定することも可能です。ECS製品の場合、エージェントをECSにインストールすることにより、監視可能なメトリックが更に豊富になります。\n\nECS編 ・基本監視（エージェント不要）    メトリック項目 説明 単位     ECS.CPUUtilization CPUの使用率 ％   ECS.InternetInRate インターネットインバウンドの帯域幅 ビット/秒   ECS.IntranetInRate イントラネットインバウンドの帯域幅 ビット/秒   ECS.InternetOutRate インターネットアウトバウンドの帯域幅 ビット/秒   ECS.IntranetOutRate イントラネットアウトバウンドの帯域幅 ビット/秒   ECS.SystemDiskReadbps 1秒あたりのシステムディスク読取バイト数 バイト/秒   ECS.SystemDiskWritebps 1秒あたりのシステムディスク書込バイト数 バイト/秒   ECS.SystemDiskReadOps 1秒あたりのシステムディスク読取回数 回/秒   ECS.SystemDiskWriteOps 1秒あたりのシステムディスク書込回数 回/秒   ECS.InternetIn インターネットインバウンドのトラフィック量 バイト   ECS.InternetOut インターネットアウトバウンドのトラフィック量 バイト   ECS.IntranetIn イントラネットインバウンドのトラフィック量 バイト   ECS.IntranetOut イントラネットアウトバウンドのトラフィック量 バイト    ・CPU監視    メトリック項目 説明 単位     Host.cpu.idle CPUのアイドル率 ％   Host.cpu.system カーネルプロセスのCPU使用率 ％   Host.cpu.user ユーザープロセスのCPU使用率 ％   Host.cpu.iowait I/O操作待ちプロセスのCPU使用率 ％   Host.cpu.other Nice + SoftIrq + Irq + StolenプロセスのCPU使用率 ％   Host.cpu.total CPUの使用率 ％    ・メモリ監視    メトリック項目 説明 単位     Host.mem.total メモリの容量 バイト   Host.mem.used 使用中のメモリ容量 バイト   Host.mem.actualused ユーザーが使用中のメモリ容量 バイト   Host.mem.free 使用可能のメモリ容量 バイト   Host.mem.freeutilization メモリのアイドル率 ％   Host.mem.usedutilization メモリの使用率 ％    ・システム負荷監視（Linux専用）    メトリック項目 説明 単位     Host.load1 1分間の平均システム負荷 -   Host.load5 5分間の平均システム負荷 -   Host.load15 15分間の平均システム負荷 -    ・ディスク監視    メトリック項目 説明 単位     Host.diskusage.used 使用中のディスク容量 バイト   Host.disk.utilization ディスクの使用率 ％   Host.diskusage.free 使用可能のディスク容量 バイト   Host.diskussage.total ディスクの容量 バイト   Host.disk.readbytes 1秒あたりのディスク読取バイト数 バイト/秒   Host.disk.writebytes 1秒あたりのディスク書込バイト数 バイト/秒   Host.disk.readiops 1秒あたりのディスク読取回数 回/秒   Host.disk.writeiops 1秒あたりのディスク書込回数 回/秒    ・ファイルシステム監視（Linux専用）    メトリック項目 説明 単位     Host.fs.inode inodeの使用率 ％    ・ネットワーク監視    メトリック項目 説明 単位     Host.netin.rate インバウンドの帯域幅 ビット/秒   Host.netout.rate アウトバウンドの帯域幅 ビット/秒   Host.netin.packages インバウンドのパケット数 パケット/秒   Host.netout.packages アウトバウンドのパケット数 パケット/秒   Host.netin.errorpackage インバウンドエラーのパケット数 パケット/秒   Host.netout.errorpackages アウトバウンドエラーのパケット数 パケット/秒   Host.tcpconnection TCP接続数 LISTEN、SYN_SENT、ESTABLISHED、SYN_RECV、FIN_WAIT1、CLOSE_WAIT、FIN_WAIT2、LAST_ACK、TIME_WAIT、CLOSING、CLOSEDを含む 接続数    ・プロセス監視    メトリック項目 説明 単位     Host.process.cpu プロセスのCPU使用率 ％   Host.process.memory プロセスのメモリ使用率 ％   Host.process.openfile プロセスの使用中ファイル数 ファイル数   Host.process.number キーワードと一致するプロセスの数 プロセス数    \nRDS編    メトリック項目 説明 単位     Disk usage ディスクの使用率 ％   Connection usage 接続数の使用率 ％   CPU usage CPUの使用率 ％   Memory usage メモリの使用率 ％   MySQL Incoming network traffic 1 秒あたりのMySQLインバウンドトラフィック ビット/秒   MySQL Outgoing network traffic 1 秒あたりのMySQLアウトバウンドトラフィック ビット/秒   SQLServer Incoming network traffic 1 秒あたりのSQLServerインバウンドトラフィック ビット/秒   SQLServer Outgoing network traffic 1 秒あたりのSQLServerアウトバウンドトラフィック ビット/秒   MySQL Active connections MySQLのアクティブセッション数 セッション数   Read-only instance latency リードレプリカの遅延 秒    \nSLB編 ・レイヤー4監視    メトリック項目 説明 単位     Port inbound traffic 特定ポートのインバウンドトラフィック ビット/秒   Port outbound traffic 特定ポートのアウトバウンドトラフィック ビット/秒   Number of inbound data packets by port 特定ポートのインバウンドパケット数 回/秒   Number of outbound data packets by port 特定ポートのアウトバウンドパケット数 回/秒   Number of new port connections 特定ポートの新規接続数 接続数   Number of active port connections 特定ポートのアクティブ接続数 接続数   Number of inactive port connections 特定ポートの非アクティブ接続数 接続数   Number of concurrent port connections 特定ポートの総接続数 接続数   Number of backend healthy ECS instances by port 特定ポートのヘルスチェック正常のECS数 台   Number of backend unhealthy ECS instances by port 特定ポートのヘルスチェック異常のECS数 台   Number of discarded port connections 特定ポートの廃棄接続数 回/秒   Number of discarded inbound data packets by port 特定ポートのインバウンド廃棄接続数 回/秒   Number of discarded outbound data packets by port 特定ポートのアウトバウンド廃棄接続数 回/秒   Number of discarded inbound bandwidth by port 特定ポートのインバウンド廃棄トラフィック ビット/秒   Number of discarded outbound bandwidth by port 特定ポートのアウトバウンド廃棄トラフィック ビット/秒   Number of active instance connections アクティブ接続数 回/秒   Number of inactive instance connections 非アクティブ接続数 回/秒   Number of discarded instance connections 廃棄接続数 回/秒   Number of discarded inbound data packets by instance 廃棄インバウンドパケット数 回数/秒   Number of discarded outbound data packets by instance 廃棄アウトバウンドパケット数 回数/秒   Discarded inbound bandwidth by instance 廃棄インバウンドトラフィック ビット/秒   Discarded outbound bandwidth by instance 廃棄アウトバウンドトラフィック ビット/秒   Number of concurrent instance connections 接続総数 回/秒   Number of new instance connections 新規接続数 回/秒   Number of inbound data packets by instance インバウンドパケット数 回/秒   Number of outbound data packets by instance アウトバウンドパケット数 回/秒   Number of inbound bandwidth by instance インバウンドトラフィック ビット/秒   Number of outbound bandwidth by instance アウトバウンドトラフィック ビット/秒    ・レイヤー7監視    メトリック項目 説明 単位     Port QPS 特定ポートのQPS 回/秒   Port RT 特定ポートの平均要求待ち時間 ミリ秒   Status codes of the format 2xx 特定ポートの2xxのステータスコードの数 回/秒   Status codes of the format 3xx 特定ポートの3xxのステータスコードの数 回/秒   Status codes of the format 4xx 特定ポートの4xxのステータスコードの数 回/秒   Status codes of the format 5xx 特定ポートの5xxのステータスコードの数 回/秒   Other status codes SLB 特定ポートのその他ステータスコードの数 回/秒   Upstream status codes of the format 4xx 特定ポートのRSから返す4xxのステータスコードの数 回/秒   Upstream status codes of the format 5xx 特定ポートのRSから返す5xxのステータスコードの数 回/秒   Upstream RT 特定ポートのRSからプロキシへの平均リクエスト遅延 ミリ秒   Instance QPS SLBのQPS 回/秒   Instance RT SLBの平均リクエストレイテンシ 回/秒   Instance Status codes of the format 2xx SLBの2xxのステータスコードの数 回/秒   Instance Status codes of the format 3xx SLBの3xxのステータスコードの数 回/秒   Instance Status codes of the format 4xx SLBの4xxのステータスコードの数 回/秒   Instance Status codes of the format 5xx SLBの5xxのステータスコードの数 回/秒   Instance Other status codes SLB SLBのその他ステータスコードの数 回/秒   Instance Upstream status codes of the format 4xx SLBのRSから返す4xxのステータスコードの数 回/秒   Instance Upstream status codes of the format 5xx SLBのRSから返す5xxのステータスコードの数 回/秒   Instance Upstream RT SLBのRSからプロキシへの平均リクエスト遅延 ミリ秒    \n2. イベント監視 CloudMonitorの性能監視と同様に、各製品のシステムイベント監視をも無料で提供しています。製品インスタンスが実行中発生したシステムイベントを確認し、もっと簡単に問題を特定することができます。もちろん監視イベントに対するアラーム設定も可能です。使用可能なシステムイベント監視項目は下記となります。\n\nECS編    イベント名 説明 イベントタイプ イベントステータス 重要度     Instance:InstanceFailure.Reboot フェイラーにより再起動開始 Exception Executing CRITICAL   Instance:InstanceFailure.Reboot フェイラーにより再起動終了 Exception Executed CRITICAL   Instance:SystemFailure.Reboot システムエラーにより再起動開始 Exception Executing CRITICAL   Instance:SystemFailure.Reboot システムエラーにより再起動終了 Exception Executed CRITICAL   Instance:SystemMaintenance.Reboot メンテナンスにより再起動予定 Maintenance Scheduled CRITICAL   Instance:SystemMaintenance.Reboot メンテナンスにより再起動回避 Maintenance Avoided CRITICAL   Instance:SystemMaintenance.Reboot メンテナンスにより再起動中 Maintenance Executing CRITICAL   Instance:SystemMaintenance.Reboot メンテナンスにより再起動終了 Maintenance Executed CRITICAL   Instance:SystemMaintenance.Reboot メンテナンスにより再起動取消 Maintenance Canceled CRITICAL   Instance:SystemMaintenance.Reboot メンテナンスにより再起動失敗 Maintenance Failed CRITICAL   Disk:Stalled ディスク性能影響受ける開始 Exception Executing CRITICAL   Disk:Stalled ディスク性能影響受ける終了 Exception Executed CRITICAL   Instance:StateChange インスタンスステータス変更 Running、Stopped、Deleted StatusNotification Normal INFO   Instance:PreemptibleInstanceInterruption スポットインスタンス中断 StatusNotification Normal WARN   Snapshot:CreateSnapshotCompleted スナップショット作成終了 StatusNotification Normal INFO    \nRDS編    イベント名 説明 イベントステータス 重要度     Instance_Failover フェールオーバ発生 Executed WARN   Instance_Failure_Start フェール開始 Executing CRITICAL   Instance_Failure_End フェール終了 Executed CRITICAL    \nSLB編    イベント名 説明 重要度     CertKeyExpired_1 証明書は1日後に失効 WARN   CertKeyExpired_3 証明書は3日後に失効 WARN   CertKeyExpired_7 証明書は7日後に失効 WARN   CertKeyExpired_15 証明書は15日後に失効 WARN   CertKeyExpired_30 証明書は30日後に失効 WARN   CertKeyExpired_60 証明書は60日後に失効 WARN    \n3. カスタム監視 ECS製品の性能監視／イベント監視に提供してないメトリック項目、またはAlibabaCloud製品以外の仮想サーバーのデータをCloudMonitorに連携して監視することができます。連携方式はOpenAPI、Java SDK、Aliyun CLI、3つの方式があります。下記はMACでのAliyun CLIの使用例を紹介します。\n1.　AccessIDとAccessKeyを作成します。作成方法はドキュメントをご参考ください。\n2.　Go言語のAliyun CLIツールの最新版をローカルにダウンロードします。ダウンロード先はこちらです。\n3.　MACの場合、ダウンロードしたファイルを/usr/local/bin配下に移動します。\n4.　Aliyun CLIの環境変数を設定します。\n$ aliyun configure Configuring profile 'default' in 'AK' authenticate mode... Access Key Id []: \u0026lt;Your AccessKey ID\u0026gt; Access Key Secret []: \u0026lt;Your AccessKey Secret\u0026gt; Default Region Id []: ap-northeast-1 Default Output Format [json]: json (Only support json) Default Language [zh|en] en: en Saving profile[default] ...Done. Configure Done!!!  5.　カスタムデータをCloudMonitorにアップロードします。\n$ aliyun cms PutCustomMetric --MetricList.1.GroupId \u0026quot;1\u0026quot; --MetricList.1.MetricName cpu_total --MetricList.1.Dimensions '{\u0026quot;sampleName1\u0026quot;:\u0026quot;value1\u0026quot;,\u0026quot;sampleName2\u0026quot;:\u0026quot;value2\u0026quot;}' --MetricList.1.Time 20190919T145500.000+0900 --MetricList.1.Type 0 --MetricList.1.Period 60 --MetricList.1.Values '{\u0026quot;value\u0026quot;:10.5}' { \u0026quot;Message\u0026quot;: \u0026quot;success\u0026quot;, \u0026quot;RequestId\u0026quot;: \u0026quot;1EBC8667-911A-46FC-88CD-D3BDDBC5B798\u0026quot;, \u0026quot;Code\u0026quot;: \u0026quot;200\u0026quot; }  パラメータ説明\n   パラメータ名 タイプ 必須かどうか 説明     groupId long はい グループID   metricName string はい 監視項目名。英文字、数字、符号_-./\\を利用可能、最大64バイト   dimensions object はい ディメンジョンマップ。key-value形式、英文字、数字、符号_-./\\を利用可能、最大10ペア、keyおよびvalue各最大64バイト   time string はい 監視時刻。“yyyyMMdd’T’HHmmss.SSSZ”またはlongタイムスタンプ対応。例、“20171012T132456.888+0800”または“1508136760000”   type int はい 監視値種類、0は生データ、1は集約データ   period string いいえ 集約期間、単位：秒。type=1の場合、指定必須。値：60、300   values object はい 監視値。type=0の場合、キーは \u0026ldquo;value\u0026rdquo;。type=1の場合、最大値、カウント数、合計値を指定可能    \n4. APIにより監視データの外部連携 APIにより、CloudMonitorの監視データを取得し、外部監視システムと連携することができます。下記3つのインターフェイスを提供しています。\n・DescribeProjectMeta\nCloudMonitorが時系列で監視可能な製品情報の取得\n・DescribeMetricMetaList\nCloudMonitorが時系列で監視可能なメトリック情報の取得\n・DescribeMetricList／DescribeMetricLast\nCloudMonitorが収集したメトリックデータリスト、または最新メトリックデータの取得\n/** * 指定期間内の監視データのクエリ例 */ import com.aliyuncs.DefaultAcsClient; import com.aliyuncs.IAcsClient; import com.aliyuncs.exceptions.ClientException; import com.aliyuncs.exceptions.ServerException; import com.aliyuncs.profile.DefaultProfile; import com.google.gson.Gson; import java.util.*; import com.aliyuncs.cms.model.v20190101.*; public class DescribeMetricList { public static void main(String[] args) { DefaultProfile profile = DefaultProfile.getProfile(\u0026quot;cn-hangzhou\u0026quot;, \u0026quot;\u0026lt;accessKeyId\u0026gt;\u0026quot;, \u0026quot;\u0026lt;accessSecret\u0026gt;\u0026quot;); IAcsClient client = new DefaultAcsClient(profile); DescribeMetricListRequest request = new DescribeMetricListRequest(); //namespaceとmetricはDescribeMetricMetaList、DescribeProjectMetaで取得可能 request.setNamespace(\u0026quot;acs_ecs_dashboard\u0026quot;); request.setMetricName(\u0026quot;cpu_total\u0026quot;); //periodは取得期間は60s request.setPeriod(\u0026quot;60\u0026quot;); //レコード数を指定、最大1000まで request.setLength(\u0026quot;1000\u0026quot;); //クエリの開始時間 request.setStartTime(\u0026quot;2019-07-22 11:00:00\u0026quot;); //クエリの終了時間 request.setEndTime(\u0026quot;2019-07-22 12:00:00\u0026quot;); //クエリdimensionを指定（結果をフィルタ） request.setDimensions(\u0026quot;[{\\\u0026quot;instanceId\\\u0026quot;:\\\u0026quot;i-8vb******\\\u0026quot;}]\u0026quot;); try { DescribeMetricListResponse response = client.getAcsResponse(request); System.out.println(new Gson().toJson(response)); } catch (ServerException e) { e.printStackTrace(); } catch (ClientException e) { System.out.println(\u0026quot;ErrCode:\u0026quot; + e.getErrCode()); System.out.println(\u0026quot;ErrMsg:\u0026quot; + e.getErrMsg()); System.out.println(\u0026quot;RequestId:\u0026quot; + e.getRequestId()); } } }  \n5. Grafanaにより監視データの可視化 CloudMonitorがGrafana連携用のプラグインを提供しています。Grafanaにより監視データの可視化りようには便利です。下記ではGrafana用プラグインのインストールからデータ可視化までの手順を説明します。\n1.　AccessIDとAccessKeyを作成します。作成方法はドキュメントをご参考ください。\n2.　Grafanaをインストールします。インストール方法はGrafana公式ドキュメントをご参考ください。\n3.　Grafanaを起動します。\n # service grafana-server start  4.　GrafanaにCloudMonitor用プラグインをインストールします。\n# cd /var/lib/grafana/plugins/ # git clone https://github.com/aliyun/aliyun-cms-grafana.git # service grafana-server restart  5.　Grafanaにログインし、左側メニューの「Configure ー DataSource」をクリックします。 6.　「Add data source」をクリックします。 7.　「CMS Grafana Service」を選択します。 8.　CMS Grafana Service用パラメータを設定し、保存します。\nName：CMS Grafana Service URL：http://metrics.ap-northeast-1.aliyuncs.com AccessKeyId：\u0026lt;Your AccessKey ID\u0026gt; AccessKey：\u0026lt;Your AccessKey Secret\u0026gt;  9.　左側メニューの「Configure ー Manage」をクリックします。 10.　「New Dashboard ー Add Query」をクリックします。 11.　Grafanaのクエリパラメータを選択/入力し、CloudMonitorのデータを可視化にします。\nData Source：CMS Grafana Service Project：\u0026lt;acs_xxx_dashboard\u0026gt; Metric：\u0026lt;監視メトリック\u0026gt; Period：\u0026lt;監視期間メトリック\u0026gt; Group:\u0026lt;グループモニタリング\u0026gt; Dimensions:\u0026lt;インスタンス\u0026gt; Y-column:Minimum/Average/Maximum X-column:timestamp Y-column describe:\u0026lt;Y軸カスタマイズ接続語\u0026gt;  \n6. サイト監視の実装 今回はWordpressサイトに対するCloudMonitorを利用した監視実装を例として紹介します。\nサイト構成として、仮想サーバー2台ECSで冗長組み、フロントにロードバランサーSLBを置き、データをバックエンドのRDSに保存する形になります。 SLBに対する監視 SLBのリスナーはHTTPプロトコルを使用するため、CloudMonitorはレイヤー7監視となります。\n今回のSLBに設定した監視項目は下記２つです。\n\n１. 受信速度（Number of inbound bandwidth by instance）\n受信速度はサイトのインバウンドトラフィック負荷を現す指標です。 サイトの平均インバウンド帯域幅値の過去実績の120％にし、過去平均インバウンド帯域幅は10Mbits/sとし、 5分サイクルで連続1周期の平均値\u0026gt;=12Mbits/sに設定します。\n\n２. 障害サーバー数（Number of backend unhealthy ECS instances by port）\n障害サーバー数はバックエンドECSの死活を監視する指標です。 検出された場合、対処が必要となる重要な項目です。 5分サイクルで連続1周期の最小値\u0026gt;=1台に設定します。\nECSに対する監視 ECSの状態を現すCloudMonitor指標は豊富です。ネットワークトラフィックはSLBで監視するため、ここでは割愛します。\n今回のECSに設定した監視項目は下記3つです。\n\n１．CPUの使用率（Host.cpu.total）\nCPUの使用率はECS負荷の測りに最も利用される指標です。 特別なシナリオを除き、70％を超えた場合アラートするのは一般です。 5分サイクルで連続3周期の平均値\u0026gt;=70%に設定します。\n\n２．ディスクの使用率（Host.disk.utilization）\nディスクの使用率はディスク容量不足を検出する指標です。 早期発見は重要ですので、70％を超えた場合アラートするのは一般です。 5分サイクルで連続3周期の平均値\u0026gt;=70%に設定します。\n\n３．プロセス数（Number of process）\nプロセスの死活を監視する指標です。 この指標を活用することで、プロセスの死活の監視により、サービスダウンを検出可能です。 今回のサイトはApacheを利用したため、 HTTPDプロセスに対して、5分サイクルで連続1周期のプロセス数\u0026lt;1に設定します。 RDSに対する監視 RDSの状態もCloudMonitorで監視できます。ECSと同様に、ネットワークトラフィックの監視を割愛します。\n今回のRDSに設定した監視項目は下記２つです。\n\n１．CPUの使用率（Host.cpu.total）\nCPUの使用率はRDS負荷の測りに最も利用される指標です。 特別なシナリオを除き、70％を超えた場合アラートするのは一般です。 5分サイクルで連続3周期の平均値\u0026gt;=70%に設定します。\n\n２．ディスクの使用率（Host.disk.utilization）\nディスクの使用率はディスク容量不足を検出する指標です。 早期発見は重要ですので、70％を超えた場合アラートするのは一般です。 5分サイクルで連続3周期の平均値\u0026gt;=70%に設定します。 サイト可用性に対する監視 1台の監視用ECSを用意すれば、グループモニタリングの可能性モニタリング機能を活用し、サイトの可用性、アクセス遅延を監視することが可能です。\n監視対象はSLBのパブリックIPとなります。 監視可能な項目は下記２つです。\n\n１．ステータスコード\n監視用ECSから指定サイトまたはIPアドレスにリクエストし、 戻り値のステータスコードにより、アラートを設定する方法です。 戻り値200は一般ですので、アラートを連続3周期の戻り値\u0026gt;200に設定します。\n\n２．遅延時間\n監視用ECSから指定サイトまたはIPアドレスにリクエストし、 ロード完了までの遅延時間により、アラートを設定する方法です。 連続3周期の遅延時間\u0026gt;=2000ミリ秒に設定します。 最後に Alibaba Cloud CloudMonitor Serviceの概要から、外部連携、可視化と実装までを紹介させていただきました。 Alibaba Cloudの利用中、製品監視のニーズがあった際に、無料のAlibaba Cloud CloudMonitor Service使ってみてはいかがでしょうか。\n\n最後まで読んでいただき、ありがとうございました。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/product/datav/",
	"title": "DataV",
	"tags": [],
	"description": "Alibaba CloudのDataVプロダクトの利用方法について記載します。",
	"content": ""
},
{
	"uri": "https://www.sbcloud.co.jp/help/scenario/web-application/springboot-with-ecs/",
	"title": "ECSとSpringBootの構築例",
	"tags": [],
	"description": "AlibabaCloudのIaaSを用いた、SpringBootアプリケーションの構築例を記載します。",
	"content": " 目次\n ECSとSpringBootを用いたWebアプリケーション構築の流れ  VPCを用いたネットワークセグメント作成 ECSを用いた仮想マシンの作成 RDSを用いたMySQLインスタンスの作成 Cent OS上でのSpringBootの実装と接続確認 SLBを用いたロードバランサーの作成    id=\u0026ldquo;VPC\u0026rdquo;\u0026gt;\n1. VPCを用いたネットワークセグメント作成 \u0026nbsp; Alibaba Cloudで、VPCとそれに付随するサブネット(VSwitchと呼ばれる)を作成したいと思います。\n1-1. サービスの選択 \u0026nbsp; ログイン後のコンソールで、「Virtual Private Cloud」を選択します。 1-2. VPCの作成 \u0026nbsp; 「VPCの作成」をクリックします。 以下のVPCパラメータを入力します。\n VPC名 IPv4 CIDR ブロック   1-3. VSwitchの作成 \u0026nbsp; 続けて同じ画面で、VSwitchと呼ばれるサブネットを作成します。 パラメータとしては以下の3つを入力、アベイラビリティゾーン分ける為、計2つのVSwitchを作成します。\n VPC名 アベイラビリティゾーン IPv4 CIDR ブロック\n「OK」をクリックした後、「完了」をクリックします。   1-4. VPCとVSwitchの確認 \u0026nbsp; 「完了」をクリック後、VPCが作成されている事が確認できます。 \u0026nbsp; また、VSwitchのダッシュボードより、VSWitchが作成されている事も確認できます。 \n2. ECSを用いた仮想マシンの作成 \u0026nbsp; Alibaba CloudのECSにおける仮想マシン作成手順を記します。また、AWSに知見のある方向けに、AWSとの違いも一部記します。\n2-1. ECSサービスの選択 ログイン後のコンソールで「Elastic Compute Service」（以下ECS）をクリックします ECSダッシュボード画面で「インスタンス」をクリックします ※AWSとの違い: ECSダッシュボード画面では全リージョンのインスタンスの利用状況が表示される 2-2. リージョン確認 インスタンス画面で初めてリージョンが確認できるので「日本（東京）」である事を確認します 2-3. インスタンス作成開始 「インスタンスの作成」をクリックします 2-4. パラメータ入力 以下パラメータを入力して、「次のステップ：ネットワーク」をクリックします\n サブスクリプション（AWSでいうリザーブドインスタンス）か従量課金か アベイラビリティゾーン（東京はap-northeast-1） インスタンスタイプ インスタンスOS ルートディスクの種類とサイズ  以下パラメータを入力して、「次のステップ：システム構成」をクリックします\n 所属するVPCとVSwitch(AWSでいうサブネット) パブリックIPの割り当て アタッチするセキュリティグループと主要プロトコルの許可設定  以下パラメータを入力して、「次のステップ：グループ化」をクリックします\n インスタンスにアクセスする為の秘密鍵もしくはパスワードを指定します\n※AWSとの違い：デフォルトだと秘密鍵・パスワード共に指定なし\n コンソール上のインスタンス名と説明、インスタンスOS内部のホスト名を入力します\n  タグ名とタグ値を入力して、「次のステップ：プレビュー」をクリックします\n2-5. インスタンス作成の完了 「ECS SLAと利用規約に同意します」にチェックを入れて、「インスタンスの作成」をクリックします\n2-6. 作成されたインスタンスの確認 有効と表示されたら、「コンソール」をクリックして、当該インスタンスが作成されている事を確認します\nパブリックIP/EIPを割り当てている場合は、IPアドレスの列にグローバルIPアドレスが表示されます\n\n3. RDSを用いたMySQLインスタンスの作成 Alibaba CloudのRDSを用いて、ECSのアプリケーションから接続するMySQLインスタンスを作成します。流れとしては以下となります。\n サービスの選択 MySQLインスタンスの起動 ネットワーク許可設定 データベースユーザの作成 データベースの作成と権限付与  3-1. サービスの選択 3-2. MySQLインスタンスの起動 インスタンスの作成をクリックします。 作成画面にて、リージョン/ゾーン、データベースエンジン、インスタンスタイプ、ストレージ容量、VPC/VSwitch を選択します。 「いますぐ購入」をクリックして、利用規約に同意にチェックをして、「今すぐ支払いをクリックします。 購入ができたら、Consoleをクリックして、Home画面より再びRDSを選択して、インスタンスリストより当該MySQLインスタンスが「作成中」となっている箏を確認します。 RDS インスタンスが「実行中」になったら、そのインスタンスIDをクリックして、詳細を確認できます。 3-2. ネットワーク許可設定 インスタンス立ち上げただけではRDSにアドレスが付与されません。その為、インスタンスの詳細より、「ホワイトリストの設定」をクリックして、ネットワーク許可設定を施す事で、アドレスが付与されて、接続可能となります。 「セキュリティコントロール」のメニューに移動するので、「ホワイトリストグループを作成」をクリックします。\nECS/RDSインスタンスが所属するVPCのネットワークセグメント（172.16.0.0/12）を指定します。\nホワイトリストが正しく設定された事を確認します。\n3-3. データベースユーザの作成 次に「アカウント管理」メニューをクリックして、アカウントを作成します。 まずは特権ユーザである「root」というアカウントを作成しました。（必須ではない） 次に同じ容量で「springuser」というアカウントを作成しました。「許可済みデータベース」は、まだデータベースを作成していないので、選択不要です。\n3-4. データベースの作成と権限付与 最後に「データベースの管理」よりデータベースを作成します。 任意のデータベース名（デモアプリの仕様上ここではdb_example）を入力します。そして、「許可されたアカウント」と「アカウントタイプ」にて先程作ったユーザに読み取り書き込み権限を付与します。 そのまま作成して、正常に「実行中」となっている事を確認します。 これによりECS上からMySQLへアクセス可能となりました。\n\n4. OS上でのSpringBootの実装と接続確認 ECSのCentOS上で、簡単なSpringbootアプリケーションを実装します。\n4-1. JavaとGitのインストール まずは実行環境で必要なツールをパッケージインストールします。\n[root@iZ6we1q7wbpd4lko5h41ueZ ~]# yum install -y java-1.8.0-openjdk-devel 読み込んだプラグイン:fastestmirror インストール処理の設定をしています Determining fastest mirrors 依存性の解決をしています --\u0026gt; トランザクションの確認を実行しています。 ---\u0026gt; Package java-1.8.0-openjdk-devel.x86_64 1:1.8.0.222.b10-0.el6_10 will be インストール --\u0026gt; 依存性の処理をしています: java-1.8.0-openjdk = 1:1.8.0.222.b10-0.el6_10 のパッケージ: # 中略 インストール: java-1.8.0-openjdk-devel.x86_64 1:1.8.0.222.b10-0.el6_10 依存性関連をインストールしました: alsa-lib.x86_64 0:1.1.0-4.el6 atk.x86_64 0:1.30.0-1.el6 avahi-libs.x86_64 0:0.6.25-17.el6 cairo.x86_64 0:1.8.8-6.el6_6 cups-libs.x86_64 1:1.4.2-81.el6_10 fontconfig.x86_64 0:2.8.0-5.el6 freetype.x86_64 0:2.3.11-17.el6 gdk-pixbuf2.x86_64 0:2.24.1-6.el6_7 giflib.x86_64 0:4.1.6-3.1.el6 gnutls.x86_64 0:2.12.23-22.el6 gtk2.x86_64 0:2.24.23-9.el6 hicolor-icon-theme.noarch 0:0.11-1.1.el6 jasper-libs.x86_64 0:1.900.1-22.el6 java-1.8.0-openjdk.x86_64 1:1.8.0.222.b10-0.el6_10 java-1.8.0-openjdk-headless.x86_64 1:1.8.0.222.b10-0.el6_10 jpackage-utils.noarch 0:1.7.5-3.16.el6 libICE.x86_64 0:1.0.6-1.el6 libSM.x86_64 0:1.2.1-2.el6 libX11.x86_64 0:1.6.4-3.el6 libX11-common.noarch 0:1.6.4-3.el6 libXau.x86_64 0:1.0.6-4.el6 libXcomposite.x86_64 0:0.4.3-4.el6 libXcursor.x86_64 0:1.1.14-2.1.el6 libXdamage.x86_64 0:1.1.3-4.el6 libXext.x86_64 0:1.3.3-1.el6 libXfixes.x86_64 0:5.0.3-1.el6 libXfont.x86_64 0:1.5.1-2.el6 libXft.x86_64 0:2.3.2-1.el6 libXi.x86_64 0:1.7.8-1.el6 libXinerama.x86_64 0:1.1.3-2.1.el6 libXrandr.x86_64 0:1.5.1-1.el6 libXrender.x86_64 0:0.9.10-1.el6 libXtst.x86_64 0:1.2.3-1.el6 libfontenc.x86_64 0:1.1.2-3.el6 libjpeg-turbo.x86_64 0:1.2.1-3.el6_5 libpng.x86_64 2:1.2.49-2.el6_7 libthai.x86_64 0:0.1.12-3.el6 libtiff.x86_64 0:3.9.4-21.el6_8 libxcb.x86_64 0:1.12-4.el6 lksctp-tools.x86_64 0:1.0.10-7.el6 pango.x86_64 0:1.28.1-11.el6 pcsc-lite-libs.x86_64 0:1.5.2-16.el6 pixman.x86_64 0:0.32.8-1.el6 ttmkfdir.x86_64 0:3.0.9-32.1.el6 tzdata-java.noarch 0:2019b-2.el6 xorg-x11-font-utils.x86_64 1:7.2-11.el6 xorg-x11-fonts-Type1.noarch 0:7.2-11.el6 完了しました! [root@iZ6we1q7wbpd4lko5h41ueZ ~]# yum install -y git 読み込んだプラグイン:fastestmirror インストール処理の設定をしています Loading mirror speeds from cached hostfile 依存性の解決をしています # 中略 インストール: git.x86_64 0:1.7.1-9.el6_9 依存性関連をインストールしました: perl-Error.noarch 1:0.17015-4.el6 perl-Git.noarch 0:1.7.1-9.el6_9 完了しました! [root@iZ6we1q7wbpd4lko5h41ueZ ~]#  4-2. Springbootデモアプリの設定・実行 Springboot公式で提供されているMySQLにアクセス可能なデモアプリを利用します。\nhttps://spring.io/guides/gs/accessing-data-mysql/\n[root@iZ6we1q7wbpd4lko5h41ueZ ~]# git clone https://github.com/spring-guides/gs-accessing-data-mysql.git Initialized empty Git repository in /root/gs-accessing-data-mysql/.git/ remote: Enumerating objects: 67, done. remote: Counting objects: 100% (67/67), done. remote: Compressing objects: 100% (41/41), done. remote: Total 810 (delta 20), reused 49 (delta 11), pack-reused 743 Receiving objects: 100% (810/810), 584.09 KiB | 654 KiB/s, done. Resolving deltas: 100% (550/550), done. [root@iZ6we1q7wbpd4lko5h41ueZ ~]# [root@iZ6we1q7wbpd4lko5h41ueZ ~]# [root@iZ6we1q7wbpd4lko5h41ueZ ~]# ls gs-accessing-data-mysql [root@iZ6we1q7wbpd4lko5h41ueZ ~]# cd gs-accessing-data-mysql/ [root@iZ6we1q7wbpd4lko5h41ueZ gs-accessing-data-mysql]# ls CONTRIBUTING.adoc LICENSE.code.txt LICENSE.writing.txt README.adoc complete images initial test [root@iZ6we1q7wbpd4lko5h41ueZ gs-accessing-data-mysql]# cd complete/ [root@iZ6we1q7wbpd4lko5h41ueZ complete]# ls build.gradle docker-compose.yml gradle gradlew gradlew.bat mvnw mvnw.cmd pom.xml src [root@iZ6we1q7wbpd4lko5h41ueZ complete]# ping rm-0iw6gy9273hhogef7.mysql.japan.rds.aliyuncs.com PING rm-0iw6gy9273hhogef7.mysql.japan.rds.aliyuncs.com (172.16.1.160) 56(84) bytes of data. 64 bytes from 172.16.1.160: icmp_seq=1 ttl=102 time=0.999 ms 64 bytes from 172.16.1.160: icmp_seq=2 ttl=102 time=0.136 ms ^C --- rm-0iw6gy9273h45zlf7.mysql.japan.rds.aliyuncs.com ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 1489ms rtt min/avg/max/mdev = 0.136/0.567/0.999/0.432 ms [root@iZ6we1q7wbpd4lko5h41ueZ complete]# vim src/main/resources/application.properties # server.error.whitelabel.enabled=false を追記 [root@iZ6we1q7wbpd4lko5h41ueZ complete]# export MYSQL_HOST=rm-0iw6gy9273hhogef7.mysql.japan.rds.aliyuncs.com [root@iZ6we1q7wbpd4lko5h41ueZ complete]# ./gradlew bootRun # デモなのでrootのまま実行 \u0026gt; Task :bootRun . ____ _ __ _ _ /\\\\ / ___'_ __ _ _(_)_ __ __ _ \\ \\ \\ \\ ( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\ \\\\/ ___)| |_)| | | | | || (_| | ) ) ) ) ' |____| .__|_| |_|_| |_\\__, | / / / / =========|_|==============|___/=/_/_/_/ :: Spring Boot :: (v2.1.7.RELEASE) 2019-09-19 11:57:49.052 INFO 2089 --- [ main] c.e.a.AccessingDataMysqlApplication : Starting AccessingDataMysqlApplication on iZ6we1q7wbpd4lko5h41ueZ with PID 2089 (/root/gs-accessing-data-mysql/complete/build/classes/java/main started by root in /root/gs-accessing-data-mysql/complete) 2019-09-19 11:57:49.079 INFO 2089 --- [ main] c.e.a.AccessingDataMysqlApplication : No active profile set, falling back to default profiles: default 2019-09-19 11:57:51.182 INFO 2089 --- [ main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode. 2019-09-19 11:57:51.304 INFO 2089 --- [ main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 96ms. Found 1 repository interfaces. 2019-09-19 11:57:52.398 INFO 2089 --- [ main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9fcdb7ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 2019-09-19 11:57:53.171 INFO 2089 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat initialized with port(s): 8080 (http) 2019-09-19 11:57:53.261 INFO 2089 --- [ main] o.apache.catalina.core.StandardService : Starting service [Tomcat] 2019-09-19 11:57:53.261 INFO 2089 --- [ main] org.apache.catalina.core.StandardEngine : Starting Servlet engine: [Apache Tomcat/9.0.22] 2019-09-19 11:57:53.544 INFO 2089 --- [ main] o.a.c.c.C.[Tomcat].[localhost].[/] : Initializing Spring embedded WebApplicationContext 2019-09-19 11:57:53.545 INFO 2089 --- [ main] o.s.web.context.ContextLoader : Root WebApplicationContext: initialization completed in 4325 ms 2019-09-19 11:57:54.051 INFO 2089 --- [ main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Starting... 2019-09-19 11:57:54.568 INFO 2089 --- [ main] com.zaxxer.hikari.HikariDataSource : HikariPool-1 - Start completed. 2019-09-19 11:57:54.809 INFO 2089 --- [ main] o.hibernate.jpa.internal.util.LogHelper : HHH000204: Processing PersistenceUnitInfo [ name: default ...] 2019-09-19 11:57:54.935 INFO 2089 --- [ main] org.hibernate.Version : HHH000412: Hibernate Core {5.3.10.Final} 2019-09-19 11:57:54.936 INFO 2089 --- [ main] org.hibernate.cfg.Environment : HHH000206: hibernate.properties not found 2019-09-19 11:57:55.356 INFO 2089 --- [ main] o.hibernate.annotations.common.Version : HCANN000001: Hibernate Commons Annotations {5.0.4.Final} 2019-09-19 11:57:55.677 INFO 2089 --- [ main] org.hibernate.dialect.Dialect : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect 2019-09-19 11:57:57.056 INFO 2089 --- [ main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default' 2019-09-19 11:57:58.332 INFO 2089 --- [ main] o.s.s.concurrent.ThreadPoolTaskExecutor : Initializing ExecutorService 'applicationTaskExecutor' 2019-09-19 11:57:58.430 WARN 2089 --- [ main] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning 2019-09-19 11:57:59.426 INFO 2089 --- [ main] o.s.b.w.embedded.tomcat.TomcatWebServer : Tomcat started on port(s): 8080 (http) with context path '' 2019-09-19 11:57:59.428 INFO 2089 --- [ main] c.e.a.AccessingDataMysqlApplication : Started AccessingDataMysqlApplication in 11.422 seconds (JVM running for 12.184)  上記Springbootアプリケーションがサーバで実行中に下記のコマンドを実行します。\ncurl localhost:8080/demo/add -d name=First -d email=someemail@someemailprovider.com\n→ localhost は適時読み変えてください\nこれにより、MySQLにデータが登録されます。\n4-3. Nginxのインストール・設定 Nginx公式の手順を参考に、Springbootへのリバースプロキシを設定します。\nhttps://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/\n[root@iZ6we1q7wbpd4lko5h41ueZ ~]# yum install -y nginx 読み込んだプラグイン:fastestmirror インストール処理の設定をしています Loading mirror speeds from cached hostfile 依存性の解決をしています --\u0026gt; トランザクションの確認を実行しています。 # 中略 インストール: nginx.x86_64 0:1.10.3-1.el6 依存性関連をインストールしました: GeoIP.x86_64 0:1.6.5-1.el6 GeoIP-GeoLite-data.noarch 0:2018.04-1.el6 GeoIP-GeoLite-data-extra.noarch 0:2018.04-1.el6 gd.x86_64 0:2.0.35-11.el6 geoipupdate.x86_64 0:3.1.1-2.el6 libXpm.x86_64 0:3.5.10-2.el6 libxslt.x86_64 0:1.1.26-2.el6_3.1 nginx-all-modules.noarch 0:1.10.3-1.el6 nginx-filesystem.noarch 0:1.10.3-1.el6 nginx-mod-http-geoip.x86_64 0:1.10.3-1.el6 nginx-mod-http-image-filter.x86_64 0:1.10.3-1.el6 nginx-mod-http-perl.x86_64 0:1.10.3-1.el6 nginx-mod-http-xslt-filter.x86_64 0:1.10.3-1.el6 nginx-mod-mail.x86_64 0:1.10.3-1.el6 nginx-mod-stream.x86_64 0:1.10.3-1.el6 完了しました! [root@iZ6we1q7wbpd4lko5h41ueZ ~]# [root@iZ6we1q7wbpd4lko5h41ueZ ~]# vim /etc/nginx/conf.d/default.conf # proxy_passを追記します。 [root@iZ6we1q7wbpd4lko5h41ueZ ~]# service nginx start  そして、ECSサーバにHTTPアクセスすると以下の画面が表示されるようになります。\n\n5. SLBを用いたロードバランサーの作成 Alibaba Cloudでは、仮想ロードバランサの事をServer Load Balancerと呼称しており、その利用手順を記載します。\n5-1. サービスの選択 ログイン後のコンソールで、「Server Load Balancer」をクリックします。\n5-2. ロードバランサの作成 「ロードバランサの作成」をクリックします。 ロードバランサのパラメータとして、以下を入力して、「今すぐ購入」をクリックします。\n リージョン プライマリーゾーン バックアップゾーン インスタンス名 インスタンスタイプ（外部公開/内部公開） インスタンススペック 個数 利用規約に同意して、「有効化」をクリックします。   5-3. ロードバランサのリスナー設定 先程作成したロードバランサで「リスナーの設定」をクリックします。 接続することプロトコルとポート番号（今回はHTTPと80）を入力して、「次へ」をクリックします。 5-4. ロードバランサのバックエンド設定 VServerグループが選択されている事を確認して、「VServerグループの作成」をクリックします。 VServerグループ名を入力して、「追加」をクリックします。 既存のECSインスタンスの中から、バックエンドとなるインスタンスにチェックを入れて、「次のステップ：重みとポートの設定」をクリックします。 バックエンドがリッスンしているポート番号（80)と、重み（100）を入力して「次へ」をクリックします。 5-5. ロードバランサのヘルスチェック設定 ヘルスチェックの項目を確認、必要であれば変更して、「次へ」をクリックします。 確認画面が表示されるので、「送信」をクリックします。 作成が完了したら、「OK」をクリックします。 5-6. ロードバランサの動作確認 ステータスは実行中であっても、ヘルスチェックが通るまでは利用不可と表示されます ヘルスチェックが正常になったら、バックエンドにアクセス可能です。 SLB経由でのNginxの動作確認は以下の通りです。 SLBおよびNginx経由でのSpringbootの動作確認は以下の通りです。 "
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/002_hadoop-and-ecosystem-technologies/",
	"title": "Hadoopとその周辺の技術について",
	"tags": [],
	"description": "BigDataを支える技術レイヤー、Hadoopとエコシステムやその周辺についてを説明します。",
	"content": " \u0026nbsp; Hadoopとその技術レイヤーについて BigDataはRDBMSでないとだめか？ BigDataは今後の事業貢献や継続アプローチとしても欠かせません。そこで素朴な質問です。多くの人は「BigDataはRDBMSでないとだめか？」と問いますが、答えはデータサイズに伴うI/O性能の限界に伴う問題です。\n例えばの話、MySQL、PostgreSQL、SQL Server、OracleなどRDBMSでHDDに200TB分のデータがあるとして、HDDは今でも最大100MB/秒でデータを読み込むため、200TBのデータを読み込むために200×1000×1000 / 100 = 2000000秒、約23日と時間がかかります。SSDも同様です。\nこの問題を解決するために、Hadoopなど並列分散処理が必要になります。\n\u0026gt;ただし、(後述しますが)HadoopはサーバとサーバをNW接続しながら分散処理する一方、RDBMSやNoSQLはストレージと隣接するためORM（レスポンス）に特化しており、数百人以上の同時操作などオペレーション系業務では性能要件を満たしてるため、TBまでの少ないデータ量であればまだ現役です。\n\u0026nbsp; BigDataを支える技術レイヤー:Hadoop 通常、データ量が100TB、1PBと多いほどI/O処理から取得や更新にどうしても時間がかかります。それを解決するためにApache Hadoopというオープンソースプラットフォームが登場しました。Hadoopは１つのマスタサーバ/ネームノードと、複数のスレーブサーバ/データノードをhostで接続しながら、マスタサーバ/ネームノードの指示によりデータストレージとデータ処理に対しスケーラブルながら分散処理、そしてフォールトトレラントによる耐性障害を備っています。\n\u0026nbsp; BigDataを支える技術レイヤー:HDFS Hadoopの分散ファイルシステムとしてHDFS（Hadoop Distributed（分散） File（ファイル） System（システム））があります。こちらはHadoopら大規模データを前提に開発されたものです。大量のデータをブロック単位で分割し多数のノードに3つのレプリカとして重複保存されます。そのため、1つのサーバが壊れても、通じて生きてるサーバが自動で複製、データは常に３つのレプリカがあるよう保ってくれるので、障害にも強いです。\n\u0026nbsp; BigDataを支える技術レイヤー:MapReduce Hadoop、HDFSだけでも運用できますが、データ取得や更新時はHDFS同期処理、障害問題、ネットワーク帯域負荷問題があります。それを解決するのがMapReduceという並列分散処理です。例えば、選挙の投票用紙を集計し結果を表示する流れをMapReduceで位置づけすると、以下のような図になります。投票箱にて投稿したデータは、それぞれのスタッフが分散して（Map/Shuffle/Reduce）の3パートに区切って集計するのと同じようなイメージになります。ここで言うスタッフはスレーブサーバ/データノードの位置付けで、スレーブサーバ/データノード（スタッフ）は処理の際、ノード（Disk）へ記録するため、が万が一傷害など有事に遭遇しても、代わりのスレーブサーバ/データノード（スタッフ）が引き継いて作業を行うことができます。\n\u0026nbsp; BigDataを支える技術レイヤー:YARN MapReduceがあることで並列分散処理が出来ました。しかし、MapReduceは親ノードが子ノード（データノード）にプログラムを送信して計算処理するため、データを持ってないノード含め全送信するなど、処理速度・I/O負荷の面で課題があります。それを解決するためにYARNが登場しました。YARNはYet-Another-Resource-Negotiatorの略称、汎用的なクラスタリソース管理フレームワークです。YARNはリソースをによって効率的な計算処理送信で無駄を省くため、処理速度の向上・I/O負荷が減ります。そのため、YARNはMapReduce処理、Spark Streamingのようなストリーミング処理など、様々なMapReduce処理内容に応じてHadoopクラスタ(HDFS)上で効率よく並列分散処理を実現することができます。\n上記のMapReduceを選挙集計で例えたものに、YARNを追加してみます。その場合、以下のストーリーになります。\nスレーブサーバ/データノード（スタッフ）はリソース（人手）が限られてるため、YARNのResourceManager（管理者）が\n 実際に処理したい内容を全体で確認します。今回はAさんのみ集計したいので、Aさん以外は無視しAさんのみを集計します。\n ResourceManager（管理者）にて、処理したい内容を実現するためには、スレーブサーバ/データノード（スタッフ）でどれぐらいのリソースが必要かを事前確認します。\n それぞれのスレーブサーバ/データノード（スタッフ）にリソース割り当てを実施します。\n ResourceManager（管理者）にて、スレーブサーバ/データノード（スタッフ）の処理リソース割り当てができたら、分散・リソース処理を実施します。今回はAさんのみ集計なので、Aさんに集中、そのため全スレーブサーバ/データノード（スタッフ）のI/O負荷を総合的に減らすことができます。\n  \u0026nbsp; BigDataを支える技術レイヤー:Apache Hive MapReduceによって並列分散処理が簡単になりましたが、こちらは基本的にはJavaで書かなければならないことや、処理の都度コンパイルするなど、各自MapReduce処理の実装が大変という問題がありました。それを解決するためにApache Hiveが登場しました。SQLクエリ言語を書くだけで、Hiveサーバ側がMapReduceするようコンパイルし、MapReduce処理を実行してくれます。\n\u0026nbsp; BigDataを支える技術レイヤー:Apache Spark HiveでSQLを使ってMapReduce処理が簡単に実現できるようになりましたが、処理速度の課題がありました。Hive（MapReduce）は基本的に処理の都度ストレージへ書き込み処理をするため、処理速度に時間がかかります。それを解決するためにオンメモリで処理するApache Sparkが登場しました。現在、Apache Sparkはビッグデータ処理基盤に幅広くサポートしており、ストリーミング、OLAP、OLTP、機械学習、深層学習、コンテナ、CI/CD、パイプライン、ETL、FaaSなどでも活躍しています。\n\u0026nbsp; その他、Hadoopと周辺エコシステム 上記、Haddop、MapReduce、YARN、HDFS、Hive、Sparkなどを軽く説明しましたが、この他にHadoop周辺エコシステムが多数あります。HDFSをRDBMSとして扱うkuduに、高速OLAPするImpala、分散ストリーミングのflink、などがあります。こちらは別のページにて順次説明します。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/container/02/development-environment/",
	"title": "開発環境",
	"tags": [],
	"description": "Alibaba Cloudでコンテナを活用する際の開発環境を紹介します。",
	"content": " 以下の区分により、コンテナを活用したAlibaba Cloudにおける開発手法を紹介いたします。\n 開発環境 コンテナイメージの作成・管理 コンテナデプロイ管理 ログ管理とモニタリング  本項目では、 開発環境 に焦点を当てて、開発端末とバージョン管理システムの選択肢を紹介します。 その後、Alibaba Cloudにおける推奨を紹介します。\n目次  開発端末 バージョン管理 Alibaba Cloudにおける推奨  開発端末  Windows macOS Linux/その他  Windows プライベートでもビジネスでも最もよく利用されているOSはWindowsであり、慣れ親しんだUIのまま開発できるメリットは大きいです。 開発ツールとして、Docker Desktop for Windowsが提供されており、Bash for Windowsや各種IDEのDocker Clientプラグインと併せて、よく利用されます。\nただ、Windowsのデスクトップ上でDockerコンテナを利用する為にはEditionやBIOSにおいて制限をクリアする必要があります。具体的にはOSがWindows 10 64-bitで、EditionはPro、Enterprise、もしくはEducationのいずれか、かつHyper-Vが有効化されている必要があります。最新の情報は以下の公式ホームページより確認ください。\nDocker Desktop for Windowsインストール要件：https://docs.docker.com/docker-for-windows/install/\n上記要件を満たしている場合には、Bash for Windowsを併せてインストールする事で、Windows上でDockerコンテナの開発環境が整います。\nDocker Desktop for Windowsのインストール要件を満たしていない場合には、Vagrantやパブリッククラウド上でLinuxを稼働させる形で開発環境を整えます。\nmacOS macOSで開発する場合には、Windowsと比較して制限は少なく、OS X Sierra 10.12かそれより新しいOSが利用要件となります。 手順として、以下DockerhubのURLよりdmgパッケージをダウンロードします。 https://hub.docker.com/editions/community/docker-ce-desktop-mac\nその後、以下のDocker公式のURLの手順を参照して、インストールする事でDockerコンテナが利用可能となります。\nhttps://docs.docker.com/docker-for-mac/install/\nLinux/その他 LinuxもmacOSと同様、以下の公式URLからインストールできます。OSによってコマンドが異なりますが、Dockerを含むパッケージリポジトリを登録して、OSのパッケージ管理コマンドを用いて、ダウンロードおよびインストールする流れとなります。\nCentOS / Debian / Fedora / Ubuntu\nバージョン管理リポジトリ  Github/Gitlab/Bitbucket それ以外のリポジトリ  Github/GitLab/Bitbucket コンテナを活用した開発では、Gitを用いた形が一般的です。\nそれぞれの概要は以下の通りとなります。\nGithub: Gitのリポジトリとして最も有名なリポジトリ。利用における情報量も最も多い。\nGitLab: Githubの次に有名で、コード管理だけでなく、コンテナレジストリやCIを含めた様々な機能が無料で提供されている。\nBitbucket: Atlassian社製で、同社のコラボレーションツールとの相性が良い。\nそれ以外のリポジトリ Gitリポジトリにおいて、Github/GitLab/Bitbucket以外のリポジトリは情報量が少なく、後述するAlibaba Cloudのコンテナサービスとの相性も良くありません。また、SVN等のGit以外のバージョン管理リポジトリも、情報量の観点から、今現在コンテナ開発に向いているとは言えません。\nAlibaba Cloudにおける推奨 開発端末 開発端末において、Alibaba Cloudによる推奨の選択肢はありません。その為、最もユーザの文化にあった開発端末を推奨します。 また、Alibaba CloudにはSaaS型の開発環境サービスは2019年9月時点で提供されておりませんが、同サービスが提供され次第、本記事を更新して、紹介いたします。\nバージョン管理リポジトリ バージョン管理リポジトリについては、Github/Gitlab/Bitbucketのいずれかを推奨しております。 理由としては、Alibaba Cloudのコンテナイメージレジストリサービスである、Container Registryが上記のGitレポジトリとのアカウント連携可能な為となります。アカウント連携する事で、ソースコードの読み取りやDockerイメージビルドが自動で設定する事が可能となります。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/product/",
	"title": "プロダクト",
	"tags": [],
	"description": "Alibaba Cloudを活用する上でのベストプラクティスをプロダクト別に記載します。",
	"content": ""
},
{
	"uri": "https://www.sbcloud.co.jp/help/getting-started/product/",
	"title": "プロダクトの紹介",
	"tags": [],
	"description": "Alibaba Cloudで頻繁に利用されるプロダクトの活用情報を紹介します。",
	"content": ""
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/",
	"title": "ベストプラクティス",
	"tags": [],
	"description": "Alibaba Cloudを活用する上でのベストプラクティスを記載します。",
	"content": ""
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/terraform/02/install/",
	"title": "インストール",
	"tags": [],
	"description": "Alibaba Cloudでも用いられるTerraformのインストール手順を説明します。",
	"content": " 本章は Terraform のインストール方法を学びます。\n ※ Mac/Linuxでのインストール方法になります。Windows版でのTerraform導入方法は別途記載予定です。 ※ Terraformバージョン違いを防止するためにtfenvで管理をする方法がありますが、これとは別に Dockerを使った方法もありますので参考にしてください。\n 1. Homebrew \u0026nbsp; Terraformは前章で説明した通り、HashiCorp社がオープンソースとして展開してるツールです。基本的にはバージョンアップに 追従しやすい tfenv の利用を推奨しますが、お試しであればHomebrew も手軽です。 macOS の場合は次のように、Homebrew を使ってインストールできます。\n$ brew install terraform $ terraform --version Terraform v0.11.13  \n2. tfenv tfenvは Terraformのバージョン管理マネージャです。 tfenvを使うことで、異なるバージョンのTerraformを差異なく利用できます。\n$ brew install tfenv $ tfenv --version tfenv 0.6.0  完了したら、インストール可能なTerraform のバージョンを確認します。\n$ tfenv list-remote 0.12.0-beta1 0.11.13 ・・・  最新の安定バージョンかつAlibabaCloud Terraform対応は 0.11.13です。0.11.13を次のようにインストールします。\n$ tfenv install 0.11.13  terraformには .terraform-versionというファイルがあり、こちらにバージョンを記述すると、そのバージョンを自動的にインストールできます。\n$ echo 0.11.13 \u0026gt; .terraform-version $ tfenv install  チームなど複数メンバーでの開発/運用の場合は、このファイルをリポジトリに含めましょう。 そうすれば、チームメンバが「tfenv install」コマンドを実行するだけでバージョンを統一できます。 3. クレデンシャル \u0026nbsp; TerraformでAlibabaCloudを扱うにはAccessKeysとSecretKeyが必要です。 AlibabaCloudコンソールにあるResource Access Management (RAM) でAccessKeysとSecretKeyを発行しましょう。 \u0026nbsp; 本書ではAdministratorAccessポリシーをアタッチしたRAMユーザのAccessKeysを前提とします。 AdministratorAccessポリシー以外では、権限不足でTerraform実行が失敗する場合が゙あります。 その場合は、エラーメッセージを参考に必要な権限を付与します。\n▲ AlibabaCloudコンソールのRAMページにて、左側タブの「ユーザー」を選択します。 ▲ Terraformを実行したいユーザーを選択して、、（もちろんAlibabaCloudのリソースが実行できる権限がついてることが望ましい） ▲ ユーザのAccessKey/SecretKeyを発行します。これは重要な情報なので無くさないようメモなどに残してください。\n\u0026nbsp; 上記作業によって取得したAccessKeysとSecretKeyは、confing.tfvarsなどに入れます。 ちなみに間違えてAccessKey/SecretKeyを外部流出しないよう気をつけてください。\n\nconfing.tfvars\naccess_key = \u0026quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxx\u0026quot; secret_key = \u0026quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxx\u0026quot; region = \u0026quot;ap-northeast-1\u0026quot; zone = \u0026quot;ap-northeast-1a\u0026quot; project_name = \u0026quot;Web-Application-for-Terraform\u0026quot; ecs_password = \u0026quot;!Password2019\u0026quot;  "
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/web-application/02/name-resolve/",
	"title": "名前解決",
	"tags": [],
	"description": "Alibaba Cloudを用いたWeb三層アーキテクチャを紹介します。",
	"content": " 以下の区分により、Alibaba Cloudを活用したWebアプリケーション構築手法を紹介いたします。\n 名前解決 負荷分散 Web/APサーバ データベース/キャッシュ  本項目では、Alibaba Cloudの名前解決に関するサービスの仕様と設計ポイントを紹介します。\n名前解決  対象サービス 基本的な仕様 設計のポイント 参考リンク一覧  対象サービス 名前解決に関するサービスは\u00082種類あり、DomainとCloud DNSになります。 Domainでは、ドメインのレジストリ登録や管理を行い、Cloud DNSではAレコードやMXレコードの登録や削除等のゾーンの管理を行います。\n基本的な仕様 Domain  新規ドメインを購入する際、ICANN情報を入力します。\n .cnドメインの取得もサポートしています。\n 1年〜10年単位でドメインを購入できます。\n レジスタラはALIBABA.COM SINGAPORE E-COMMERCE PRIVATE LIMITEDになります。\n DNSSECを有効化できます。\n ドメインの移管（転入転出）にも対応しています。\n ドメインの移管及び更新に対するセキュリティロックを有効化できます。\n 当該ドメインに対する変更証跡をコンソールから確認できます。\n デフォルトでAlibaba Cloudのネームサーバ（e.g. ns7.alidns.comとns8.alidns.com）を利用しますが、独自のDNSサーバへ変更できます。     Cloud DNS  DNSレコード管理を行い、ロードバランサや仮想サーバの名前解決をサポートします。\n デフォルトではインターネット公開向けですが、プライベートゾーンへも変更可能です。\n オペレーションログをコンソールから確認できます。\n デフォルトは無料版であり、Cloud DNS有料版を購入する事で以下の対応ができるようになります。\n レコード登録数やサブドメインレベルの上限緩和\n QPS上限設定によるDNS攻撃からの保護\n クエリボリュームの確認\n 他のレジスタラと併用して、Cloud DNSをSecondary DNSとして設定\n  Global Traffic Managerというサービスで、以下のようにDNSトラフィックを制御できます。\n GEO DNSの有効化による名前解決の高速化\n リージョンやISPライン単位でトラフィックを制御\n DNS Failoverの対応\n DNSレコードに対するHealth Checkの有効化     設計のポイント Domain  CloudDNSの有料版を購入した場合、Domainにて当該ドメインのネームサーバ設定をデフォルトから指定のネームサーバ（e.g. vip7.alidns.comとvip8.alidns.com）へ変更する必要があります。\n ドメインの移管と更新の操作に対して、セキュリティロックをかける事ができ、本番環境での適用が推奨されます。    Cloud DNS  最小TTLはデフォルト10分ですが、有料版を利用する事で最小1秒まで設定可能となります。\n レコードを追加する時に、ISP回線というパラメータは基本的に「デフォルト」を選択してください。デフォルト以外を選択した場合、名前解決されない場合があります。\n 有料版の購入はまずパッケージを購入する処理となります。その後、購入したパッケージとドメインの紐付けをする事で初めてCloud DNSがアップグレードされ、有料版扱いとなります。    参考リンク一覧    タイトル URL     Alibaba Cloud DNSドキュメント https://jp.alibabacloud.com/help/product/34269.htm   Transfer Your DomainBegin the process of transferring your domain(s) to Alibaba Cloud https://www.alibabacloud.com/domain/transfer-in   Transfer your domain names to Alibaba Cloud (英語ドキュメント) https://www.alibabacloud.com/help/doc-detail/54077.htm   中国ドメインの取得 https://www.alibabacloud.com/help/doc-detail/108953.htm   Domainセキュリティベストプラクティス https://www.alibabacloud.com/help/doc-detail/35824.htm   Global Traffic Manager https://www.alibabacloud.com/help/doc-detail/87297.htm    "
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/product/linkkit-sdk/",
	"title": "Linkkit SDK 利用ガイド",
	"tags": [],
	"description": "Alibabaの IOT Platform と繋がるためデバイス側使ってるSDKとその開発例を紹介します。",
	"content": " Tags ： AlibabaCloud IOT-Platform Linkkit\n目的 Link Kit SDKは、Alibaba Cloudによってデバイスメーカーに提供され、デバイスに統合し、デバイスをAlibaba Cloud IoTプラットフォームに安全に接続し、Alibaba Cloud IoTプラットフォームによってデバイスを制御および管理できるようにします。デバイスは、Link Kit SDKを統合するためにTCP / IPプロトコルスタックをサポートする必要があります。zigbeeやKNXなどの非IPデバイスの場合、ゲートウェイデバイスを介してAlibaba Cloud IoTプラットフォームに接続する必要があり、ゲートウェイデバイスはLink Kit SDKを統合する必要があります。\n本書はLink Kit SDK 関連の知識や Link Kit SDKを使ってIOT Platformと繋がる方法を紹介させてください。\n本ガイドの全体的な流れは下記の通りです。\n   セクション Topic 説明     概要紹介 Linkkit SDK と　AliOS things Linkkit SDK と　AliOS things の関係の紹介   - SDK利用以外の方法 SDK以外でIOT Platformへ繋がる方法を説明   - アーキテクチャ アーキテクチャ 基本特徴を紹介   - SDKバージョンと区別 各バージョンの紹介   - 製品の範囲 適用デバイスの紹介   開発プロセス 開発プロセス 一般的な開発プロセスの紹介   C言語Link Kit SDK紹介 C言語Link Kit SDK紹介 C言語SDKの開発概要を紹介   開発サンプル Linuxベースの開発事例 １つ簡単な開発事例を紹介    概要紹介 Linkkit SDKの概要について紹介させてください。\nLinkkit SDK と　AliOS things の関係 AliOS thingsを実装されたデバイスはIOT PlatformのSDK（Linkkit SDK）を実装不要で、簡単にIOT Platformへの接続が可能です。\nもしデバイスはAliOS thingsを実装してない場合は、Linkkit SDKの実装でIOT Platformへの接続も可能です。ただし、Linkkit SDKとデバイス既存OSへの適合性によって、一部ハードウェア関連のドライブ部分はお客様自身で実装する必要があります。\nSDK利用以外の実装方法  Alinkプロトコルに基づいて独自のSDKを開発する 提供されたSDKでは満たされない特定の開発要件がある場合は、Alinkプロトコルに基づいて独自のSDKを開発できます。詳細については、 Alink protocolに参照.\n 汎用プロトコルSDK generic protocol SDK使用できます。デバイスまたはプラットフォームをIoT Platformに接続するブリッジを構築し、相互に通信できるようにするためにIoT Platformによって提供されます。\n  ソフトウェアのアーキテクチャと機能 Link Kit SDKのソフトウェアアーキテクチャと機能は次のとおりです。  アプリケーションプログラミングインターフェイス（API） Link Kit SDKは、デバイスがさまざまな機能モジュールを制御するためのAPIを提供します。\n 汎用モジュール Link Kit SDKは、一連の汎用モジュールを提供します。\n クラウド接続：MQTT、CoAP、HTTP、HTTPSなど、デバイスをAlibaba Cloud IoTプラットフォームに接続するためのさまざまな方法を提供します。 デバイス認証：IoTプラットフォームに接続されたデバイスが正当であるかどうかを検証します。認証は、デバイスレベルまたは製品レベルごとに基づくことができます。 OTA：デバイスファームウェアのアップグレードをサポートします。 サブデバイス管理：ゲートウェイによってIoTプラットフォームに接続されたサブデバイスを接続します。 Wi-Fiプロビジョニング：Wi-Fi AP SSIDとパスワードを、アップリンクネットワークインターフェイスとしてWi-Fiを使用するIoTデバイスに送信します。 デバイスモデリング：デバイスのプロパティ、サービス、およびイベントに基づくデバイス管理。 ユーザーバインド：SmartLifeがユーザーのアカウントをデバイスにバインドするために使用する安全なバインドトークンを提供します。 ローカルデバイス制御：デバイスがスマートフォンまたはゲートウェイと同じローカルエリアネットワーク（LAN）に接続する場合、この機能を介してスマートフォンまたはゲートウェイで直接制御できます。これにより、より高速で信頼性の高いデバイス制御が可能になります。  ハードウェアアブストラクションレイヤー (HAL) SDKはOSや製品から独立するように設計されているため、この目的のためにレイヤー（HAL）を定義します。デバイスメーカーはこれらの機能を実装する必要があります。\n  SDKバージョンと区別 Link Kit SDKは現在、C、Java、Python、NodeJS、Android、iOSなどの複数の言語/プラットフォームをサポートしていますが、機能は異なる言語/プラットフォームバージョンで完全に同じではありません。詳細はドキュメントに参照してください。\nOTAなどすべての機能を利用したい場合は、C言語のSDKがおすすめです。\n製品の範囲 Link Kit SDKは、TCP / IPを介してAlibaba Cloud IoTプラットフォームと通信できるすべての製品に適しています。典型的なデバイスの種類は次のとおりです: - 家庭用機器/家電 - ゲートウェイ製品とサブデバイス製品 - セルラーネットワーク接続を使用する製品 開発プロセス デバイスを開発してAlibaba Cloud IoT Platformに接続する手順は、次の手順で構成されています:\n クラウド側の製品定義：Alibaba Cloud IoT Platformで製品機能（デバイスプロパティ、サービス、イベントを含む）を定義します。このドキュメントでは、クラウド上で製品を定義する方法については説明しません。製品作成の詳細については、Alibaba Cloud IoT Webサイトをご覧ください。\n デバイス側の開発：Link Kit SDKをデバイスに統合して、機能開発を開始し、IoTプラットフォームで定義された製品機能を実装します。\n アップリンクおよびダウンリンクのデバッグ：IoTプラットフォームからテストデバイスの3つ組（デバイスがクラウドに接続するために使用する一意のIDを表す）に適用し、それらをデバイスに書き込みます。次に、デバイスとクラウド間のアップリンクおよびダウンリンク接続をデバッグして、デバイスがAlibabaクラウドIoTプラットフォームと適切に通信できることを確認します。このセクションでは、デバッグプロセスについては説明しません。以降のセクションで説明します。\n  デバイスがデバッグされたら、デバイスの大量生産のために、Alibaba Cloud IoT Platformで複数のデバイスに同時にトライプルを適用します。\n次の図は、デバイス側でのLink Kit SDK統合の一般的な開発手順を示しています。 Wi-Fi経由でネットワークに接続されているデバイスの場合、開発プロセスは次のとおりです。 その他デバイスの開発プロセスについて、詳細はドキュメント に参照ください。\nC言語Link Kit SDK紹介 概要 C言言リンクキットSDKは、C言言の実行速度が速い/必要な実行中のメモリ量が少ないため、C言言を実行する機能を使用するために、C言言を開くトラフィック処理を使用するデバイスに適しています。 デバイスは、TCP / IPをサポートするか、AT命令の外部ネットワーク通信モジュールを介してLink Kit SDKを統合する必要があり、zigbee / 433 / KNXのような非IPデバイスは、Link Kit SDKを統合したウェブ関連デバイスをAliyunyunIoTに接続する必要があります。\nアーキテクチャ 構造図は下記の通り： 特別なOSを使ってるデバイスの場合は、HAL層はデバイスプロバイダーより実装する必要があります。\n +---------------------------+ | | | C-SDK Example Program | | | +---------------------------+ | | | C-SDK Interface Layer | | | | IOT_XXX_YYY() APIs | | linkkit_mmm_nnn() APIs | | | +---------------------------+ | | | C-SDK Core Implements | | : =\u0026gt; | | : You SHOULD NOT Focus | | : on this unless | | : you're debugging SDK | | | +---------------------------+ | | | Hardware Abstract Layer | HAL層 | | | HAL_XXX_YYY() APIs | | |  開発環境準備 エンドポイントのいくつかの標準的な動作、登録されたウェブサイトのコントロールパネルの動作、十分な制御の動作、製品の種類の作成、および以下の機器の例など、Ubuntu16.04のインストールなどが含まれます。開発環境の構築、開発環境のインストール、C-SDKソースの代替品のダウンロードなど。\nC-SDKをターゲットプラットフォームにクロスコンパイルします C-SDKソースコードを、開発したいデバイスのターゲット組み込みプラットフォーム形式にクロスコンパイルします。 このリンクの成功した製品は、ターゲットプラットフォーム形式のバイナリスタティックライブラリファイルlibiot_sdk.aであり、当社が提供するxxx_api.hヘッダーファイル（xxxはアクセスする機能ポイントを表します）で、いわゆるSDKを取得しています。 すべてのプログラミングAPI関数はヘッダーファイルで宣言され、ライブラリファイルで実装されます。\nHALレイヤーの実装を開発する C-SDK自体は、実行するハードウェアプラットフォーム、および実行するオペレーティングシステム（またはオペレーティングシステムなし）を想定しないクロスプラットフォームSDKです。基礎となるレイヤーへの依存関係は、HAL_XXXスタイルの関数インターフェイスのセットに抽象化されます。 xxxという名前の関数ポイントが依存する基礎となる関数の代わりに、それらはsrc / xxx / xxx_wrapper.hに表示されます。現時点では、ユーザーまたはハードウェアプラットフォームプロバイダーは、独自のプラットフォームでこれらのインターフェイス機能の実装を提供する必要があります。 C-SDKには、参照用にUbuntuおよびWindowsでこれらのインターフェイスを実装するためのソースコードが付属しています。\nSDKおよびHALレイヤー実装をファームウェアに埋め込みます 上記のlibiot_sdk.aを機能のコアとして使用し、libiot_hal.aをSDKのサポートライブラリとして独自に開発したため、重要なコンポーネントの準備が整いました。それらをプロジェクトのコンパイルシステム/コンパイル環境に持ち込み、ターゲットファームウェアまたはターゲットアプリケーションにリンクされるようにコンパイル設定を変更します。C-SDKが提供するAPIを使用できます。\n業務ロジック実装 C-SDKが提供するAPIを使用した後、それを使用して、レポートデータ、トピックのサブスクライブ、コマンドの受信など、独自のビジネス/アプリケーションを作成できます。繰り返しになりますが、Ubuntu 16.04などのホストプラットフォームでビジネスロジックコードの記述とテストを完了してから、組み込みターゲットプラットフォームに移行することを強くお勧めします。これにより、問題がある場合は、ホスト上の同じソースコードと比較することもできます。\n開発サンプル Alibaba Cloudが提供するデバイス側C言語SDKは、Linuxシステムで直接実行でき、MQTTプロトコルを介してIoTプラットフォームにアクセスできます。この記事では、Ubuntu x86_64システムでコンパイルされたデバイス側のC言語SDKを例にして、デバイスでのクラウド構成と開発プロセスを紹介します。\n製品とデバイスを作成する IoTプラットフォームコンソールにログインし、左側のナビゲーションバーで[デバイス管理]\u0026gt; [製品]を選択し、[製品の作成]をクリックして製品を作成します。\n 製品名：カスタム製品名。 カテゴリ：カスタムカテゴリを選択します。 ノードタイプ：直接接続されたデバイスを選択します。 ネットワーク：WiFiを選択します。 データ形式：ICA標準データ形式（Alink JSON）を選択します。 認証方法：デバイスキーを選択します。  左側のナビゲーションバーでデバイスを選択し、[デバイスの追加]をクリックして、作成した製品の下にデバイスを追加します。 デバイスが正常に作成されたら、デバイス証明書情報を取得します（ProductKey、DeviceNameとDeviceSecret）。\n製品モデルを定義する IoTプラットフォームが提供するデバイス側のC SDKデモパッケージには、オブジェクトモデルというJSON形式のConfigファイルが含まれています。この例では、物理モデルファイルをインポートして、製品の物理モデルを生成します。\n モデルファイルの編集。 TSLと呼ばれるオブジェクトモデルとは、Thing Specification Languageです。 JSON形式のファイルです。センサー、車載デバイス、建物、工場など、物理空間内のエンティティのデジタル表現です。属性、サービス、イベントの3つの次元で、エンティティの内容、実行できる内容、提供できる内容を説明します情報。これらの3つのディメンションが定義されると、製品機能の定義が完了します。 src/dev_model/examplesディレクトリのmodel_for_examples.jsonファイルを開きます。オブジェクトモデルJSONファイルのproductKeyの値を、IoTプラットフォームで作成した製品ProductKeyに置き換えて、ファイルを保存します。  IoTプラットフォームコンソールの製品ページで、以前に作成した製品を見つけて、対応するビューをクリックします。\n [製品の詳細]ページの[機能定義]タブで、[ドラフトの編集]\u0026gt; [クイックインポート]をクリックします。 4.ポップアップダイアログボックスで、インポートモデルを選択し、前の手順で編集したモデルのJSONファイルをアップロードして、[OK]をクリックします。\n [更新の発行]をクリックして、物理モデルを公式バージョンとして発行します。\n  SDK設定更新 開発ツールで、C SDKデモをインポートし、構成ファイルの情報をデバイス情報に変更します。\n wrappers/os/ubuntuディレクトリのSDKデモで、デバイス証明書情報をHAL_OS_linux.cファイルのデバイス証明書情報に変更します。  SDKをコンパイルします。 SDKルートディレクトリで、make reconfigを実行し、3を選択してからmakeを実行します。  SDKテスト。   SDKが正常に実行されると、IoTプラットフォームコンソールのデバイスのデバイス詳細ページで、デバイスによって報告されたデバイスステータスと材料モデルデータを表示できます。\n参考として、詳しい情報をほしい場合は下記中国語のドキュメントを参照してください。 * SDK マニュアル * オフィシャルドキュメントセンター\n以上です。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/product/ali0s-things/",
	"title": "AliOS Things 利用ガイド",
	"tags": [],
	"description": "AlibabaのIOT専用OS、AliOS Things の使い方と開発例を紹介します。",
	"content": " Tags ： AlibabaCloud AliOS-Things IOT\n目的 Alibaba Cloud IoT IoTオペレーティングシステム（別名AliOS Things）は、Alibaba CloudのIoT分野向けの拡張性の高いIoTオペレーティングシステムです。 AliOS Thingsは、極端なパフォーマンス、最小限の開発、クラウド統合、豊富なコンポーネント、セキュリティ保護などの主要な機能を備えたクラウド統合IoTインフラストラクチャの構築に取り組んでいます。 AliOS Thingsは、Alibaba Cloud Linkプラットフォームに接続されたさまざまなデバイスをサポートしており、スマートホーム、スマートシティ、産業、新しい旅行などの分野で広く使用できます。\n本書はAliOS Things 関連の知識や AliOS Thingsを使ってIOT Platformと繋がる方法を紹介させてください。\n本ガイドの全体的な流れは下記の通りです。\n   セクション Topic 説明     前提知識 AliOS と AliOS things AliOS と AliOS things の関係の紹介   - AliOS things　と IOT Platform AliOS things　と IOT Platform の関係   基本構成 基本特徴 AliOS things 基本特徴を紹介   - アーキテクチャ AliOS things アーキテクチャを紹介   - 関連ハードウェア 関連ハードウェアと開発Board紹介   - 開発ツール 開発ツールAliOS Things Studio   開発サンプル AliOSの開発事例 AliOS使ってAlibabaCloudと繋がる事例を紹介    前提知識 本ガイドを理解するために、下記の前提知識が必要になります。\n1.AliOS と ALIOS things の関係 AliOS Thingsは、AliOSファミリーに属するIoT指向の高度にスケーラブルなIoTオペレーティングシステムです。 AliOS Thingsは、限られた電力とリソース、接続されたソケットSoCを備えたMCU向けに設計されており、IoTデバイスに非常に適しています。\n2.AliOS things　と IOT Platform の関係 AliOS thingsを実装されたデバイスはIOT PlatformのSDK（Linkkit SDK）を実装不要で、簡単にIOT Platformへの接続が可能です。\nもしデバイスはAliOS thingsを実装してない場合は、Linkkit SDKの実装でIOT Platformへの接続も可能です。ただし、Linkkit SDKとデバイス既存OSへの適合性によって、一部ハードウェア関連のドライバー部分はお客様自身で実装する必要があります。\n基本構成 1.基本特徴  豊かな生態 AliOS Thingsは、認定された80以上のハードウェアプラットフォームと100以上のセンサーサポートを提供します。\n 高カスタマイズ性 オンラインでコンポーネントの組み合わせを選択できる。\n 安全統合 Alibaba Cloud IoTセキュリティサービスのデバイス側機能をネイティブに統合して、IoTデバイスの安全な操作を保護します。\n IoTプロトコル Alink、MQTT、Http / Https、Coap、LwM2M、LoRaWANなど、さまざまなIoTプロトコルコンポーネントのサポートをユーザーに提供します。\n 便利な開発ツール 編集、コンパイル、およびデバッグを統合する開発ツールをサポートし、包括的な開発リンクツールをユーザーに提供します。\n SALソケット抽象化コンポーネント AIoTのMCU外部通信モジュールシナリオに適した標準のネットワークソケット抽象化コンポーネントを提供します。異なる通信モジュールの接続の違いからユーザーを保護し、開発をより効率的にするため。\n OTAオンラインアップグレード ユーザーに、ピンポンアップグレード、圧縮アップグレード、差分アップグレード、セキュリティアップグレードなど、複数のデバイス側のアップグレード方法を提供します。\n  2.AliOS things アーキテクチャ AliOS Thingsのアーキテクチャは、階層型アーキテクチャとコンポーネント化されたアーキテクチャの両方に適用できます。下から上に、AliOS Thingsに含まれるもの：\n ボードサポートパッケージ（BSP）：SoCベンダーによって主に開発および保守されています ハードウェアアブストラクションレイヤー（HAL）：WiFiやUARTなど カーネル：Rhinoリアルタイムオペレーティングシステムカーネル、Yloop、VFS、KVストレージを含む プロトコルスタック：TCP / IPプロトコルスタック（LwIP）、uMeshネットワークプロトコルスタックを含む セキュリティ：セキュアトランスポートレイヤープロトコル（TLS）、トラステッドサービスフレームワーク（TFS）、トラステッドオペレーティング環境（TEE） AOS API：アプリケーションソフトウェアとミドルウェアのAPIを提供します ミドルウェア：一般的なIoTコンポーネントとAlibabaの付加価値サービスミドルウェアが含まれています サンプルアプリケーション：Aliの自己開発サンプルコード、および完全なテストに合格したアプリケーション（Alinkappなど）  すべてのモジュールはコンポーネントに編成されており、各コンポーネントには独自の.mkファイルがあります。これは、他のコンポーネントとの依存関係を記述するために使用され、アプリケーション開発者が必要に応じて選択するのに便利です。\n3.関連ハードウェアと開発Board紹介  AliOS Things Starter Kit スターターキットは、AliOS Thingsに合わせて開発された開発ボードで、ボードレベルセンサー、LCDスクリーン（240 * 240）、オーディオ、オンボードWiFiモジュールなど、豊富なオンボードリソースを提供します。 GUIサンプル 詳細紹介：http://aliosthings.io/#/zh-cn/starterkit\n AliOS Things Developer Kit\n  Developer Kitは、AliOS Thingsが作成した公式のハイエンド開発ボードで、スターターキットよりも豊富なリソースを提供します。 センサーに関しては、慣性航法加速度計およびジャイロスコープに加えて、磁力計、気圧計、温度および湿度センサー、赤外線センサー、近接光センサーなどの多数の環境センシングデバイスが提供され、さまざまなタイプのIoTビジネスシナリオを提供できます。クラウド統合ソリューションの検証。 詳細紹介：http://aliosthings.io/#/zh-cn/developerkit\n サポートモジュール：\n 慶科（EMW3060） EMW3060は、上海Qingke（MXCHIP）が発売した費用対効果の高い組み込みW-Fiモジュールで、ARM9、WLAN MAC /ベースバンド/ RFと高度に統合され、最高周波数は120MHzです。\n 楽鑫(ESP-WROOM-32) 乐鑫の最先端のSoCに基づいたESP-WROOM-32モジュールは、高性能で豊富な周辺機器を備え、Wi-FiとBluetooth機能を統合し、高度なIoTアプリケーションに高度に統合されたソリューションを提供します。\n  そのたDiscovery kit Development board STM32 B-L475E-IOT01A 詳細について、 Introduction of STM32   AliOSThings対応済みhardware一覧は下記リンクを参照してください： http://aliosthings.io/#/zh-cn/hardware\n4.開発ツールAliOS Things Studio AliOS Studioは、vscodeに基づいた一連の開発環境であり、windows、linux、macOSをサポートしています。 AliOS Studioには次の機能があります：\n 優れた開発体験とシンプルな操作インターフェース AliOS Thingsアプリケーション開発のサポート コード補完、インデックス作成、ヒントなど AliOS Thingsのコンパイル/ダウンロード/デバッグ 複数の開発ボードに適応 シリアルツール、TSL変換ツールなど  インストール  ダウンロードしてインストール Visual Studio Code 以下に示すように、vscodeを開き、AliOS Studioプラグインをインストールします  aos-cubeインストール AliOS Studioはaos-cubeに依存しています.aos-cubeを手動でインストールする場合は、システム環境のセットアップを参照してください。同時に、AliOS Studioは、以下に示すようにaos-cubeのワンクリックインストールもサポートしています：   使用 AliOS Studioの主な機能は、vscodeの下のツールバーに集中しており、左から右への小さなアイコンがアプリケーションプロジェクトを作成しています。 左側のhelloworld @ developerkitはコンパイルターゲットで、形式はアプリケーション名@ターゲットボード名のルールに従っています。クリックして、アプリケーションとターゲットボードを順番に選択します。\n Build  Upload 開発ボードとコンピューターをUSBマイクロケーブルで接続し、下のツールバーの稲妻アイコンをクリックして、ファームウェアの書き込みを完了します：  Monitor USBマイクロワイヤを介して、送信パネルと電源を接続します。 最初の接続は、書き込みソケットのデバイス名と波の速度を示すことを示します。\n Debug F5キーを押すか、メニューバー[デバッグ]\u0026gt; [デバッグの開始]をクリックして、デバッグモードに入ります。   開発サンプル 使用条件：\nAliOS Things \u0026gt;= 3.0 aos-cube \u0026gt;= 0.3.7  1：AliOS Things 3.0ソースコードをダウンロード  Open sourceから https://github.com/alibaba/AliOS-Things 全量ダウンロード。 オフィシャルサイトから：https://aliosthings.iot.aliyun.com カスタマイズダウンロードも可能です。  2：AOS_SDK_PATH環境変数を追加する AOS_SDK_PATHシステム環境変数を追加して、AliOS Things 3.0ソースコードパスを指すようにするAos-cubeは、AOS_SDK_PATH環境変数に従ってAliOS Thingsソースコードを検索します。さまざまなシステムがさまざまな方法で環境変数を追加します。\n３：AliOS Studioのアプリケーションプロジェクト作成 Vscodeで、AliOS Studioが提供する「+」ボタンをクリックして、新しいプロジェクトを作成します（ボタンはvscodeの左下隅のステータスバーにあります）。AliOSStudioは、プロジェクト名\u0026gt;プロジェクトストレージパス\u0026gt;開発ボードの選択を求められ、指定したパスになります。以下で最も簡単なアプリケーションプロジェクトを生成します。\n. ├── .aos # AliOS Things 3.0 アプリケーションの説明 ├── .vscode # AliOS Studio 構成ファイル ├── Config.in # Menuconfig 構成ファイル ├── README.md # 説明ドキュメント ├── aos.mk # Buildファイル ├── app_main.c # サンプルコード └── k_app_config.h # カーネル構成  完全な作成例： ４、Alibaba Cloud IoT プラットフォームへ接続する  4.1、クラウド上の5つのステップ:\n Alibabaクラウドアカウントを登録する IoTスイートを開始する 製品の作成、getProductKey デバイスを作成し、DeviceNameとDeviceSecretを取得します Topic （PRODECT_KEY）/ $（DEVICE_NAME）/ dataを定義し、アクセス許可を次のように設定します：デバイスはパブリッシュおよびサブスクライブできます  4.2、デバイス側のパラメーター変更 mqttアプリのソースコードは AliOS-Things/example/mqttapp/mqtt-example.cで、mqttサーバーに接続するための資格情報はframework/protocol/linkkit/iotkit /sdk-encap/imports/iot_import_product.hにあります。 クラウドから取得した3つのパラメーター（ProductKey、ProductSecret、DeviceNameおよびDeviceSecret）は、コード内の3つのマクロPRODUCT_KEY、PRODUCT_SECRET、DEVICE_NAMEおよびDEVICE_SECRETに対応しています。\n  #elif MQTT_TEST #define PRODUCT_KEY \u0026quot;b1eszMRbDvz\u0026quot; #define DEVICE_NAME \u0026quot;mqtt_test\u0026quot; #define DEVICE_SECRET \u0026quot;CAaQz8Fc1JkFEyuzFhu4NpHSTlRSmRxV\u0026quot; #define PRODUCT_SECRET \u0026quot;Fxx6nyYptOugnS6H\u0026quot; #else   4.3、MQTT他のもののコンパイルアプリ 現在のAliOS Things mqttアプリのコンパイルコマンドラインは次のとおりです。  aos make mqttapp @ b_l475e  コマンドの実行後、生成されたbinファイルとhexファイルはout / mqttapp @ b_l475e / binary /ディレクトリーにあります。  ５、Bulid, Upload, Debug 前章の「開発ツールAliOS Things Studio」を参照してください。\n６、ネットワークとデータ接続の構成 上記の4つのステップの後、対応するmqttappバイナリがstm32L475開発ボードに焼き付けられ、次のようにポートプリントが開始されます。\nWifiモジュールは、コマンドラインを介して対応するAPに接続できます。\nnetmgr connect * ssid * * password * * open | wep | wpa | wpa2 *  デバイスがネットワークに接続できるようになると、mqttappが実行を開始します。次の図は、mqtt実行ログです。\n以上です。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/product/datav/datav-sakura/",
	"title": "DataV より桜前線のシミュレーション実現",
	"tags": [],
	"description": "DataV初心者向けに、３D Widgetより簡単な桜前線シミュレーションの実現方法を紹介します。",
	"content": " Tags ： AlibabaCloud DataV Develop\n目的 データ可視化の魅了の一つは、分かりづらい生データを生き生きで表現させて、誰でもすぐ分かるようにすることです。でも、データの表現力を豊かにするため、いつもプロのデザインナーに頼まないと行けないことで、普通のエンジニアにとってなかなか難しです。DataVの使命の一つは、まさにエンジニア達はこんな悩みから救えたいです。DataVを使えば、プロなデザインナーを頼らず、誰でも綺麗なDashboardを作れます。\n今回はアリババ が11 月 11 日に行われた「独身の日」セールの際の使われたライブダッシュボードをベスに、簡単に日本の桜前線をシミュレーションすることを挑戦します。\n実現したい効果は： * 日本地図上で、桜はいつどこで咲いてるか可視化したい * 日付ごとに桜前提の推移状況を動的に表現したい\n上記実現するために、DataV上必要なwidgetは下記だけ： * タイムライン * 3D地図\n 要注意：3D地図 Widget はDataVのエンタプライズ版しか使えないです。\n 本ガイドの全体的な流れは下記の通りです。\n   セクション Topic 説明     前提知識 DataV 基本紹介 DataV 基本機能の紹介   - Callback IDの紹介 DataV Callback IDの説明   - SpringBootの基本知識 SpringBootを使ってAPIサーバ構築の方法を紹介   準備作業 データの準備 必要な桜データと地図データの準備方法を紹介   - APIサーバの構築 APIサーバの構築方法を紹介   設定開始 DataVの設定 DataV各Widget設定方法の紹介   - 効果を検証 実現したシミュレーション効果を検証    前提知識 本ガイドを理解するために、下記の前提知識が必要になります。\n1.DataVの基本紹介 DataV は、豊富なグラフパターンや地図と融合した視覚化機能などを兼ね備えた、高機能なデータ可視化ツールです。\nDataV重要な特徴は下記の通り：\n 豊富なテンプレート 管理センター、地域別分析、リアルタイムモニタリング、運用画面などのさまざまなテンプレートが用意されており、簡単にカスタマイズすることができます。プロのデザイナーが作成したように高品質な画面が表示されます。  各種ウィジェット 基本的なグラフのほかに、DataV は、2D および 3D マップに基づいた経路図、ヒートマップ、散布図などの地理的な情報とデータを組み合わせたグラフを作成する機能を備えています。ECharts や AntV-G2 などのサードパーティ製グラフライブラリも、DataV とスムーズに統合できます。  使いやすいインターフェイス グラフィックインターフェイスと設定ウィジェットを使用して、簡単なドラッグアンドドロップ操作でダッシュボードを作成できます。   今回は11.11のテンプレートをベースに桜前線を実現する予定です。 2.Callback IDの紹介 ウィジェットにコールバック ID を関連付けることで、相互に作用する機能があります。コールバック ID を使用することで、あるウィジェットをクリックすると、該当するコールバック ID を持つウィジェットのデータが適宜変更することができます。\nプログラミング言語の言い方にすると、 Callback ID = グローバル変数\n詳しい紹介ドキュメントはこちらのリンクへご参照ください。\n 今回はタイムライン上にコールバック IDを有効にすることで、日付変更度に日付のValueを３D地図へ渡し、３D地図からその日の桜前線情報を取得するように設定します。\n 3.SpringBootの基本知識 サンプルを JavaのSpringBootフレームワークを使ってAPIサーバを構築するので、環境構築方法と使い方について簡単に紹介します。 APIサーバを実現したい要件は：\n HTTP サーバ作成 事前に作った５日間のJSONデータをrootフォルダの下に置く 日付のパラメータを受けて、この日のJsonデータを返す  SpringBootを使う場合は、複雑なサーバ設定なしで 簡単ににAPIサーバを立ち上げすることが可能です。もちろん、NodeJSのExpressフレームワークを使って、同じことが簡単にできます。どちらにするかはお好み次第です。\n下記リンクから簡単なデモプロジェクトを作れます。細かい説明はここで省略します。 https://start.spring.io/\n今回のソースコードはこれだけです。\n@RestController public class HelloController { private static final Logger logger = LoggerFactory.getLogger(HelloController.class); ObjectMapper mapper = new ObjectMapper(); @RequestMapping(\u0026#34;/hello\u0026#34;) public JsonNode Hello(@RequestParam(value=\u0026#34;date\u0026#34;,defaultValue = \u0026#34;0325\u0026#34;) String date) throws IOException { String filepath = \u0026#34;/root/\u0026#34;+date+\u0026#34;.json\u0026#34;; JsonNode root = mapper.readTree(new File(filepath)); return root; } } 準備作業 1.データの準備 ３D地図 Widget をできる限り綺麗に表現するため、今回は下記データを用意する必要があります。\n Opening時Scene Managerの設定 Scene Manager を使用すると、カメラを回転およびズームすることで、地球のさまざまな部分を表示できます。 説明ドキュメント：https://jp.alibabacloud.com/help/doc-detail/95865.htm  今回こちら用意したデータは下記です： https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/sakura/init.json\n[ { \u0026#34;id\u0026#34;: \u0026#34;全国\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;nationwide\u0026#34;, \u0026#34;position\u0026#34;: { \u0026#34;fov\u0026#34;: 25.4083, \u0026#34;lat\u0026#34;: 38.2392, \u0026#34;lng\u0026#34;: 136.62, \u0026#34;distance\u0026#34;: 440.36 }, \u0026#34;duration\u0026#34;: 3000, \u0026#34;delay\u0026#34;: 3000 } ]  日本地図データ（GeoJson） 3D地図を日本の地図を表現するために、GeoJSONデータが必要です。インターネット上から無料のデータをダウンロードすることが可能です。https://github.com/niiyz/JapanCityGeoJson  今回こちら用意したデータは下記です。 https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/sakura/japanmap.json\n Roadマップ（GeoJson） 今回は稲妻効果を加えたいので、稲妻の軌跡データ（実際は地図のGeoJSONデータ）を手動で作ります。 http://geojson.io/  上記ツールで https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/sakura/road.json データを作成しました。\n 全国公園の地理座標→日付ごとの桜の開花データ編集 一番大事なデータです。全国公園の地理座標はインターネット上から取得しました。この座標を元に、Excelで何日でどこの公園は桜をどの程度で咲いてるかを、数値で表現します。   EXCELファイルはこちらからダウンロード可能です。\n　最後はEXCELのデータをJSONフォマットに変換します。オンライン変換ツールはこちらのものを利用しました。\n最後は日付毎に桜開花のJSONデータを作成しました。 https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/sakura/0325.json https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/sakura/0331.json https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/sakura/0410.json https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/sakura/0420.json https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/sakura/0430.json　\n2.APIサーバの構築 今回のAPIサーバはデモから簡単に修正するだけです。Intellij　IDEAを使って、MavenプロジェクトをCompileして最後はPackageするだけです。\n \u0008要注意： 使うポートは一応[8081]にしますので、クラウド上ディプロイの場合は、セキュリティグループにポートの開放を忘れないようにしてください。\n プロジェクトをPackageした後のDeploy手順をここで共有します。\n# ログイン ssh root@47.91.20.94 #javaインストール yum install java-1.8.0-openjdk wget https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/sakura/springboot-helloworld-1.0-SNAPSHOT.jar　wget https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/sakura/0325.json wget https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/sakura/0331.json wget https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/sakura/0410.json wget https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/sakura/0420.json wget https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/sakura/0430.json chmod 755 * # サーバをバックエンド側で動けるようにするため、下記コマンドを利用 nohup java -jar springboot-helloworld-1.0-SNAPSHOT.jar \u0026gt;log.out \u0026amp; # backendプロセスを確認 jobs ブラウザから http://47.91.20.94:8081/hello?date=0325　をアクセスしてみて、Jsonデータを表示したら成功。\n設定開始 Widget毎の設定方法を紹介します。\nまず、最初に11.11のダッシュボードをベースに新しいプロジェクトをつくってください。 プロジェクト作成終わったら、３D地図とタイトル以外のWidgetを削除しても構いません。\nここからは設定手順です：\n 1 . タイムライン追加 データ：https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/sakura/timeline.json  2 . タイムラインデータ設定  3 . タイムラインCallback ID有効化  4 . タイムライン表示設定  5 . Earth Layer設定 ]  6 . 3D地図全体初期設定（日本を地図の中心にする）  7 . Scene Manager設定 データ：https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/sakura/init.json  8 . Flying Route Layer設定(効果を綺麗にするだけ、Skipしても構いません) データ：https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/sakura/flying.json  9 . Area Choropleth Layer(日本地図)設定 データ：https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/sakura/japanmap.json  10 . Trajectory Layer (Lighting効果)設定 データ：https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/sakura/road.json  11 . Scatter Layer（桜前線）設定 データ：http://47.91.20.94:8081/hello?date=:value   上記設定全部終わりましたら、一回右上の「プレビュー」ボタンで効果をチェックしてください。問題なかったら、プロジェクトの公開設定をオンにします。 最終効果 実際の録画GIFは下記を参照（流暢にDashboardを見るために、できれば性能高いPCを使ってください）：\n以上です。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/network/jp-cn/",
	"title": "日本と中国のNW接続",
	"tags": [],
	"description": "Alibaba Cloudによる日本リージョンからの閉域網接続パターンを解説します。",
	"content": " 目次  日本と中国のプライベートネットワーク接続（以下、日中接続）の解説の流れとなります。  本記事の狙い 日中接続パターン Alibaba Cloudであるメリット 日中接続の注意点 日中接続の構築例   \n1. 本記事の狙い パブリッククラウドにおけるAlibaba Cloudの代表的な強みとして、中国との安定したネットワーク接続が挙げられます。ではAlibaba Cloudで具体的にどのようなサービスを用いれば日中接続を実現できるかを、既存の資料を交えて紹介いたします。\n本記事を理解する前提として、Alibaba CloudのVPCとリージョンの知識が必要となるので、初見の方は以下のURLも併せてご確認ください。\nVPCとは: https://jp.alibabacloud.com/help/doc-detail/34217.htm\nリージョンとゾーン: https://jp.alibabacloud.com/help/doc-detail/40654.htm\n 2. 日中接続パターン  Alibaba Cloud同士の接続 Alibaba Cloud以外のパブリッククラウドとの接続 オンプレミスの接続   Alibaba Cloud同士の接続 日中のシステムが共にAlibaba Cloud上で構築されている場合には、CEN (Cloud Enterprise Network) というサービスを用いるのが一般的です。\nCENは、VPC（仮想ネットワークセグメント）に対して包括的なルーティング機能を提供します。その為「CENインスタンスの作成」と「CENインスタンスに対してVPCを紐付ける」の2ステップによって、日中VPC間でのプライベートIPアドレスによる通信が可能となります。ダイナミックルーティング等の複雑な設定は一切不要です。\nステップバイステップ手順 SBCloudドキュメント: CEN利用手順書\nhttps://www.sbcloud.co.jp/entry/2018/08/01/cen-introduction/\nAlibaba Cloudドキュメント: CEN利用手順書\nhttps://jp.alibabacloud.com/help/doc-detail/59870.htm\n本構成が当てはまるシステムの要件  データロスが許されないデータ通信 リアルタイム性が重要となるデータ通信 新規ビジネス展開に伴う新規システムの構築 既存のAlibaba Cloudリソースの利用 シンプルなインフラコードを実現したい  構成イメージ  Alibaba Cloud以外のパブリッククラウドとの接続 日中のシステムにおいて、他方がAlibaba Cloud以外のパブリッククラウド（AWSやAzure）上で構成されている場合、日中接続する為にIPSecを用いたVPNトンネルを構築するのが一般的です。\nVPNトンネルの構築は以下の2ステップで実現出来ます。\n Alibaba CloudおよびAlibaba Cloud以外のアカウント、 この両方でVPNゲートウェイを作成する それぞれのVPNゲートウェイに、IPSec設定情報と対抗のゲートウェイ情報を入力する  VPNトンネルの構築後に、VPNトンネルを介した疎通を可能にする為、以下を実施します。\n3. VPCのルートテーブルの宛先に、相手先のネットワークセグメントを入力して、静的ルーティング情報を変更する\nAlibaba Cloud同士での接続と同様、ダイナミックルーティングのような複雑な設定は不要で、上記３ステップで全てが完了します。\nステップバイステップの手順 SBCloudドキュメント：Alibaba Cloud - AWS\nhttps://www.sbcloud.co.jp/entry/2018/07/03/alibaba-aws_vpn/\nSBCloudドキュメント：Alibaba Cloud - Azure\nhttps://www.sbcloud.co.jp/entry/2018/07/04/alibaba-azure_vpn/\nAlibaba Cloudドキュメント：Alibaba Cloud - 汎用\nhttps://jp.alibabacloud.com/help/doc-detail/65072.htm\n本構成が当てはまるシステムの要件  日中の通信で、秒単位での遅延や通信断が発生しても問題ない 開発環境のデータを用いて、Alibaba Cloudを試用したい 他社パブリッククラウド上のシステムを流用したい\ne.g. 日本リージョンのAWSからコンテンツ配信して、中国リージョンのAlibaba CloudのCDNを利用して低遅延配信する  構成イメージ  オンプレミスとの接続 日中のシステムにおいて、他方がオンプレミス（＝データセンタ）に存在している場合、日中接続する為の手段は2つあります。\n一つは、他社パブリッククラウド接続と同様に、VPNトンネルを経由した接続です。\nもう一つは、ダイレクトアクセスという回線サービスを用いて、オンプレミスとAlibaba Cloudを直接接続する手法で、こちらを推奨しております。\nダイレクトアクセスは、ソフトバンク株式会社が持つネットワーク資産とノウハウを利用して、Alibaba CloudのVPCとオンプレミスのシステムを閉域接続します。これによりVPNトンネル接続では実現できない、高品質なネットワーク接続を実現出来ます。\nまた、VPNトンネルの構成でも、ダイレクトアクセスの構成でも、CENを併用する事で複数のVPCとオンプレミスとを一括で接続する事が可能です。 ステップバイステップ手順書 SBCloudドキュメント：ダイレクトアクセス\nhttps://www.sbcloud.co.jp/document/cen_direcr_access\nSoftbankドキュメント：サービス紹介書\nhttps://www.softbank.jp/biz/nw/nwp/cloud_access/direct_access_for_alibaba/\nAlibaba Cloudドキュメント:VPN ゲートウェイを経由したローカルデータセンターから Alibaba Cloudへの接続\nhttps://jp.alibabacloud.com/help/doc-detail/87042.htm\nYamahaルータを用いたVPNトンネルによる接続\nhttps://network.yamaha.com/setting/router_firewall/cloud/alibaba_cloud\n本構成が当てはまるシステムの要件 ダイレクトアクセスによる日中接続を前提として、以下の要件に最適と言えます。\n オンプレミスの基幹システムと連動したAlibaba Cloudの利用 オンプレミスとAlibaba Cloudでのシームレスなデータ連携 オンプレミスからAlibaba Cloudへのシステム移行  構成イメージ ダイレクトアクセス 3. Alibaba Cloudであるメリット Alibaba Cloud以外のパブリッククラウドと比較して、何がメリットになるのかを記載します。\n ネットワーク品質が保証されている\n→帯域幅を購入する事でSLAに沿った品質が担保される\n 日中アカウントを単一の\u0008コンソールで管理できる\n→ユーザ管理も含めて一括管理可能\n ネットワークセキュリティの実績が豊富\n→中国国内の数多く攻撃から防御した実績のあるプロダクト・構成を利用できる\n 中国国内で利用可能なプロダクトおよびリージョン数が多い\n→日本リージョンと同じプロダクトを中国リージョンでも利用できる為、システム構成に差異が生まれない\n   4. 日中ネットワークの注意点  CENのネットワークの帯域幅は1Kbpsです。したがってpingでの通信は可能ですが、httpの通信はデフォルトではほぼ疎通しません。VPC間で利用する帯域幅の上限を選択する形で実現できます\n VPC間での帯域幅については、上限値をパッケージとして購入する事で、購入した分の帯域幅を確実に利用する事が出来ます\n デフォルトだとIPSec IKEv1なので、IKEv2は設定変更を加えてください\n IPSecが繋がらない場合には以下の項目をチェックします\nhttps://jp.alibabacloud.com/help/doc-detail/65802.htm\n Alibaba Cloud同士の日中接続はExpressConnectでも実現できるが、同要件については現在CENの利用を推奨しています\n Smart Access Gatewayは中国リージョンでの利用可能で、2019年9月末時点で日本リージョンでは利用不可です\n   参照URL  クラウドネットワーク接続（中国ビジネス）\nhttps://jp.alibabacloud.com/solutions/china-gateway/networking\n プライベートネットワークプロダクトの選び方\nhttps://jp.alibabacloud.com/help/doc-detail/61133.html\n  "
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/product/datav/datav-develop-api-cookie/",
	"title": "DataV のデータ権限制御",
	"tags": [],
	"description": "同じ DataV Dashboard に対して違うユーザは違うデータを見えるする方法を紹介します。",
	"content": " Tags ： AlibabaCloud DataV API Develop\n目的 普段の業務上では一つ Dashboard に対してユーザの権限によって表示されたデータが異なるという要望がよくあります。例えば会社の中で部長が見える社員の勤怠データ範囲は課長より広いはず。逆に課長は自分の部下以外の人の情報を見てはいけません。\nBIツールの場合はDashboard機能以外はユーザ権限管理機能もあるため、上記要件を実現しやすいですが、DataVはただの Dashboard ツールだけなので、ユーザ管理機能がふくまれていません。こんな場合はどうのようにこの要望を実現できるでしょうか？\n 実現案のキーワードは、DataV Dashboard をユーザ既存システムに埋め込んで、DataVのAPIデータソースの中でユーザ既存システムのCookie認証情報を利用すること。\n 本ガイドでは、一つ簡単なサンプルを通じてDataVの実現方法を紹介させていただきます。\n\u0008 本ガイドの全体的な流れは下記の通りです。\n   セクション Topic 説明     前提知識 DataV のAPIデータソース利用 DataV のAPIデータソースの紹介   - CookieとCORS の基本知識 Cookieの紹介CORS制限の説明   - NodejsとExpressの基本知識 Expressを使ってAPIサーバ構築の方法を紹介   準備作業 APIサーバの構築 簡単な手順を紹介、細かいところを省略   - DataVの設定 DataV設定方法の紹介   実際の効果 効果を検証 実現したサンプルの効果を検証   ソースコードの説明 APIソースコードの説明 APIサーバ構築中の注意ポイントを説明    前提知識 本ガイドを理解するために、下記の前提知識が必要になります。\n1.DataVの基本利用 DataV のデータ権限制御の話になる為、DavaVの基本利用を知っている前提となります。具体的には、データソース設定で「API」を選択した時の利用法となります。\nデータソースタイプでAPIを選択した場合は、上記のように２つ選択肢チェックボックスが出てきます。それぞれの違いは以下の通り：\n サーバーからのリクエストを開始する (HTTPプロキシ)   Cookieが必要です (プロキシが選択されず、Cookieが必要な場合に使用する)  今回の実現案はオプション２を使います。\n2.CookieとCORS の基本知識  Cookie（クッキー）とは\n Cookie（クッキー）とは、ホームページを訪問したユーザーの情報を一時的の保存する仕組み、またはそのデータです。ID、パスワード、メールアドレス、訪問回数などがユーザー情報として保存されます。これによって再訪問したときにユーザーを特定し、情報を入力する手間が省けます。ショッピングサイトに訪問したとき、すでにログイン状態になっている、以前カートに入れた商品がそのまま残っているのは、Cookie機能がはたらいているからです。\n参考ページ：https://ferret-plus.com/6692\n CORS（Cross-Origin Resource Sharing）とは\n オリジン間リソース共有Cross-Origin Resource Sharing (CORS) は、追加の HTTP ヘッダーを使用して、あるオリジン (ドメイン) で動作しているウェブアプリケーションに、異なるオリジンのサーバーにある選択されたリソースへのアクセスを許可することができる仕組みです。ウェブアプリケーションは、自分のオリジンとは異なるオリジン (ドメイン、プロトコル、ポート番号) からリソースをリクエストするとき、オリジン間 HTTP リクエストを実行します。\n参考ページ：https://developer.mozilla.org/ja/docs/Web/HTTP/CORS\n今回はDataVはCookieを使ってユーザデータを取る場合は、Dashboardの閲覧者のブラウザから直接APIをコール\u0008するため、必ずCORS問題をクリアしないといけないです。\nCORS設定しない場合は、下記のようにDataV側はエラーが出ます。\n3.NodejsとExpressの基本知識 今回のサンプルを\u0008NodeJSのExpressフレームワークを使ってAPIサーバを構築\u0008するので、環境構築方法と使い方について簡単に紹介します。\n\u0008APIサーバを実現したい要件は：\n HTTPS\u0008\u0008サーバ作成 Cookieを使ってログインする Cookie読んでユーザデータを返す CORS設定し、DataVからもコールできるようにする Iframe使ってDataVをログイン後の画面に埋め込む、DataVはログインユーザの名前を表示する  NodejsのExpressを使う場合は、複雑なサーバ設定なしで\u0008簡単ににAPIサーバを立ち上げすることが可能です。\nもちろん、PHPもJavaのSpringBootも簡単にAPIサーバを構築することが可能なので、実装方法はお好みで任せます。参考リンク：https://www.baeldung.com/spring-cors\n簡単なHello Worldは下記チュートリアルにご参照ください。細かい説明はここで省略します。\nhttps://expressjs.com/ja/starter/hello-world.html\nconst express = require(\u0026#39;express\u0026#39;) const app = express() app.get(\u0026#39;/\u0026#39;, (req, res) =\u0026gt; res.send(\u0026#39;Hello World!\u0026#39;)) app.listen(3000, () =\u0026gt; console.log(\u0026#39;Example app listening on port 3000!\u0026#39;))  準備作業 1.APIサーバの構築 今回はゼロからAPIを構築することではなく、ネット上簡単なサンプルを再利用し、必要な機能を追加することになります。\nメインの参照ドキュメントは\u0008下記です。このサンプルはCookie使ってログインすることまで実現できます。\nhttps://blog.csdn.net/foruok/article/details/47719063\n今回は下記機能を追加しました。詳細の説明は本ガイドの最後で紹介させていただきます。ソースコードについてこちら\u0008からダウンロードが可能です。\n HTTPS\u0008\u0008サーバ作成(http使う場合は\u0008DataV側はエラーになる可能性があります)  Cookie読んでユーザデータを返す CORS設定し、DataVからもコールできるようにする Iframe使ってDataVをログイン後の画面に埋め込む、DataVはログインユーザの名前を表示する  \u0008ソースコードをダウンロードしてからサーバ立ち上げの手順をここで共有します（Centosを使う）。\n \u0008要注意： サーバ立ち上げた後で必要なポートをOpenすることが忘れないでください。\n # ログイン ssh root@XXX.XXX.XXX.XXX # \u0008新バージョンのNodejsをインストール curl --silent --location https://rpm.nodesource.com/setup_10.x | sudo bash - sudo yum -y install nodejs # \u0008ソースコードをダウンロード wget https://sb-datav-sample.oss-ap-northeast-1.aliyuncs.com/cookie-sample/LoginDemo.zip unzip LoginDemo.zip # 必要なパッケージをインストール cd LoginDemo npm install # \u0008APIサーバ立ち上げ npm start \u0026gt; node ./bin/www HTTP Server is running on: http://localhost:1080 HTTPS Server is running on: https://localhost:10443 ブラウザから https://XXX.XXX.XXX.XXX/login　をアクセスしてみて、ログイン画面が見えたらサーバ立ち上げが成功。\n今回は２つユーザデータをソースコードの\u0008中に\u0008固定\u0008しました。 * admin / 123456 * datav / 888888\n 今回のHTTPSサーバ使ってるSSL証明書はopenssl使って作ったものので、ブラウザから警告が出すことがあります。\n SSL証明書の作成方法は下記に参考（opensslインストールしたことを前提）。今回はこちら作成した証明書を使えるので、このステップをSKIPしても構いません。\n＃key作成 openssl genrsa 1024 \u0026gt; ./private.pem ＃CSRの作成 openssl req -new -key ./private.pem -out csr.pem ＃証明書作成 openssl x509 -req -days 365 -in csr.pem -signkey ./private.pem -out ./file.crt 2.DataVの設定 APIサーバの立ち上げは成功したら、後のDataV設定はとても簡単です。今回は https://XXX.XXX.XXX.XXX/data というAPIを\u0008用意\u0008しました。\nもしユーザログインの場合は、このAPIはCokkieを読んでユーザ名前を\u0008\u0008\u0008抽出し、クライアント側へ返します。もしユーザログインしない場合は、「no data」というJsonデータを返します。\n実際の効果 上記準備を終わりましたら、ログイン画面を通じてログインして見てください。最終効果は\u0008下記の通り\u0008。 * adminでログイン  datavでログイン   実際の録画GIFは下記を参照：\nソースコードの説明 /app.js \u0008 APIの入り口、\u0008設定ファイル\u0008\nvar express = require(\u0026#39;express\u0026#39;); var path = require(\u0026#39;path\u0026#39;); var favicon = require(\u0026#39;serve-favicon\u0026#39;); var logger = require(\u0026#39;morgan\u0026#39;); var cookieParser = require(\u0026#39;cookie-parser\u0026#39;); var bodyParser = require(\u0026#39;body-parser\u0026#39;); var users = require(\u0026#39;./routes/users\u0026#39;); var app = express(); // below is for https var fs = require(\u0026#39;fs\u0026#39;); var http = require(\u0026#39;http\u0026#39;); var https = require(\u0026#39;https\u0026#39;); var privateKey = fs.readFileSync(\u0026#39;./private.pem\u0026#39;, \u0026#39;utf8\u0026#39;); var certificate = fs.readFileSync(\u0026#39;./file.crt\u0026#39;, \u0026#39;utf8\u0026#39;); var credentials = {key: privateKey, cert: certificate}; var httpServer = http.createServer(app); var httpsServer = https.createServer(credentials, app); var PORT = 1080; var SSLPORT = 10443; httpServer.listen(PORT, function() { console.log(\u0026#39;HTTP Server is running on: http://localhost:%s\u0026#39;, PORT); }); // https設定 httpsServer.listen(SSLPORT, function() { console.log(\u0026#39;HTTPS Server is running on: https://localhost:%s\u0026#39;, SSLPORT); }); //CORS設定 var allowCrossDomain = function (req, res, next) { res.header(\u0026#39;Access-Control-Allow-Origin\u0026#39;, \u0026#39;https://datav-ap-northeast-1.alibabacloud.com\u0026#39;); res.header(\u0026#39;Access-Control-Allow-Credentials\u0026#39;, true); next(); }; app.use(allowCrossDomain); //imortant  //app.all(\u0026#39;*\u0026#39;, users.requireAuthentication); app.use(\u0026#39;/\u0026#39;, users); ... module.exports = app;  /router/users.js \u0008 APIの中身、ログイン機能\u0008など\u0008はここで実現\nvar express = require(\u0026#39;express\u0026#39;); var router = express.Router(); var crypto = require(\u0026#39;crypto\u0026#39;); // just for tutorial, it\u0026#39;s bad really var userdb = [ { userName: \u0026#34;admin\u0026#34;, hash: hashPW(\u0026#34;admin\u0026#34;, \u0026#34;123456\u0026#34;), last: \u0026#34;\u0026#34; }, { userName: \u0026#34;datav\u0026#34;, hash: hashPW(\u0026#34;datav\u0026#34;, \u0026#34;888888\u0026#34;), last: \u0026#34;\u0026#34; } ]; ... // DataV使うAPI、Cookieからユーザ名前を読んで返す  router.get(\u0026#39;/data\u0026#39;, function(req, res, next){ var nodata = [{ \u0026#34;value\u0026#34;:\u0026#34;no data\u0026#34;, \u0026#34;url\u0026#34;:\u0026#34;\u0026#34; }]; if(isLogined(req)){ var response = [{ \u0026#34;value\u0026#34;:req.cookies[\u0026#34;account\u0026#34;].account, \u0026#34;url\u0026#34;:\u0026#34;\u0026#34; }]; res.end(JSON.stringify(response)); }else{ res.end(JSON.stringify(nodata)); } });  /views/profile.jade\u0008 Jadeというテンプレートエンジンの使って、DataVをIframesに埋め込み。\ndoctype html html head meta(charset=\u0026#39;UTF-8\u0026#39;) title= title body p #{msg} p #{lastTime} p \u0026lt;iframe width=\u0026#34;700\u0026#34; height=\u0026#34;350\u0026#34; src=\u0026#34;https://datav-ap-northeast-1.alibabacloud.com/share/41682281fd8ed6bbef187763677c8cda\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; p a(href=\u0026#39;/logout\u0026#39;) logout 以上です。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/product/datav/datav-widget-develop-guide/",
	"title": "DataV Widget 開発ガイド",
	"tags": [],
	"description": "第三者ライブラリ Echarts を DataV Widget に取り込む方法を紹介します。",
	"content": " Tags ： AlibabaCloud DataV Widget Develop\n目的 DataV は AlibabaCloud のデータ可視化プロダクトとして日々進化しており、とても優れていますが、提供できる Widget が限られているため、一部特殊なニーズがあるユーザーに対応できない可能性があります。このため、DataVのプロ版（中国サイト基準の呼び方）では Widget 開発権限を開放し、DataV 固有の Widget の利用以外はユーザー自身も自由に開発できるようになります。\n　DataV プロ版はユーザー自身の Widget を開発できるメリットがあることに加えて、開発された Widget を他人にも共有でき、中国サイトの MarketPlace で販売することもできるため、開発ベンダーにとっても DataV はデータ可視化ツールの魅了的なプラットフォームです。\n本ガイドでは、いくつの簡単な Echarts ライブラリを DataV に取り込むためのサンプルを使用して、 DataV 開発版の使い方と Widget 開発のルールを紹介させていただきます。\n\u0008 本ガイドの全体的な流れは下記の通りです。\n   セクション Topic 説明     前提知識 DataV の基本知識 DataV の概要紹介と Widget の簡単な説明   - Echarts の基本知識 Echarts の概要紹介と Option の簡単な説明   - Nodejs の基本知識 NodeJS のパッケージと DataV widget の関係、および NPM コマンドの簡単な説明   準備作業 Token の取得と Group の作成 開発前に DataV 側で必要な準備作業   - ローカル環境構築 ローカルの開発環境の構築手順   開発ルール index.js index.js の各 Function の説明   - package.json package.json の説明   サンプルコード Echarts のコードをそのまま DataV に移行 package.json を使わない場合の Echarts 取り込み方法   - Option の一部 を DataV の package.json に変換 Echarts の Option の一部を DataV の package.json に変換する場合   - Option を完全に DataV の package.json に変換 Echarts の Option を完全に DataV の package.json に変換する場合   Publish と Deploy datav publish 開発した Widget を DataV へ Publish し、Dashboard を作成    前提知識 本ガイドを理解するために、下記の前提知識が必要になります。\n1.DataVの基本知識 DataV は、Alibaba Cloud のデータ可視化サービスで、膨大な量の複雑なデータを視覚的なダッシュボードとして分析し表示できます。DataV は、データ可視化エクスペリエンスをより多くのユーザーに提供することを目的としており、経験の浅いエンジニアがグラフィカルユーザーインターフェイスを介して、高度な可視化アプリケーションを簡単に構築できるよう支援します。\nDataV には、高度な可視化を実現するため、基本的なグラフライブラリからサードパーティのグラフライブラリまで幅広く用意されています。ユーザーは高度なプログラミングスキルが不要で、単純なドラッグアンドドロップ操作で高度な可視化プロジェクトを作成できます。\nDataV は、中国サイトが基準で現在下記 4 つバージョンが用意されています。(日本サイトと国際の DataV バージョンは中国サイトより少し遅れています。）\n 基本版  一般的なユーザー向けのバージョンです。使えるテンプレートもグラフ Widget も制限されており、基本的な Dashboard を作成することが可能です。  企業版  一般的な企業向けに、基本版よりテンプレートとグラフ Widget の数も多く、お客様自身も３つの Widget まで開発することが可能です。  プロ版  開発ベンダーや開発能力を持ってる大企業向けに、企業版より高度なテンプレートが増え、開発できる Widget の数も制限されていません。  ローカル版  政府や特殊セキュリティ要件がある大企業向けに、DataV のお客様のローカル環境にディプロイできるバージョンです。 購入方法や料金については、個別に営業担当にお問い合わせください。   この DataV 開発ガイドでは、上記 プロ版を使ってご紹介させていただきます。\n1 つの DataV の Dashboard を作るには、基本的に下記の順番で作業します。\ngraph LR st((プロジェクト作成)) --\u0026gt; op0[データソース追加] op0 --\u0026gt; op1[Widget追加] op1 --\u0026gt; op2[Widget仕様設定] op2 --\u0026gt; op3[Widgetデータ設定] op3 --\u0026gt; op4[プレビュー] op4 --\u0026gt; en((プロジェクト公開)) 一つの Widget では、基本的に表示仕様と表示データの ２つパーツを設定する必要があります。設定イメージは下記をご参照ください。\n ユーザー自身が Widget を開発する場合も、一般的にこの ２ つパーツを明確に定義する必要があります。詳細については、後ほど DataV 開発ルールで詳しく説明させていただきます。\n その他 DataV に関する詳しい紹介については、「プロダクトドキュメント」 をご参照ください。\n2. Echarts の基本概念 ECharts は、中国の Baidu が提供している Javascript のデータ可視化ライブラリです。利用できるチャートが豊富で、ビッグデータ分析や処理の作成にも優れています。開発者にとってオプションのパラメーターを調整するだけで綺麗なグラフを簡単に作れるため、世界中の開発者から人気を集めています。\nEcharts ライブラリを利用してグラフを 1 つ作成します。\nサンプルの例\n上記サンプルからわかるように、Echarts ではすべてのグラフパーツをオプションで制御することが可能です。よく使用されるオプションの種類は、以下のとおりです。\n ToolTip ToolBox Legend xAxis yAxis Series \u0026gt; Data   上記オプション以外で明確に示していないオプションは、すべてデフォルトオプションを使用しています（例：線の色、太さ、タイプなど）。この点を理解しておくことは後の DataV の開発に対してとても大切です。\n Echarts のすべてのオプションに関する説明については、「Echartsドキュメント」をご参照ください。\n3. Nodejs の知識 DataV の Widget は Nodejs をベースに開発するため、Nodejs と JavaScript に関する基本知識が必要です。1 つの DataV の Widget に対して 1 つの Nodejs のパッケージ の理解が必要です。\n 本ガイドは、外部 JavaScript ライブラリを DataV に取り込む方法を紹介することが目的のため、Nodejs と JavaScript の開発自体に関する紹介はここでは割愛させていただきます。\n 基本概念は以下のとおりです。\n Nodejs  「Node.js」はサーバー側で動く JavaScript の環境（プラットフォーム）であり、Google が開発した V8 エンジンと非同期処理によって高速なレスポンスを実現できるのが特徴です。 Node.js と JavaScript の違いについては、JavaScript はブラウザ側で実行され、Node.js はサーバー側で実行されます。  NPM  Node Package Manager、Node.js のパッケージ（Package ）を管理する（Manager）ツールです。 DataV の開発ツールも、Echarts も NPM を使ってインストールします。 npm でパッケージをインストールする場合は、次のようなコマンドを実行します。    npm install パッケージ名  package.json  package.json は project の package を管理するためのファイルです。maven で言うところの pom.xml です。　 package.json は node.js の library を公開する際のファイルのため、license などが入ります。dependencies でライブラリの依存関係を管理します。 npm install を実行すると、package.json の内容に従って、package を自動的にインストールします。   サンプル： { \u0026#34;name\u0026#34;: \u0026#34;chart1\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;chat\u0026#34;, \u0026#34;main\u0026#34;: \u0026#34;index.js\u0026#34;, \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;echo \\\u0026#34;Error: no test specified\\\u0026#34; \u0026amp;\u0026amp; exit 1\u0026#34; }, \u0026#34;author\u0026#34;: \u0026#34;XXX\u0026#34;, \u0026#34;license\u0026#34;: \u0026#34;ISC\u0026#34;, \u0026#34;dependencies\u0026#34;: { \u0026#34;mysql\u0026#34;: \u0026#34;^2.13.0\u0026#34;, \u0026#34;socket.io\u0026#34;: \u0026#34;^1.7.3\u0026#34; } } 準備作業 開発作業に入る前に、２ つの準備作業が必要です。\n開発 Token の取得と GroupID の作成 DataV のプロ版を購入し、Developer Token を取得します。この Token を利用し、開発された Widget パッケージを DataV へ Deploy することが可能です。\n購入手続きが終了したら、[Widgets] タグの [Widgets Group] メニューに入り、ここで最初の Widgets Group を作成します。\nGroup ID の Naming ルールについて - 必ず [会社.group名] や [会社-group名] の形式にする必要があります。 - Group 名の最後の文字を数値にすることはできません。\nWidgets Group を作成したら、最初に Alibaba 側の審査が必要です。審査は通常一日か二日程度で完了します。この間は審査を待たずに開発を進めることが可能です。\nこれで、クラウド側の準備は完了しました。次は、ローカルの開発環境の準備です。\nローカル開発環境の構築 開発環境の準備については、基本的にドキュメントセンターの「クイックスタート」をご参照ください。\nここでいくつかの注意点があります。\n Nodejs のバージョン  Node.js をインストールする場合は、8.0.0〜10.12.0 のバージョンを推奨します。最新のバージョンをインストールすると、後の DataV ツールがうまく作動しない場合があります。  DataV login  DataV にログインする際、日本サイトは「Username　=　お客様のアカウントの UID」、中国サイトは「Username　=　お客様のアカウントのメールアドレス」です。ここだけ注意する必要があります。 DataV login は最後の Deploy 時のみ必要で、開発時はこの手順を Skip しても構いません。   DataV のインストールが完了したら、下記のように言語を設定すると、正式に Widget の開発が可能になります。\n開発ルール まず datav init コマンドを実行し、テンプレートから DataVのWidget の雛形を作成します。\n作成されたフォルダを見ると、 1 つの Widget パッケージには下記のファイル構造があります。\n--coms-name //Widget name |--index.js //Widget メインファイル |--package.json //Widget 設定ファイル |--readme.md //Widget description |--history.md //Widget update history ここで一番重要なファイルが ２ つあります。\n index.js  パッケージのメインファイルです。package.json の中で書いた設定を読み込んで DataV の設定に変換し、最後は Widget を表示します。  package.json  パッケージ設定ファイルです。依存するライブラリや DataV のすべての設定はここで記載します。   index.jsの説明 一番重要なポイントは次のとおりです。\n 必要なライブラリを Require で引用する。（事前に npm install が必要） this.config の中に設定を書く。普通は全部 package.json の中に書くため、ここで書く必要はありませんが、一部特別な設定をここに書きます。 mergeConfig で package.json の設定と this.config の設定をマージし、変換する。  サンプル：\nvar Event = require(\u0026#39;bcore/event\u0026#39;); var $ = require(\u0026#39;jquery\u0026#39;); var _ = require(\u0026#39;lodash\u0026#39;); //ここで必要なライブラリを引用する //var Chart = require(\u0026#39;XXX\u0026#39;);  /** * Basic */ module.exports = Event.extend(function Base(container, config) { //ここに Widget の設定を補足として書く。一般的にすべての設定は Package.json の中に書く  this.config = { theme: {} } this.container = $(container); //容器  this.apis = config.apis; //hook 必須  this._data = null; //データ  this.chart = null; //Chart  this.init(config); }, { /** * 初期化 */ init: function (config) { //1.初期化。package.json の設定と this.config をマージする  this.mergeConfig(config); //2.レイアウト更新。なくても OK  this.updateLayout(); //3.Widget をインスタンス化。  //this.chart = new Chart(this.container[0], this.config);  //4.仕様個別更新。なくても OK  this.updateStyle(); }, /** * 描く * @param data * @param config なくても OK */ render: function (data, config) { data = this.data(data); var cfg = this.mergeConfig(config); //描く  //this.chart.render(data, cfg);  this.container.html(data[0].value) //仕様個別更新。なくても　OK  this.updateStyle(); }, /** * データ設定 * @param data * @returns {*|number} */ data: function (data) { if (data) { this._data = data; } return this._data; }, /** * package.json の設定と this.config をマージ * 優先順: config.colors \u0026gt; config.theme \u0026gt; this.config.theme \u0026gt; this.config.colors * @param config * @private */ mergeConfig: function (config) { if (!config) {return this.config} this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme); this.setColors(); this.config = _.defaultsDeep(config || {}, this.config); return this.config; }, /** *下記 Function は必要な時だけ実装 * @param width * @param height */ resize: function (width, height) {}, setColors: function () {}, updateLayout: function () {}, updateStyle: function () {}, destroy: function(){} });  package.jsonの説明 一番重要なポイントは、次のとおりです。\n Widget の Deploy のため、name の @namespace は必ず前に準備した GroupID と一致しないといけない dependencies に必要なライブラリとバージョンを記入する datav には Widget の仕様設定とデータを記入する   datav.config と datav.api_data は DataV で提供される仕様エディターで、 Widget の仕様とデータを WebPage で更新するための設定です。設定しない場合、DataV で提供される仕様エディターは使えませんが、index.js の this.config で設定すれば、Widget の表示自体には影響がありません。\n サンプル：\n{ \u0026#34;name\u0026#34;: \u0026#34;@sbcloud-test/line\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;0.0.1\u0026#34;, \u0026#34;dependencies\u0026#34;: { \u0026#34;bcore\u0026#34;: \u0026#34;0.0.18\u0026#34;, \u0026#34;jquery\u0026#34;: \u0026#34;2.1.4\u0026#34;, \u0026#34;lodash\u0026#34;: \u0026#34;4.6.1\u0026#34; }, \u0026#34;datav\u0026#34;: { // Widget の属性説明。必須  \u0026#34;cn_name\u0026#34;: \u0026#34;testline\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;protocol\u0026#34;: 2, \u0026#34;type\u0026#34;: [ \u0026#34;regular\u0026#34; ], \u0026#34;view\u0026#34;: { // Widget の Frame の大きさ。必須  \u0026#34;width\u0026#34;: \u0026#34;400\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;200\u0026#34;, \u0026#34;minWidth\u0026#34;: \u0026#34;200\u0026#34;, \u0026#34;minHeight\u0026#34;: \u0026#34;100\u0026#34; }, \u0026#34;apis\u0026#34;: { \u0026#34;source\u0026#34;: { \u0026#34;handler\u0026#34;: \u0026#34;render\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;接口描述\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;value\u0026#34;: { \u0026#34;description\u0026#34;: \u0026#34;值说明\u0026#34; } } } }, \u0026#34;config\u0026#34;: { // Widget の初期仕様  \u0026#34;size\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;字号\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;number\u0026#34;, \u0026#34;default\u0026#34;: 22, \u0026#34;range\u0026#34;: [ 10, 100 ] } }, \u0026#34;api_data\u0026#34;: { // Widget の初期データ  \u0026#34;source\u0026#34;: [ { \u0026#34;value\u0026#34;: \u0026#34;值\u0026#34; } ] } } }  サンプルコード 開発ルールで説明した通り、DataV の仕様エディターを使うか使わないかによって、package.json 中に DataV の設定を書かなくても済む場合があります。\n 実際は DataV の Widget 開発で一番開発工数がかかるのは、他のライブラリの設定を DataV の標準 Config に変換することです。\n DataV の標準　Config に変換するメリット\n DataV の仕様エディターを使って、Webpage から Widget の仕様設定を変更することが可能です。 DataV のデータエディターを使って、Database や API から動的に Widget のデータを変更することが可能です。  次にいくつかの例を使用して、Echarts を DataV に取り込む方法を紹介します。\nEcharts のコードをそのまま DataV に移行 まず、一番楽な方法は、Echarts のコードをそのまま DataV に移行し、package.json の設定は使わない方法です。\n下記は Echarts の少し複雑なサンプルを DataV に移行した結果です。\n Rich text  Echart のサンプル  DataV ソース index.js package.json   ソースコード:\n//index.js var Event = require(\u0026#39;bcore/event\u0026#39;); var $ = require(\u0026#39;jquery\u0026#39;); var _ = require(\u0026#39;lodash\u0026#39;); //Echarts のライブラリを引用 var EChart = require(\u0026#39;echarts\u0026#39;); // DataV が提供した DataV の Config を Echarts の option に変換するライブラリ var Utils = require(\u0026#39;datav:/com/maliang-echarts-utils/0.0.18\u0026#39;); /** * Basic */ module.exports = Event.extend(function Base(container, config) { var ROOT_PATH = \u0026#39;https://www.echartsjs.com/examples/\u0026#39;; var weatherIcons = { \u0026#39;Sunny\u0026#39;: ROOT_PATH + \u0026#39;data/asset/img/weather/sunny_128.png\u0026#39;, \u0026#39;Cloudy\u0026#39;: ROOT_PATH + \u0026#39;data/asset/img/weather/cloudy_128.png\u0026#39;, \u0026#39;Showers\u0026#39;: ROOT_PATH + \u0026#39;data/asset/img/weather/showers_128.png\u0026#39; }; var seriesLabel = { normal: { show: true, textBorderColor: \u0026#39;#333\u0026#39;, textBorderWidth: 2 } }; this.config = { backgroundColor: \u0026#39;#FAFAFC\u0026#39;, //開発時に見やすいように backgroundColor を設定しましたが、正式な Deploy の場合は、この設定を外すことを推奨します。  title: { text: \u0026#39;Wheater Statistics\u0026#39; }, tooltip: { trigger: \u0026#39;axis\u0026#39;, axisPointer: { type: \u0026#39;shadow\u0026#39; } }, legend: { data: [\u0026#39;City Alpha\u0026#39;, \u0026#39;City Beta\u0026#39;, \u0026#39;City Gamma\u0026#39;] }, grid: { left: 100 }, toolbox: { show: true, feature: { saveAsImage: {} } }, xAxis: { type: \u0026#39;value\u0026#39;, name: \u0026#39;Days\u0026#39;, axisLabel: { formatter: \u0026#39;{value}\u0026#39; } }, yAxis: { type: \u0026#39;category\u0026#39;, inverse: true, data: [\u0026#39;Sunny\u0026#39;, \u0026#39;Cloudy\u0026#39;, \u0026#39;Showers\u0026#39;], axisLabel: { formatter: function (value) { return \u0026#39;{\u0026#39; + value + \u0026#39;| }\\n{value|\u0026#39; + value + \u0026#39;}\u0026#39;; }, margin: 20, rich: { value: { lineHeight: 30, align: \u0026#39;center\u0026#39; }, Sunny: { height: 40, align: \u0026#39;center\u0026#39;, backgroundColor: { image: weatherIcons.Sunny } }, Cloudy: { height: 40, align: \u0026#39;center\u0026#39;, backgroundColor: { image: weatherIcons.Cloudy } }, Showers: { height: 40, align: \u0026#39;center\u0026#39;, backgroundColor: { image: weatherIcons.Showers } } } } }, series: [ { name: \u0026#39;City Alpha\u0026#39;, type: \u0026#39;bar\u0026#39;, data: [165, 170, 30], label: seriesLabel, markPoint: { symbolSize: 1, symbolOffset: [0, \u0026#39;50%\u0026#39;], label: { normal: { formatter: \u0026#39;{a|{a}\\n}{b|{b} }{c|{c}}\u0026#39;, backgroundColor: \u0026#39;rgb(242,242,242)\u0026#39;, borderColor: \u0026#39;#aaa\u0026#39;, borderWidth: 1, borderRadius: 4, padding: [4, 10], lineHeight: 26, // shadowBlur: 5,  // shadowColor: \u0026#39;#000\u0026#39;,  // shadowOffsetX: 0,  // shadowOffsetY: 1,  position: \u0026#39;right\u0026#39;, distance: 20, rich: { a: { align: \u0026#39;center\u0026#39;, color: \u0026#39;#fff\u0026#39;, fontSize: 18, textShadowBlur: 2, textShadowColor: \u0026#39;#000\u0026#39;, textShadowOffsetX: 0, textShadowOffsetY: 1, textBorderColor: \u0026#39;#333\u0026#39;, textBorderWidth: 2 }, b: { color: \u0026#39;#333\u0026#39; }, c: { color: \u0026#39;#ff8811\u0026#39;, textBorderColor: \u0026#39;#000\u0026#39;, textBorderWidth: 1, fontSize: 22 } } } }, data: [ {type: \u0026#39;max\u0026#39;, name: \u0026#39;max days: \u0026#39;}, {type: \u0026#39;min\u0026#39;, name: \u0026#39;min days: \u0026#39;} ] } }, { name: \u0026#39;City Beta\u0026#39;, type: \u0026#39;bar\u0026#39;, label: seriesLabel, data: [150, 105, 110] }, { name: \u0026#39;City Gamma\u0026#39;, type: \u0026#39;bar\u0026#39;, label: seriesLabel, data: [220, 82, 63] } ] }, this.container = $(container); //容器  this.apis = config.apis; //hook一定要有  this._data = null; //数据  this.chart = null; //图表  this.init(config); }, { /** * 公有初始化 */ init: function (config) { //1.初始化,合并配置  config = this.mergeConfig(config); this.chart = EChart.init(this.container[0]); this.chart.setOption(Utils.config2echartsOptions(config)); //2.刷新布局,针对有子组件的组件 可有可无  this.updateLayout(); //3.子组件实例化  //this.chart = new Chart(this.container[0], this.config);  //4.如果有需要, 更新样式  this.updateStyle(); }, //以下は省略  //package.json  { \u0026#34;name\u0026#34;: \u0026#34;@sbcloud-1test/echarts-richtext\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.2.5\u0026#34;, \u0026#34;dependencies\u0026#34;: { \u0026#34;bcore\u0026#34;: \u0026#34;0.0.18\u0026#34;, \u0026#34;echarts\u0026#34;: \u0026#34;^4.2.1\u0026#34;, //Echarts の最新版を使う  \u0026#34;jquery\u0026#34;: \u0026#34;2.1.4\u0026#34;, \u0026#34;lodash\u0026#34;: \u0026#34;4.6.1\u0026#34;, \u0026#34;zrender\u0026#34;: \u0026#34;3.4.4\u0026#34; }, \u0026#34;datav\u0026#34;: { \u0026#34;cn_name\u0026#34;: \u0026#34;RichText\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;//img.alicdn.com/tfs/TB1TrSHJAyWBuNjy0FpXXassXXa-270-160.png\u0026#34;, \u0026#34;protocol\u0026#34;: 2, \u0026#34;type\u0026#34;: [ \u0026#34;regular_pie\u0026#34; ], \u0026#34;view\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;700\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;500\u0026#34;, \u0026#34;minWidth\u0026#34;: \u0026#34;40\u0026#34;, \u0026#34;minHeight\u0026#34;: \u0026#34;40\u0026#34; }, \u0026#34;apis\u0026#34;: { \u0026#34;source\u0026#34;: { \u0026#34;handler\u0026#34;: \u0026#34;render\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;echarts\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;x\u0026#34;: { \u0026#34;description\u0026#34;: \u0026#34;x坐标轴值\u0026#34; }, \u0026#34;y\u0026#34;: { \u0026#34;description\u0026#34;: \u0026#34;y坐标轴值\u0026#34; } } } }, \u0026#34;config\u0026#34;: { }, \u0026#34;api_data\u0026#34;: { } } }   効果  GeoJson map\n Echart のサンプル  DataV ソース index.js package.json 効果   Scatter\n Echart のサンプル  DataV ソース index.js package.json 効果   Graph\n Echart のサンプル  DataV ソース index.js package.json 効果   Timeline\n Echart のサンプル  DataV ソース index.js package.json 効果   3D\n Echart のサンプル  DataV ソース index.js package.json 効果    Option の一部を DataV の package.json に変換 Echarts の一部の option を DataV の標準 Config に変換するサンプルです。\n Echart のサンプル  DataVソース index.js package.json 効果   Optionを完全にDataVのpackage.jsonに変換 Echartsの全部optionをDataVの標準Configに変換するサンプルです。\n Echart のサンプル  DataV ソース index.js package.json  { \u0026#34;name\u0026#34;: \u0026#34;@sbcloud-1test/echarts-pictorialBar\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;1.0.0\u0026#34;, \u0026#34;dependencies\u0026#34;: { \u0026#34;bcore\u0026#34;: \u0026#34;0.0.18\u0026#34;, \u0026#34;jquery\u0026#34;: \u0026#34;2.1.4\u0026#34;, \u0026#34;lodash\u0026#34;: \u0026#34;4.6.1\u0026#34;, \u0026#34;echarts\u0026#34;: \u0026#34;4.2.1\u0026#34; }, \u0026#34;datav\u0026#34;: { \u0026#34;cn_name\u0026#34;: \u0026#34;PictorialBar\u0026#34;, \u0026#34;icon\u0026#34;: \u0026#34;//datav.oss-cn-hangzhou.aliyuncs.com/uploads/images/2ccb7c958c146a7e5aed4506179a8e16.png\u0026#34;, \u0026#34;protocol\u0026#34;: 2, \u0026#34;type\u0026#34;: [ \u0026#34;regular_pictorialBar\u0026#34; ], \u0026#34;view\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;650\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;400\u0026#34;, \u0026#34;minWidth\u0026#34;: \u0026#34;40\u0026#34;, \u0026#34;minHeight\u0026#34;: \u0026#34;20\u0026#34; }, \u0026#34;apis\u0026#34;: { \u0026#34;source\u0026#34;: { \u0026#34;handler\u0026#34;: \u0026#34;render\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;echarts象形柱图接口描述\u0026#34;, \u0026#34;fields\u0026#34;: { \u0026#34;x\u0026#34;: { \u0026#34;description\u0026#34;: \u0026#34;x坐标轴值\u0026#34; }, \u0026#34;y\u0026#34;: { \u0026#34;description\u0026#34;: \u0026#34;y坐标轴值\u0026#34; }, \u0026#34;s\u0026#34;: { \u0026#34;description\u0026#34;: \u0026#34;系列值\u0026#34;, \u0026#34;optional\u0026#34;: true } } } }, \u0026#34;config\u0026#34;: { \u0026#34;xAxis\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;x轴\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;group\u0026#34;, \u0026#34;children\u0026#34;: { \u0026#34;show\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;显示\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;boolean\u0026#34;, \u0026#34;default\u0026#34;: true }, \u0026#34;type\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;类型\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;default\u0026#34;: \u0026#34;category\u0026#34; }, \u0026#34;axisLine\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;轴线\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;group\u0026#34;, \u0026#34;children\u0026#34;: { \u0026#34;show\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;显示\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;boolean\u0026#34;, \u0026#34;default\u0026#34;: false } }, \u0026#34;fold\u0026#34;: true }, \u0026#34;axisTick\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;刻度\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;group\u0026#34;, \u0026#34;children\u0026#34;: { \u0026#34;show\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;显示\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;boolean\u0026#34;, \u0026#34;default\u0026#34;: false } }, \u0026#34;fold\u0026#34;: true } }, \u0026#34;fold\u0026#34;: true }, \u0026#34;yAxis\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;y轴\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;group\u0026#34;, \u0026#34;children\u0026#34;: { \u0026#34;show\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;显示\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;boolean\u0026#34;, \u0026#34;default\u0026#34;: false } }, \u0026#34;fold\u0026#34;: true }, \u0026#34;tooltip\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;提示框\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;group\u0026#34;, \u0026#34;children\u0026#34;: { \u0026#34;show\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;显示\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;boolean\u0026#34;, \u0026#34;default\u0026#34;: true }, \u0026#34;showContent\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;显示提示框\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;boolean\u0026#34;, \u0026#34;default\u0026#34;: true } }, \u0026#34;fold\u0026#34;: true }, \u0026#34;series\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;系列\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;array\u0026#34;, \u0026#34;fold\u0026#34;: true, \u0026#34;default\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;hill\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;pictorialBar\u0026#34;, \u0026#34;barCategoryGap\u0026#34;: \u0026#34;-130%\u0026#34;, \u0026#34;symbol\u0026#34;: \u0026#34;path://M0,10 L10,10 C5.5,10 5.5,5 5,0 C4.5,5 4.5,10 0,10 z\u0026#34;, \u0026#34;itemStyle\u0026#34;: { \u0026#34;normal\u0026#34;: { \u0026#34;opacity\u0026#34;: 0.5, \u0026#34;defaultColor\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;默认颜色\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;boolean\u0026#34;, \u0026#34;default\u0026#34;: true, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34; } } }, \u0026#34;z\u0026#34;: 10, \u0026#34;legendHoverLink\u0026#34;: true, \u0026#34;coordinateSystem\u0026#34;: \u0026#34;cartesian2d\u0026#34; }, { \u0026#34;name\u0026#34;: \u0026#34;glyph\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;pictorialBar\u0026#34;, \u0026#34;barGap\u0026#34;: \u0026#34;-100%\u0026#34;, \u0026#34;symbolPosition\u0026#34;: \u0026#34;end\u0026#34;, \u0026#34;symbolOffset\u0026#34;: [ 0, \u0026#34;-120%\u0026#34; ], \u0026#34;legendHoverLink\u0026#34;: true, \u0026#34;coordinateSystem\u0026#34;: \u0026#34;cartesian2d\u0026#34;, \u0026#34;itemStyle\u0026#34;: { \u0026#34;normal\u0026#34;: { \u0026#34;defaultColor\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;默认颜色\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;boolean\u0026#34;, \u0026#34;default\u0026#34;: true, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;opacity\u0026#34;: 0.8 } }, \u0026#34;z\u0026#34;: 2 } ], \u0026#34;child\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;object\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;系列\u0026lt;%= i+1 %\u0026gt;\u0026#34;, \u0026#34;child\u0026#34;: { \u0026#34;name\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;名称\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;text\u0026#34;, \u0026#34;default\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;itemStyle\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;元素样式\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;group\u0026#34;, \u0026#34;children\u0026#34;: { \u0026#34;normal\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;普通项\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;group\u0026#34;, \u0026#34;children\u0026#34;: { \u0026#34;defaultColor\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;默认颜色\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;boolean\u0026#34;, \u0026#34;default\u0026#34;: true, \u0026#34;description\u0026#34;: \u0026#34;\u0026#34; } }, \u0026#34;fold\u0026#34;: true } }, \u0026#34;fold\u0026#34;: true } } } } }, \u0026#34;api_data\u0026#34;: { \u0026#34;source\u0026#34;: [ { \u0026#34;x\u0026#34;: \u0026#34;驯鹿\u0026#34;, \u0026#34;y\u0026#34;: 123, \u0026#34;s\u0026#34;: \u0026#34;hill\u0026#34; }, { \u0026#34;y\u0026#34;: 123, \u0026#34;symbol\u0026#34;: \u0026#34;path://M-22.788,24.521c2.08-0.986,3.611-3.905,4.984-5.892 c-2.686,2.782-5.047,5.884-9.102,7.312c-0.992,0.005-0.25-2.016,0.34-2.362l1.852-0.41c0.564-0.218,0.785-0.842,0.902-1.347 c2.133-0.727,4.91-4.129,6.031-6.194c1.748-0.7,4.443-0.679,5.734-2.293c1.176-1.468,0.393-3.992,1.215-6.557 c0.24-0.754,0.574-1.581,1.008-2.293c-0.611,0.011-1.348-0.061-1.959-0.608c-1.391-1.245-0.785-2.086-1.297-3.313 c1.684,0.744,2.5,2.584,4.426,2.586C-8.46,3.012-8.255,2.901-8.04,2.824c6.031-1.952,15.182-0.165,19.498-3.937 c1.15-3.933-1.24-9.846-1.229-9.938c0.008-0.062-1.314-0.004-1.803-0.258c-1.119-0.771-6.531-3.75-0.17-3.33 c0.314-0.045,0.943,0.259,1.439,0.435c-0.289-1.694-0.92-0.144-3.311-1.946c0,0-1.1-0.855-1.764-1.98 c-0.836-1.09-2.01-2.825-2.992-4.031c-1.523-2.476,1.367,0.709,1.816,1.108c1.768,1.704,1.844,3.281,3.232,3.983 c0.195,0.203,1.453,0.164,0.926-0.468c-0.525-0.632-1.367-1.278-1.775-2.341c-0.293-0.703-1.311-2.326-1.566-2.711 c-0.256-0.384-0.959-1.718-1.67-2.351c-1.047-1.187-0.268-0.902,0.521-0.07c0.789,0.834,1.537,1.821,1.672,2.023 c0.135,0.203,1.584,2.521,1.725,2.387c0.102-0.259-0.035-0.428-0.158-0.852c-0.125-0.423-0.912-2.032-0.961-2.083 c-0.357-0.852-0.566-1.908-0.598-3.333c0.4-2.375,0.648-2.486,0.549-0.705c0.014,1.143,0.031,2.215,0.602,3.247 c0.807,1.496,1.764,4.064,1.836,4.474c0.561,3.176,2.904,1.749,2.281-0.126c-0.068-0.446-0.109-2.014-0.287-2.862 c-0.18-0.849-0.219-1.688-0.113-3.056c0.066-1.389,0.232-2.055,0.277-2.299c0.285-1.023,0.4-1.088,0.408,0.135 c-0.059,0.399-0.131,1.687-0.125,2.655c0.064,0.642-0.043,1.768,0.172,2.486c0.654,1.928-0.027,3.496,1,3.514 c1.805-0.424,2.428-1.218,2.428-2.346c-0.086-0.704-0.121-0.843-0.031-1.193c0.221-0.568,0.359-0.67,0.312-0.076 c-0.055,0.287,0.031,0.533,0.082,0.794c0.264,1.197,0.912,0.114,1.283-0.782c0.15-0.238,0.539-2.154,0.545-2.522 c-0.023-0.617,0.285-0.645,0.309,0.01c0.064,0.422-0.248,2.646-0.205,2.334c-0.338,1.24-1.105,3.402-3.379,4.712 c-0.389,0.12-1.186,1.286-3.328,2.178c0,0,1.729,0.321,3.156,0.246c1.102-0.19,3.707-0.027,4.654,0.269 c1.752,0.494,1.531-0.053,4.084,0.164c2.26-0.4,2.154,2.391-1.496,3.68c-2.549,1.405-3.107,1.475-2.293,2.984 c3.484,7.906,2.865,13.183,2.193,16.466c2.41,0.271,5.732-0.62,7.301,0.725c0.506,0.333,0.648,1.866-0.457,2.86 c-4.105,2.745-9.283,7.022-13.904,7.662c-0.977-0.194,0.156-2.025,0.803-2.247l1.898-0.03c0.596-0.101,0.936-0.669,1.152-1.139 c3.16-0.404,5.045-3.775,8.246-4.818c-4.035-0.718-9.588,3.981-12.162,1.051c-5.043,1.423-11.449,1.84-15.895,1.111 c-3.105,2.687-7.934,4.021-12.115,5.866c-3.271,3.511-5.188,8.086-9.967,10.414c-0.986,0.119-0.48-1.974,0.066-2.385l1.795-0.618 C-22.995,25.682-22.849,25.035-22.788,24.521z\u0026#34;, \u0026#34;symbolSize\u0026#34;: [ 60, 60 ], \u0026#34;x\u0026#34;: \u0026#34;驯鹿\u0026#34;, \u0026#34;s\u0026#34;: \u0026#34;glyph\u0026#34; }, { \u0026#34;x\u0026#34;: \u0026#34;火箭\u0026#34;, \u0026#34;y\u0026#34;: 60, \u0026#34;s\u0026#34;: \u0026#34;hill\u0026#34; }, { \u0026#34;y\u0026#34;: 60, \u0026#34;symbol\u0026#34;: \u0026#34;path://M-244.396,44.399c0,0,0.47-2.931-2.427-6.512c2.819-8.221,3.21-15.709,3.21-15.709s5.795,1.383,5.795,7.325C-237.818,39.679-244.396,44.399-244.396,44.399z M-260.371,40.827c0,0-3.881-12.946-3.881-18.319c0-2.416,0.262-4.566,0.669-6.517h17.684c0.411,1.952,0.675,4.104,0.675,6.519c0,5.291-3.87,18.317-3.87,18.317H-260.371z M-254.745,18.951c-1.99,0-3.603,1.676-3.603,3.744c0,2.068,1.612,3.744,3.603,3.744c1.988,0,3.602-1.676,3.602-3.744S-252.757,18.951-254.745,18.951z M-255.521,2.228v-5.098h1.402v4.969c1.603,1.213,5.941,5.069,7.901,12.5h-17.05C-261.373,7.373-257.245,3.558-255.521,2.228zM-265.07,44.399c0,0-6.577-4.721-6.577-14.896c0-5.942,5.794-7.325,5.794-7.325s0.393,7.488,3.211,15.708C-265.539,41.469-265.07,44.399-265.07,44.399z M-252.36,45.15l-1.176-1.22L-254.789,48l-1.487-4.069l-1.019,2.116l-1.488-3.826h8.067L-252.36,45.15z\u0026#34;, \u0026#34;symbolSize\u0026#34;: [ 50, 60 ], \u0026#34;x\u0026#34;: \u0026#34;火箭\u0026#34;, \u0026#34;s\u0026#34;: \u0026#34;glyph\u0026#34; }, { \u0026#34;x\u0026#34;: \u0026#34;飞机\u0026#34;, \u0026#34;y\u0026#34;: 25, \u0026#34;s\u0026#34;: \u0026#34;hill\u0026#34; }, { \u0026#34;y\u0026#34;: 25, \u0026#34;symbol\u0026#34;: \u0026#34;path://M1.112,32.559l2.998,1.205l-2.882,2.268l-2.215-0.012L1.112,32.559z M37.803,23.96 c0.158-0.838,0.5-1.509,0.961-1.904c-0.096-0.037-0.205-0.071-0.344-0.071c-0.777-0.005-2.068-0.009-3.047-0.009 c-0.633,0-1.217,0.066-1.754,0.18l2.199,1.804H37.803z M39.738,23.036c-0.111,0-0.377,0.325-0.537,0.924h1.076 C40.115,23.361,39.854,23.036,39.738,23.036z M39.934,39.867c-0.166,0-0.674,0.705-0.674,1.986s0.506,1.986,0.674,1.986 s0.672-0.705,0.672-1.986S40.102,39.867,39.934,39.867z M38.963,38.889c-0.098-0.038-0.209-0.07-0.348-0.073 c-0.082,0-0.174,0-0.268-0.001l-7.127,4.671c0.879,0.821,2.42,1.417,4.348,1.417c0.979,0,2.27-0.006,3.047-0.01 c0.139,0,0.25-0.034,0.348-0.072c-0.646-0.555-1.07-1.643-1.07-2.967C37.891,40.529,38.316,39.441,38.963,38.889z M32.713,23.96 l-12.37-10.116l-4.693-0.004c0,0,4,8.222,4.827,10.121H32.713z M59.311,32.374c-0.248,2.104-5.305,3.172-8.018,3.172H39.629 l-25.325,16.61L9.607,52.16c0,0,6.687-8.479,7.95-10.207c1.17-1.6,3.019-3.699,3.027-6.407h-2.138 c-5.839,0-13.816-3.789-18.472-5.583c-2.818-1.085-2.396-4.04-0.031-4.04h0.039l-3.299-11.371h3.617c0,0,4.352,5.696,5.846,7.5 c2,2.416,4.503,3.678,8.228,3.87h30.727c2.17,0,4.311,0.417,6.252,1.046c3.49,1.175,5.863,2.7,7.199,4.027 C59.145,31.584,59.352,32.025,59.311,32.374z M22.069,30.408c0-0.815-0.661-1.475-1.469-1.475c-0.812,0-1.471,0.66-1.471,1.475 s0.658,1.475,1.471,1.475C21.408,31.883,22.069,31.224,22.069,30.408z M27.06,30.408c0-0.815-0.656-1.478-1.466-1.478 c-0.812,0-1.471,0.662-1.471,1.478s0.658,1.477,1.471,1.477C26.404,31.885,27.06,31.224,27.06,30.408z M32.055,30.408 c0-0.815-0.66-1.475-1.469-1.475c-0.808,0-1.466,0.66-1.466,1.475s0.658,1.475,1.466,1.475 C31.398,31.883,32.055,31.224,32.055,30.408z M37.049,30.408c0-0.815-0.658-1.478-1.467-1.478c-0.812,0-1.469,0.662-1.469,1.478 s0.656,1.477,1.469,1.477C36.389,31.885,37.049,31.224,37.049,30.408z M42.039,30.408c0-0.815-0.656-1.478-1.465-1.478 c-0.811,0-1.469,0.662-1.469,1.478s0.658,1.477,1.469,1.477C41.383,31.885,42.039,31.224,42.039,30.408z M55.479,30.565 c-0.701-0.436-1.568-0.896-2.627-1.347c-0.613,0.289-1.551,0.476-2.73,0.476c-1.527,0-1.639,2.263,0.164,2.316 C52.389,32.074,54.627,31.373,55.479,30.565z\u0026#34;, \u0026#34;symbolSize\u0026#34;: [ 65, 35 ], \u0026#34;x\u0026#34;: \u0026#34;飞机\u0026#34;, \u0026#34;s\u0026#34;: \u0026#34;glyph\u0026#34; }, { \u0026#34;x\u0026#34;: \u0026#34;高铁\u0026#34;, \u0026#34;y\u0026#34;: 18, \u0026#34;s\u0026#34;: \u0026#34;hill\u0026#34; }, { \u0026#34;y\u0026#34;: 18, \u0026#34;symbol\u0026#34;: \u0026#34;path://M67.335,33.596L67.335,33.596c-0.002-1.39-1.153-3.183-3.328-4.218h-9.096v-2.07h5.371 c-4.939-2.07-11.199-4.141-14.89-4.141H19.72v12.421v5.176h38.373c4.033,0,8.457-1.035,9.142-5.176h-0.027 c0.076-0.367,0.129-0.751,0.129-1.165L67.335,33.596L67.335,33.596z M27.999,30.413h-3.105v-4.141h3.105V30.413z M35.245,30.413 h-3.104v-4.141h3.104V30.413z M42.491,30.413h-3.104v-4.141h3.104V30.413z M49.736,30.413h-3.104v-4.141h3.104V30.413z M14.544,40.764c1.143,0,2.07-0.927,2.07-2.07V35.59V25.237c0-1.145-0.928-2.07-2.07-2.07H-9.265c-1.143,0-2.068,0.926-2.068,2.07 v10.351v3.105c0,1.144,0.926,2.07,2.068,2.07H14.544L14.544,40.764z M8.333,26.272h3.105v4.141H8.333V26.272z M1.087,26.272h3.105 v4.141H1.087V26.272z M-6.159,26.272h3.105v4.141h-3.105V26.272z M-9.265,41.798h69.352v1.035H-9.265V41.798z\u0026#34;, \u0026#34;symbolSize\u0026#34;: [ 50, 30 ], \u0026#34;x\u0026#34;: \u0026#34;高铁\u0026#34;, \u0026#34;s\u0026#34;: \u0026#34;glyph\u0026#34; }, { \u0026#34;x\u0026#34;: \u0026#34;轮船\u0026#34;, \u0026#34;y\u0026#34;: 12, \u0026#34;s\u0026#34;: \u0026#34;hill\u0026#34; }, { \u0026#34;y\u0026#34;: 12, \u0026#34;symbol\u0026#34;: \u0026#34;path://M16.678,17.086h9.854l-2.703,5.912c5.596,2.428,11.155,5.575,16.711,8.607c3.387,1.847,6.967,3.75,10.541,5.375 v-6.16l-4.197-2.763v-5.318L33.064,12.197h-11.48L20.43,15.24h-4.533l-1.266,3.286l0.781,0.345L16.678,17.086z M49.6,31.84 l0.047,1.273L27.438,20.998l0.799-1.734L49.6,31.84z M33.031,15.1l12.889,8.82l0.027,0.769L32.551,16.1L33.031,15.1z M22.377,14.045 h9.846l-1.539,3.365l-2.287-1.498h1.371l0.721-1.352h-2.023l-0.553,1.037l-0.541-0.357h-0.34l0.359-0.684h-2.025l-0.361,0.684 h-3.473L22.377,14.045z M23.695,20.678l-0.004,0.004h0.004V20.678z M24.828,18.199h-2.031l-0.719,1.358h2.029L24.828,18.199z M40.385,34.227c-12.85-7.009-25.729-14.667-38.971-12.527c1.26,8.809,9.08,16.201,8.213,24.328 c-0.553,4.062-3.111,0.828-3.303,7.137c15.799,0,32.379,0,48.166,0l0.066-4.195l1.477-7.23 C50.842,39.812,45.393,36.961,40.385,34.227z M13.99,35.954c-1.213,0-2.195-1.353-2.195-3.035c0-1.665,0.98-3.017,2.195-3.017 c1.219,0,2.195,1.352,2.195,3.017C16.186,34.604,15.213,35.954,13.99,35.954z M23.691,20.682h-2.02l-0.588,1.351h2.023 L23.691,20.682z M19.697,18.199l-0.721,1.358h2.025l0.727-1.358H19.697z\u0026#34;, \u0026#34;symbolSize\u0026#34;: [ 50, 35 ], \u0026#34;x\u0026#34;: \u0026#34;轮船\u0026#34;, \u0026#34;s\u0026#34;: \u0026#34;glyph\u0026#34; }, { \u0026#34;x\u0026#34;: \u0026#34;汽车\u0026#34;, \u0026#34;y\u0026#34;: 9, \u0026#34;s\u0026#34;: \u0026#34;hill\u0026#34; }, { \u0026#34;y\u0026#34;: 9, \u0026#34;symbol\u0026#34;: \u0026#34;path://M49.592,40.883c-0.053,0.354-0.139,0.697-0.268,0.963c-0.232,0.475-0.455,0.519-1.334,0.475 c-1.135-0.053-2.764,0-4.484,0.068c0,0.476,0.018,0.697,0.018,0.697c0.111,1.299,0.697,1.342,0.931,1.342h3.7 c0.326,0,0.628,0,0.861-0.154c0.301-0.196,0.43-0.772,0.543-1.78c0.017-0.146,0.025-0.336,0.033-0.56v-0.01 c0-0.068,0.008-0.154,0.008-0.25V41.58l0,0C49.6,41.348,49.6,41.09,49.592,40.883L49.592,40.883z M6.057,40.883 c0.053,0.354,0.137,0.697,0.268,0.963c0.23,0.475,0.455,0.519,1.334,0.475c1.137-0.053,2.762,0,4.484,0.068 c0,0.476-0.018,0.697-0.018,0.697c-0.111,1.299-0.697,1.342-0.93,1.342h-3.7c-0.328,0-0.602,0-0.861-0.154 c-0.309-0.18-0.43-0.772-0.541-1.78c-0.018-0.146-0.027-0.336-0.035-0.56v-0.01c0-0.068-0.008-0.154-0.008-0.25V41.58l0,0 C6.057,41.348,6.057,41.09,6.057,40.883L6.057,40.883z M49.867,32.766c0-2.642-0.344-5.224-0.482-5.507 c-0.104-0.207-0.766-0.749-2.271-1.773c-1.522-1.042-1.487-0.887-1.766-1.566c0.25-0.078,0.492-0.224,0.639-0.241 c0.326-0.034,0.345,0.274,1.023,0.274c0.68,0,2.152-0.18,2.453-0.48c0.301-0.303,0.396-0.405,0.396-0.672 c0-0.268-0.156-0.818-0.447-1.146c-0.293-0.327-1.541-0.49-2.273-0.585c-0.729-0.095-0.834,0-1.022,0.121 c-0.304,0.189-0.32,1.919-0.32,1.919l-0.713,0.018c-0.465-1.146-1.11-3.452-2.117-5.269c-1.103-1.979-2.256-2.599-2.737-2.754 c-0.474-0.146-0.904-0.249-4.131-0.576c-3.298-0.344-5.922-0.388-8.262-0.388c-2.342,0-4.967,0.052-8.264,0.388 c-3.229,0.336-3.66,0.43-4.133,0.576s-1.633,0.775-2.736,2.754c-1.006,1.816-1.652,4.123-2.117,5.269L9.87,23.109 c0,0-0.008-1.729-0.318-1.919c-0.189-0.121-0.293-0.225-1.023-0.121c-0.732,0.104-1.98,0.258-2.273,0.585 c-0.293,0.327-0.447,0.878-0.447,1.146c0,0.267,0.094,0.379,0.396,0.672c0.301,0.301,1.773,0.48,2.453,0.48 c0.68,0,0.697-0.309,1.023-0.274c0.146,0.018,0.396,0.163,0.637,0.241c-0.283,0.68-0.24,0.524-1.764,1.566 c-1.506,1.033-2.178,1.566-2.271,1.773c-0.139,0.283-0.482,2.865-0.482,5.508s0.189,5.02,0.189,5.86c0,0.354,0,0.976,0.076,1.565 c0.053,0.354,0.129,0.697,0.268,0.966c0.232,0.473,0.447,0.516,1.334,0.473c1.137-0.051,2.779,0,4.477,0.07 c1.135,0.043,2.297,0.086,3.33,0.11c2.582,0.051,1.826-0.379,2.928-0.36c1.102,0.016,5.447,0.196,9.424,0.196 c3.976,0,8.332-0.182,9.423-0.196c1.102-0.019,0.346,0.411,2.926,0.36c1.033-0.018,2.195-0.067,3.332-0.11 c1.695-0.062,3.348-0.121,4.477-0.07c0.886,0.043,1.103,0,1.332-0.473c0.132-0.269,0.218-0.611,0.269-0.966 c0.086-0.592,0.078-1.213,0.078-1.565C49.678,37.793,49.867,35.408,49.867,32.766L49.867,32.766z M13.219,19.735 c0.412-0.964,1.652-2.9,2.256-3.244c0.145-0.087,1.426-0.491,4.637-0.706c2.953-0.198,6.217-0.276,7.73-0.276 c1.513,0,4.777,0.078,7.729,0.276c3.201,0.215,4.502,0.611,4.639,0.706c0.775,0.533,1.842,2.28,2.256,3.244 c0.412,0.965,0.965,2.858,0.861,3.116c-0.104,0.258,0.104,0.388-1.291,0.275c-1.387-0.103-10.088-0.216-14.185-0.216 c-4.088,0-12.789,0.113-14.184,0.216c-1.395,0.104-1.188-0.018-1.291-0.275C12.254,22.593,12.805,20.708,13.219,19.735 L13.219,19.735z M16.385,30.511c-0.619,0.155-0.988,0.491-1.764,0.482c-0.775,0-2.867-0.353-3.314-0.371 c-0.447-0.017-0.842,0.302-1.076,0.362c-0.23,0.06-0.688-0.104-1.377-0.318c-0.688-0.216-1.092-0.155-1.316-1.094 c-0.232-0.93,0-2.264,0-2.264c1.488-0.068,2.928,0.069,5.621,0.826c2.693,0.758,4.191,2.213,4.191,2.213 S17.004,30.357,16.385,30.511L16.385,30.511z M36.629,37.293c-1.23,0.164-6.386,0.207-8.794,0.207c-2.412,0-7.566-0.051-8.799-0.207 c-1.256-0.164-2.891-1.67-1.764-2.865c1.523-1.627,1.24-1.576,4.701-2.023C24.967,32.018,27.239,32,27.834,32 c0.584,0,2.865,0.025,5.859,0.404c3.461,0.447,3.178,0.396,4.699,2.022C39.521,35.623,37.887,37.129,36.629,37.293L36.629,37.293z M48.129,29.582c-0.232,0.93-0.629,0.878-1.318,1.093c-0.688,0.216-1.145,0.371-1.377,0.319c-0.231-0.053-0.627-0.371-1.074-0.361 c-0.448,0.018-2.539,0.37-3.313,0.37c-0.772,0-1.146-0.328-1.764-0.481c-0.621-0.154-0.966-0.154-0.966-0.154 s1.49-1.464,4.191-2.213c2.693-0.758,4.131-0.895,5.621-0.826C48.129,27.309,48.361,28.643,48.129,29.582L48.129,29.582z\u0026#34;, \u0026#34;symbolSize\u0026#34;: [ 40, 30 ], \u0026#34;x\u0026#34;: \u0026#34;汽车\u0026#34;, \u0026#34;s\u0026#34;: \u0026#34;glyph\u0026#34; }, { \u0026#34;x\u0026#34;: \u0026#34;跑步\u0026#34;, \u0026#34;y\u0026#34;: 2, \u0026#34;s\u0026#34;: \u0026#34;hill\u0026#34; }, { \u0026#34;y\u0026#34;: 2, \u0026#34;symbol\u0026#34;: \u0026#34;path://M13.676,32.955c0.919-0.031,1.843-0.008,2.767-0.008v0.007c0.827,0,1.659,0.041,2.486-0.019 c0.417-0.028,1.118,0.325,1.14-0.545c0.014-0.637-0.156-1.279-0.873-1.367c-1.919-0.241-3.858-0.233-5.774,0.019 c-0.465,0.062-0.998,0.442-0.832,1.069C12.715,32.602,13.045,32.977,13.676,32.955z M14.108,29.013 c1.47-0.007,2.96-0.122,4.414,0.035c1.792,0.192,3.1-0.412,4.273-2.105c-3.044,0-5.882,0.014-8.719-0.01 c-0.768-0.005-1.495,0.118-1.461,1C12.642,28.731,13.329,29.014,14.108,29.013z M23.678,36.593c-0.666-0.69-1.258-1.497-2.483-1.448 c-2.341,0.095-4.689,0.051-7.035,0.012c-0.834-0.014-1.599,0.177-1.569,1.066c0.031,0.854,0.812,1.062,1.636,1.043 c1.425-0.033,2.852-0.01,4.278-0.01v-0.01c1.562,0,3.126,0.008,4.691-0.005C23.614,37.239,24.233,37.174,23.678,36.593z M32.234,42.292h-0.002c-1.075,0.793-2.589,0.345-3.821,1.048c-0.359,0.193-0.663,0.465-0.899,0.799 c-1.068,1.623-2.052,3.301-3.117,4.928c-0.625,0.961-0.386,1.805,0.409,2.395c0.844,0.628,1.874,0.617,2.548-0.299 c1.912-2.573,3.761-5.197,5.621-7.814C33.484,42.619,33.032,42.387,32.234,42.292z M43.527,28.401 c-0.688-1.575-2.012-0.831-3.121-0.895c-1.047-0.058-2.119,1.128-3.002,0.345c-0.768-0.677-1.213-1.804-1.562-2.813 c-0.45-1.305-1.495-2.225-2.329-3.583c2.953,1.139,4.729,0.077,5.592-1.322c0.99-1.61,0.718-3.725-0.627-4.967 c-1.362-1.255-3.414-1.445-4.927-0.452c-1.933,1.268-2.206,2.893-0.899,6.11c-2.098-0.659-3.835-1.654-5.682-2.383 c-0.735-0.291-1.437-1.017-2.293-0.666c-2.263,0.927-4.522,1.885-6.723,2.95c-1.357,0.658-1.649,1.593-1.076,2.638 c0.462,0.851,1.643,1.126,2.806,0.617c0.993-0.433,1.994-0.857,2.951-1.374c1.599-0.86,3.044-0.873,4.604,0.214 c1.017,0.707,0.873,1.137,0.123,1.849c-1.701,1.615-3.516,3.12-4.933,5.006c-1.042,1.388-0.993,2.817,0.255,4.011 c1.538,1.471,3.148,2.869,4.708,4.315c0.485,0.444,0.907,0.896-0.227,1.104c-1.523,0.285-3.021,0.694-4.538,1.006 c-1.109,0.225-2.02,1.259-1.83,2.16c0.223,1.07,1.548,1.756,2.687,1.487c3.003-0.712,6.008-1.413,9.032-2.044 c1.549-0.324,2.273-1.869,1.344-3.115c-0.868-1.156-1.801-2.267-2.639-3.445c-1.964-2.762-1.95-2.771,0.528-5.189 c1.394-1.357,1.379-1.351,2.437,0.417c0.461,0.769,0.854,1.703,1.99,1.613c2.238-0.181,4.407-0.755,6.564-1.331 C43.557,30.447,43.88,29.206,43.527,28.401z\u0026#34;, \u0026#34;symbolSize\u0026#34;: [ 40, 50 ], \u0026#34;x\u0026#34;: \u0026#34;跑步\u0026#34;, \u0026#34;s\u0026#34;: \u0026#34;glyph\u0026#34; }, { \u0026#34;x\u0026#34;: \u0026#34;步行\u0026#34;, \u0026#34;y\u0026#34;: 1, \u0026#34;s\u0026#34;: \u0026#34;hill\u0026#34; }, { \u0026#34;y\u0026#34;: 1, \u0026#34;symbol\u0026#34;: \u0026#34;path://M29.902,23.275c1.86,0,3.368-1.506,3.368-3.365c0-1.859-1.508-3.365-3.368-3.365 c-1.857,0-3.365,1.506-3.365,3.365C26.537,21.769,28.045,23.275,29.902,23.275z M36.867,30.74c-1.666-0.467-3.799-1.6-4.732-4.199 c-0.932-2.6-3.131-2.998-4.797-2.998s-7.098,3.894-7.098,3.894c-1.133,1.001-2.1,6.502-0.967,6.769 c1.133,0.269,1.266-1.533,1.934-3.599c0.666-2.065,3.797-3.466,3.797-3.466s0.201,2.467-0.398,3.866 c-0.599,1.399-1.133,2.866-1.467,6.198s-1.6,3.665-3.799,6.266c-2.199,2.598-0.6,3.797,0.398,3.664 c1.002-0.133,5.865-5.598,6.398-6.998c0.533-1.397,0.668-3.732,0.668-3.732s0,0,2.199,1.867c2.199,1.865,2.332,4.6,2.998,7.73 s2.332,0.934,2.332-0.467c0-1.401,0.269-5.465-1-7.064c-1.265-1.6-3.73-3.465-3.73-5.265s1.199-3.732,1.199-3.732 c0.332,1.667,3.335,3.065,5.599,3.399C38.668,33.206,38.533,31.207,36.867,30.74z\u0026#34;, \u0026#34;symbolSize\u0026#34;: [ 40, 50 ], \u0026#34;x\u0026#34;: \u0026#34;步行\u0026#34;, \u0026#34;s\u0026#34;: \u0026#34;glyph\u0026#34; } ] } } }   効果   Publish と Deploy DataV の Widget の開発が終わったら、開発されたパッケージを DataV へ Publishし、実際の DataV の Dashboard を使ってみます。\npublish はとても簡単で、パッケージのフォルダに　datav publish コマンドを実行するだけです。\npublish が成功したら、DataV のコンソールでアップロードされた Widget が見えるはずです。 一覧： 最後に Dashboard の編集画面で Widget 一覧を開くと、自分がアップロードした Widget が見えるはずです。 ※ Widget をアップロードしてから表示されるまで、時々ブラウザの　Cache　の削除が必要です。\nこれで、取り込んだ Echarts の図を使用して、Dashboard を作成することができます。\nhttps://datav.aliyuncs.com/share/cb5ac6659dfe3356721c2128d319078d "
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/003_what-is-spark/",
	"title": "Sparkについて",
	"tags": [],
	"description": "BigDataを支える技術レイヤー、Sparkについてを説明します。",
	"content": " Apache Sparkとは \u0026nbsp; Apache Sparkはカリフォルニア大学バークレー校のAMP Labで開発されたオープンソースプロダクトです。Sparkは、大きなデータセットを処理および分析するための次世代のビッグデータ処理フレームワークです。 Sparkは、Scala、Python、Java、R言語による高レベルAPIサポート、Spark SQL、Streaming、機械学習のMLlib、グラフ処理用のGraphXなどを強力なライブラリを提供する統合処理フレームワークです。後にApache Software Foundationに寄付され、2014年2月24日にApacheトップレベルのプロジェクトになりました。\nSparkの概要 \u0026nbsp; SparkはHadoopのデータ処理フレームワークであるMapReduceの多くの処理制限問題を認識し、反復的でインタラクティブなアプリケーションを処理できる、より高速でより汎用的に利用できるデータ処理フレームワークとして開発されました。SparkのJobは、メモリ内の高速機能と高度なDAG（Directed Acyclic Graph）実行エンジンにより、同等のMapReduceジョブよりも10〜100倍高速に実行できます。データサイエンティスト、分析エンジニアからすれば、SparkはどのMapReduce処理よりも最も生産的な位置付けとなっています。\n\u0026nbsp; Sparkは一見シンプルですが強力なAPIにより、非常に利用・汎用しやすくなっています。 Sparkは以下をサポートする統合プラットフォームを提供します。現在、Sparkはデータサイエンティスト、分析エンジニアにとって重要な存在となっています。ストリーミング、インタラクティブ処理、ETL、機械学習、バッチ処理、Delta Lake運用、container/Kubernetes、Function as a Serivce、超高速HTAPなど、幅広い分野へ広まっています。手法は別章にて紹介いたします。\nCluster Managers \u0026nbsp; Cluster Managersはアプリケーションのクラスタリソースを割り当て、管理をしています。Sparkは、Spark（Standalone Scheduler）、YARN、およびMesosに付属しているスタンドアロンのCluster Managersをサポートしています。またKubernetesをCluster Managersとして利用することも可能です。このテクニカルサイトにも手法を記載いたしますが、詳細についてはこちらを参照してください。\nhttps://apache-spark-on-k8s.github.io/userdocs/running-on-kubernetes.html Sparkのアーキテクチャ \u0026nbsp; Sparkはコード内容（処理内容）をSparkアプリケーションタスクとして以下の画像のように複数のクラスターノードへ分散し処理することができます。すべてのSparkアプリケーションには、Driver ProgramにSpark Contextというオブジェクトがあります。Spark ContextはCluster Managersへの接続を意味しており、Sparkアプリケーションにコンピューティングリソースを提供します。Hadoop分散モードの上で実行となれば、マスターノードで実行、これがスレーブノードへ処理したいリソースを提供となります。\n\u0026nbsp; クラスターに接続した後、SparkはWorker NodeでExecuterを取得します。その後、SparkはアプリケーションコードをExecuterに送信します。通常、アプリケーションはSparkアクションに応じて1つ以上のジョブを実行します。その後、各ジョブはSparkによって小さな有向非周期グラフ（DAG）に分割されます。その後、各タスクは分散され、実行のためにワーカーノード全体のExecuterに送信されます。各Sparkアプリケーションは、独自のExecuterのセットを取得します。異なるアプリケーションのタスクは異なるJVMで実行されるため、Sparkアプリケーションは別のSparkアプリケーションと干渉することはないです。（＝処理内容が重複、コンフリクトすることがない構造）これはHDFSやS3などの低速の外部データソースを使用しないと、Sparkアプリケーション同士がデータを共有することは難しいことを意味します。一方、AlibabaCloudのSparkはJindoFSを使うと、ワーカーノードがOSSら外部データソースとマルチ接続し分散処理されるため、OSSに対してデータ共有をより速く、かつ簡単に読み込み、書き込みすることができます。JindoFSや手法は別章にて紹介いたします。\nSpark on YARN \u0026nbsp; YARNはHadoopベースのCluster Managersです。YARNでSparkアプリケーションを起動するためには2つの方法があります。\nCluster Mode \u0026nbsp; Cluster Modeの場合、Driver Program は YARNによってアプリケーションを管理、実行されます。そのため、クライアントはアプリケーションの実行に影響を与えることなく終了できます。\nアプリケーション、またはSpark Shellをクラスタモードで起動するには以下のコマンドになります。\nspark-shell --master yarn --deploy-mode cluster spark-submit --class myPath.myClass --master yarn --deploy-mode cluster \nClient Mode \u0026nbsp; Client Modeの場合、Driver Program はクライアントのマシンで実行されます。アプリケーションマスターは、YARNからリソースを要求する時のみ使用されます。\nクライアントモードでアプリケーション、またはSpark Shellをクラスタモードで起動するには以下のコマンドになります。\nspark-shell --master yarn --deploy-mode client spark-submit --class myPath.myClass --master yarn --deploy-mode client \nSpark-Shell \u0026nbsp; 通常、アドホックデータの分析または調査にはSpark-Shellという対話型シェルを使用します。また、Spark-ShellはSpark APIを学習・調査するにも優れたツールです。SparkのShellはScalaまたはPythonで使用できます。\n[root@emr-header-1 ~]# su hadoop [hadoop@emr-header-1 root]$ pyspark Python 2.7.5 (default, Apr 11 2018, 07:36:10) [GCC 4.8.5 20150623 (Red Hat 4.8.5-28)] on linux2 Type \u0026#34;help\u0026#34;, \u0026#34;copyright\u0026#34;, \u0026#34;credits\u0026#34; or \u0026#34;license\u0026#34; for more information. Setting default log level to \u0026#34;WARN\u0026#34;. To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). 19/08/21 20:42:29 WARN HiveConf: HiveConf of name hive.server2.enable.impersonation does not exist 19/08/21 20:42:30 WARN Utils: Service \u0026#39;SparkUI\u0026#39; could not bind on port 4040. Attempting port 4041. Welcome to ____ __ / __/__ ___ _____/ /__ _\\ \\/ _ \\/ _ `/ __/ \u0026#39;_/ /__ / .__/\\_,_/_/ /_/\\_\\ version 2.4.3 /_/ Using Python version 2.7.5 (default, Apr 11 2018 07:36:10) SparkSession available as \u0026#39;spark\u0026#39;. \u0026gt;\u0026gt;\u0026gt;  \nSparkSession \u0026nbsp; 前述したように、CodeにてSparkContextを使用すると、Sparkの全ての機能にアクセスできます。Driver Programは、SparkContextを使用して、StreamingContext、SQLContext、HiveContextなどの他のコンテキストにアクセスできます。\n#!/usr/bin/env python # -*- coding: utf-8 -*- from pyspark import SparkContext filePath = \u0026#34;./train.csv\u0026#34; sc = SparkContext(\u0026#34;local\u0026#34;, \u0026#34;Simple App\u0026#34;) data = sc.textFile(filePath).cache() Miss = data.filter(lambda s: \u0026#39;Miss\u0026#39; in s).count() Mr = data.filter(lambda s: \u0026#39;Mr.\u0026#39; in s).count() print \u0026#34;Miss: %d, lines with Mr.: %d\u0026#34; % (Miss, Mr) sc.stop() \nRDDとは \u0026nbsp; RDDはResilient Distributed Dataset、Sparkクラスタ内の1つ以上のノードに分割されたオブジェクトの復元力のある不変の分散コレクションです。RDDは変換とアクションの2種類の操作によって並行処理および操作ができます。RDDは復数のマシンから構成されるクラスタ上での分散処理を前提として設計されており、内部的にはパーティションに分割されています。Sparkはこのパーティションが分散処理の単位となり、パーティションごとに復数のマシンで処理することによって、単一のマシンでは処理しきれない大量のデータを扱うことができます。以下、RDDを使った処理例を記載してみます。\nRDD : parallelize \u0026nbsp; parallelizeはリストやタプルからRDDを作ります。\na = [1, 2, 3, 4, 5] rdd = sc.parallelize(a) \nRDD : textFile \u0026nbsp; textFileはファイルを読み込みます。ワイルドカードや正規表現も使用可能です。\nfilePath = \u0026#34;./train.csv\u0026#34; rdd = sc.textFile(filePath) filePath2 = \u0026#34;./*.csv\u0026#34; rdd = sc.textFile(filePath2) \nRDD : wholeTextFiles \u0026nbsp; wholeTextFilesはディレクトリの各ファイルの内容全体をそれぞれRDDの一つの要素にセットするものです。\n# $ ls # aaaa.json bbbb.json cccc.json \u0026gt;\u0026gt;\u0026gt; rdd = sc.textWholeFiles(\u0026#34;./\u0026#34;) \nTransformations \u0026nbsp; Transformationsは名前通り、RDDの変換処理です。RDDの変換は既存のRDDを変化させるわけでなく、新しいRDDを生成するための変換処理です。最もよく使われる変換処理のいくつかを記載します。（他はSparkの公式ドキュメントを閲覧してください。）\n   メソッド 備考     Filter 条件を満たす要素のみ抽出   Map 各要素に関数を適用して別の要素に変換   Flatmap 各要素に関数を適用して別の要素に変換。関数の返り値はイテレータ   Distinct 重複する要素を取り除く   ReduceByKey キー毎に要素同士を演算処理   Keys 要素のタプル(Key, Value)からキーのみに変換   Values 要素のタプル(Key, Value)から値のみに変換   Join 要素のタプル(Key, Value)を使って他のRDDと結合   Union 他のRDDと結合。単純にパーティション数が増えます   Subtract 他のRDDとの差集合を生成    \nRDD：Transformations：Map \u0026nbsp; 各要素に関数を適用して別の要素に変換\nrdd = sc.parallelize([1, 2, 3]) rdd2 = rdd.map(lambda x: x * 2).collect() \nRDD：Transformations：Flatmap \u0026nbsp; 各要素に関数を適用して別の要素に変換。関数の返り値はイテレータ\nrdd = sc.parallelize([\u0026#34;This is a pen\u0026#34;, \u0026#34;This is an apple\u0026#34;]) rdd2 = rdd.flatMap(lambda x: x.split()).collect() \nRDD：Transformations：Filter \u0026nbsp; 条件を満たす要素のみ抽出\nrdd = sc.parallelize([1, 2, 3]) rdd2 = rdd.filter(lambda x: x % 2 == 0).collect() \nRDD：Transformations：Distinct \u0026nbsp; 重複する要素を取り除く\na = [1, 2, 3, 2, 1] rdd = sc.parallelize(a) rdd2 = rdd.distinct() \nRDD：Transformations：ReduceByKey \u0026nbsp; キー毎に要素同士を演算処理\nrdd = sc.parallelize(Seq(\u0026#34;a\u0026#34;-\u0026gt;1, \u0026#34;b\u0026#34;-\u0026gt;2, \u0026#34;c\u0026#34;-\u0026gt;3, \u0026#34;a\u0026#34;-\u0026gt;4)) rdd2 = rdd.reduceByKey(_ + _) \nRDD：Transformations：Keys \u0026nbsp; 要素のタプル(Key, Value)からキーのみに変換\nrdd = sc.parallelize(Seq(\u0026#34;a\u0026#34;-\u0026gt;1, \u0026#34;b\u0026#34;-\u0026gt;2, \u0026#34;c\u0026#34;-\u0026gt;3, \u0026#34;a\u0026#34;-\u0026gt;2)) keys = rdd.keys \nRDD：Transformations：Value \u0026nbsp; 要素のタプル(Key, Value)から値のみに変換\nrdd = sc.parallelize(Seq(\u0026#34;a\u0026#34;-\u0026gt;1, \u0026#34;b\u0026#34;-\u0026gt;2, \u0026#34;c\u0026#34;-\u0026gt;3, \u0026#34;a\u0026#34;-\u0026gt;2)) values = rdd.value \nRDD：Transformations：Join \u0026nbsp; 要素のタプル(Key, Value)を使って他のRDDと結合\nrdd1 = sc.parallelize(Seq(\u0026#34;a\u0026#34;-\u0026gt;1, \u0026#34;b\u0026#34;-\u0026gt;2, \u0026#34;a\u0026#34;-\u0026gt;3, \u0026#34;b\u0026#34;-\u0026gt;4)) rdd2 = sc.parallelize(Seq(\u0026#34;b\u0026#34;-\u0026gt;\u0026#34;foo\u0026#34;, \u0026#34;c\u0026#34;-\u0026gt;\u0026#34;bar\u0026#34;)) rdd = rdd1.join(rdd2) \nRDD：Transformations：Union \u0026nbsp; 他のRDDと結合。単純にパーティション数が増えます\na = [1, 2, 3, 4, 5] b = [6, 7, 8, 9] rdd1 = sc.parallelize(a) rdd2 = sc.parallelize(b) rdd = rdd1.union(rdd2) \nRDD：Transformations：Subtract \u0026nbsp; 他のRDDとの差集合を生成\na = [1, 2, 3, 4, 5] b = [6, 7, 8, 9] rdd1 = sc.parallelize(a) rdd2 = sc.parallelize(b) rdd = rdd1.subtract(rdd2) \nRDD：Coalesce \u0026nbsp; Coalesceは、RDD内のパーティションの数を減らす処理です。大きなRDDでフィルタなどの加工・抽出処理を実行した後、フィルタリングにより新しいRDDのデータ量は減りますが、元のRDDパーティション数は継承されます。そのため、新しいRDDが元のRDDよりも大幅に小さい場合、パフォーマンス上の問題が発生してしまいます。そのため、RDDの大きなデータ増減処理後、Coalesceを使ってパーティションの数を減らしておくといいです。 また、HDFSへの書き込み時、Sparkによって生成されるファイルの数を減らした場合、hdfsのファイルブロックサイズ（64〜256MB）より小さい「小さなファイル」を書き込むと問題が発生してしまいます。そのためにCoalesceと合体関連（Unionなど）を使って処理すると問題を回避できます。各パーティションはHDFSに個別のファイルとして書き込まれます。HDFSにParquetファイルを1つだけ書き込む例を記載してみます。 rdd.coalesce(l).write.mode(\u0026#34;append\u0026#34;).parquet(\u0026#34;/user/root/hadoop/Table\u0026#34;) RDD：Repartition \u0026nbsp; RepartitionはRDD内のパーティションの数を減らすことも増やすこともできます。再分割よりも効率的であるため、パーティションを削減する場合は通常、Coalesceと合体変数の組み合わせを使用します。一方、こちらはパーティションの数を増やすことができるため、hdfsのファイルブロックサイズ（64〜256MB）の条件からしてHDFSに書き込む際の並列度が向上するため便利です。6つのParquetファイルをHDFSに書き込む例を記載してみます。\nrdd.repartition(6).write.mode(\u0026#34;append\u0026#34;)•parquet(\u0026#34;/user/root/hadoop/Table\u0026#34;) \nActions \u0026nbsp; Actionsは、driver programに値を返すRDD操作です。最もよく使われる変換処理のいくつかを記載します。（他はSparkの公式ドキュメントを閲覧してください。）\n   メソッド 備考     collect 全ての要素を返します   Foreach 全ての要素に対して演算を行い、ドライバプログラムには何も返さずに保持します   Take 最初n個の要素を返します   Count 要素数を数えて返します   first 一番最初の要素を返します   top 大きいものからn個要素を返します   mean 平均を返します   sum 合計を返します   variance 分散を返します   stdev 標準偏差を返します   saveAsTextFile ファイルを保存します    \nActions : collect \u0026nbsp; 全ての要素を返します\na = [1, 2, 3] rdd = sc.parallelize(a) print(rdd.collect()) \nActions : Foreach \u0026nbsp; 全ての要素に対して演算を行い、ドライバプログラムには何も返さずに保持します\na = [1, 2, 3] rdd = sc.parallelize(a) rdd.collect.Foreach(printin) \nActions : Take \u0026nbsp; 最初n個の要素を返します\na = [1, 2, 3] rdd = sc.parallelize(a) print(rdd.take(2)) \nActions : Count \u0026nbsp; 要素数を数えて返します\na = [1, 2, 3] rdd = sc.parallelize(a) rdd.count() \nActions : first \u0026nbsp; 一番最初の要素を返します\na = [1, 2, 3] rdd = sc.parallelize(a) rdd.first() \nActions : top \u0026nbsp; 大きいものからn個要素を返します\na = [1, 2, 3] rdd = sc.parallelize(a) rdd.top(2) \nActions : mean \u0026nbsp; 平均を返します\na = [1, 2, 3] rdd = sc.parallelize(a) rdd.mean() \nActions : sum \u0026nbsp; 合計を返します\na = [1, 2, 3] rdd = sc.parallelize(a) rdd.sum() \nActions : variance \u0026nbsp; 分散を返します\na = [1, 2, 3] rdd = sc.parallelize(a) rdd.variance() \nActions : stdev \u0026nbsp; 標準偏差を返します\na = [1, 2, 3] rdd = sc.parallelize(a) rdd.stdev() \nActions : saveAsTextFile \u0026nbsp; ファイルを保存します\nrdd.saveAsTextFile(\u0026#34;./words.txt\u0026#34;) \n遅延評価 \u0026nbsp; Sparkはビッグデータ処理に必須な遅延評価をサポートします。 遅延評価とは、値が必要になるまで、値の評価を後回しにすることです。Sparkのすべての変換処理は遅延評価のため、すぐに変換を実行せず、さらに変換を定義し続けることができます。最終的な最終結果が必要な場合は、Actionを実行します。これにより、変換が実行されます。\n永続化（キャッシング） \u0026nbsp; 上記、SparkのRDDは遅延評価されるため、Actionが呼ばれるたびにデータをロードして計算し直されるのが一般です。これでは非効率なので、同じRDDを何回もアクションで再利用したいのであれば、永続化させることで複数回計算されることを防ぐことができます。\n   永続化レベル 永続化先 シリアライズ     DISK_ONLY ディスクのみに格納 有   MEMORY_ONLY メモリのみに格納 無   MEMORY_ONLY_SER メモリのみに格納 有   MEMORY_AND_DISK メモリからあふれた分はディスクに格納 無   MEMORY_AND_DISK_SER メモリからあふれた分はディスクに格納 有    RDDに対する永続化宣言はRDD処理を記載する前に呼び出す必要があります。\na = [1, 2, 3] rdd = sc.parallelize(a) rdd.persist( pyspark.StorageLevel.MEMORY_AND_DISK_2 ) rdd.getStorageLevel() print(rdd.getStorageLevel()) \nメモリ容量を超える処理をする場合 \u0026nbsp; Spark経験者ならば「Sparkはよく落ちる」と話をしますが、これはオンメモリ上でMapReduce処理、メモリを保持して処理するため、メモリリソースが高いことから発生する問題です。これはメモリサイズが適切でないと、GCがFull状態、これによって、古いパーティションを保持した不要なメモリが解放されます。Full GC実行後、解放されたメモリ量が前回5回分のFull GCの2.5%を下回ると、JVMはOut of Memory例外を発生させ、落ちるようになります。 ※Sparkのデフォルトは、Executorに1GBのメモリが割り当てられています。 そのために、永続化を使って落ちないように処理するなど工夫が必要です。メモリで永続化の場合、メモリに収まり切らなかった場合、そのパーティションはディスクに書き出されます。 また、永続化を繰り返ししすぎるとディスクを消費（メモリに書ききれなかったからディスクに一時保持）するため処理が遅くなるなど問題が出ますので、利用しないRDDがあれば、unpersistなどで永続化を解除するなどチューニングをしてください。\nSpark SQL、Dataset、およびDataFrames API \u0026nbsp; Sparkの素晴らしいところは構造化、非構造化および半構造化データ（ビデオ分析、画像処理、テキストマイニングを含む）での分析や処理ができることです。ここで大量の構造化、非構造化および半構造化データがあるとして、Sparkはそれに応えるよう様々なAPIをサポートしています。SparkSQLはSparkデータエンジニアとデータサイエンスが構造化データを簡単に処理および分析できるように開発されました。DatasetはRDDに似ていますが、内部でははるかに効率的な処理エンジンを備えています。Spark2.0から、Dataset APIが主要なプログラミングインターフェイスになりました。DataFrameは、リレーショナルテーブルに非常によく似た名前付きの列を持つ単なるデータセットです。Spark SQLとDataFramesを組み合わせることで、構造化データの処理と分析のための強力なプログラミングインターフェイスが提供されます。Spark SQLとDataFramesの使用方法の簡単な例を次に示します。\nsc = spark.sparkContext path = \u0026#34;examples/src/main/resources/people.json\u0026#34; peopleDF = spark.read.json(path) # スキーマ表じ peopleDF.printSchema() # root # |-- age: long (nullable = true) # |-- name: string (nullable = true) # DataFrameを使用して一時的なビューを作成 peopleDF.createOrReplaceTempView(\u0026#34;people\u0026#34;) # Spark SQLでpeopleというテーブル（DataFrame）にクエリを投げます teenagerNamesDF = spark.sql(\u0026#34;SELECT name FROM people WHERE age BETWEEN 13 AND 19\u0026#34;) teenagerNamesDF.show() # +------+ # | name| # +------+ # |Justin| # +------+ # または次のJSONデータセットに対してDataFrameを作成することもできます。 jsonStrings = [\u0026#39;{\u0026#34;name\u0026#34;:\u0026#34;Yin\u0026#34;,\u0026#34;address\u0026#34;:{\u0026#34;city\u0026#34;:\u0026#34;Columbus\u0026#34;,\u0026#34;state\u0026#34;:\u0026#34;Ohio\u0026#34;}}\u0026#39;] otherPeopleRDD = sc.parallelize(jsonStrings) otherPeople = spark.read.json(otherPeopleRDD) otherPeople.show() # +---------------+----+ # | address|name| # +---------------+----+ # |[Columbus,Ohio]| Yin| # +---------------+----+ \nSpark Data Sources \u0026nbsp; Sparkは様々なデータソースを提供しています。CSV、XML、JSON、HDFS、Parquet、odbc、jdbc、などとあります。以下、いくつか例を記載します。\nCSV \u0026nbsp; CSVの読み込み方法です。\ndf = sc.textFile(\u0026#34;test.csv\u0026#34;).toDF([\u0026#39;Col1\u0026#39;,\u0026#39;Col2\u0026#39;]) \nXML \u0026nbsp; XMLの読み込み方法です。\ndf = sqlContext.read .option(\u0026#34;rowTag\u0026#34;, \u0026#34;book\u0026#34;) .load(\u0026#34;test.xml\u0026#34;) \nJSON \u0026nbsp; JSONの読み込み方法です。\ndf = spark.read.json(\u0026#34;test.json\u0026#34;) \nRelational Databases Using JDBC \u0026nbsp; JDBCドライバはMySQLの他 Oracle、SQL Server、PostgreSQLなどの他のリレーショナルデータベースもサポートしています。リレーショナルデータベースにJDBC/ODBCドライバーがある限り、Sparkからアクセスできます。パフォーマンスは、JDBC/ODBCドライバーのバッチ操作のサポートに依存となります。\njdbcDF = spark.read \\  .format(\u0026#34;jdbc\u0026#34;) \\  .option(\u0026#34;url\u0026#34;, \u0026#34;jdbc:postgresql:dbserver\u0026#34;) \\  .option(\u0026#34;dbtable\u0026#34;, \u0026#34;schema.tablename\u0026#34;) \\  .option(\u0026#34;user\u0026#34;, \u0026#34;username\u0026#34;) \\  .option(\u0026#34;password\u0026#34;, \u0026#34;password\u0026#34;) \\  .load() \nParquet \u0026nbsp; Parquetの読み込み方法です。\nparquetFile = spark.read.parquet(\u0026#34;people.parquet\u0026#34;) parquetFile.createOrReplaceTempView(\u0026#34;parquetFile\u0026#34;) teenagers = spark.sql(\u0026#34;SELECT name FROM parquetFile WHERE age \u0026gt;= 13 AND age \u0026lt;= 19\u0026#34;) teenagers.show() # +------+ # | name| # +------+ # |Justin| # +------+ \nSpark MLlib (DataFrame-Based API) \u0026nbsp; 機械学習（Machine Learning、以下MLと略します）はSparkの主要なアプリケーションの１つです。上記、DataFrameをベースとした、Spark MLlibによる機械学習ができます。DataFramesベースはRDDベースよりも高速で使いやすく、ユーザーはSQLを使用して、Catalystやデータ内容の最適化などができます。 SparkのDataFrameの優れてるところは、機械学習パイプラインで機能変換が容易に行えることです。図のように、元々のDataFrameから機械学習用のDataFrame2へ下準備（変換）、そしてTF-IDF（単語の頻度の評価、機械学習の一つ）を実施し、その結果をDataFrame3として出力することができます。この一連をPipelineと呼びます。\nPipeline \u0026nbsp; Pipelineは、機械学習のワークフローを作成するための接続された一連処理のことをさします。GPU演算処理が必要な大規模計算処理でも、このパイプラインを確立することで、並列分散で演算処理を行うことも可能なので、機械学習を行う上では重要な位置付けになります。\nTransformer \u0026nbsp; Transformerは入力としてDataFrameを受け取り、新しいDataFrameに追加の列が追加された新しいDataFrameを出力します。\n\nSpark MLlibによる機械学習の例を記載します。ここは使い方、イメージとして理解いただければと思います。より詳しいこと、Sparkによる機械学習、分散学習は別の章にて記載いたします。\nfrom ​pyspark.ml.linalg import Vectors from pyspark.ml.classification import LogisticRegression training = spark.createDataFrame([ (1.0, Vectors.dense([0.0, 1.1, 0.1])), (0.0, Vectors.dense([2.0, 1.0, -1.0])), (0.0, Vectors.dense([2.0, 1.3, 1.0])), (1.0, Vectors.dense([0.0, 1.2, -0.5]))], [\u0026quot;label\u0026quot;, \u0026quot;features\u0026quot;]) lr = LogisticRegression(maxIter=10, regParam=0.01) # Print out the parameters, documentation, and any default values. print(\u0026quot;LogisticRegression parameters:\\n\u0026quot; + lr.explainParams() + \u0026quot;\\n\u0026quot;) model1 = lr.fit(training) print(\u0026quot;Model 1 was fit using parameters: \u0026quot;) print(model1.extractParamMap()) paramMap = {lr.maxIter: 20} paramMap[lr.maxIter] = 30 # Specify 1 Param, overwriting the original maxIter. paramMap.update({lr.regParam: 0.1, lr.threshold: 0.55}) # Specify multiple Params. paramMap2 = {lr.probabilityCol: \u0026quot;myProbability\u0026quot;} # Change output column name paramMapCombined = paramMap.copy() paramMapCombined.update(paramMap2) model2 = lr.fit(training, paramMapCombined) print(\u0026quot;Model 2 was fit using parameters: \u0026quot;) print(model2.extractParamMap()) test = spark.createDataFrame([ (1.0, Vectors.dense([-1.0, 1.5, 1.3])), (0.0, Vectors.dense([3.0, 2.0, -0.1])), (1.0, Vectors.dense([0.0, 2.2, -1.5]))], [\u0026quot;label\u0026quot;, \u0026quot;features\u0026quot;]) prediction = model2.transform(test) result = prediction.select(\u0026quot;features\u0026quot;, \u0026quot;label\u0026quot;, \u0026quot;myProbability\u0026quot;, \u0026quot;prediction\u0026quot;) \\ .collect() for row in result: print(\u0026quot;features=%s, label=%s -\u0026gt; prob=%s, prediction=%s\u0026quot; % (row.features, row.label, row.myProbability, row.prediction))  \nGraphX \u0026nbsp; Sparkには、GraphXと呼ばれるグラフ処理フレームワークが含まれています。DataFramesに基づくGraphFramesと呼ばれる別のパッケージがあります。 GraphXは現在開発中・バージョンごとに仕様が変化している（進化段階）状態なので、本テクニカルガイドではGraphXは扱わず、詳しいことは本サイトにて確認頂ければ幸いです。 Spark Streaming \u0026nbsp; Spark2.0には、Structured Streamingと呼ばれる新しいストリーム処理フレームワークが含まれています。SparkSQLの上に構築された高レベルのストリーミングAPIです。別の章にて説明します。 まとめ \u0026nbsp; Apache Sparkは、ビッグデータ処理フレームワークとして強力な位置付けとなっています。データサイエンティスト、エンジニアはSparkが使いやすく、様々な画面で大いに役立ちます。Sparkがあることで、KuduやHBaseと連携処理することも可能ですし、他のHadoopエコシステムと連携することで更に利便になります。AlibabaCloudにはMaxCompute、E-MapReduce、ContainerにSparkを実装しており、Sparkをフル活用することでBigData運用が非常に楽になります。 "
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/container/03/image-management/",
	"title": "コンテナイメージ作成・管理",
	"tags": [],
	"description": "Alibaba Cloudでコンテナを活用する際のコンテナイメージ管理手法を紹介します。",
	"content": " 以下の区分により、コンテナを活用したAlibaba Cloudにおける開発手法を紹介いたします。\n 開発環境 コンテナイメージの作成・管理 コンテナデプロイ管理 ログ管理とモニタリング  本項目では、 コンテナイメージ作成・管理 に焦点を当てて、インターネットと接続しないプライベート環境における手法とインターネット上で利用可能なパブリックサービスを用いた手法の2種類を紹介します。その後、Alibaba Cloudにおける推奨を紹介します。\nコンテナイメージ管理  プライベート環境における手法 パブリックサービスを用いた手法 Alibaba Cloudにおける推奨  プライベート環境における手法 プライベート環境（外部公開していないサーバ）にてコンテナをビルドする時には、まずコンテナイメージをビルドするスクリプトを自身で作成します。その後、パイプラインツールを実行するサーバを作成してその上で、「コードソースの変更を検知して、ビルドスクリプトを実行、ビルドされたコンテナイメージをイメージリポジトリにプッシュする」仕組みを実装するのが一般的です。\nパイプラインツールはJenkinsが無償で利用でき、最も広く利用されています。パブリックサービスであるGitLabCIやCircleCIの有償パッケージを、プライベート環境に導入する事も可能です。コンテナイメージリポジトリは有償のDocker Trusted RegistryやGitlab Enterprise Registryが利用可能です。\n イメージビルド  Jenkins/JenkinsX GitLabCI CircleCI Enterprise  イメージレジストリ  Docker Trusted Registry Gitlab Enterprise Registry   パブリックサービスを用いた手法 パブリックサービスを用いてコンテナイメージをビルドする時も、自前でビルドスクリプトを作成する点は変更ありません。 ただ独自の環境変数やパイプライン処理が事前に提供されている為、Jenkins等のパイプラインツールよりも簡素的に実装できる事が多く、何よりサーバの管理が不要な為、運用における利便性に優れていると言えます。\n イメージビルド  GitLabCI CircleCI TravisCI  イメージレジストリ  Dockerhub Gitlab Registry   Alibaba Cloudでの選択肢 Alibaba CloudではContainer Registryというイメージサービスの機能の一つとしてコンテナのビルドが実行できます。 Container RegistryはGithub/Gitlab/Bitbucketのソースコードを読み取り、自動でビルドを実行して イメージをリポジトリにプッシュします。特徴的なのは他のサービスでは必要となるビルドスクリプトの作成や YAMLファイルが一切不要で、GUI操作のみで一貫してビルドからプッシュまでを設定できる点です。 この為、Container Registryは有用な選択肢の一つと言えるでしょう。\n イメージビルド・レジストリ  Container Registry   参考リンク一覧    タイトル URL     Alibaba Cloudのコンテナベストプラクティス https://www.alibabacloud.com/help/doc-detail/60951.htm   コンテナ自動ビルドの設定 https://www.alibabacloud.com/help/doc-detail/60997.htm    "
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/general/pricing/",
	"title": "料金体系",
	"tags": [],
	"description": "Alibaba Cloudを活用する上での料金体系に関するベストプラクティスを紹介します。",
	"content": " Tags ： AlibabaCloud Price Bill\n本文の概要は下記のとおりです。\n  Alibaba Cloud 料金の基本的な考え方の紹介 Alibaba Cloud 課金体系の紹介 Alibaba Cloud お支払い関連の紹介 代表的なプロダクトの料金体系の紹介  初めに  本文の目的は、Alibaba Cloud の課金ルールや料金計算方法などを紹介し、お客様のサービスにおける今後のコスト管理と最適化に役立つように、 AlibabaCloud の料金体系を理解してもらうことです。  基本概念  まず、買い物における一般的な料金関連の基本概念をいくつか紹介します。\nキーワード１：レンタル 一般的に、買い物は買った物に対する所有権の有無で２種類に分けられています。\n 所有権あり：お金を払った後、物の所有権がお客様に移るケース。購入後のすべての権利をお客様が所有する。例：りんごを買った後、自分で食べるか、捨てるか、または他人にあげるか、どのように処分しても構いません。\n 所有権なし：お金を払った後、物の所有権ではなく、一定期間内の使用権のみをお客様が所有するケース。例：ホテルの部屋に一週間泊まる場合、この一週間は部屋のものを使用する権利がありますが、破損してはいけません。また、一週間後にこの部屋から出なければなりません。\n  クラウド上の商品は、基本的にはお客様はデータセンターのリリース（CPU、DISK、NetWork）やアプリケーション（API）をある時間帯でレンタルし、自身のビジネスを行うという形です。なので、クラウド上料金の設定は基本的にはレンタル式の考え方です。\nキーワード２：前払いと後払い 買い物の際、お金を支払うタイミングによって、課金方法は前払いと後払いの 2 種類に分けられています。\n 前払い：サブスクリプション或いはプリペイド（Prepaid）という名前もよく使われています。支払いが行われた後にリソースを使用できます。これは一般的によく使用される支払い方法です。 後払い：従量課金或いはポストペイド（Postpaid）という名前もよく使われています。料金は実際の使用量に基づいて後で支払います。リソースはいつでも作成およびリリースできるため、とても柔軟性の高い支払い方法です。  2 つの課金方法は項目ごとにそれぞれメリットとデメリットがあります。比較の詳細は、下記表をご参照ください。\n   比較項目 サブスクリプション 従量課金     支払いタイミング 前払い 後払い   決済サイクル 週／月／年 １時間   柔軟性 低 高   平均単価 低 高   利用シーン 長時間利用 短時間利用   料金滞納リスク なし あり   すぐリリース 不可 可能    Alibaba Cloud はサブスクリプションと従量課金の両方をサポートしています。\nキーワード３：ライフサイクル 前述の通り、クラウド上のプロダクトは基本的にレンタル式でサービスを販売しているため、一つのサービスを利用開始してから、利用できなくなる（リソースがリリースされる）までの期間を一つのライフサイクルと言います。\nライフサイクルのステータス変化は支払い方式（サブスクリプションと従量課金）によって違います。サブスクリプションは購入したサービスの期限が切れるとリリースされますが、従量課金はお客様が手動でリリースしないかつ料金滞納が発生しない限り、サービスが自動的にリリースされることはありません。\nイメージについて、下記フロー図をご参照ください。\n サブスクリプションのライフサイクル  graph TB st((購入)) --\u0026gt; op0[利用開始] op0 --\u0026gt; op1[期限切れ] op1 --\u0026gt; op2{延長} op2 --失敗--\u0026gt; op3[15 日後サービス停止] op2 --成功--\u0026gt; op0 op3 --\u0026gt; op4[さらに15 日後データ削除] op4 --\u0026gt; en((リリース))  従量課金のライフサイクル  従量課金における料金滞納の影響範囲はアカウント内のすべての従量課金プロダクトです。\ngraph TB st((利用開始)) --\u0026gt; op1[料金滞納発生] op1 --\u0026gt; op2[3回課金再試行] op2 --\u0026gt; op3{滞納継続} op3 --no --\u0026gt; st op3 --yes --\u0026gt; op4[15 日後サービス停止] op4 --\u0026gt; op5[さらに15 日後データ削除] op5 --\u0026gt; en((リリース)) キーワード４：課金計算単位 クラウドサービスの利用料金を計算する場合は、使用量と使用時間で下記項目と計算単位を明確する必要があります。\n 最小課金項目 利用量 最小利用量単位 最小利用量単位単価 利用時間（時間制の場合） 決済時間単位（時間制の場合） 時間単位単価（時間制の場合）  仮に、現在クラウドサービス ECS は 3 つの課金項目があります。\n インスタンス利用料金：一時間単位課金(10円／時間) クラウドディスク料金：ストレージごとに一時間単位課金(1.5 円／GB／時間) ダウンロードトラフィック料金：トラフィック量ごとに課金（0.5円／GB）  このインスタンスの利用時間が 3 時間、クラウドディスクの利用料が 40GB、ダウンロードしたデータ量が 120GB の場合、課金額を計算すると下記表のとおりになります。\n   課金項目　 インスタンス クラウドディスク トラフィック     利用量 - 40GB 120GB   最小利用量単位 - 1GB 1GB   最小利用量単位単価 10円 1.5円 0.5円   利用時間 3時間 3時間 -   決済時間単位 1時間 1時間 -   時間単位単価 10円 1.5円 -   金額 3*10円 40*3*1.5円 120*0.5円    料金に関する一般的な概念の紹介は以上になります。\n次からは、具体的に課金項目の考え方や課金体系の詳細、支払いについてなどを紹介します。\n 課金項目  基本課金項目 Alibaba Cloud には、リソースの種類によって、コンピューティング、ストレージ、ネットワークトラフィック(アウトバウンドデータ転送)の 3 つの基本的なコスト要因があります。\n コンピューティング（Compute）\n 基本的にはインスタンスの費用を指します。インスタンスはスペック（CPU、メモリーサイズ）によって価格が異なります。 一部サービスの API は Alibaba Cloud のコンピューティングリソースを利用しており、お客様独自のインスタンスを使用しないユーザー全体の共用サービスであるため、API Call 回数という単位で課金されることが多いです。  ストレージ（Storage） ストレージの種類によって料金が異なります。基本的に GB 単位で一定期間内の使用料が徴収されます。\n ネットワークトラフィック（Network Traffic）\n   ネットワーク料金について、データ転送 (アウトバウンド) は有料ですが、インバウンドデータ転送、または同じリージョン内の他の Alibaba Cloud サービス間でのデータ転送は無料です。\n これらの特性は使用している Alibaba Cloud 製品によって多少異なりますが、基本的にはこれらがコストのコア部分になります。それ以外は、各プロダクトの特徴次第で独自の課金項目が存在するものもあります。\nプロダクト独自課金項目 インフラリソース（Compute、Storage、Network）以外は、プロダクトの特徴次第でいくつか課金される項目があります。例として、以下の項目があります。\n プロダクトのエンタープライズバージョン費（例：DataV、DNS） 工事費（例：ExpressConnect など工事が必要なプロダクト） SSL証明書（第三者提供サービス）  具体的には、各プロダクトの料金紹介 ページをご参照ください。\n 課金体系  基本概念のセッションでも紹介しましたが、Alibaba Cloud は基本的にサブスクリプションと従量課金の二種類の課金方法を提供しています。プロダクトの従量課金と合わせてリソースパッケージ（例：トラフィックパッケージ）も提供されています。\n各課金方法の特徴について、具体的に紹介します。\nサブスクリプション サブスクリプションは、支払った後にリソースを使用できる前払いの一種です。\n 基本オプション  アップグレードとダウングレード サブスクリプションの延長（自動更新） サブスクリプションの中止   ※ プロダクトによって自動更新オプションとアップグレード／ダウングレードオプションは提供しない場合もあります。\n 料金と課金期間 サブスクリプションの平均料金は、従量課金よりも低くなります。リソースを大量に使用するユーザーには、ぴったりの料金プランです。料金プランは、基本的には年間サブスクリプションと月額サブスクリプションの 2 週類があります。 課金期間は、リソースが有効化された時刻から始まり、1 か月後または 1 年後の翌日の 00:00:00 に終了します。 \u0026gt;たとえば、2017 年 3 月 12 日 13:23:56 に月払いサブスクリプションモードで ECS インスタンスを有効化すると、インスタンスの最初の課金サイクルは 2017 年 4 月 13 日 00:00:00 に終了します。\n ライフサイクル管理（T+15+15 方針） 有効期限切れのサブスクリプションインスタンスのステータスについて、関連リソースのステータス遷移は以下の表のとおりになります。\n     期限　 自動更新有効     有効期限日当日(T) 正常に稼働   期限切れ15日後(T+15) サービス停止、データは保留   期限切れ30日後(T+30) リソースリリース、データ削除    従量課金 従量課金では、実際に使用したリソース量に応じて料金が請求されます。 この方式により、随時要求に応じてリソースの有効化、リリース、購入が可能で、ビジネスの成長に合わせてスケールアップすることもできます。 多くのリソースが無駄になってしまうこともある従来のホストへの投資に比べ、30% から 80% 程コストを削減することができます。\n 決済サイクル 従量課金リソースは 1 秒ごとに課金されますが、決済は 1 時間ごとです。 以下の点にご注意ください。\n 従量課金リソースの支払いは、使用後に、ご利用のアカウントで課金されている他のプロダクトと合わせて決済されます。 通常、ご利用のアカウントの累積の月間消費額が １万円 未満の場合、翌月の初日に料金が差し引かれます。  課金項目 クラウド製品は、課金方式および製品自体の特性に従って、同じクラウド製品/サービスで複数の課金項目を定義することができます。クラウド製品に複数のサービスフォームの組み合わせがある場合は、複数の課金項目を定義する必要があります。 例：OSS サービスの課金項目\n ストレージ料金 インターネットへのデータ転送料金 API リクエスト料金  ライフサイクル管理（T+15+15 方針） 1 回の決済期間に従量課金のリソース料金の支払いに 3 回失敗した場合、関連するリソースのステータス変更はサブスクリプションと同じ、T+15日後でリソース停止、T+30でリソースリリースされ、データも削除されます。 例：従量課金 ECS インスタンスの決済処理は、以下のフローチャートのようになります。 支払期限を 3 月 1 日と仮定しています。  インスタンス停止後の課金\n   Alibaba Cloud では、従量課金のインスタンスが停止しても、リソースをリリースしない限り課金され続けます。\n ECS には、停止したインスタンス（VPC 接続）には課金されない という機能が導入されています。この機能を有効にすると、停止済みステータスになったときに、VPC 接続の従量課金インスタンスに料金を支払う必要はありません。詳細は、こちら を参照ください。\nリソースパッケージ リソースパッケージは従量課金の補足として使われています。一部リソース（例えばトラフィック）は事前に使用量を予測するのが難しいため、実際の使用量に応じた課金方法でしか対応できません。このようなリソースを Prepay でも使用できるように、リソースパッケージが作成されました。リソースパッケージを使用すると、リソースパッケージ内のリソース量が優先的に差し引かれます。超過した部分は従量課金で課金されます。 通常のサブスクリプションとリソースパッケージの比較について、下記をご参照ください。\n   比較項目　 サブスクリプション リソースパッケージ     課金方式 Prepay Prepay   購買単位 時間単位(月／年) リソース単位（通常はGB）   リソースタイプ Computing Storage, Outbound Traffic   使い切る場合 リリースされる 従量課金として課金される     価格と割引  Alibaba Cloud の価格影響要因や無料利用枠など、お客様のコスト削減に役立つ内容を紹介します。\n価格の影響要因  リージョン  基本的にはデータセンター所在国（地域）の場所によって、ハードウェアとネットワークのコストが違うため、クラウドプロダクトの料金も違います。  スペック  インスタンスタイプによって、使ってるリソース（コンピューティング、ストーレッジ）が違います。従って、プロダクトを買う前に、お客様の業務ニーズに合わせたスペックをご選択ください。  利用量 - 一部プロダクトのストーレッジとトラフィックは使用料が多くなるほど、単価料金が安くなります。 バージョン - DNS、DataVなどプロダクトのバージョンによって機能が違うため、料金も大きく違います。  割引と無料利用枠 お客様が手軽にAlibaba Cloud の製品の利用を開始できるように、一部プロダクトでは個別に無料利用枠が用意されており、トライアル費用を抑えることができます。\n プロダクト個別の無料利用枠  OSS、MaxComputeなどのプロダクトは、最初の何Gストーレッジ無料枠が持っています。具体的には各プロダクトの料金ページにご確認ください。  年間購入割引  一部プロダクトは長い期間（１年間毎に）で購入する場合は、15％の割引があります。詳細について各プロダクトの購入ページにご確認ください。    支払い関連  支払い方法  クレジットカードよりの支払い 個人でも法人でもクレジットカードのご利用が可能です。クレジットカードの制限について、関連ドキュメントにご参照ください。 NP掛け払い 法人のみの利用は可能です。詳細について担当営業にお尋ねください。    プロダクト別注意事項  料金の全体ルールに加えて、カテゴリーごとに Alibaba Cloud 基本プロダクトの料金を紹介します。製品および課金体系ごとの具体的な料金は、Alibaba Cloud 料金表 でご覧いただけます。\nCompute  EIPの保持料金 - EIPの費用が２つ部分を含まれています。「EIP アドレス保持料」と「トラフィック料金」。 -　EIPはECSとSLBにバインディングした場合は、EIP アドレス保持料が発生しません。それ以外の場合は「EIP アドレス保持料」が発生します。  "
},
{
	"uri": "https://www.sbcloud.co.jp/help/getting-started/cloud-users/",
	"title": "AWS/Azure/GCPユーザ向け",
	"tags": [],
	"description": "AWS/Azure/GCPに詳しいユーザがAlibaba Cloudを利用する上で有益な情報を紹介します。",
	"content": ""
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/web-application/",
	"title": "Webアプリケーション",
	"tags": [],
	"description": "WebアプリケーションをAlibaba Cloudでどのように構築するかのシナリオを記載します。",
	"content": ""
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/terraform/03/sample-project/",
	"title": "サンプルプロジェクトの作成",
	"tags": [],
	"description": "Alibaba Cloudでも用いられるTerraformのサンプルプロジェクトを提供します。",
	"content": " \u0026nbsp; ここまででTerraform のインストール方法を学びました。それではサンプルプロジェクトを作成します。簡単なWebサーバを立ち上げながら、Terraformの流れや中身を確認します。 1. ディレクトリ・ファイル構成 \u0026nbsp; Terraformのファイルの拡張子は *.tf です。実行時、同じディレクトリの *.tf ファイルがマージされますので、基本は以下3ファイルに分けてそれぞれの用途・目的に応じた記載・運用がベターです。\nmain.tf … モジュールが内包するリソース、データソースなどの定義 outputs.tf … モジュールが出力するAttributeの定義 variables.tf … モジュールが受け取る変数の定義  main.tf には どのプロパイダを使うかを記載します。 階層化は任意ですが、.tfから別のフォルダの.tfに記載されてる変数を取り出すためにルートディレクトリを指定することがありますのでそこは注意が必要です。apply (=実行) にて分離実行することも可能です。 例えば以下のようにプロダクトサービス毎にフォルダを作成し、それぞれのリソースを作成しても、最終的には一つへまとめれます。\n├── main.tf ├── output.tf ├── variables.tf │ ├── region │├── VPC ││├── main.tf ││├── output.tf ││└── variables.tf ││ │├── ECS ││├── main.tf ││├── output.tf ││└── variables.tf ・ ・ ・  \u0026nbsp; RAMなど他者へ渡したくない情報がある場合、別途設定ファイル（ confing.tfvars など）へ記載し、実行時は -var-file引数で 設定ファイルを読み取り実行することができます。\n├── main.tf ├── output.tf ├── variables.tf ├── confing.tfvars │ ├── region │├── VPC ││├── main.tf ││├── output.tf ││└── variables.tf ││ │├── ECS ││├── main.tf ││├── output.tf ││└── variables.tf ・ ・ ・  ▼設定ファイル confing.tfvars の中身\naccess_key = \u0026quot;xxxxxxxxxxxxxxxxxx\u0026quot; secret_key = \u0026quot;xxxxxxxxxxxxxxxxxx\u0026quot; region = \u0026quot;ap-northeast-1\u0026quot; zone = \u0026quot;ap-northeast-1a\u0026quot;  \u0026nbsp; 記載した設定ファイルconfing.tfvars を紐つけて実行するには以下のコマンドで実行します。詳細は以下にて後述します。\n▼設定ファイルconfing.tfvars を紐つけて実行する方法\n$ terraform plan -var-file=\u0026quot;confing.tfvars\u0026quot; $ terraform apply -var-file=\u0026quot;confing.tfvars\u0026quot;  \n2. リソースの作成 \u0026nbsp; 事前準備として、まずは適当なディレクトリに main.tf というファイルを作ります。\n▼リソースの作成\n$ mkdir ECS $ cd ECS $ touch main.tf  2.1 HCL (HashiCorp Configuration Language) \u0026nbsp; Terraformのコードは HashiCorp社が設計したHCL(HashiCorp Configuration Language)という言語で実装しています。VPCやセキュリティグループ、ECSインスタンスのようなリソースは「resource」ブロックで定義します。\n\u0026nbsp; 上記 2 で作成した main.tf をエディタで開き、下記のように実装します。このコードはAlibaba CloudとしてVPC作成、セキュリティグループ設定、CentOS 7.4 のImageID をベースとしたECSインスタンスを作成します。\n▼ECS インスタンス起動 main.tf の中身\nvariable \u0026quot;access_key\u0026quot; {} variable \u0026quot;secret_key\u0026quot; {} variable \u0026quot;region\u0026quot; {} variable \u0026quot;zone\u0026quot; {} provider \u0026quot;alicloud\u0026quot; { access_key = \u0026quot;${var.access_key}\u0026quot; secret_key = \u0026quot;${var.secret_key}\u0026quot; region = \u0026quot;${var.region}\u0026quot; } resource \u0026quot;alicloud_vpc\u0026quot; \u0026quot;vpc\u0026quot; { name = \u0026quot;ECS_instance_for_terraform-vpc\u0026quot; cidr_block = \u0026quot;192.168.1.0/24\u0026quot; } resource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;vsw\u0026quot; { vpc_id = \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; cidr_block = \u0026quot;192.168.1.0/28\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; } resource \u0026quot;alicloud_security_group\u0026quot; \u0026quot;sg\u0026quot; { name = \u0026quot;ECS_instance_for_terraform-sg\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; } resource \u0026quot;alicloud_security_group_rule\u0026quot; \u0026quot;allow_http\u0026quot; { type = \u0026quot;ingress\u0026quot; ip_protocol = \u0026quot;tcp\u0026quot; nic_type = \u0026quot;intranet\u0026quot; policy = \u0026quot;accept\u0026quot; port_range = \u0026quot;80/80\u0026quot; priority = 1 security_group_id = \u0026quot;${alicloud_security_group.sg.id}\u0026quot; cidr_ip = \u0026quot;0.0.0.0/0\u0026quot; } resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;ECS_instance\u0026quot; { instance_name = \u0026quot;ECS_instance_for_terraform\u0026quot; host_name = \u0026quot;ECS_instance_for_terraform\u0026quot; instance_type = \u0026quot;ecs.n4.small\u0026quot; image_id = \u0026quot;centos_7_04_64_20G_alibase_201701015.vhd\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.sg.id}\u0026quot;] availability_zone = \u0026quot;${var.zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; user_data = \u0026quot;${file(\u0026quot;provisioning.sh\u0026quot;)}\u0026quot; }  \u0026nbsp; ユーザデータ provisioning.sh も以下のように作成します。ECS起動後、実行してくれる処理内容になります。\n▼ユーザデータ provisioning.sh の中身\n#!/bin/sh yum install -y httpd systemctl start httpd systemctl enable httpd  2.2 AlibabaCloudリソースの意味と説明 \u0026nbsp; 上記リスト 2.1で作成したAlibabaCloudリソースについて説明します。Terraformに各種リソースを作成させるのはresource変数です。resource変数はリソース名と識別名を指定し、括弧の中にて実行内容を記載します。\n2.3 variable \u0026ldquo;xxxxx\u0026rdquo; {} （外部変数） \u0026nbsp; RAMなどの情報を他ユーザへ渡したくない場合、別途設定ファイル confing.tfvars へ以下の内容を記載します。variableは宣言変数です。この設定ファイルconfing.tfvars をリンクし実行した時、confing.tfvars の変数を外部変数として読み取ってくれます。\nvariable \u0026quot;access_key\u0026quot; {} variable \u0026quot;secret_key\u0026quot; {} variable \u0026quot;region\u0026quot; {} variable \u0026quot;zone\u0026quot; {}  2.4 provider \u0026nbsp; TerraformはAlibabaCloudだけでなく AWSやGCP、Azureなどにも対応しています。各クラウドサービス毎に機能や構成が全く違いますが、それを抑えるのがprovider変数の役割です。provider変数は変更することができます。\nprovider \u0026quot;alicloud\u0026quot; { access_key = \u0026quot;${var.access_key}\u0026quot; secret_key = \u0026quot;${var.secret_key}\u0026quot; region = \u0026quot;${var.region}\u0026quot; }  \u0026nbsp; Terraformを実行するためのRAMアクセスキーおよびセキュリティキーです。こちらは別途設定ファイル confing.tfvars から外部変数としてリンクします。\naccess_key = \u0026quot;${var.access_key}\u0026quot; secret_key = \u0026quot;${var.secret_key}\u0026quot;  \u0026nbsp; 以下はリージョンを定義します。リージョンごとに使えるサービス・使えないサービス、機能、制限事項や仕様がありますので、必ず指定する必要があります。\nregion = \u0026quot;${var.region}\u0026quot;  2.5 VPC \u0026nbsp; VPCを作成するコードです。\nresource \u0026quot;alicloud_vpc\u0026quot; \u0026quot;vpc\u0026quot; { name = \u0026quot;ECS_instance_for_terraform-vpc\u0026quot; cidr_block = \u0026quot;192.168.1.0/24\u0026quot; }  \u0026nbsp; 上記で記載したリソース以外にオプション（任意）でパラメータや構成を指定することもできます。\n cidr_block - （必須）VPCのCIDRブロック。この例では24bitまでをネットワーク部とする設定をしています。 name - （オプション）VPCの名前。デフォルトはnullです。 description - （オプション）VPCの説明。デフォルトはnullです。  \u0026nbsp; このリソースを実行することにより、以下のVPC属性情報が出力されます。\n id - VPCのID。 cidr_block - VPCのCIDRブロック。 name - VPCの名前。 router_id - VPC作成時にデフォルトで作成されたルータのID。 route_table_id - VPC作成時にデフォルトで作成されたルータのルートテーブルID。  \u0026nbsp; 詳しくはAliCloudのterraform-VPCリファレンスを参照してください。\n2.6 VPC_SWITCH \u0026nbsp; VPC_SWITCHを作成するコードです。\nresource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;vsw\u0026quot; { vpc_id = \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; cidr_block = \u0026quot;192.168.1.0/28\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; }  \u0026nbsp; VPC_SWITCHも上記で記載したリソース以外にオプション（任意）でパラメータや構成を指定することもできます。\n availability_zone - （必須）スイッチのAZ。 vpc_id - （必須）VPC ID。 cidr_block - （必須）スイッチのCIDR block。 name - （任意）スイッチの名前。デフォルトはnullです。 description - （オプション）スイッチの説明。デフォルトはnullです。  \u0026nbsp; このリソースを実行することにより、以下のVPC_SWITCH属性情報が出力されます。\n id - スイッチのID availability_zone スイッチのAZ cidr_block - スイッチのCIDRブロック vpc_id - VPC ID name - スイッチの名前  \u0026nbsp; 詳しくはAliCloudのterraform-VPC_SWITCHリファレンスを参照してください。\n2.7 セキュリティグループ \u0026nbsp; セキュリティグループを作成するコードです。\nresource \u0026quot;alicloud_security_group\u0026quot; \u0026quot;sg\u0026quot; { name = \u0026quot;ECS_instance_for_terraform-sg\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; }  \u0026nbsp; セキュリティグループも同様、上記で記載したリソース以外にオプション（任意）でパラメータや構成を指定することもできます。\n name - （オプション）セキュリティグループの名前。デフォルトはnullです。 description - （オプション）セキュリティグループの説明。デフォルトはnullです。 vpc_id - （オプション）対象のVPC IDを指定します。  \u0026nbsp; このリソースを実行することにより、以下の属性情報が出力されます。\n id - セキュリティグループのID name - セキュリティグループの名前  \u0026nbsp; 詳しくはAliCloudのterraform-セキュリティグループ リファレンスを参照してください。\n2.8 セキュリティグループルールリソース \u0026nbsp; 先ほどはセキュリティグループを宣言しましたが、ルールは別途記載する必要があります。セキュリティグループルールリソースを作成・実装するコードです。\nresource \u0026quot;alicloud_security_group_rule\u0026quot; \u0026quot;allow_http\u0026quot; { type = \u0026quot;ingress\u0026quot; ip_protocol = \u0026quot;tcp\u0026quot; nic_type = \u0026quot;intranet\u0026quot; policy = \u0026quot;accept\u0026quot; port_range = \u0026quot;80/80\u0026quot; priority = 1 security_group_id = \u0026quot;${alicloud_security_group.sg.id}\u0026quot; cidr_ip = \u0026quot;0.0.0.0/0\u0026quot; }  \u0026nbsp; セキュリティグループルールも同様、上記で記載したリソース以外にオプション（任意）でパラメータや構成を指定することもできます。\n type - （必須）作成中のルールの種類。有効なオプションはingress（着信）またはegress（発信）です。 ip_protocol - （必須）プロトコル。することができtcp、udp、icmp、greまたはall。 port_range - （必須）IPプロトコルに関連するポート番号の範囲。デフォルトは \u0026ldquo;-1 / -1\u0026rdquo;です。プロトコルがtcpまたはudpの場合、各サイドポート番号の範囲は1〜65535で、「 - 1 / -1」は無効になります。たとえば1/200、ポート番号の範囲は1〜200です。他のプロトコルport_rangeは \u0026ldquo;-1 / -1\u0026rdquo;のみであり、他の値は無効になります。 security_group_id - （必須）この規則を適用するセキュリティグループ。 nic_type - （オプション）ネットワークタイプのいずれinternetかintranetを指定できます。 internet - （オプション）デフォルト値はinternetです。 policy- （オプション）認可ポリシーは、いずれacceptかdropになりますaccept。デフォルト値はです。 priority- （オプション）許可ポリシーの優先順位。パラメータ値：1-100、デフォルト値：1。 cidr_ip - （オプション）ターゲットIPアドレス範囲。デフォルト値は0.0.0.0/0です（これは制限が適用されないことを意味します）。サポートされているその他の形式は10.159.6.18/12です。IPv4のみがサポートされています。 source_security_group_id - （オプション）同じリージョン内のターゲットセキュリティグループID。このフィールドを指定した場合は、nic_type選択できるだけintranetです。 source_group_owner_account - （オプション）セキュリティグループがアカウント間で承認されている場合のターゲットセキュリティグループのAlibaba CloudユーザーアカウントID。このパラメータは、cidr_ipすでに設定されている場合は無効です。  \u0026nbsp; このリソースを実行することにより、以下の属性情報が出力されます。\n id - セキュリティグループルールのID type - ルールのタイプ、ingressまたはegress name - セキュリティグループの名前 port_range - ポート番号の範囲 ip_protocol - セキュリティグループルールのプロトコル  \u0026nbsp; 詳しくはAliCloudのterraform-セキュリティグループルール リファレンスを参照してください。\n2.9 ECSインスタンスリソース \u0026nbsp; 先ほどはVPCやセキュリティグループを作成しました。今度はECSインスタンスを作成してみます。\nresource \u0026quot;alicloud_instance\u0026quot; \u0026quot;ECS_instance\u0026quot; { instance_name = \u0026quot;ECS_instance_for_terraform\u0026quot; host_name = \u0026quot;ECS_instance_for_terraform\u0026quot; instance_type = \u0026quot;ecs.n4.small\u0026quot; image_id = \u0026quot;centos_7_04_64_20G_alibase_201701015.vhd\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.sg.id}\u0026quot;] availability_zone = \u0026quot;${var.zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; }  \u0026nbsp; ECSインスタンス生成リソースは多くのオプション（任意）でパラメータや構成を指定できます。ECSインスタンスはVPCやセキュリティグループとは少し異なり、OSやバージョン選定、起動時データ引き渡しやECS使い捨て利用など様々な利用方法が実現出来るため、ここは抑えておきましょう。\n image_id - （必須）インスタンスに使用するイメージ。ECSインスタンスの画像は \u0026lsquo;image_id\u0026rsquo;を変更することで置き換えることができます。変更されると、インスタンスは再起動して変更を有効にします。 instance_type - （必須）起動するインスタンスの種類。 is_outdated - （オプション）古いインスタンスタイプを使用するかどうか。デフォルトはfalseです。 security_groups - （必須）関連付けるセキュリティグループIDのリスト。 availability_zone - （省略可能）インスタンスを起動するゾーン。無視され、設定時に計算されvswitch_idます。 instance_name - （オプション）ECSの名前。このinstancenameは2から128文字のストリングを持つことができ、 \u0026ldquo; - \u0026ldquo;、 \u0026ldquo;。\u0026rdquo;、 \u0026ldquo;\u0026ldquo;などの英数字またはハイフンのみを含む必要があり、ハイフンで始まったり終わったりしてはなりません。 ：//またはhttps：// 指定されていない場合、Terraformはデフォルトの名前ECS-Instanceを自動的に生成します。 system_disk_category - （オプション）有効な値はcloud_efficiency、cloud_ssdおよびcloudです。cloudI / Oに最適化されていないインスタンスにのみ使用されます。デフォルトはcloud_efficiencyです。 system_disk_size - （オプション）システムディスクのサイズ（GiB単位）。値の範囲：[20、500]。指定された値は、max {20、Imagesize}以上でなければなりません。デフォルト値：最大{40、ImageSize}。システムディスクの交換時にECSインスタンスのシステムディスクをリセットできます。 description - （オプション）インスタンスの説明。この説明には2〜256文字の文字列を使用できます。http：//またはhttps：//で始めることはできません。デフォルト値はnullです。 internet_charge_type - （オプション）インスタンスのインターネット料金タイプ。有効な値はPayByBandwidth、PayByTrafficです。デフォルトはPayByTrafficです。現在、 \u0026lsquo;PrePaid\u0026rsquo;インスタンスは、値を \u0026ldquo;PayByTraffic\u0026rdquo;から \u0026ldquo;PayByBandwidth\u0026rdquo;に変更することはできません。 internet_max_bandwidth_in - （オプション）パブリックネットワークからの最大着信帯域幅。Mbps（Mega bit per second）で測定されます。値の範囲：[1、200]。この値が指定されていない場合は、自動的に200 Mbpsに設定されます。 internet_max_bandwidth_out - （オプション）パブリックネットワークへの最大発信帯域幅。Mbps（メガビット/秒）で測定されます。値の範囲：[0、100]。デフォルトは0 Mbpsです。 host_name - （任意）ECSのホスト名。2文字以上の文字列です。「hostname」は「。」または「 - 」で始めたり終わらせたりすることはできません。また、2つ以上の連続した「。」または「 - 」記号は使用できません。Windowsでは、ホスト名には最大15文字を含めることができます。これは、大文字/小文字、数字、および「 - 」の組み合わせにすることができます。ホスト名にドット（「。」）を含めることも、数字だけを含めることもできません。Linuxなどの他のOSでは、ホスト名は最大30文字で、ドット（ \u0026ldquo;。\u0026rdquo;）で区切ったセグメントにすることができます。各セグメントには、大文字/小文字、数字、または \u0026ldquo;_\u0026ldquo;を含めることができます。変更されると、インスタンスは再起動して変更を有効にします。 password - （オプション）インスタンスへのパスワードは8〜30文字の文字列です。大文字と小文字、および数字を含める必要がありますが、特殊記号を含めることはできません。変更されると、インスタンスは再起動して変更を有効にします。 vswitch_id - （オプション）VPCで起動する仮想スイッチID。従来のネットワークインスタンスを作成できない場合は、このパラメータを設定する必要があります。  \u0026nbsp; このリソースを実行することにより、以下の属性情報が出力されます。出力された属性情報をベースに他のリソースを作ることも可能です。\n id - インスタンスID availability_zone - インスタンスを起動するゾーン。 instance_name - インスタンス名 host_name - インスタンスのホスト名。 description - インスタンスの説明 status - インスタンスのステータス。 image_id - インスタンスのイメージID。 instance_type - インスタンスタイプ private_ip - インスタンスのプライベートIP。 public_ip - インスタンスパブリックIP。 vswitch_id - インスタンスがVPCで作成された場合、この値は仮想スイッチIDです。 tags - インスタンスタグは、jsonencode（item）を使って値を表示します。 key_name - ECSインスタンスにバインドされているキーペアの名前。 role_name - ECSインスタンスにバインドされているRAMロールの名前。 user_data - ユーザーデータのハッシュ値。 period - 期間を使用しているECSインスタンス。 period_unit - 期間単位を使用しているECSインスタンス。 renewal_status - ECSインスタンスは自動的にステータスを更新します。 auto_renew_period - インスタンスの自動更新期間 dry_run - 事前検出するかどうか。 spot_strategy - Pay-As-You-Goインスタンスのスポット戦略 spot_price_limit - インスタンスの1時間あたりの料金しきい値。  \u0026nbsp; 他、ECSに関しては様々な入出力オプションが備わってるため、RDSやOSSなど様々なサービスと連携することも可能です。詳しくはAliCloudのterraform-ECSインスタンス リファレンスを参照してください。\n2.10 他のリソースについて \u0026nbsp; ここまではリソースのソースコードについて説明しました。他プロダクトサービスのリソースソースコード作成についてはHashiCorpによるAlibabaCloudのTerraformガイドラインを参照のうえ、各自作成してみてください。本ガイドラインにもいくつかのサンプルコードを準備しています。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/scenario/",
	"title": "ユースケース別シナリオ",
	"tags": [],
	"description": "ユースケースに沿ったAlibaba Cloudの構築シナリオを記載します。",
	"content": ""
},
{
	"uri": "https://www.sbcloud.co.jp/help/scenario/terraform/",
	"title": "Terraform",
	"tags": [],
	"description": "AlibabaCloudにおけるTerraformの実践例を記載します。",
	"content": "\u0026nbsp; 本章はゴールとなる構成図、完成像からTerraformを使ってリソースを作成します。 この実践例は初心者でもわかりやすいようにモジュールは非使用、main.tf、variables.tf、output.tf、confing.tfvars、provisioning.shの４つのファイルに分けて作成します。（kubernetesなど一部例外もありますし、provisioning.shが空白の事例もあります。またTerraformはリソースごとにimmutableとnot_immutableで分けてフォルダ・ファイル構成をするのが理想ですが、ここは同フォルダにて同様配置を前提とします。）\nこのサンプルで実行したTerraformのバージョンはTerraform v0.11.13、tfenv 0.6.0になります。Terraformのバージョン情報は以下の記事を参照ください。\nhttps://www.sbcloud.co.jp/help/best-practice/terraform/02/install/index.html\n\n実践例の実行方法の流れとしては、実行したいコードを空のディレクトリに保存（格納）し、コードを実行するだけです。なので他のプロジェクトの実行ファイル.tfと混ざらないように注意してください。\n\nコードを実行するときは confing.tfvars にて各自の個人情報を入力してください。\naccess_key = \u0026quot;xxxxxxxxxxxxxxxxx\u0026quot; secret_key = \u0026quot;xxxxxxxxxxxxxxxxx\u0026quot;  \nあとは以下のコマンドで実行できます。\nterraform init terraform play -var-file=\u0026quot;confing.tfvars\u0026quot; terraform apply -var-file=\u0026quot;confing.tfvars\u0026quot;  \nもし作成したリソースを削除、解放したい場合は、諸元となるソースコードを一切変更せずに このコマンドを実行します。これで作成したリソースを破棄できます。\nterraform destroy -var-file=\u0026quot;confing.tfvars\u0026quot;  それではTerraformを使って誰でも簡単にAlibabaCloudによるリソース作成をしてみましょう。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/web-application/03/loadbalancer/",
	"title": "負荷分散",
	"tags": [],
	"description": "Alibaba Cloudを用いたWeb三層アーキテクチャを紹介します。",
	"content": " 以下の区分により、Alibaba Cloudを活用したWebアプリケーション構築手法を紹介いたします。\n 名前解決 負荷分散 Web/APサーバ データベース/キャッシュ  本項目では、Alibaba Cloudの負荷分散に関するサービスの基本仕様と設計ポイントを紹介します。\n負荷分散  対象サービス 基本的な仕様 設計のポイント 参考リンク一覧  対象サービス Webアプリケーションにおいて負荷分散を実現するサービスを3つ紹介します。ひとつはロードバランサーの役割を担うServer Load Balancerです。もうひとつは、jpegやcss等の静的ファイルを公開する際に用いるObject Storage Serviceです。最後に、コンテンツデリバリーサービスとして機能するAlibaba CDNです。以上の3つのサービスを活用する事で、可用性の高いWebアプリケーションを実現します。\n基本的な仕様 Server Load Balancer (SLB)  SLBインスタンスを作成する際、以下のパラメータを入力します。\n インスタンス名\n スペック\n インターネット公開かイントラネット公開か\n アベイラビリティゾーンの設定\n プライマリゾーンとバックアップゾーン\n   バックエンドに複数のECSからなるサーバグループを指定、ヘルスチェックを有効化して、疎通確認します。\n SLBインスタンスのIPアドレスもしくはCNAMEを、A/CNAMEレコード登録してドメインとして公開します。\n SLBインスタンスに付与されたIPアドレスは静的であり、動的変更されません。\n 証明書を登録して、SSLアクセラレータとして機能させます。\n WebSocketやHTTP2.0、セッション維持の有効・無効を指定できます。\n 物理ロードバランサと同じようなセキュリティルールを設定してアクセス制御します。同ルールには以下が含まれます。\n アクセスの許可もしくは禁止（ホワイトリストとブラックリストの双方として機能する）\n プロトコルとポート番号\n 1~100までの優先番号をつけ、数字が小さい方から優先適用\n     Object Storage Service (OSS)  バケットを作成して、その配下にファイルをアップロードして利用します。\n オブジェクトストレージとして一般的なGET/HEAD/PUT/POST/DELETEに対応しています。\n バケットには標準ストレージ、低頻度アクセスストレージ、アーカイブストレージと3種類のタイプがあります。\n Web公開する機能を有しています。\n HTMLを置いて、Sorryサーバとして機能させる事ができます。\n SDKを介してアクセストークンによる限定公開も設定できます。\n  リファラーホワイトリスト設定をしてアクセス制御が可能です。\n ファイルをOSSにアップロードする前に、クライアント側で暗号化する事ができます。\n サーバー側での暗号化も可能です。\n SDKを介したファイルのアップロード結果は以下のように確認できます。\nresult = bucket.put_object(\u0026#39;\u0026lt;yourObjectName\u0026gt;\u0026#39;, \u0026#39;content of object\u0026#39;) # HTTP return code print(\u0026#39;http status: {0}\u0026#39;.format(result.status)) Log Serviceというサービスを併用してアプリケーションのログをアップロードする事も可能です。\n    Alibaba Cloud CDN  CDNを適用したいドメイン名を登録すると、CDNとしてのFQDNが発行されます。発行されたFQDNをCNAMEとして登録します。\n例：\u0026rdquo;.example.com\u0026rdquo;をCDNに登録後、\u0026rdquo;foo.bar.com\u0026rdquo;が発行される。CNAMEレコードとして\u0026rdquo;foo.bar.com\u0026rdquo;のValueを\u0026rdquo;.example.com\u0026rdquo;でDomainに登録 最適化配信の為に、コンテンツタイプを以下から選択します。\n Image and Small File\n Large File Download\n VOD (Video on Demand)\n Live Streaming\n DCDN（Dynamic CDN）: コンテンツタイプ、URI、リクエスト方法、カスタム HTTP ヘッダーを指定することで、動的コンテンツと静的コンテンツを区別して配信する。\n- CDNのオリジン設定は以下から対象を選択します。  OSS Domain  IP  Origin Domain  FC Domain (Function Compute Domain) - 対象リージョンを以下から選択します。中国を含む場合にはICPライセンスの登録が必要です。  中国本土  中国本土と全リージョン  中国を除く全リージョン   リファラーもしくはユーザエージェントによるブラックリスト/ホワイトリストでアクセス制御可能です。  その他のパラメータはこちらから確認できます。\n    設計のポイント SLB  本番環境では最も大きいインスタンスタイプ（slb.s3.large）を指定する事を推奨します。  SLBのインスタンスタイプを変更する時には１秒〜３秒程度のTCP接続断が発生する可能性がある為、あらかじめ最大インスタンスタイプを指定しておきます。  SLBインスタンスタイプは従量課金制なので、大きいインスタンスタイプを購入してもインスタンスに対するトラフィックが閾値（特定のQPS）を超すまで、最低限のインスタンスタイプとして課金となります。  小さいインスタンスタイプ（slb.s1.small等）では   SLBとECS間のネットワークは全てのトラフィックが許可されます。当該ネットワークはAlibaba Cloud内部管理の為、セキュリティグループ等で変更できません。  全て許可で固定の為、SLBからのヘルスチェックを疎通させる為に、ECSのセキュリティグループのインバウンド設定を変更する必要はありません。   バックエンドとして、デフォルトサーバーグループ、VServerグループ、アクティブ/スタンバイサーバーグループがありそれぞれ使い分ける事ができます。ただ、特別な用途がなければVServerグループが最も無難な選択肢です。  マルチゾーンに配置して、プライマリゾーンとバックアップゾーンを指定しますが、プライマリゾーンにしかトラフィックは流れません。    OSS  権限管理のサービスとしてRAMを用いますが、OSSにアクセスする権限は最小限に設定します。  1ファイルの最大サイズは48.8TBで、保存できる容量は無制限の為、コスト管理に気をつける必要があります。  1ファイルが5GBを超える場合、マルチパートアップロードと言うモードでファイルを分割してアップロードする必要があります。    CDN  Alibaba Cloud CDNにドメインを登録するだけでなく、DomainサービスでCDN用のCNAMEを登録して初めて使えるようになります。  オリジンサイトを ECS にデプロイする場合は、ECS の帯域幅に注意してください。この帯域幅は、ビジネストラフィック全体の 20% 以上とすることをお勧めします。  Alibaba CloudMonitorと連携して、CDNのメトリックに対応したアラームルールを設定する事を推奨します。    アーキテクチャ図 システム構成\n参考リンク一覧    タイトル URL     SLB Documentation https://jp.alibabacloud.com/help/product/27537.htm   SLB Best Practice in PDF http://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/download/pdf/DNSLB11825295_ja-JP_jp_190524094546_public_48f51f1c98dba2f44bbc936c3f27f11b.pdf   OSS Best Practice in PDF http://docs-aliyun.cn-hangzhou.oss.aliyun-inc.com/pdf/oss-user-guide-jp-ja-2018-02-14.pdf   OSS SDKを利用したバケットの一時公開 https://jp.alibabacloud.com/help/doc-detail/32122.htm   OSS リファラーホワイトリスト設定 https://jp.alibabacloud.com/help/doc-detail/32127.htm?spm=a21mg.p38356.b99.482.33ed6d34SQp2RX   OSS バケットのアクセスログ設定 https://jp.alibabacloud.com/help/doc-detail/32125.htm?spm=a21mg.p38356.b99.480.3623431frijy4g   OOS ECSのログ取得 https://www.alibabacloud.com/help/doc-detail/72561.htm?spm=a2c63.p38356.b99.29.351e45acTnqpib   OSSへのログ送信 https://www.alibabacloud.com/help/doc-detail/29002.htm?spm=a2c63.p38356.b99.285.2eff592fnf9HNU    "
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/network/cisco891f/",
	"title": "VPN Gatewayを用いたCiscoルーターとの手順",
	"tags": [],
	"description": "VPN Gatewayを用いたCiscoルーターとのIP Sec-VPN接続手順を紹介します。",
	"content": " 本設定例では、VPCに作成したVPN Gatewayを、お客様拠点に設置したCisco ルーターとIPsec-VPNで接続します。\n事前準備 ネットワークや IP アドレス等を事前に設計し、VPN Gatewayを購入します。\n本設定例では、クラウド側のVPC (セグメント 192.168.0.0/24) とCiscoルーター側 (セグメント 192.168.100.0/24) をRoute-basedで接続します。\n本設定例について Alibaba CloudのVPCとの接続を保証するものではありません。\n2019年 5 月の仕様に基づいて記載しています。確認しているファームウェアは下記のとおりです。今後、サービス内容の変更や、仕様変更などによって接続できなくなる可能性があります。\n本設定例でテスト済みのCiscoルーターは以下になります。\n   モデル バージョン     C891FJ-K9 Version 15.4(3)M8    Ciscoルーターに関する情報および設定方法については、Ciscoルーターお客様相談センターまでお問い合わせください。\n設定手順 ステップ 1：VPN Gateway の設定  対象VPCにVPN Gatewayとカスタマーゲートウェイを作成します。カスタマーゲートウェイの設定ではお客様拠点 ルーターのグローバルIPアドレスを使って設定します。\n IPsec ConnectionsよりVPN接続を作成します。\n   以下の項目を入力します  「名前」任意の識別名を入力します。 「VPN Gateway」作成したVPN Gateway名を選択します。 「カスタマーゲートウェイ」　作成したカスタマーゲートウェイを選択します。 「ローカルネットワーク」クラウド側ネットワーク (0.0.0.0/0) を入力します。 「リモートネットワーク」お客様拠点側ネットワーク ( 0.0.0.0/0 ) を入力します。 「今すぐ有効化」“はい”を選択します。 「高度な構成」有効にします。 「事前共有鍵」お客様拠点側ルーターと同一の任意の共有鍵を入力します。 「バージョン」ikev2を選択します。\n 以下の設定はヘルスチェックです。(任意) 有効にするとVPN GatewayがIPsecトンネルの通信断を検出できるようになり、チェックが失敗した場合にはIPsecの再接続をします。  「ヘルスチェック」 有効にします。 「宛先IP」お客様拠点側サブネット内の疎通可能な任意のIPアドレスを入力します。 「送信元IP」クラウド側サブネットの内で任意のIPアドレスを入力します。 「再試行間隔」任意の間隔を指定します。 「再試行回数」任意の回数を指定します。\n「OK」ボタンを押します。\n注意: そのほか項目についても運用方針に沿って指定いただけます。\n ルートの追加をします。   上記完了後、下記のポップアップが表示されるので、OKボタンを押します。  下記、VPN-GWのルートテーブル画面へ遷移しますので、宛先ベースルーティングのタブを選択し、ルートエントリの追加を行います。  ルートエントリの追加は下記の様に行います。\n  「宛先CIDRブロック」お客様拠点側セグメントを設定します。\n「VPCに公開」“はい”を選択します。 「OK」ボタンを押します。\n *VPN-GW*のルートテーブルにてルートエントリの追加が行われ、ステータスが公開済みとなっていることを確認します。    IPsec Connectionsの画面より、VPN 接続が追加されることを確認します。   ステップ 2：Cisco ルーターの設定 Cisco ルーターにアクセスし以下の項目を設定します。\n IPsec接続設定    ! crypto ikev2 proposal  encryption aes-cbc-128 integrity sha1 group 2 ! crypto ikev2 policy  proposal  ! crypto ikev2 keyring  peer  address  pre-shared-key  ! ! ! crypto ikev2 profile  match address local \u0026lt;お客様拠点ルーターのグローバルIPアドレス\u0026gt; match identity remote address 255.255.255.255 authentication remote pre-share authentication local pre-share keyring local  ! crypto ipsec transform-set ESP-AES-SHA esp-aes esp-sha-hmac mode tunnel ! crypto ipsec profile  set security-association lifetime seconds  set transform-set  set ikev2-profile  !    Tunnelインターフェイスの設定    interface Tunnel  ip unnumbered \u0026lt;お客様ルーターのWANインターフェイス\u0026gt; ip virtual-reassembly in tunnel source \u0026lt;お客様ルーターのグローバルIPアドレス\u0026gt; tunnel mode ipsec ipv4 tunnel destination  tunnel protection ipsec profile     経路設定    ip route 192.168.0.0 255.255.255.0 Tunnel    注意: ルーティング、ポリシー等の項目についても運用方針に沿ってCisco ルーター側を設定する必要があります。ステップ１でVPN Gatewayのヘルスチェックを利用する場合は送信元IPからのICMPパケットをCisco ルーター側で許可する必要があります。\nステップ 3：ステータス確認 Cisco ルーターの設定が完了し、接続が成功すれば、接続ステータスが「成功」、ヘルスチェックステータスが「正常」に変わります。 ステップ4：接続のテスト VPC 内のECS インスタンスにログインし、拠点内のプライベート IP アドレスに ping を送信して、VPC と拠点側の通信が成功することを確認します。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/004_what-is-hdfs/",
	"title": "HDFSとは",
	"tags": [],
	"description": "BigDataを支える技術レイヤー、HDFSについてを説明します。",
	"content": " HDFSについて \u0026nbsp; 別の章にてHDFSについてを軽く説明いたしましたが、本章はこれについてもう少し詳しく説明します。 HadoopはHDFS（Hadoop Distributed Filesystem)と呼ばれる分散ファイルシステムを利用しています。HDFSは非常に大きなファイルを保存、処理、抽出するために設計されたファイルシステムで、多数のコモディティハードウェア（一般販売されてるどのハードウェア）によって構成されるクラスタで動作します。\n 非常に大きなファイルを設計  数PB〜EBに及ぶ設計 HDFS上に構築されたKey-Value-Store  ストリーミング型のデータアクセス  「書き込みは一度、読み出しは何度も行う」といった効率的なデータ処理パターンで設計  コモディティハードウェア  一般人でも購入可能なハードウェアでクラスタを構成    \u0026nbsp; HDFSクラスターは、クラスター内のノードごとに1つのNameNode（ネームノード）と複数のDataNode（データノード）で構成されます。NameNodeは、すべてのHDFSメタデータ（属性情報、構成情報、容量、カテゴリライズetc）を記録、管理します。いわゆるHDFSクラスタのリポジトリの位置付けです。NameNodeは、マスターサーバとスレーブサーバの構成で機能し、NameNodeによってファイルシステムを全体管理するため、マスタサーバ/ネームノードを通さずにDataNodeのファイル取得へのアクセスを規制します。応用としてケルベロス認証があります。ケルベロス認証は別の章にて記述します。\n\u0026nbsp; NameNodeに入ってくるファイルは1つ以上のblockに分割され、それぞれのDataNodeに保存されます。NameNodeはファイルやディレクトリのオープン、クローズ、名前変更などのファイルシステム操作をします。DataNodeによって送信されたハートビートとブロックレポートからDataNodeへのブロックのマッピングを決定します。DataNodesは、読み取り/書き込み要求を実行し、NameNodeがコマンドを要求した場合にのみ、ブロック作成、ブロック削除、およびブロック複製を実行します。\n\u0026nbsp; HDFSはデータ保存をメインとして利用しますが、HBaseやKudu、他のNoSQL、Spark、tensorflowのような他の様々なHadoopエコシステムに利用する場合があります。様々なユースケースに応じてHDFSの種別、圧縮形式、ストレージ形式を考慮する必要があります。これは様々なHadoopエコシステムに依存します。以下、本章ではHDFSのファイル形式、圧縮戦略、スキーマ設計などについて説明します。\nHDFSの設計 \u0026nbsp; 上記、HDFSのアーキテクチャを説明しました。HDFSはあくまでも大規模なビッグデータに対応するためのファイルシステムの故、以下のメリットとデメリットがあります。\n   得意分野 不得意分野     PB〜EBと非常に大きなファイルを処理 数KBなど大量の小さなファイルを処理   大容量のデータを高速でKVS処理することができる 高スループットを出すためにレイテンシが犠牲になってる   「書き込みは一度、読み出しは何度も行う」というストリーミング型のデータアクセス 複数ユーザによるHDFS更新処理が不可    \n\u0026nbsp; しかし、このHDFSの不得意分野はHadoopエコシステムのHBase、そしてKuduによって払拭されています。KuduはHDFSをストレージとした、低レイテンシで高スループット、複数ユーザによる処理が可能なBigDataのRDBMSが可能となるストレージの位置付けです。本章はHDFSの基本的なことに集中するため、HBaseやKuduは別の章にて記述いたします。\nHDFSのPartitionについて \u0026nbsp; Hadoopストレージレイヤでデータを管理するため、HDFSはフォルダ構造になっています。大量のファイルをhdfs.file.block.sizeで分割し保存してるため、区別ができるよう、それぞれのフォルダをパーティションとして保存されます。\nHDFSのファイル形式について \u0026nbsp; HDFSは様々なデータ形式を持っています。Parquetにorc、csv、json、AlibabacloudのオリジナルのaliORC、などがあります。\n\u0026nbsp; HDFSをcsvやtextファイルとして保存、処理すること可能ですが、HiveやSparkなどのMapReduce、ImpalaなどMPPら分析処理が遅くなります。理由として、csvやtextファイルなど生データの場合、メタ情報が担保できないことや、型変換のオーバヘッドが発生してしまうことから、HDFSのデータ量が多ければ多いほど分析処理クエリの性質上、フィールド名を認識する流れなどにて処理遅延、I/O負荷が発生してしまいます。\n\u0026nbsp; また、XMLやJSONをHDFSに変換することは可能ですが、開始タグと終了タグがないため、分割することが難しいのでHadoopそのものでHDFSにすることはできません。代わりの方法として、SparkもしくはHiveでParquet/Avro/Sequenceなどの形式に変換する必要があります。\n\u0026nbsp; 画像/動画などのバイナルファイルは基本的にfile.block.sizeごとにSequenceなどのコンテナ形式で保存されます。逆に100GBとかあまりにも大きいバイナリファイルであれば、ブロック固定長の関係とディスクの転送レートからしてそのまま保存することが望ましいです。\n\u0026nbsp; 他、HadoopのHDFSとして様々なファイル形式があります。特徴、列指向、様々なHadoopエコシステム、比較表を作成しましたので、こちらを参照いただければ幸いです。\nこの比較から、HDFSはParquetが最も有力候補となっています。\nHDFS_Parquetについて \u0026nbsp; 上記、比較表でまとめたように、HDFSはParquetが理想という結論が出ました。こちらについて補足します。\n\u0026nbsp; Parquetを説明する前に、列指向について説明します。BigDataの場合、レコードが数千万、数億レコードと巨大になります。MySQLやOracleなどは通常、レコード最後の行までフルスキャンして処理するので、レコード数が多いほどI/O負荷、結果クエリを投げても処理が遅くなってしまいます。そのために列指向というデータベースが登場しました。\n\u0026nbsp; これらを応用して、Hadoop上で列指向処理ができるMPP（massively parallel processing）が登場しました。１つのクエリを多数の小さなタスクに分散し、HDFSに対して並列でクエリ処理を実現します。例えば、1億レコードのテーブルの合計を集計するためにはそれぞれノード台数分×hdfsのブロックサイズ毎で区切って（例:10万レコードを区切ってそれぞれ1000のタスクに分けて）各タスクはそれぞれが独立して10万レコードの処理を実施、最後に各タスクの結果が集められ、結果が出力されます。例としてGCP BigQuery、Impala、Prestoなどがあります。MPPのより詳しい説明は別の章にて解説します。\n\u0026nbsp; この様に、HDFSとしてデータを保存した後、分析処理をするとしたらMPPら列指向に柔軟に合わせる必要があります。それでは列指向としてなぜParquetが選ばれたかを説明します。\nHadoopエコシステムとして開発された列指向フォーマットParquetとORCがあります。ParquetはHDFSから分散検索処理を高速化する技術（Googleの論文Dremel: Interactive Analysis of Web-Scale Datasets）から開発されたフォーマット、ORCはApache Hiveのために開発されたフォーマットと目的や背景の違いがあります。Parquetは高い圧縮率と高速な分析を可能にするファイルフォーマットです。\n\u0026nbsp; 例えば、以下の図の様なテーブルがあったとします。これが数千億レコード、100TBとあった場合、行指向、レコードを1行1行ずつスキャンして処理するのは骨が折れます。そのため、スキャンできる様にカラムごとにデータ分離して列チャンク（ネスト化）としてデータを保持します。これはデータ構造の情報を保持しつつ、サブセットごとにデータを保持したい思考から設計されたものです。こうして100TB規模の数千億レコードでも、抽出したいカラムだけをスキャンして処理するため、分析の高速処理が可能になります。\n他にParquetは現在も進化中なので、最新情報やアーキテクチャはこちらを参照いただければ幸いです。\nhttp://parquet.apache.org/documentation/latest/ HDFSファイルの圧縮について \u0026nbsp; ビッグデータはデータを持つ分、ストレージら料金が高くなります。そのため、ほとんどはHDFSファイルを圧縮し格納します。そこで注意したいのが、HDFDSファイルの種別、圧縮有無についてです。HDFSファイルの種別は以下の図通りにそれぞれ特徴がありますので、ケースに合わせて対応が望ましいです。圧縮有無については、多くのHDFSファイルを圧縮した場合、解凍のための処理時間、CPU使用率が上がる問題がありますので、バランス調整が大事です。\nまとめ \u0026nbsp; HDFS、種類、特徴、などを説明いたしましたが、こちらはBigDataソリューション（テキストデータを主体とするか、動画データを扱うか）によってHDFSの種別、そして分析基盤ソリューションが異なります。そのため、各自のユースケースに合わせて適材適所な判断をいただければ幸いです。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/container/04/deploy-management/",
	"title": "コンテナデプロイ管理",
	"tags": [],
	"description": "Alibaba Cloudでコンテナを活用する際のコンテナデプロイ管理手法を紹介します。",
	"content": " 本記事では、コンテナデプロイ管理について紹介いたします。\n 開発環境 コンテナイメージの作成・管理 コンテナデプロイ管理 ログ管理とモニタリング  コンテナデプロイ管理では、開発環境と本番環境の２点に焦点を当てて紹介します。その後、Alibaba Cloudにおける推奨を紹介します。\nコンテナデプロイ管理  開発環境 本番環境 Alibaba Cloudでの選択肢  開発環境 開発環境の場合ではコードの変化に伴って、コンテナイメージを作成、環境変数を伴ってデプロイする必要があります。 その際には各種IDEのプラグインよりdocker buildを実践して、コンテナイメージを作成して、docker-composeを使って他のコンテナとの連携する方法が最もシンプルです。また、本番環境でKubernetesを利用する場合には、Minikubeやmicrok8sを用いて、Kubernetes環境をローカルの開発環境に再現する事も有用です。\n IDEのプラグイン docker-compose Minukube microk8s scaffold  本番環境 本番環境では、可用性を保つ為にサーバでクラスターを組み、冗長性を保った上でコンテナを動作させる事が一般的です。 簡易的な機能のみであればNomad、フルスタックな機能が必要であればKubernetesが利用できます。\n Nomad Kubernetes  Alibaba Cloudでの選択肢 Alibaba Cloudでは現在のデファクトスタンダードと言えるKubernetesを３種類の形で提供しています。 Kubernetesは大きくMaster nodeとWorker nodeの2種類のホストで構成され、それぞれをユーザが管理するか Alibaba Cloudの任せるかという違いがあります。\n   種類 Master nodeの管理 Worker nodeの管理     Dedicated ユーザ ユーザ   Managed Alibaba Cloud ユーザ   Serverless Alibaba Cloud Alibaba Cloud    Dedicatedは既存でKubernetesを利用していて、その設定を引き継ぎたいなど、より細かい設定をしたい要件がある時、 インフラの細かい設定が不要でとにかく使いたい場合はServerless、その中間の選択肢がManagedとなります。\n参考リンク一覧    タイトル URL     Container Service for Kubernetes とは https://jp.alibabacloud.com/help/doc-detail/86737.htm   Alibaba Cloud Kubernetes と自作 Kubernetes https://jp.alibabacloud.com/help/doc-detail/69575.htm    "
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/terraform/04/run-terraform/",
	"title": "サンプルプロジェクトの実行",
	"tags": [],
	"description": "Terraformを実際に実行してAlibaba Cloudのリソースを作成します。",
	"content": " \u0026nbsp; 前章は 簡単なWebサーバを立ち上げるというサンプルプロジェクトを作成しました。今章はサンプルプロジェクトを実行しつつ、Terraformの流れや中身を確認します。\nTerraformの実行は非常にシンプルです。以下図のようにterraform initから始まり、terraform play、terraform applyでリソース作成を実行します。\n\n1. terraform init \u0026nbsp; コードを書いたら「terraform init」コマンドを実行します。このコマンドはTerraformの実行に必要なプロパイダーのバイナリをダウンロードしてくれます。「Terraform has been successfully initialized!」と表示されていれば作業ディレクトリ構成的にOKです。\n$ terraform init Initializing provider plugins... ・・・ Terraform has been successfully initialized!  \n2. terraform plan 次は「terraform plan」コマンドです。 RAMなどの情報を別途設定ファイル confing.tfvars へ記載した場合は以下のコマンドで実行します。\n$ terraform plan -var-file=\u0026quot;confing.tfvars\u0026quot; Refreshing Terraform state in-memory prior to plan... The refreshed state will be used to calculate this plan, but will not be persisted to local or remote state storage. ------------------------------------------------------------------------ An execution plan has been generated and is shown below. Resource actions are indicated with the following symbols: + create Terraform will perform the following actions: + alicloud_instance.ECS_instance id: \u0026lt;computed\u0026gt; availability_zone: \u0026quot;ap-northeast-1a\u0026quot; deletion_protection: \u0026quot;false\u0026quot; host_name: \u0026quot;ECS_instance_for_terraform\u0026quot; image_id: \u0026quot;centos_7_04_64_20G_alibase_201701015.vhd\u0026quot; instance_charge_type: \u0026quot;PostPaid\u0026quot; instance_name: \u0026quot;ECS_instance_for_terraform\u0026quot; instance_type: \u0026quot;ecs.n4.small\u0026quot; internet_max_bandwidth_out: \u0026quot;0\u0026quot; key_name: \u0026lt;computed\u0026gt; private_ip: \u0026lt;computed\u0026gt; public_ip: \u0026lt;computed\u0026gt; role_name: \u0026lt;computed\u0026gt; security_groups.#: \u0026lt;computed\u0026gt; spot_strategy: \u0026quot;NoSpot\u0026quot; status: \u0026lt;computed\u0026gt; subnet_id: \u0026lt;computed\u0026gt; system_disk_category: \u0026quot;cloud_efficiency\u0026quot; system_disk_size: \u0026quot;40\u0026quot; volume_tags.%: \u0026lt;computed\u0026gt; vswitch_id: \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; + alicloud_security_group.sg id: \u0026lt;computed\u0026gt; inner_access: \u0026quot;true\u0026quot; name: \u0026quot;ECS_instance_for_terraform-sg\u0026quot; vpc_id: \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; + alicloud_security_group_rule.allow_http id: \u0026lt;computed\u0026gt; cidr_ip: \u0026quot;0.0.0.0/0\u0026quot; ip_protocol: \u0026quot;tcp\u0026quot; nic_type: \u0026quot;intranet\u0026quot; policy: \u0026quot;accept\u0026quot; port_range: \u0026quot;80/80\u0026quot; priority: \u0026quot;1\u0026quot; security_group_id: \u0026quot;${alicloud_security_group.sg.id}\u0026quot; type: \u0026quot;ingress\u0026quot; + alicloud_vpc.vpc id: \u0026lt;computed\u0026gt; cidr_block: \u0026quot;192.168.1.0/24\u0026quot; name: \u0026quot;ECS_instance_for_terraform-vpc\u0026quot; route_table_id: \u0026lt;computed\u0026gt; router_id: \u0026lt;computed\u0026gt; router_table_id: \u0026lt;computed\u0026gt; + alicloud_vswitch.vsw id: \u0026lt;computed\u0026gt; availability_zone: \u0026quot;ap-northeast-1a\u0026quot; cidr_block: \u0026quot;192.168.1.0/28\u0026quot; vpc_id: \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; Plan: 5 to add, 0 to change, 0 to destroy. ------------------------------------------------------------------------ Note: You didn't specify an \u0026quot;-out\u0026quot; parameter to save this plan, so Terraform can't guarantee that exactly these actions will be performed if \u0026quot;terraform apply\u0026quot; is subsequently run.  緑色の「+」マーク付きリソースが出力されています。これは「新規にリソースを作成する」という意味です。 削除や変更など逆の場合は「-」マークが表示されます。これは後述します。 3. terraform apply 今度はリソースを実行、「terraform apply」コマンドを実行します。このコマンドでは、改めてplan結果が表示され、本当に実行していいか確認が行われます。 こちらもRAMなどの情報を別途設定ファイルconfing.tfvarsへ記載した場合は以下のコマンドで実行します。\n$ terraform apply -var-file=\u0026quot;confing.tfvars\u0026quot; ...... Do you want to perform these actions? Terraform will perform the actions described above. Only 'yes' will be accepted to approve. Enter a value:  途中、「Enter a value:」と表示されますので、『yes』と入力で実行します。\nalicloud_instance.ECS_instance: Still creating... (10s elapsed) alicloud_instance.ECS_instance: Still creating... (20s elapsed) alicloud_instance.ECS_instance: Still creating... (30s elapsed) alicloud_instance.ECS_instance: Still creating... (40s elapsed) alicloud_instance.ECS_instance: Still creating... (50s elapsed) alicloud_instance.ECS_instance: Creation complete after 56s (ID: i-6weea1q1tr8gdvbb4tig) Apply complete! Resources: 1 added, 0 changed, 0 destroyed.  これでAlibabaCloud ECSコンソールでも、ECSが作成されたことを確認できます。 ▲ AlibabaCloud ECSコンソールでもECS作成を確認 4. リソースの設定変更 上記のリソースの作成に成功したら、今度は構成を変更してみましょう。やり方は以下の通りにタグを追加します。 ▼ タグを追加\n・・・ ・・・ resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;ECS_instance\u0026quot; { instance_name = \u0026quot;ECS_instance_for_terraform\u0026quot; host_name = \u0026quot;ECS_instance_for_terraform\u0026quot; instance_type = \u0026quot;ecs.n4.small\u0026quot; image_id = \u0026quot;centos_7_04_64_20G_alibase_201701015.vhd\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.sg.id}\u0026quot;] availability_zone = \u0026quot;${var.zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; tags={ Project = \u0026quot;terraform_training\u0026quot; Platform = \u0026quot;CentOS_7_04_64\u0026quot; Enviroment = \u0026quot;dev\u0026quot; OwnerEmailAddress = \u0026quot;xxxx@xxxxx.xxx\u0026quot; } }  コードを修正したら、再びterraform applyを実行します。\n$ terraform apply -var-file=\u0026quot;confing.tfvars\u0026quot; ...... Plan: 0 to add, 1 to change, 0 to destroy. Do you want to perform these actions? Terraform will perform the actions described above. Only 'yes' will be accepted to approve. Enter a value: yes  途中、「Enter a value:」と表示されますので、『yes』と入力で実行します。\nalicloud_instance.ECS_instance: Modifying... (ID: i-6weea1q1tr8gdvbb4tig) tags.%: \u0026quot;0\u0026quot; =\u0026gt; \u0026quot;4\u0026quot; tags.Enviroment: \u0026quot;\u0026quot; =\u0026gt; \u0026quot;dev\u0026quot; tags.OwnerEmailAddress: \u0026quot;\u0026quot; =\u0026gt; \u0026quot;xxxx@xxxxx.xxx\u0026quot; tags.Platform: \u0026quot;\u0026quot; =\u0026gt; \u0026quot;CentOS_7_04_64\u0026quot; tags.Project: \u0026quot;\u0026quot; =\u0026gt; \u0026quot;terraform_training\u0026quot; alicloud_instance.ECS_instance: Modifications complete after 1s (ID: i-6weea1q1tr8gdvbb4tig) Apply complete! Resources: 0 added, 1 changed, 0 destroyed.  AWS マネジメントコンソールでも、Name タグの追加が確認できます。 ▲ ECSタグの付与を確認 5 リソースの再作成 次に以下ソースのように、Apacheをインストールするよう変更し、apply します。 ▼ User Data で Apache をインストール\nresource \u0026quot;alicloud_instance\u0026quot; \u0026quot;ECS_instance\u0026quot; { instance_name = \u0026quot;ECS_instance_for_terraform\u0026quot; host_name = \u0026quot;ECS_instance_for_terraform\u0026quot; instance_type = \u0026quot;ecs.n4.small\u0026quot; image_id = \u0026quot;centos_7_04_64_20G_alibase_201701015.vhd\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.sg.id}\u0026quot;] availability_zone = \u0026quot;${var.zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; tags={ Project = \u0026quot;terraform_training\u0026quot; Platform = \u0026quot;CentOS_7_04_64\u0026quot; Enviroment = \u0026quot;dev\u0026quot; OwnerEmailAddress = \u0026quot;xxxx@xxxxx.xxx\u0026quot; } user_data = \u0026lt;\u0026lt;EOF #!/bin/bash yum install -y httpd systemctl start httpd.service EOF\u0026gt;\u0026gt; }  修正したら再びterraform applyを実行します。\n$ terraform apply -var-file=\u0026quot;confing.tfvars\u0026quot; alicloud_vpc.vpc: Refreshing state... (ID: vpc-6wen1y9pbew0gycatrga1) alicloud_security_group.sg: Refreshing state... (ID: sg-6we3mqu997mou7ur7gci) alicloud_vswitch.vsw: Refreshing state... (ID: vsw-6wepztrdw7fn04b8h9y2r) alicloud_security_group_rule.allow_http: Refreshing state... (ID: sg-6we3mqu997mou7ur7gci:ingress:tcp:80/80:intranet:0.0.0.0/0:accept:1) alicloud_instance.ECS_instance: Refreshing state... (ID: i-6weea1q1tr8gdvbb4tig) An execution plan has been generated and is shown below. Resource actions are indicated with the following symbols: -/+ destroy and then create replacement Terraform will perform the following actions: -/+ alicloud_instance.ECS_instance (new resource required) id: \u0026quot;i-6weea1q1tr8gdvbb4tig\u0026quot; =\u0026gt; \u0026lt;computed\u0026gt; (forces new resource) availability_zone: \u0026quot;ap-northeast-1a\u0026quot; =\u0026gt; \u0026quot;ap-northeast-1a\u0026quot; deletion_protection: \u0026quot;false\u0026quot; =\u0026gt; \u0026quot;false\u0026quot; host_name: \u0026quot;iZ6weea1q1tr8gdvbb4tigZ\u0026quot; =\u0026gt; \u0026lt;computed\u0026gt; image_id: \u0026quot;centos_7_04_64_20G_alibase_201701015.vhd\u0026quot; =\u0026gt; \u0026quot;centos_7_04_64_20G_alibase_201701015.vhd\u0026quot; instance_charge_type: \u0026quot;PostPaid\u0026quot; =\u0026gt; \u0026quot;PostPaid\u0026quot; instance_name: \u0026quot;ECS_instance_for_terraform\u0026quot; =\u0026gt; \u0026quot;ECS_instance_for_terraform\u0026quot; instance_type: \u0026quot;ecs.n4.small\u0026quot; =\u0026gt; \u0026quot;ecs.n4.small\u0026quot; internet_max_bandwidth_out: \u0026quot;0\u0026quot; =\u0026gt; \u0026quot;0\u0026quot; key_name: \u0026quot;\u0026quot; =\u0026gt; \u0026lt;computed\u0026gt; private_ip: \u0026quot;192.168.1.3\u0026quot; =\u0026gt; \u0026lt;computed\u0026gt; public_ip: \u0026quot;\u0026quot; =\u0026gt; \u0026lt;computed\u0026gt; role_name: \u0026quot;\u0026quot; =\u0026gt; \u0026lt;computed\u0026gt; security_groups.#: \u0026quot;1\u0026quot; =\u0026gt; \u0026quot;1\u0026quot; security_groups.3550734980: \u0026quot;sg-6we3mqu997mou7ur7gci\u0026quot; =\u0026gt; \u0026quot;sg-6we3mqu997mou7ur7gci\u0026quot; spot_strategy: \u0026quot;NoSpot\u0026quot; =\u0026gt; \u0026quot;NoSpot\u0026quot; status: \u0026quot;Running\u0026quot; =\u0026gt; \u0026lt;computed\u0026gt; subnet_id: \u0026quot;vsw-6wepztrdw7fn04b8h9y2r\u0026quot; =\u0026gt; \u0026lt;computed\u0026gt; system_disk_category: \u0026quot;cloud_efficiency\u0026quot; =\u0026gt; \u0026quot;cloud_efficiency\u0026quot; system_disk_size: \u0026quot;40\u0026quot; =\u0026gt; \u0026quot;40\u0026quot; tags.%: \u0026quot;4\u0026quot; =\u0026gt; \u0026quot;4\u0026quot; tags.Enviroment: \u0026quot;dev\u0026quot; =\u0026gt; \u0026quot;dev\u0026quot; tags.OwnerEmailAddress: \u0026quot;xxxx@xxxxx.xxx\u0026quot; =\u0026gt; \u0026quot;xxxx@xxxxx.xxx\u0026quot; tags.Platform: \u0026quot;CentOS_7_04_64\u0026quot; =\u0026gt; \u0026quot;CentOS_7_04_64\u0026quot; tags.Project: \u0026quot;terraform_training\u0026quot; =\u0026gt; \u0026quot;terraform_training\u0026quot; user_data: \u0026quot;\u0026quot; =\u0026gt; \u0026quot; #!/bin/bash\\n yum install -y httpd\\n systemctl start httpd.service\\n\u0026quot; (forces new resource) volume_tags.%: \u0026quot;0\u0026quot; =\u0026gt; \u0026lt;computed\u0026gt; vswitch_id: \u0026quot;vsw-6wepztrdw7fn04b8h9y2r\u0026quot; =\u0026gt; \u0026quot;vsw-6wepztrdw7fn04b8h9y2r\u0026quot; Plan: 1 to add, 0 to change, 1 to destroy. Do you want to perform these actions? Terraform will perform the actions described above. Only 'yes' will be accepted to approve. Enter a value:  今度は『-/+』マークがつき「destroy and then create replacement」というメッセージが出ています。 これは「既存のリソースを削除して新しいリソースを作成する」という意味です。 一部分リソース削除があるため、システム運用に影響が出てしまう場合もありますので要注意です。\nalicloud_instance.ECS_instance: Still creating... (10s elapsed) alicloud_instance.ECS_instance: Still creating... (20s elapsed) alicloud_instance.ECS_instance: Still creating... (30s elapsed) alicloud_instance.ECS_instance: Still creating... (40s elapsed) alicloud_instance.ECS_instance: Still creating... (50s elapsed) alicloud_instance.ECS_instance: Creation complete after 56s (ID: i-6weegevun3jit7gpyut8) Apply complete! Resources: 1 added, 0 changed, 1 destroyed.  再びコンソールで確認すると、最初起動したインスタンスが破棄（リリース）され、新しいインスタンスが立ち上がっています。 ▲ ECSインスタンス名が変わっており、それまで起動したECSがリリース（破棄）されたのがわかります。\nこのように、Terraform によるリソースの更新は、「既存リソースをそのまま変更する」 ケースと「リソースが作り直しになる」ケースがあります。本番運用では、意図した挙動 になるか、plan結果をきちんと確認することが大切です。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/terraform/",
	"title": "Terraform",
	"tags": [],
	"description": "Alibaba CloudにおけるTerraformの活用方法を記載します。",
	"content": ""
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/web-application/04/web-ap/",
	"title": "Web/APサーバ",
	"tags": [],
	"description": "Alibaba Cloudを用いたWeb三層アーキテクチャを紹介します。",
	"content": " 以下の区分により、Alibaba Cloudを活用したWebアプリケーション構築手法を紹介いたします。\n 名前解決 負荷分散 Web/APサーバ データベース  本項目では、Alibaba CloudのWeb/APサーバに関するサービスの仕様と設計ポイントを紹介します。\n負荷分散  対象サービス 基本的な仕様 設計のポイント 参考リンク一覧  対象サービス Web/APサーバとして用いるサービスは、仮想サーバであるElastic Compute Serviceを用いるのが最も一般的です。 Autoscalingを実装します。加えてContainerServiceもアプリケーション環境として活用されており、こちらも紹介します。\n基本的な仕様 ECS  ECS  OSには、Fedora、Cent、Ubuntu、Windowsに加えて、独自のAliyunOSも利用できます。 ログはCloudMonitorから確認できます。 セキュリティグループでインバウンドアウトバウンドを設定します。 ECSインスタンス自体にAlibaba CloudのSaaS利用の権限をRAMより付与します。 VNCからアクセス可能です。 メタ情報はcurl で取得できます。 Webを公開していると、セキュリティアラートを能動的に検知します。 インスタンス削除をリリースと呼び、時間指定リリースが可能です。     Auto Scaling  インスタンスの最大数・最小数、インスタンスをデプロイするVPC、インスタンスの削除ポリシーを設定して利用します。 最初に「スケーリンググループ」を作成してスケーリングに関する設定を行い、次に「スケーリング設定」を作成して、スケールするECSの設定を紐付けます。 既存のインスタンスを、オートスケーリンググループに追加することも可能です。    Container Service  Kubernetesを利用して、Dedicated Kubernetes・Managed Kubernetes・Serverless Kubernetesが利用できます。 フロントエンドとしてSLBを連携作成します。 バックエンドはデータベースを指定してホワイトリスト形式でアクセス許可する事で疎通させます。 Kubernetesで利用可能な主要モジュールをコンソールから実施できます。  ステートフルコンテナの起動 バッチコンテナの起動  Container Registryと併用する事で、Github/Gitlab/BitbucketからシームレスにKubernetes環境にデプロイ可能です。 Log ServiceやCloudMonitorといったAlibaba Cloudのサービスとの他に、Prometheus＋Grafanaを用いたモニタリングも推奨されています。     設計ポイント ECS  時間が中国語。 新規インスタンス作成時にパスワードか秘密鍵のいずれかを指定できますが、デフォルトではどちらも設定されずに作成されます。 サブスクリプションする場合には、EBSディスクも一緒に購入できます。 セキュリティグループのルール設定は、許可・禁止を選択でき、優先度設定によって管理します。 同一セキュリテイグループに紐付くインスタンス間の通信は全許可されます。 AliyunOSの場合、NginxをパッケージインストールしようとするとTerwayがインストールされます。    Auto Scaling  スケーリング設定の代わりに起動テンプレートを使用すると、既存のすべてのスケーリング設定が自動的に無効になります。 台数の細かく調整する時には、スケーリングルールを作成・実行することで、スケーリングアクティビティをトリガーできます。    Container Service  リージョンやアカウントの種類によって、Container Registryが利用できない等一部利用可能なサービスに違いがあります。 DockerfileにENVとして記載された環境変数がそのままコンソールの環境変数項目にもパースされるので、環境変数は docker-entrypoint.sh等のカスタムスクリプト内で指定するよりもDockerfileで環境変数を指定する方が手間が省けます。    参考リンク一覧    タイトル URL     Auto Scalingのよくある質問DF https://jp.alibabacloud.com/help/faq-detail/25967.htm    "
},
{
	"uri": "https://www.sbcloud.co.jp/help/faq/",
	"title": "よくある質問",
	"tags": [],
	"description": "Alibaba Cloudを利用する上でよくある質問を紹介します。",
	"content": ""
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/network/",
	"title": "ネットワーク",
	"tags": [],
	"description": "Alibaba Cloudのネットワークに関するベストプラクティスを記載します。",
	"content": ""
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/005_what-is-yarn/",
	"title": "YARNとは",
	"tags": [],
	"description": "BigDataを支える技術レイヤー、YARNについてを説明します。",
	"content": " YARNについて \u0026nbsp; 本章ではYARNについてを説明します。YARNとは以下の通りになります。\n YARNはYet-Another-Resource-Negotiatorの略称 Hadoopエコシステムのためのリソース管理マネージャ サーバ数台のメモリやCPUなどリソース要求ハンドリングなど、リソースオーケストレーションを行う分散サービス   こちらについてもう少し詳しく説明します。 YARNファミリーのそれぞれの役割、およびHadoopクラスタの位置付けを図で示すとこのようになります。\nYARNファミリー  ResourceManager  クラスタのリソースを監視、管理 ワーカーノードにタスクを割当  NodeManager  様々な処理をワーカノードに起動、管理   Application Master  YARNクラスタ上のタスク・コンテナを全てまとめるTask 司令塔としてマスタサーバに実装  コンテナ  Taskを処理するリソースの単位。 voreリソースとメモリリソースを保持してる \u0026gt;vcoreはCPUの使用率のようなもの。メモリはコンテナ専用の仮想メモリ。バイト数として扱う  Task  コンテナ内で処理するプロセス コンテナのリソースはTaskに割当 クライアントのコードはTaskで実行  YARNを使ったアプリケーション実行の流れについて \u0026nbsp; 上記説明通り、YARNを利用するとResourceManager、NodeManagerの配置が実施されます。このような体制でクライアントからアプリケーションを起動してみます。すると以下の流れでYARN処理が実施されます。\n クライアントにて MapReduce、Sparkなどアプリケーションを実行 マスタサーバ/ネームノード側でResourceManagerが受け取り、AppllicationMasterへ仲介指示 ApplicationMaster側がアプリケーションを実行するためにはどれほどかのリソースを確認（＝DAG） ApplicationMaster側がResourceManager側へ処理に必要なコンテナ（単位）の割当を依頼 ResourceManager側はコンテナ（単位）を受け取り、NodeManagerそれぞれへリソース配布 NodeManagerにて処理に必要なタスクをそれぞれ実施 NodeManagerにて処理が行き詰ったり問題が出たらResourceManagerへ通知し、その分のコンテナ(単位）を別のNodeManagerへ割当（またはコンテナ(単位)を増やすなど調整） NodeManagerで持ちTask処理が終わればResourceManagerへ通知 全てのNodeManagerの処理が終われば、アプリケーション結果をクライアントに返してアプリケーション終了  TensorFlow on YARN \u0026nbsp; AlibabaCloud E-MapReduceにTensorFlow on YARNがあります。こちらはApache Hadoo上で分散型機械学習を運用するために開発されたフレームワークです。YARNのリソース管理やコンテナ構築などのタスク処理を応用した、TensorFlowのジョブをHadoopクラスタに割り当てて分散処理を実現します。同時に、スケジューリングや種類に応じたリソース要求処理、メモリの割当調整ができます。\nより詳しくはこちらのドキュメントを参照してください。 * Native Support of TensorFlow on Hadoop https://engineering.linkedin.com/blog/2018/09/open-sourcing-tony--native-support-of-tensorflow-on-hadoop * An Orchestrator for Distributed Machine Learning Jobs https://arxiv.org/abs/1904.01631 まとめ \u0026nbsp; YARNはHadoopやSparkなど大規模なJob分散処理において欠かせない存在となっています。今後、TensorFlow on YARNのようにYARNは様々な分野で活躍していきますので、YARNの存在意義を理解いただければ幸いです。\n\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/container/05/monitoring/",
	"title": "ログ管理とモニタリング",
	"tags": [],
	"description": "Alibaba Cloudでコンテナを活用する際のログ管理とモニタリング手法を紹介します。",
	"content": " 本記事では、ログ管理とモニタリングについて紹介いたします。\n 開発環境 コンテナイメージの作成・管理 コンテナデプロイ管理 ログ管理とモニタリング  ログ管理とモニタリングでは、OSS/Enterprise製品とパブリックサービスの２点に焦点を当てて紹介します。その後、Alibaba Cloudにおける推奨を紹介します。\nログ管理・モニタリング  OSS/Enterprise製品の活用 パブリックサービスの活用 Alibaba Cloudでの選択肢  OSS/Enterprise製品の活用 Container環境においてアプリケーションログとインフラログを対象にして、ログ管理・集計の製品と、それらをGUIとして可視化する製品の組み合わせがあります。\n Fluentd + Elasticsearch + Kibana\n Prometheus/Grafana Loki/Grafana  パブリックサービスでの活用 クラウド型のサービスとしてDatadogやNew Relicを活用するのも広がっています。これらはパブリッククラウドの読み取り権限のアクセスキーを登録する事で、パブリッククラウドインフラ全体のログを収集・可視化する事ができます。また、APMの機能も提供しており、アプリケーションログも並行して取得する事ができます。\n Datadog New Relic  Alibaba Cloudにおける選択肢 Alibaba Cloudにおいてコンテナ内のログとコンテナ外のログを確認する事があります。コンテナ内のログはLogServiceを有効化して、同ログをObject Storage Service(OSS)に蓄積する形が一般的です。ECSやKubernetes等のサーバに関するメトリックはCloudMonitorで確認する事が出来ますが、インフラ全体のログはPrometheusを利用して、Grafanaで可視化する形が推奨されています。また、パブリックサービスの中ではDatadogがAlibaba CloudとのIntegrationを提供しており、同サービス内で一括監視する事も可能です。\nアプリケーションログ - LogService - Datadog APM インフラログ - CloudMonitor/Grafana - Datadog Alibaba Cloud Integration ログ全般 - Prometheus/Grafana\n参考リンク一覧    タイトル URL     Prometheusモニタリングシステムのデプロイ https://jp.alibabacloud.com/help/doc-detail/94622.htm   System Monitoring using Prometheus and Grafana https://www.alibabacloud.com/blog/system-monitoring-using-prometheus-and-grafana_594356   Deploy the Prometheus monitoring system https://www.alibabacloud.com/help/doc-detail/94622.htm   Kubernetes Cluster Monitoring Using Prometheus https://www.alibabacloud.com/blog/kubernetes-cluster-monitoring-using-prometheus_594722   Alibaba Cloud Container Service for Kubernetes （ACK)）徹底解説 https://www.slideshare.net/sbcloud/alibaba-cloud-container-service-for-kubernetes-ack   Connect CloudMonitor to Grafana https://www.alibabacloud.com/help/doc-detail/109434.htm   Log Service Best Practice (PDF) http://docs-aliyun.cn-hangzhou.oss.aliyun-inc.com/pdf/sls-best-practices-intl-en-2018-01-24.pdf   Best Practices of Log Analysis and Monitoring by Using Kubernetes Ingress https://www.alibabacloud.com/blog/595084   Technical Best Practices for Container Log Processing https://www.alibabacloud.com/blog/594955    "
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/container/",
	"title": "コンテナ",
	"tags": [],
	"description": "Alibaba Cloudでコンテナを活用する上でのベストプラクティスを記載します。",
	"content": ""
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/terraform/05/program-syntax/",
	"title": "Terraform文法について",
	"tags": [],
	"description": "Alibaba Cloudでも用いられるTerraformの文法を説明します。",
	"content": " \u0026nbsp; 前章は 簡単なWebサーバを立ち上げるというサンプルプロジェクトを実行しました。うち、Terraformには様々な記載文法がありますので、把握した方がいい部分だけ説明します。\n\n1. Configuration Syntax \u0026nbsp; Terraformのコード構成要素、コードの構成文の書き方です。Terraformの利用ガイドラインに沿って記載してみてください。Terraformのバージョンによっては書き方が異なる場合がありますので、注意が必要です。\n# project_nameを宣言 variable \u0026quot;project_name\u0026quot; { } /* alicloud_vpcを設定 変数project_nameを呼び出す */ resource \u0026quot;alicloud_vpc\u0026quot; \u0026quot;vpc\u0026quot; { name = \u0026quot;${var.project_name}-vpc\u0026quot; cidr_block = \u0026quot;192.168.1.0/24\u0026quot; }   単一行コメントは#をつけます。 複数行コメントは/*と*/で囲みます。 文字列は二重引用符で囲みます。 文字列は${}を使って他の構文や値を補間できます。 ${var.foo}。 数字は10進数で扱います。数字の前に英数字を付けると、例えば0xでも16進数として扱われます。 ブール値が使え、true、falseのどれかになります。 プリミティブ型のリストは角括弧（[]）で作成できます。例：[\u0026quot;foo\u0026quot;, \u0026quot;bar\u0026quot;, \u0026quot;baz\u0026quot;] マップは中括弧（{}）とコロン（:） で作成できます。例：{ \u0026quot;foo\u0026quot;: \u0026quot;bar\u0026quot;, \u0026quot;bar\u0026quot;: \u0026quot;baz\u0026quot; } キーが数字で始まっていない限り、キーでは引用符を省略できます。その場合は、引用符が必要です。単一行マップでは、キーと値のペアの間にコンマが必要です。複数行マップではキーと値のペアの間の改行で十分です。  他、構成文の書き方もありますが、ひとまずは上記のを抑えれば大抵問題ないです。\n\n2. Interpolation Syntax \u0026nbsp; 変数・関数・属性など、コード補充機能です。\n ユーザ文字列変数 var.接頭辞とそれに続く変数名を使用します。たとえば${var.foo} で foo変数値を補間します。\n ユーザーマップ変数 構文はvar.MAP[\u0026quot;KEY\u0026quot;]です。たとえば${var.amis[\u0026quot;us-east-1\u0026quot;]} でマップ変数us-east-1、内キーの値amisを取得します。\n ユーザリスト変数 構文は${var.LIST}です。たとえば${var.subnets} でsubnetsリストの値をリストとして取得します。リスト要素をindexで返すこともできます。例：${var.subnets[idx]}。\n リソース自身の属性 構文はself.ATTRIBUTEです。たとえば${self.private_ip} でそのリソースのprivate_ipを取得します。\n 他のリソースの属性 構文はTYPE.NAME.ATTRIBUTEです。たとえば${aws_instance.web.id}という名前のaws_instanceリソースからweb属性のIDを取得できます。リソースにcount属性セットがある場合は、0から始まるインデックスを使用して個々の属性にアクセスできます。例：${aws_instance.web.0.id}。 splat構文を使ってすべての属性のリストを取得することもできます。例：${aws_instance.web.*.id}。\n データソースの属性 構文はdata.TYPE.NAME.ATTRIBUTEです。たとえば${data.aws_ami.ubuntu.id}ならaws_amiというデータソースからubuntu属性のidを取得します。データソースに属性セットがある場合は、のようにゼロから始まるインデックスを使用して個々の属性にアクセスできます。例：${data.aws_subnet.example.0.cidr_block}。 splat構文を使ってすべての属性のリストを取得することもできます。例：${data.aws_subnet.example.*.cidr_block}\n モジュールからの出力 構文はMODULE.NAME.OUTPUTです。たとえば${module.foo.bar}の場合、fooというモジュールのbarを取得します。\n カウント情報 構文はcount.FIELDです。たとえば${count.index}の場合、count毎のインデックスらリソースを取得します。\n  その他、補充機能はTerraformバージョンごとに色々追加されていますので、最新版はこちらを参照してみてください。\n\n3. 外部変数 \u0026nbsp; 上記にも記述しましたが、RAMなどの情報を他ユーザへ渡したくない場合、別途設定ファイル confing.tfvars へ記載します。例えば以下の別途設定ファイル confing.tfvars、および実行ファイル main.tf があるとします。\n▼ 別途設定ファイル confing.tfvars の中身\naccess_key = \u0026quot;xxxxxxxxxxxxxxxxxx\u0026quot; secret_key = \u0026quot;xxxxxxxxxxxxxxxxxx\u0026quot; region = \u0026quot;ap-northeast-1\u0026quot; zone = \u0026quot;ap-northeast-1a\u0026quot;  ▼ 実行ファイル main.tf の中身\nvariable \u0026quot;access_key\u0026quot; {} variable \u0026quot;secret_key\u0026quot; {} variable \u0026quot;region\u0026quot; {} variable \u0026quot;zone\u0026quot; {} provider \u0026quot;alicloud\u0026quot; { access_key = \u0026quot;${var.access_key}\u0026quot; secret_key = \u0026quot;${var.secret_key}\u0026quot; region = \u0026quot;${var.region}\u0026quot; }  これをコマンド実行時に「 -var-file=\u0026rdquo;\u0026lt;ファイル名\u0026gt;\u0026ldquo;」引数オプションで設定ファイルを外部変数・リンクし実行します。\n$ terraform plan -var-file=\u0026quot;confing.tfvars\u0026quot;  すると、RAMなどアカウント情報を別ファイルに残したまま、リソース作成されます。\n\n4 ローカル値 \u0026nbsp; localsを使うとローカル変数が定義できます。localsで囲んだ変数を宣言することで、ローカル変数を使うことができます。\n▼ ローカル変数の定義\nlocals { select_instance_type = \u0026quot;ecs.n4.small\u0026quot; } resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;ECS_instance\u0026quot; { instance_name = \u0026quot;ECS_instance_for_terraform\u0026quot; host_name = \u0026quot;ECS_instance_for_terraform\u0026quot; instance_type = var.select_instance_type image_id = \u0026quot;centos_7_04_64_20G_alibase_201701015.vhd\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.sg.id}\u0026quot;] availability_zone = \u0026quot;${var.zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; }  \n5. アウトプット \u0026nbsp; outputを使うとアウトプットが定義できます。定義すると、apply実行時にターミナルで値を確認したり、リソース・モジュールから値を取得できます。\n▼ アウトプット値の定義\nresource \u0026quot;alicloud_instance\u0026quot; \u0026quot;ECS_instance\u0026quot; { instance_name = \u0026quot;ECS_instance_for_terraform\u0026quot; host_name = \u0026quot;ECS_instance_for_terraform\u0026quot; instance_type = \u0026quot;ecs.n4.small\u0026quot; image_id = \u0026quot;centos_7_04_64_20G_alibase_201701015.vhd\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.sg.id}\u0026quot;] availability_zone = \u0026quot;${var.zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; } output \u0026quot;ECS_instance_id\u0026quot; { value = alicloud_instance.ECS_instance.instance_type }  applyすると、実行結果の最後に、作成されたインスタンスの type が出力されます。\n$ terraform apply ..... Outputs: ecs.n4.small  \n6. 条件分岐 \u0026nbsp; Terraformは条件分岐が使えます。先にvariable変数を記載したあと、resource構文にてvariable変数を選定します。例えば環境に応じてインスタンスタイプを切り替えたい場合は、以下のように書きます。\n▼ 条件分岐の記載方法\nvariable \u0026quot;instance_pattern\u0026quot; {} resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;ECS_instance\u0026quot; { instance_name = \u0026quot;ECS_instance_for_terraform\u0026quot; host_name = \u0026quot;ECS_instance_for_terraform\u0026quot; instance_type = var.instance_pattern == \u0026quot;dev\u0026quot; ? \u0026quot;ecs.n4.small\u0026quot; : \u0026quot;ecs.n4.2xlarge\u0026quot; image_id = \u0026quot;centos_7_04_64_20G_alibase_201701015.vhd\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.sg.id}\u0026quot;] availability_zone = \u0026quot;${var.zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; }  そのあと、実行するときは引数でenv変数を指定することで、条件分岐してくれます。\n$ terraform plan -var-file=\u0026quot;confing.tfvars\u0026quot; -var 'instance_pattern=dev' $ terraform apply -var-file=\u0026quot;confing.tfvars\u0026quot; -var 'instance_pattern=production'  \n7. 組み込み関数 \u0026nbsp; Terraformからリソースを作成するときに、例えばApacheによるWebサーバを立ち上げたい場合、ECS起動後、Apacheのインストール、Webサーバ立ち上げ（httpd.service start）をする必要があります。 これらの処理を組み込み関数として、user_dataにて外部ファイル（shell）を読み取りユーザデータとして設定することができます。\n▼ Webサーバのインストールスクリプトinstall.sh\n#!/bin/bash -ex wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm rpm -ivh mysql-community-release-el7-5.noarch.rpm yum -y install mysql-server httpd php php-mysql unzip systemctl enable httpd systemctl enable mysqld systemctl start httpd systemctl start mysqld USER=\u0026quot;root\u0026quot; DATABASE=\u0026quot;wordpress\u0026quot; mysql -u $USER \u0026lt;\u0026lt; EOF CREATE DATABASE $DATABASE; GRANT ALL PRIVILEGES ON wordpress.* TO 'wordpress'@'localhost' IDENTIFIED BY 'qweqwe123!'; EOF if [ ! -f /var/www/html/latest.tar.gz ]; then cd /var/www/html wget -c http://wordpress.org/latest.tar.gz tar -xzvf latest.tar.gz mv wordpress/* /var/www/html/ chown -R apache.apache /var/www/html/ chmod -R 755 /var/www/html/ fi  これをuser_dataに入れて実行すると、install.shファイルを読み込み、Apacheをインストール、Webサーバを立ち上げてくれます。\n▼ Webサーバのインストールスクリプトを読み込み、Webサーバを立ち上げてくれます\nresource \u0026quot;alicloud_instance\u0026quot; \u0026quot;ECS_instance\u0026quot; { instance_name = \u0026quot;ECS_instance_for_terraform\u0026quot; host_name = \u0026quot;ECS_instance_for_terraform\u0026quot; instance_type = var.instance_pattern == \u0026quot;dev\u0026quot; ? \u0026quot;ecs.n4.small\u0026quot; : \u0026quot;ecs.n4.2xlarge\u0026quot; image_id = \u0026quot;centos_7_04_64_20G_alibase_201701015.vhd\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.sg.id}\u0026quot;] availability_zone = \u0026quot;${var.zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; user_data = file(\u0026quot;./install.sh\u0026quot;) }  \n8. Countによる複数のリソース作成 \u0026nbsp; Terraformからリソースを作成するときに、同じ構成を複数台作成したい場合は、Countメタ変数を使うことで複数台作成することができます。\nresource \u0026quot;alicloud_instance\u0026quot; \u0026quot;ECS_instance\u0026quot; { instance_name = \u0026quot;ECS_instance_for_terraform\u0026quot; host_name = \u0026quot;ECS_instance_for_terraform\u0026quot; instance_type = var.instance_pattern == \u0026quot;dev\u0026quot; ? \u0026quot;ecs.n4.small\u0026quot; : \u0026quot;ecs.n4.2xlarge\u0026quot; image_id = \u0026quot;centos_7_04_64_20G_alibase_201701015.vhd\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.sg.id}\u0026quot;] availability_zone = \u0026quot;${var.zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; user_data = file(\u0026quot;./install.sh\u0026quot;) }  \nまたCountを使えば、Map形式で複数宣言してる変数からkeyを指定して処理することもできます。\nvariable \u0026quot;cidr_block_ips\u0026quot; { default = { \u0026quot;0\u0026quot; = \u0026quot;192.168.1.0/24\u0026quot; \u0026quot;1\u0026quot; = \u0026quot;192.168.2.0/24\u0026quot; \u0026quot;2\u0026quot; = \u0026quot;192.168.3.0/24\u0026quot; } } resource \u0026quot;alicloud_vpc\u0026quot; \u0026quot;vpc\u0026quot; { count = \u0026quot;3\u0026quot; cidr_block = \u0026quot;${lookup(var.cidr_block_ips, count.index)}\u0026quot; ・・・ }  \n配列もCountを使って処理することもできます。\nvariable \u0026quot;ecs_name\u0026quot; { default = [\u0026quot;Web\u0026quot;, \u0026quot;App\u0026quot;, \u0026quot;Log\u0026quot;] } resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;ECS_instance\u0026quot; { count = \u0026quot;3\u0026quot; instance_name = \u0026quot;ECS_instance-${var.ecs_name[count.index]}\u0026quot; ・・・ }  "
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/web-application/05/database/",
	"title": "データベース",
	"tags": [],
	"description": "Alibaba Cloudを用いたWeb三層アーキテクチャを紹介します。",
	"content": " 以下の区分により、Alibaba Cloudを活用したWebアプリケーション構築手法を紹介いたします。\n 名前解決 負荷分散 Web/APサーバ データベース  本項目では、Alibaba Cloudのデータベースに関するサービスの基本仕様と設計ポイントを紹介します。\nデータベース  対象サービス 基本的な仕様 設計のポイント アーキテクチャ図  対象サービス Relational DatabaseとしてApsara for RDS、NoSQL DatabaseとしてApsara for MongoDBを利用する事が出来ます。 \u0026ldquo;Apsara\u0026rdquo;という名前はAlibaba社内でのAlibaba Cloudを指す為、その名残として名称となります。\n基本的な仕様 Apsara for RDS  リードレプリカの追加\n ディスク消費量のコンソールからの確認\n メンテナンス時間の設定\n アクセスホワイトリストの設定\n コンソールからパラメータの書き換え可能\n 文字コードはデータベースの仕様に準拠\n    Polar DB  2019年8月末時点でジャカルタリージョンのみ利用可能です。\n    Apsara for MongoDB  レプリカセットかシャーディングかの選択をした後に、リージョン、VPC、スペック、MongoDBバージョン、レプリカ/シャーディング数、パスワードを入力して作成\n 作成後には主に以下の設定が可能となります。\n バックアップ・リカバリ\n リソース監視\n アラームルール設定\n パラメータ設定\n 監査ログの確認\n スロークエリ含むログ確認\n インデックス最適化\n Data Transfer Serviceを用いた既存MongoDBの移行\n     設計ポイント ECS  時間が中国語。\n    補足 日本リージョン未公開だが他の有用なデータベースサービスとして、クラウドネイティブでハイパフォーマンスなMySQL, PostgreSQL, and Oracleを提供するPolardbと、独身の日でのオンライントランザクションを支えた分散型SQLエンジンであるDistributed Relational Database Serviceがあります。現在これらは中国リージョンのみで利用可能ですが、東京リージョンでも利用可能になり次第紹介したいと思います。\n参考リンク一覧 https://jp.alibabacloud.com/help/product/34269.htm https://jp.alibabacloud.com/help/product/27537.htm\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/",
	"title": "Bigdata",
	"tags": [],
	"description": "Alibaba CloudのBigdataサービスに関するベストプラクティスを記載します。",
	"content": ""
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/006_what-is-required-for-dwh/",
	"title": "DWHには何が必要か",
	"tags": [],
	"description": "DWHを構築する上で大事なことを伝えます。",
	"content": " DataLake、DWH、OLTP、OLAPについて \u0026nbsp; 本章ではDataLake、DWH、OLTP、OLAPについてを説明します。\n DataLakeとは、様々なデータを一点集約したデータのプールです。\n DWHとは、Data Ware House、二次三次利用できるよう処理済みのデータ基盤（テーブルたち）のことです。\n OLTPとは、Online Transaction Processing、オンライントランザクション処理のことです。\n OLAPとは、Online Analytic Processing、オンライン分析処理のことです。\n  \u0026nbsp; BigDataを成功するためには、前章で記述した通り、BigDataから新しいビジネス意思決定に必要なデータや価値を発掘する必要があります。その鍵としてDWH構築の設計、基盤構築が必須となっています。以下、DataLakeとDWHの違いを記載します。\n    DataLake DWH     構造 未使用データ 処理済み、過去データと連結したデータ   目的 外部データソースから集約する場所 分析基盤として利用する場所   利用ユーザ 外部データソース 分析エンジニア、データサイエンティスト、機械学習    \u0026nbsp; BigData以前にMySQLやOracleなどリレーショナルデータベースでデータが肥えた時、古いデータを捨てたらいいのではないか？という意見がありますが、答えはNoです。\n\u0026nbsp; 過去の古いデータも含めてこれらはビジネス上必要な資産（財産）情報なので、これを捨てることなく蓄積し、これが次の世代や今後のビジネスへ結びつける必要があります。そうすることで、ビジネス上意思決定アプローチ、例えば製造業で過去データから異常製品を検出したり、店舗の売上が下がってる時は過去データと比較して原因追求することができます。同時に、ビジネスへ活かすことでBigDataに対する設備投資の回収も見込めます。MySQLやOracleなどリレーショナルデータベースの場合はデータの範囲が限られてるため、少ないストレージ要領で分析メイン利用であれば設備投資回収が難しいです。\n\u0026nbsp; DWHを設計する上で特に意識したいことは以下の３点になります。\n データ収集、加工、処理が簡略化できる\n 容量を気にしない、長期的なデータ分できができる\n テーブル一本化（ファクトテーブル）で大規模加工処理や高速検索が可能\n  この３点を満たせば、DWHは分析基盤としても非常に有利になりますので、これらを意識して構築いただければと思います。\nデータ分析業務のミッション \u0026nbsp; データ分析業務のミッションとして、サービスを継続、成功へ導くために、様々なLogをDWHへ収集、蓄積し、KPI、データの見える化を実現、分析し次のステップへ進める様に取り組みます。図の様なワークフローになります。こちらも「収集・蓄積」、「収集・加工」、「分析」ででデータ容量に注目してください。\n上記、外部データからDataLakeへ収集、蓄積し、これを集計・加工、そして分析へといったワークフローがありますが、数千万レコードとか大規模データとなるとそう簡単には行かないです。そのために、OLTP、OLAPのアーキテクチャを持ったhadoopエコシステムでの処理が必要になります。\n・OLTPは更新系（生成/挿入/更新/削除）、１行単位のスキャン\n・OLAPは分析処理、select参照、フルスキャン\n総じて、DHWがPB〜EB級でも更新できる、TB級の大規模データの分析難易度が鍵となります。\nBigDataプロダクトの組み合わせ例 \u0026nbsp; 外部データソースから、データ分析業務へ結びつけるためには、それぞれのポジションにて様々なプロダクトを配置する必要があります。\n著書はAlibabaCloudでのDWH構築を軸として実現例をいくつか作成してみましたので、参考にいただければ幸いです。構築手法は別の章にて記載いたします。\n上記の例もありますが、他にプロダクトのアーキテクチャ構成図として以下の組み合わせもあります。汎用的で様々な使い方をイメージしたものですが、参考にしてください。\nまとめ \u0026nbsp; AlibabaCloudのBigDataはシンプルかつ様々な基盤構築が簡単にできますので、データ分析業務へ結びつけることを意識してリソースを作成いただければと思います。\nまた、著者の経験上、大規模な分散システムを設計・構築する上で非常に参考になる情報がありますので、こちらも参考にいただければ幸いです。本テクニカルサイトでは記載しませんが、DWH構築〜BigData運用においてReactive Architectureや冪等性の重要さが伝わると思います。\n分散アーキテクチャの概念\nhttps://blog.pragmaticengineer.com/distributed-architecture-concepts-i-have-learned-while-building-payments-systems/ 信頼できる方法で大規模な分散システムを運用する方法\nhttps://blog.pragmaticengineer.com/operating-a-high-scale-distributed-system/ "
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/terraform/06/docker/",
	"title": "Dockerについて",
	"tags": [],
	"description": "Alibaba Cloudでも用いられるTerraformをDockerを用いて実行します。",
	"content": " \u0026nbsp; 前章までは Terraformのインストール方法、Terraformの文法、実行方法を説明しました。しかしこれらはTerraform v0.11.13前提での話なので、Terraformのバージョンが違うことで挙動が異なってしまうこともあります。Terraformでよく使うメソッドが急に廃止、、というのもよくあります。それを防ぐためにdockerを使ったインストール、利用する方法があります。dockerはパッケージングを行うための技術です。\n*注：Terraformのバージョン食い違いは基本的にtfenvでカバーできます。詳しくはインストールを参照してください\n\n1. dockerについて \u0026nbsp; dockerはOS・ミドルウェア・ファイルシステム全体をイメージという単位で取り扱い、まるごとやりとり出来るツールです。また、イメージの配布やバージョン管理も可能です。メリットとして、手軽に同じ環境を何人のユーザ・ユーザ・他のマシンでも手に入れることができ、即座に同環境を再現（ CI (Continuous Integration) 継続的インテグレーションと CD (Continuous Delivery) 継続的デリバリー ）することができます。 また、dockerはTerraformで大きく３つの役割があり、Terraformのインストールや実行環境の再現、各種リソースの接続設定、docker Imageを使った既存のプロダクトリソースをそのまま導入することが可能です。（docker Imageとは、dockerコンテナを作成する際に必要となるファイルシステムです。）\n\n2. dockerのTerraform位置について \u0026nbsp; Terraformによるdockerの利用は大きく3パターンあります。他の便利な役割もありますが、ここは以下３つに絞って紹介します。\n 1.Terraformのバージョン違いなど環境差分を抑えつつ実行する場合 2.Terraformで新規作成した各種リソースの接続設定をする場合 3.docker-imageを使った、CI/CD:継続的インテグレーションと継続的デリバリーをする場合  ざっくりですがこんなイメージです。 \u0026nbsp; 1はバージョン固定や実行環境を汚さずに使用するメリットがあります。様々な環境でterraformを使用したい場合は直接terraformコマンドをインストールせず、バージョン管理が可能なツール(tfenv)を使用してインストールすルことを勧めます。 \u0026nbsp; 2はTerraformで新規作成したリソースに対し、docker-compose.yml ファイルを使ってアプリケーションの環境を設定します。こちらは公式サイトにて説明がありますので参考にしてください。 http://docs.docker.jp/compose/overview.html\n\u0026nbsp; 3は、dockerのImageファイルをdocker hub（リポジトリ）へ保存することで、新規ECSや各種アプリケーション、Webサイトを立ち上げる時、docker hub（リポジトリ）から対象のDocker ImageファイルをPullしそのまま実行することで、どの環境でも継続CI/CDを実現することができます。\n本章はTerraformをメインとしてるため、ここにCI/CDや方法は載せませんが、やり方は以下サイトを参照してみてください。（近日中にCI/CD手法を載せる予定です）\nDockerize App and Push to Container Registry: CI/CD Automation on Container Service (1)\nContinuous Deployment Automation on Alibaba Cloud: CI/CD Automation on Container Service (2)\nDeploy Docker Image to Alibaba Cloud Container Service: CI/CD Automation on Container Service (3)\n\n3. docker上でのTerraform実行について \u0026nbsp; それではdocker上でterraformを実行してみます。実行するためには先にdocker Imageを入手する必要がありますので、まずは以下サイトを参照してください。 https://hub.docker.com/r/hashicorp/terraform/\n参考：Terraformのdocker Imageについて https://github.com/hashicorp/docker-hub-images/tree/master/packer\n\nDesktopにてterraform-dockerというディレクトリを作成し、そこでdockerを実行します。\n$ mkdir ~/Desktop/terraform-docker $ cd ~/Desktop/terraform-docker $ touch main.tf  以下サンプルソース main.tfを作ってみます。\nprovider \u0026quot;alicloud\u0026quot; { region = \u0026quot;ap-northeast-1\u0026quot; } resource \u0026quot;alicloud_vpc\u0026quot; \u0026quot;vpc\u0026quot; { name = \u0026quot;docker-test-vpc\u0026quot; cidr_block = \u0026quot;192.168.1.0/24\u0026quot; }  \nこれで準備完了です。構成はこの通りになります。\n$ pwd /Users/hironobu.ohara/Desktop/terraform-docker $ ls total 8 drwxr-xr-x 3 hironobu.ohara staff 96B 7 19 11:43 . drwx------@ 54 hironobu.ohara staff 1.7K 7 19 11:43 .. -rw-r--r-- 1 hironobu.ohara staff 147B 7 19 11:31 main.tf $ cat main.tf provider \u0026quot;alicloud\u0026quot; { region = \u0026quot;ap-northeast-1\u0026quot; } resource \u0026quot;alicloud_vpc\u0026quot; \u0026quot;vpc\u0026quot; { name = \u0026quot;docker-test-vpc\u0026quot; cidr_block = \u0026quot;192.168.1.0/24\u0026quot; }  \n次にTerraformをdocker上で起動します。 そのとき、access_key・secret_keyを渡すことでAlibabaCloudのTerraformが実行できます。また、ホストのカレントディレクトリをコンテナ上へマウント( -v $(pwd):/terraform )してファイルの共有を行います。 今後の記述するTerraformのコードはこのディレクトリに配置してコンテナと共有します。 またterraformのバージョンは過去の0.10.1を指定してみます。\ndocker run \\ -e access_key=\u0026lt;ACCESS KEY\u0026gt; \\ -e secret_key=\u0026lt;SECRET KEY\u0026gt; \\ -v $(pwd):/terraform \\ -w /terraform \\ -it \\ --entrypoint=ash \\ hashicorp/terraform:0.10.1  \nこれが実行できたらdocker環境上に入ります。 最後に、docker内でTerraformを操作するためのコマンドを確認してみます。実行内容、結果はこのようになります。\n/terraform # terraform version Terraform v0.10.1 Your version of Terraform is out of date! The latest version is 0.12.5. You can update by downloading from www.terraform.io /terraform #  \nあとはいつもの通りに terraform init や terraform plan 、 terraform apply を実行するだけです。（docker環境、terraform version 0.10.1での実行になります。）\n/terraform # /terraform # terraform init Initializing provider plugins... - Checking for available provider plugins on https://releases.hashicorp.com... - Downloading plugin for provider \u0026quot;alicloud\u0026quot; (1.52.1)... The following providers do not have any version constraints in configuration, so the latest version was installed. To prevent automatic upgrades to new major versions that may contain breaking changes, it is recommended to add version = \u0026quot;...\u0026quot; constraints to the corresponding provider blocks in configuration, with the constraint strings suggested below. * provider.alicloud: version = \u0026quot;~\u0026gt; 1.52\u0026quot; Terraform has been successfully initialized! You may now begin working with Terraform. Try running \u0026quot;terraform plan\u0026quot; to see any changes that are required for your infrastructure. All Terraform commands should now work. If you ever set or change modules or backend configuration for Terraform, rerun this command to reinitialize your working directory. If you forget, other commands will detect it and remind you to do so if necessary. /terraform # /terraform # terraform play Usage: terraform [--version] [--help] \u0026lt;command\u0026gt; [args] The available commands for execution are listed below. The most common, useful commands are shown first, followed by less common or more advanced commands. If you're just getting started with Terraform, stick with the common commands. For the other commands, please read the help and docs before usage. Common commands: apply Builds or changes infrastructure console Interactive console for Terraform interpolations destroy Destroy Terraform-managed infrastructure env Workspace management fmt Rewrites config files to canonical format get Download and install modules for the configuration graph Create a visual graph of Terraform resources import Import existing infrastructure into Terraform init Initialize a Terraform working directory output Read an output from a state file plan Generate and show an execution plan providers Prints a tree of the providers used in the configuration push Upload this Terraform module to Atlas to run refresh Update local state file against real resources show Inspect Terraform state or plan taint Manually mark a resource for recreation untaint Manually unmark a resource as tainted validate Validates the Terraform files version Prints the Terraform version workspace Workspace management All other commands: debug Debug output management (experimental) force-unlock Manually unlock the terraform state state Advanced state management /terraform # /terraform # /terraform # terraform apply alicloud_vpc.vpc: Creating... cidr_block: \u0026quot;\u0026quot; =\u0026gt; \u0026quot;192.168.1.0/24\u0026quot; name: \u0026quot;\u0026quot; =\u0026gt; \u0026quot;docker-test-vpc\u0026quot; resource_group_id: \u0026quot;\u0026quot; =\u0026gt; \u0026quot;\u0026lt;computed\u0026gt;\u0026quot;  \ndocker環境を終了する場合はexitを入力するだけです。\n/terraform # /terraform # /terraform # exit $ $  "
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/007_oss-and-e-mapreduce/",
	"title": "OSSとE-MapReduce",
	"tags": [],
	"description": "OSSとE-MapReduceを勧める理由、簡単な使い方を説明します。",
	"content": " OSSとE-MapReduce \u0026nbsp; 前述、Hadoop概要、DWHなどBigDataの基本的なことを説明しました。今回はAlibabaCloudで簡単にBigDataができることを記載します。\nAlibabaCloudには様々なBigDataプロダクトがあります。BigData絡みだけでこのプロダクトがあります（RDB系、分散DB系、NoSQL系は除外）\nこれらは順次追って本テクニカルサイトにて手法、ケースを載せます。\n   icon プロダクト名 説明 メモ      MaxCompute 大規模データウェアハウジングに対応できるデータ処理プラットフォーム     E-MapReduce E-MapReduce、Hadoopクラスタの展開や運用が可能     RealtimeCompute Apache Flink を最適化したマネージドリアルタイムデータ処理プラットフォーム     DataWorks 大規模データを処理するオンラインIDEサービス     LogService データ収集、クリーニング、分析、視覚化、アラートを実現するマネージドサービス     DataV DataV、データの可視化     QuickBI クラウド上のユーザー向けに調整されたBIサービス     Machine Learning PAI 機械学習と深層学習のデータ処理、モデルトレーニング、サービス展開、予測のためのプラットフォーム     Elasticsearch データ分析、データ検索、機械学習、グラフ、APMなどを実現するマネージドサービス     GraphAnalytics リレーショナルネットワークの分析サービス 中国サイトのみ    DataLakeAnalytics ServerlessでOSS、データベース、NoSQLなどのデータソースでデータを分析するマネージドサービス     OpenSearch 分散検索エンジンプラットフォーム 中国サイトのみ    Hologram PBレベルのデータに対し1秒未満で応答する超高速OLAPマネージドサービス 中国サイトのみ    \n\u0026nbsp; 今回はHadoopのファーストステップとして、E-MapReduceを使ってみます。E-MapReduceはHadoop分散モードを構築するとき必要となるマスターノード・スレーブノードのクラスタの作成、初期設定らプロビジョニング（Javaインストール、Hadoopインストール、各種設定etc）を自動で実行してくれます。同時にクラスタ管理および使用するための統合フレームワークが使えるため、Hadoopや周辺エコシステムを簡単に利用することができます。\n\nE-MapReduceを利用するメリット\n 自力でHadoopおよびエコシステムの環境を構築しなくていい\n マスタノード/スレーブノードなどクラスタ管理など、運用をしなくていい\n 使った分だけ料金を払うpay-as-you-go、利用期間に応じて料金を払うsubscriptionがあり、利用用途に応じて節約することが可能\n  \u0026nbsp; E-MapReduceはOSSのデータを使って処理したり、処理結果をOSSへ保存したりします。もちろんOSSをセントラルストレージとして、直接SQLクエリを投げてOSSからデータ取得することもできます。BigDataはデータが増えれば増えるほど維持費、処理のコストが跳ね上がってしまいます。例えば、OSSに処理したいDataLakeデータ、DWHなどが100TBあるとして、これをECSなど一時的なストレージに持たせるのはコスト的にも負荷が大きいです。そのため、OSSを全体的にHubとしたBigData運用が経済的にもお得です。\n\u0026nbsp; 上記、大規模なBigDataを運用するときOSSをセントラルストレージとするもう一つの理由があります。AlibabaCloudのOSSはDataLake、DWHを構築するのに必要な機能や大規模な分散サービスに必要な要件を備えています。SLA99.99999999%、高い堅牢性、データロストなし、他サービスとの親和性etc\u0026hellip; 加えて、先述した通り料金が安いというメリットを踏まえると、これ以上の選択肢はないと思います。\n\u0026nbsp; まとめると、OSSをセントラルストレージとしたBigData運用をすると以下のメリットがあります。\n ストレージと計算処理を分離できるため、データ消失のリスクがない\n OSSをセントラルストレージとすることで、全体的なコスト削減が見込める\n E-MapReduceの処理結果データをRDSやDataVなど、他プロダクトへ回すことが可能\n  \u0026nbsp; 他社クラウドとのOSS比較としては以下の通りになります。AlibabaCloud OSSはAWS S3、GCP Cloud Storage、Azure Blob Storageとあまり謙遜ないです。\n\u0026nbsp; しかし、AlibabaCloudのE-MapReduceは他社クラウドと比べてかなり多くのHadoopエコシステムを搭載しています。AWS、GCP、Azure、Clouderaの様々なサービス+α 以上の機能があり、BigDataに関するあらゆること（OLTP、OLAP、FaaS、コンテナ運用、分散で深層学習、ストリーミングで機械学習など）が詰まっています。ImpalaにKuduなど、他社クラウドサービスでは実現できないこと、また構築が困難なケースに対し解決アプローチとなるエコシステムがたくさんあります。こちらが比較表です。（2019/08/20時点）\n     ALBB EMR AWS EMR GCP Dataproc Azure HDInsight Cloudera CDH     Hadoop Version 3.22.0 5.26.0 1.4.13-debian9/ubuntu18 2019/08/23 HDInsight 4.0 CDH 6.3.0    Apache Hadoop 2.8.5 2.8.5 2.9.2 3.1.1 3.0.0    HDFS 2.8.5 2.8.5 2.9.2 3.1.1 3.0.0    YARN 2.8.5 2.8.5 2.9.2 3.1.1 3.0.0    Apache Hive 3.1.1 2.3.5 2.3.5 3.1.0 2.1.1    Apache Spark 2.4.3 2.4.3 2.4.3 2.3.1、2.4 2.4.0    Knox 1.1.0        Zeppelin 0.8.1 0.8.1 0.8.1      Tez 0.9.1 0.9.2 0.9.2 0.9.1     Ganglia 3.7.2 3.7.2       Apache Pig 0.14.0 0.17.0 0.17.0 0.16.0 0.17.0    Apache Sqoop 1.4.7 1.4.7  1.4.7 1.4.7    Bigboot 2.0.0        OpenLDAP 2.4.44        Hue 4.4.0 4.4.0   4.3.0    Apache HBase 1.4.9 1.4.10  2.0.1 2.1.4    HBase Indexer     1.5    Apache Zookeeper 3.5.5 3.4.14 3.4.13 3.4.6 3.4.5    Presto 0.221 0.22 0.215      Apache Impala 2.12.2    3.2.0    Apache Flume 1.8.0    1.9.0    Livy 0.6.0 0.6.0  0.5     Superset 0.28.1        Ranger 1.2.0   1.1.0     Flink 1.7.2 1.8.0       Storm 1.2.2   None(Old Version 1.1.0)     Phoenix 4.14.1 4.14.2  5.0.0     Analytics Zoo 0.5.0        SmartData 2.0.0        Apache Kudu 1.10.0    1.10.0    Apache Oozie 5.1.0 5.1.0  4.3.1 5.1.0    JupyterHub  0.9.6       MXNet  1.4.0       Mahout  0.13.0   0.9.0    Hcatalog  2.3.5  -     Anaconda   5.2.0      GCS connector   1.9.17-hadoop2      Hive WebHCat   2.3.2      Kerberos   1.15.1      Apache Mahout    None(Old Version 0.9.0)     Apache Ambari    2.7.0     Mono    4.2.1     Apache Avro     1.8.2    Apache Crunch     0.11.0    Apache DataFu     1.1.0    Apache Parquet     1.9.0    Parquet-format     2.4.0    Apache Sentry     2.1.0    Cloudera Search     1.0.0    Kite SDK     1.0.0    Apache Solr     7.4.0    Apache Accumulo     1.9.2    Cloudera Navigator     3.0.0     ALBB EMR AWS EMR GCP Dataproc Azure HDInsight Cloudera CDH   Kafka Version 3.22.0        Apache Zookeeper 3.5.5 3.4.14 3.4.13 3.4.6 3.4.5    Ganglia 3.7.2 3.7.2       Kafka 1.1.1   1.1.1、2.1 2.2.1    Kafka-Manager 1.3.3.16        Knox 1.1.0        Ranger 1.2.0   1.1.0     OpenLDAP 2.4.44         ALBB EMR AWS EMR GCP Dataproc Azure HDInsight Cloudera CDH   Data Science Version 3.16.0        HDFS 2.7.2-1.3.2 2.8.5 2.9.2 3.1.1 3.0.0    YARN 2.7.2-1.3.2 2.8.5 2.9.2 3.1.1 3.0.0    Apache Spark 2.3.2-1.0.1 2.4.3 2.4.3 2.3.1、2.4 2.4.0    Apache Zookeeper 3.4.13 3.4.14 3.4.13 3.4.6 3.4.5    Zeppelin 0.8.0  0.8.1 0.8.0     ApacheDS 2.0.0        Ganglia 3.7.2 3.7.2       Tensorflow on YARN 1.0.0        Analytics Zoo 0.2.0        Jupyter 4.4.0  4.4.0      Apache Hive 2.3.3-1.0.3 2.3.5 2.3.5 3.1.0 2.1.1    TensorFlow 1.8.0 1.13.1       Hue 4.1.0 4.4.0   4.3.0     ALBB EMR AWS EMR GCP Dataproc Azure HDInsight Cloudera CDH   Druid Version 3.22.0        HDFS 2.8.5 2.8.5 2.9.2 3.1.1 3.0.0    Druid 0.14.2  0.13.0      Apache Zookeeper 3.5.5 3.4.14 3.4.13 3.4.6 3.4.5    Ganglia 3.7.2 3.7.2       OpenLDAP 2.4.44        YARN 2.8.5 2.8.5 2.9.2 3.1.1 3.0.0    Superset 0.28.1        \n\u0026nbsp; そういった意味では、AlibabaCloudのBigDataはかなり力が入ってることが伝わると思います。MaxComputeにHologramなど、他のプロダクトの力もありますが、E-MapReduceだけでも強力な武器となっているのはAlibabaCloudだからこそです。 \u0026nbsp; AlibabaCloudのE-MapReduceアーキテクチャを少しみてみます。以下のような構成図となっています。（ここには書いていないHadoopエコシステムが多数ありますがそこは割愛します）\n\u0026nbsp; 上記の図のように、E-MapReduceはECSインスタンスのローカルティスク上に構築され、HDFSは中間データの格納先として利用されます。E-MapReduceのデータ読み出しや書き込みは基本的にOSSに対して行われます。 またE-MapReduceには様々なファイルシステムをサポートしています。\n HDFS接続 ファイルシステム接続 EMR接続 JindoFS接続  \u0026nbsp; E-MapReduceにはJindoFSアーキテクチャを実装しており、OSSに対しシームレスな読み込み/書き込み処理が実現できます。それだけでなく、OSSにあるDWHやHDFSなどでのメタデータの共有、管理ができるため、E-MapReduceで高速処理することができます。\n\u0026nbsp; JindoFS接続の使い方も簡単です。通常URLパスをjfsへ書き換えるだけです。実際の利用方法は別の章にて記載いたします。 まとめ 本章ではOSSとE-MapReduceの相性、素晴らしさを説明しました。Hadoopに親しんでる人ならばE-MapReduceだけで簡単にETLできることや、OSSをセントラルストレージとしたOLTP、OLAP、機械学習、深層学習、ストリーミングができるのはAlibabaCloudのみです。 加えて、本章では触れていませんでしたがHadoopに詳しくない、BigDataが初めての人でもマネージドサービスとしてMaxCompute、DataWorksプロダクトサービスもあります。このプロダクトだけでBigData運用を自己完結することも可能です。\nこのように、AlibabaCloudのBigData運用は非常に優位性があることを理解いただければと思います。 "
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/terraform/07/module/",
	"title": "Moduleについて",
	"tags": [],
	"description": "Alibaba Cloudでも用いられるTerraformのModuleについて説明します。",
	"content": " \u0026nbsp; これまでTerraformの書き方を学びました。しかし問題があります。それはvariableによる変数宣言が多すぎると、可読性も下がり、場合によっては何度も同じ内容を書く必要があったりします。それを防ぐために、他のプログラミング言語と同じくモジュール化があります。\n\n1. Moduleとは \u0026nbsp; Terraformにおけるmoduleは各resourceを抽象化するためのものです。以下の例を見てみましょう。モジュール化されてないソースと、モジュール化されてないソースを見てください。\nモジュール化されてないソース variable \u0026quot;region\u0026quot; { default = \u0026quot;ap-northeast-1\u0026quot; } variable \u0026quot;solution_name\u0026quot; { default = \u0026quot;Web-Application-for-Terraform\u0026quot; } variable \u0026quot;web_layer_name\u0026quot; { default = \u0026quot;Web\u0026quot; } variable \u0026quot;web_availability_zone\u0026quot; { default = \u0026quot;a\u0026quot; } resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;web\u0026quot; { instance_name = \u0026quot;${var.web_layer_name}\u0026quot; availability_zone = \u0026quot;${var.region}${var.web_availability_zone}\u0026quot; ・・・ ・・・ }  resourceの中に変数のプレースホルダを置き、さらにその変数名を variableで変数宣言し呼び出ししてしまいます。それを抑えるのがmoduleです。\nモジュール化されてるソース variable \u0026quot;region\u0026quot; { value = \u0026quot;ap-northeast-1\u0026quot; } variable \u0026quot;solution_name\u0026quot; { value = \u0026quot;Web-Application-for-Terraform\u0026quot; } variable \u0026quot;web_layer_name\u0026quot; { value = \u0026quot;Web\u0026quot; } variable \u0026quot;web_availability_zone\u0026quot; { value = \u0026quot;a\u0026quot; } module { source = \u0026quot;./hoge\u0026quot; name = \u0026quot;${var.name}\u0026quot; type = \u0026quot;${var.type}\u0026quot; }  \nモジュール化することで、共通の構成を再利用可能なコンポーネントとして利用することができます。\n\n2. Module化について \u0026nbsp; モジュールは名前通り、リソースをまとめてテンプレート化し、呼び出すときに必要な引数だけ与えてあげれば実行できるものです。 1つのPJ配下で同じ変数を繰り返し宣言をする部分や、サービス毎にコードら記載することが多くなった時は、モジュールを使うことで、より効率的にコード作成、実行することができます。 Webサーバ立ち上げソースをベースに、モジュールを作ってみます。\n▼ ベーシックなWebサーバ\nvariable \u0026quot;access_key\u0026quot; {} variable \u0026quot;secret_key\u0026quot; {} variable \u0026quot;region\u0026quot; {} variable \u0026quot;zone\u0026quot; {} provider \u0026quot;alicloud\u0026quot; { access_key = \u0026quot;${var.access_key}\u0026quot; secret_key = \u0026quot;${var.secret_key}\u0026quot; region = \u0026quot;${var.region}\u0026quot; } resource \u0026quot;alicloud_security_group\u0026quot; \u0026quot;sg\u0026quot; { name = \u0026quot;terraform-sg\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; } resource \u0026quot;alicloud_security_group_rule\u0026quot; \u0026quot;allow_http\u0026quot; { type = \u0026quot;ingress\u0026quot; ip_protocol = \u0026quot;tcp\u0026quot; nic_type = \u0026quot;intranet\u0026quot; policy = \u0026quot;accept\u0026quot; port_range = \u0026quot;80/80\u0026quot; priority = 1 security_group_id = \u0026quot;${alicloud_security_group.sg.id}\u0026quot; cidr_ip = \u0026quot;0.0.0.0/0\u0026quot; } resource \u0026quot;alicloud_vpc\u0026quot; \u0026quot;vpc\u0026quot; { name = \u0026quot;terraform-vpc\u0026quot; cidr_block = \u0026quot;192.168.1.0/24\u0026quot; } resource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;vsw\u0026quot; { vpc_id = \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; cidr_block = \u0026quot;192.168.1.0/28\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; } resource \u0026quot;alicloud_eip\u0026quot; \u0026quot;eip\u0026quot; { internet_charge_type = \u0026quot;PayByTraffic\u0026quot; } resource \u0026quot;alicloud_eip_association\u0026quot; \u0026quot;eip_asso\u0026quot; { allocation_id = \u0026quot;${alicloud_eip.eip.id}\u0026quot; instance_id = \u0026quot;${alicloud_instance.web.id}\u0026quot; } resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;web\u0026quot; { instance_name = \u0026quot;terraform-ecs\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; image_id = \u0026quot;centos_7_3_64_40G_base_20170322.vhd\u0026quot; instance_type = \u0026quot;ecs.n4.small\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.sg.id}\u0026quot;] vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; user_data = \u0026quot;${file(\u0026quot;provisioning.sh\u0026quot;)}\u0026quot; }  この例から、例えばinstance_typeを他のリソースコードでも繰り返し使いたい場合、これをモジュールとして作成します。\nモジュールを作成するときは階層化された別ディレクトリにする必要があります。（フォルダで親と子の関係が必須） 以下リストのようにディレクトリ構成にします。拡張子は.tfです。\n▼ モジュールを作成するときのディレクトリ構成\n├── basic_webserver │ └── module.tf ・・・ モジュールを記載するファイル └── main.tf ・・・ モジュールを利用するファイル  それでは上記配置したmain.tfおよびmodule.tfにてソースを記載します。\n▼リスト main.tfの中身\nvariable \u0026quot;instance_type\u0026quot; {} variable \u0026quot;access_key\u0026quot; {} variable \u0026quot;secret_key\u0026quot; {} variable \u0026quot;region\u0026quot; {} variable \u0026quot;zone\u0026quot; {} provider \u0026quot;alicloud\u0026quot; { access_key = \u0026quot;${var.access_key}\u0026quot; secret_key = \u0026quot;${var.secret_key}\u0026quot; region = \u0026quot;${var.region}\u0026quot; } resource \u0026quot;alicloud_security_group\u0026quot; \u0026quot;sg\u0026quot; { name = \u0026quot;terraform-sg\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; } resource \u0026quot;alicloud_security_group_rule\u0026quot; \u0026quot;allow_http\u0026quot; { type = \u0026quot;ingress\u0026quot; ip_protocol = \u0026quot;tcp\u0026quot; nic_type = \u0026quot;intranet\u0026quot; policy = \u0026quot;accept\u0026quot; port_range = \u0026quot;80/80\u0026quot; priority = 1 security_group_id = \u0026quot;${alicloud_security_group.sg.id}\u0026quot; cidr_ip = \u0026quot;0.0.0.0/0\u0026quot; } resource \u0026quot;alicloud_vpc\u0026quot; \u0026quot;vpc\u0026quot; { name = \u0026quot;terraform-vpc\u0026quot; cidr_block = \u0026quot;192.168.1.0/24\u0026quot; } resource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;vsw\u0026quot; { vpc_id = \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; cidr_block = \u0026quot;192.168.1.0/28\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; } resource \u0026quot;alicloud_eip\u0026quot; \u0026quot;eip\u0026quot; { internet_charge_type = \u0026quot;PayByTraffic\u0026quot; } resource \u0026quot;alicloud_eip_association\u0026quot; \u0026quot;eip_asso\u0026quot; { allocation_id = \u0026quot;${alicloud_eip.eip.id}\u0026quot; instance_id = \u0026quot;${alicloud_instance.web.id}\u0026quot; } resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;web\u0026quot; { instance_name = \u0026quot;terraform-ecs\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; image_id = \u0026quot;centos_7_3_64_40G_base_20170322.vhd\u0026quot; instance_type = var.instance_type system_disk_category = \u0026quot;cloud_efficiency\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.sg.id}\u0026quot;] vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; user_data = \u0026quot;${file(\u0026quot;provisioning.sh\u0026quot;)}\u0026quot; }  ▼リスト module.tfの中身\nmodule \u0026quot;webserver\u0026quot; { source = \u0026quot;./basic_webserver\u0026quot; instance_type = \u0026quot;ecs.n4.small\u0026quot; }  準備ができたら、terraform get かterraform initコマンドでモジュールを認識させます。それからterraform plan、applyを実行します。\n$ terraform get $ terraform plan -var-file=\u0026quot;confing.tfvars\u0026quot; -var 'instance_pattern=dev' $ terraform apply -var-file=\u0026quot;confing.tfvars\u0026quot; -var 'instance_pattern=production'  これでリソースが実行されます。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/008_training_etl_and_olap_with_e-mapreduce/",
	"title": "E-MapReduce起動、ETLとOLTP、OLAPをする",
	"tags": [],
	"description": "チューリアトルとして、E-MapReduceを起動しETLし、HiveでOLTP、ImpalaでOLAPをします",
	"content": " E-MapReduceの起動、チューリアトルについて \u0026nbsp; 簡単なチューリアトルとして、E-MapReduceを起動しHiveでOSSにあるCSVファイルをParquetへETLし、HiveでOLTP、ImpalaでOLAPというワークフローをしてみます。\nE-MapReduceの起動は非常に簡単です。ゴールとしては以下の通りになります。\nStep1: OSSにデータを保存します BigDataを始めるためにはまずデータが必要です。今回はニューヨーク市のタクシーおよびリムジン委員会（NYC TLC）によるタクシーデータ（240GBを超えるCSVファイル）というオープンデータを使って、OSS+E-MapReduceを使用したETL、分析業務の取り込みについて説明します。\nhttps://www1.nyc.gov/site/tlc/about/tlc-trip-record-data.page ECSインスタンス１台にて、aliyun-cliをインストールします。そのあと、NYTデータをダウンロード、OSSヘアップロードします。\n前提として、OSSにBigData専用のディレクトリを作成する必要があります。以下の例では\noss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/csv/ というディレクトリを作成しました。\n以下はECS、CentOS 7.6での操作になります。\nより詳しいインストール方法はこちらを参考にしてください。\n[root@aliyun ~]# [root@aliyun ~]# yum -y install wget 〜 略 〜 [root@aliyun ~]# wget https://aliyuncli.alicdn.com/aliyun-cli-linux-3.0.16-amd64.tgz --2019-06-06 14:18:34-- https://aliyuncli.alicdn.com/aliyun-cli-linux-3.0.16-amd64.tgz Resolving aliyuncli.alicdn.com (aliyuncli.alicdn.com)... 202.47.28.98, 202.47.28.99 Connecting to aliyuncli.alicdn.com (aliyuncli.alicdn.com)|202.47.28.98|:443... connected. HTTP request sent, awaiting response... 200 OK Length: 9159371 (8.7M) [application/x-compressed-tar] Saving to: ‘aliyun-cli-linux-3.0.16-amd64.tgz’ 100%[==============================================================================================================================================================\u0026gt;] 9,159,371 --.-K/s in 0.06s 2019-06-06 14:18:34 (150 MB/s) - ‘aliyun-cli-linux-3.0.16-amd64.tgz’ saved [9159371/9159371] [root@aliyun ~]# tar -xzvf aliyun-cli-linux-3.0.16-amd64.tgz aliyun [root@aliyun ~]# [root@aliyun ~]# sudo cp aliyun /usr/local/bin [root@aliyun ~]# [root@aliyun ~]# aliyun configure Configuring profile \u0026#39;\u0026#39; in \u0026#39;\u0026#39; authenticate mode... Access Key Id []: ＜ここは各自のAccess Key Idを入力してください＞ Access Key Secret []: ＜ここは各自のAccess Key Secretを入力してください＞ Default Region Id []: ap-northeast-1 Default Output Format [json]: json (Only support json)) Default Language [zh|en] en: en Saving profile[] ...Done. available regions: cn-qingdao cn-beijing cn-zhangjiakou cn-huhehaote cn-hangzhou cn-shanghai cn-shenzhen cn-hongkong ap-northeast-1 ap-southeast-1 ap-southeast-2 ap-southeast-3 ap-southeast-5 ap-south-1 us-east-1 us-west-1 eu-west-1 me-east-1 eu-central-1 Configure Done!!! ..............888888888888888888888 ........=8888888888888888888D=.............. ...........88888888888888888888888 ..........D8888888888888888888888I........... .........,8888888888888ZI: ...........................=Z88D8888888888D.......... .........+88888888 ..........................................88888888D.......... .........+88888888 .......Welcome to use Alibaba Cloud.......O8888888D.......... .........+88888888 ............. ************* ..............O8888888D.......... .........+88888888 .... Command Line Interface(Reloaded) ....O8888888D.......... .........+88888888...........................................88888888D.......... ..........D888888888888DO+. ..........................?ND888888888888D.......... ...........O8888888888888888888888...........D8888888888888888888888=........... ............ .:D8888888888888888888.........78888888888888888888O .............. [root@aliyun ~]# [root@aliyun ~]# [root@aliyun ~]# aliyun oss ls CreationTime Region StorageClass BucketName 2019-05-27 13:59:58 +0800 CST oss-ap-northeast-1 Standard oss://bigdata-prod-tech 2019-02-26 09:47:16 +0800 CST oss-cn-beijing Standard oss://ohiro18-analysis-china 2019-02-26 09:48:11 +0800 CST oss-ap-northeast-1 Standard oss://ohiro18-dev-japan 2019-04-01 11:51:37 +0800 CST oss-ap-northeast-1 Standard oss://ohiro18-mediation 2019-05-22 20:51:37 +0800 CST oss-ap-northeast-1 Standard oss://ohiro18-efk-ml Bucket Number is: 5 0.335011(s) elapsed [root@aliyun ~]#  \nECSでaliyun-cliのインストールが無事完了しましたので、今度はNYTデータをダウンロード、OSSへアップロードします。\n[root@aliyun ~]# wget https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2018-09.csv [root@aliyun ~]# aliyun oss cp yellow_tripdata_2018-09.csv oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/csv/ [root@aliyun ~]# rm -rf yellow_tripdata_2018-09.csv [root@aliyun ~]# wget https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2018-10.csv [root@aliyun ~]# aliyun oss cp yellow_tripdata_2018-10.csv oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/csv/ [root@aliyun ~]# rm -rf yellow_tripdata_2018-10.csv [root@aliyun ~]# wget https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2018-11.csv [root@aliyun ~]# aliyun oss cp yellow_tripdata_2018-11.csv oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/csv/ [root@aliyun ~]# rm -rf yellow_tripdata_2018-11.csv [root@aliyun ~]# wget https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2018-12.csv [root@aliyun ~]# aliyun oss cp yellow_tripdata_2018-12.csv oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/csv/ [root@aliyun ~]# rm -rf yellow_tripdata_2018-12.csv \nこの処理後、OSSのプレフィックス上では、このような感じになってると思います。\nこれで、OSSへのDataLake（厳密には違うが）、下準備が完了しました。\nStep2: E-MapReduceを起動する前に、OSSでE-MapReduceに必要な権限を付与します。 \u0026nbsp; E-MapReduceを起動する時に先に実施したいのがRAMロール AliyunEmrEcsDefaultRole の設定です。これを設定することで、EMRからOSSへのアクセスが楽になります。理由としてはこちらのBlogが参考になると思います。\nhttps://www.sbcloud.co.jp/entry/2019/02/01/metaservice/ https://jp.alibabacloud.com/help/doc-detail/43966.html\n{ \u0026quot;Statement\u0026quot;: [ { \u0026quot;Action\u0026quot;: [ \u0026quot;sts:AssumeRole\u0026quot;, \u0026quot;oss:GetObject\u0026quot;, \u0026quot;oss:ListObjects\u0026quot;, \u0026quot;oss:PutObject\u0026quot;, \u0026quot;oss:DeleteObject\u0026quot;, \u0026quot;oss:ListBuckets\u0026quot;, \u0026quot;oss:AbortMultipartUpload\u0026quot; ], \u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;, \u0026quot;Principal\u0026quot;: { \u0026quot;Service\u0026quot;: [ \u0026quot;emr.aliyuncs.com\u0026quot; ] }, \u0026quot;Resource\u0026quot;: \u0026quot;*\u0026quot; } ], \u0026quot;Version\u0026quot;: \u0026quot;1\u0026quot; }   初期設定状態\nE-MapReduceがOSSへアクセスできるように権限変更へ\n \nStep3: E-MapReduceを起動します。 \u0026nbsp; 本題、E-MapReduceを起動します。consoleからE-MapReduceを選定し、クラスタ作成を進めます。\n今回、著者は以下の条件で起動いたしました。\n環境について    Clustor instance Type 台数     Hadoop EMR-3.22.0 MASTER ecs.sn2.large 1    CORE ecs.sn2.large 4    TASK ecs.sn2.large 4    Masterインスタンス、Coreインスタンス、Taskインスタンスは任意での選定になります。\nただし、Hadoopエコシステムによっては必要な起動要件がありますので、状況によってはインスタンス台数を調整する必要があります。\n役割はこちらを参考にしてください。\n   種類 説明 役割     マスター ジョブフロー全体の構成管理を実施 ジョブトラッカー、ネームノード   コア HDFSを持っており、実際にデータを読み込みつつデータ処理を行う。一つのジョブフローに対して複数存在 タスクトラッカー、データノード   タスク データは持たないが、MPPなどデータ処理のためにリソース提供することが可能。任意起動 タスクトラッカー    knox（REST APIを使用してWebHDFSやHBaseとかWeb UIインターフェースを閲覧するもの）を利用する場合は、こちらにてKnoxユーザ追加のアカウントを登録するとあとが便利です。\n途中、ブートストラップアクションという入力欄があります。ブートストラップアクションについて説明します。\nE-MapReduceは上記の説明通り、ECSを起動し、E-MapReduceに必要な機能をインストール・起動、こうしてE-MapReduceを起動します。\nこの流れで注目したいのが E-MapReduceに必要な機能をインストール・起動という箇所で、これをブートストラップアクションと呼びます。\nAlibabaCloudのE-MapReduceはブートストラップアクションが利用できるので、以下の例に加えて、様々な応用ができます。\n タイムゾーンの変更 Igniteなど、利用したいOSSやライブラリをインストール  ここでちょっと例を記載してみます。E-MapReduceでタイムゾーンを変更したいとします。この場合、以下のshellを作成し、OSSへ格納します。\nこれをE-MapReduceのブートストラップアクション欄にてシェルを起動するように記載するだけです。\n#!/bin/bash sudo rm /etc/localtime sudo ln -s /usr/share/zoneinfo/Asia/Tokyo /etc/localtime \n起動したい設定が終わったら、起動します。起動するエコシステムが多いほどブートストラップアクション含め時間がかかります（10〜30分）\nE-MapReduceが無事起動完了したら、ヘルスチェックを見て無事完了してるかを確認します。自動でヘルスチェックが行ってることもあり、基本的には問題ないことが多いです。\nStep4: E-MapReduceに関するセキュリティについて \u0026nbsp; E-MapReduceを起動しました。ここで上記の目的を達成するためにはHiveを使います。そのためにはHueというWebによるGUIインターフェース、もしくはCLIコマンドベースを使う必要があります。今回はHueというWebによるGUIインターフェースを使います。 Hueを使う前に、E-MapReduceのセキュリティルールを変更する必要があります。ここは用途に応じて対応をしてください。\n自分が使用してるNW環境のIPアドレスのみを許容する場合 以下のサイトへアクセスし、自分が使用してるNW環境のIPアドレスを取得します。これをE-MapReduceが使用してるセキュリティグループにてポート8443、8888に許容します。\nhttp://www.ip138.com\nE-MapReduceでのポート8443、8888、8088は次のような位置付けです。\n   ポート 用途     knox 8443   Hue 8888   YARNリソースマネージャ 8088    ローカルポートフォワードで接続 クライアント端末からE-MapReduceの環境へ接続するためには、sshポートフォワードを経由してアクセスしたい、という場合に使う方法です。\nE-MapReduceのMasterNodeのプライベートIPを把握の上、Macローカルのターミナルにて以下コマンドでssh接続します。\nssh -fN -L 8888:\u0026lt;MasterNodeのプライベートIP\u0026gt;:8888 hadoop@\u0026lt;MasterNodeのプライベートIP\u0026gt;    ssh引数オプション 意味     -f コマンドを実行する際にsshをバックグラウンドにする   -fN リモートでコマンドを実行しない   -L クライアント→ホストのポート転送の際のアドレス・ポートを指定    \n他の使い方もありますので、参考にいただければ幸いです。 https://jp.alibabacloud.com/help/doc-detail/28187.html Step5: HueらWeb UIに接続 上記設定が終わり次第、Hueのアクセスリンクから閲覧したいURLを選択します。 今回はHue起動なのでHueを起動します。 ここでユーザ名、パスワードが求められます。ここはE-MapReduceのHue画面の設定にあるPWを取得して、 ユーザ名：admin パスワード： を入力します。 これでHue Web UIが表示されました。 Hueの便利なところは「クエリ」のボタンから様々なHiveやImpala、Sparkなど様々なOSSのクエリを選択できることです。 Step6: Hueを使ってETL処理 続いて、E-MapReduceのHiveを使ってOSSにあるCSVファイルをHDFS_Parquetへ変換します。流れとして以下シーケンス図通りになります。\nsequenceDiagram participant cl as クライアント participant sv as E-MapReduce participant db as OSS cl -\u0026gt;\u0026gt;+ sv : 1.Hiveで中間テーブルを作成 sv --\u0026gt;\u0026gt;- cl : 2.DataNodeにて中間テーブル作成完了 cl -\u0026gt;\u0026gt;+ sv : 3.HiveでOSSのデータをLoad sv -\u0026gt;\u0026gt;+ db : 4.OSSのcsvファイルへアクセス db --\u0026gt;\u0026gt;- sv : 5.csvをParquetとしてDataNodeへ保持 sv --\u0026gt;\u0026gt;- cl : 6.OSSのデータのLoad完了 cl -\u0026gt;\u0026gt;+ sv : 7.HiveでDataNodeのParquetをOSSへ保存 sv -\u0026gt;\u0026gt;+ db : 8.OSSのParquetフォルダ作成\u0026amp;DataNodeからの保存 db --\u0026gt;\u0026gt;- sv : 9.OSSのParquetフォルダ生成完了 sv --\u0026gt;\u0026gt;- cl : 10.OSSのCSVファイルのETL完了 cl -\u0026gt;\u0026gt;+ sv : 11.ImpalaでOSSのHDFSにクエリ投与 sv -\u0026gt;\u0026gt;+ db : 12.ImpalaがOSSのHDFSへ直接クエリ処理 db --\u0026gt;\u0026gt;- sv : 13.クエリ処理結果を取得 sv --\u0026gt;\u0026gt;- cl : 14.クエリ結果を表示  \nまずは 1〜2:「Hiveで中間テーブルを作成」の処理をします。HueでクエリをHiveに選択し、以下クエリを投げます。\nこのSQLはHiveで一時的に中間テーブル（クラスタ内のデータノード）を作成するものです。\nCREATE EXTERNAL TABLE `default.yellow_trips`( `vendor_id` string, `pickup_datetime` timestamp, `dropoff_datetime` timestamp, `passenger_count` float, `trip_distance` string, `pickup_longitude` float, `pickup_latitude` float, `rate_code` float ) PARTITIONED BY (`yyyymmdd` string) ROW FORMAT DELIMITED FIELDS TERMINATED BY \u0026#39;,\u0026#39; ESCAPED BY \u0026#39;\u0026#39; LINES TERMINATED BY \u0026#39;\\n\u0026#39; TBLPROPERTIES (\u0026#34;skip.header.line.count\u0026#34;=\u0026#34;1\u0026#34;); \nHueでSQL入力画面に上記のSQLクエリを入力後、実行ボタンをクリックすればSQLが実行されます。\n続いて、3-6:「HiveでOSSのデータをLoad」の処理をします。\nHiveのデータノードにて中間テーブル作成後、OSSのファイルを指定し、中間テーブルへLoadします（時間がかかります）\nLoad後 OSSのファイルは自動消去されますので、注意してください。\nLOAD DATA INPATH \u0026#39;oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/csv/yellow_tripdata_2009-08.csv\u0026#39;　INTO TABLE default.yellow_trips partition (yyyymmdd=\u0026#39;200908\u0026#39;); LOAD DATA INPATH \u0026#39;oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/csv/yellow_tripdata_2009-09.csv\u0026#39;　INTO TABLE default.yellow_trips partition (yyyymmdd=\u0026#39;200909\u0026#39;); LOAD DATA INPATH \u0026#39;oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/csv/yellow_tripdata_2009-10.csv\u0026#39;　INTO TABLE default.yellow_trips partition (yyyymmdd=\u0026#39;200910\u0026#39;); LOAD DATA INPATH \u0026#39;oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/csv/yellow_tripdata_2009-11.csv\u0026#39;　INTO TABLE default.yellow_trips partition (yyyymmdd=\u0026#39;200911\u0026#39;); LOAD DATA INPATH \u0026#39;oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/csv/yellow_tripdata_2009-12.csv\u0026#39;　INTO TABLE default.yellow_trips partition (yyyymmdd=\u0026#39;200912\u0026#39;); LOAD DATA INPATH \u0026#39;oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/csv/yellow_tripdata_2010-01.csv\u0026#39;　INTO TABLE default.yellow_trips partition (yyyymmdd=\u0026#39;201001\u0026#39;); LOAD DATA INPATH \u0026#39;oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/csv/yellow_tripdata_2010-02.csv\u0026#39;　INTO TABLE default.yellow_trips partition (yyyymmdd=\u0026#39;201002\u0026#39;); LOAD DATA INPATH \u0026#39;oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/csv/yellow_tripdata_2010-03.csv\u0026#39;　INTO TABLE default.yellow_trips partition (yyyymmdd=\u0026#39;201003\u0026#39;); LOAD DATA INPATH \u0026#39;oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/csv/yellow_tripdata_2010-04.csv\u0026#39;　INTO TABLE default.yellow_trips partition (yyyymmdd=\u0026#39;201004\u0026#39;); LOAD DATA INPATH \u0026#39;oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/csv/yellow_tripdata_2010-05.csv\u0026#39;　INTO TABLE default.yellow_trips partition (yyyymmdd=\u0026#39;201005\u0026#39;); LOAD DATA INPATH \u0026#39;oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/csv/yellow_tripdata_2010-06.csv\u0026#39;　INTO TABLE default.yellow_trips partition (yyyymmdd=\u0026#39;201006\u0026#39;); \nSQL実行したい量が多いので、コツとして実行したいSQKをマウスで全て選択し、実行ボタンを押すと順次SQL実行してくれます。\nこの処理の結果としてパーティションを確認します。ここでPartitionが表示されたらDataNode、中間テーブルにデータがあることがわかります。\nSHOW PARTITIONS default.yellow_trips; テストにHive SQLを中間テーブルに投げてみます。ここでも結果が表示されていたらOKです。\n\u0026gt;注意として、レコード数が多いため、limit などでレコード表示件数を制限してください。\nSELECT vendor_id,pickup_datetime,passenger_count FROM default.yellow_trips WHERE yyyymmdd \u0026gt;= \u0026#39;201003\u0026#39; AND yyyymmdd \u0026lt;= \u0026#39;201004\u0026#39; limit 10; 7-10:「HiveでDataNodeのParquetをOSSへ保存」の処理をします。DataNodeにある中間テーブルをOSSへ保存するために、OSSでParquet形式で保存したいテーブルを作成します。\nCREATE EXTERNAL TABLE yellow_trips_parquet ( `vendor_id` string, `pickup_datetime` timestamp, `dropoff_datetime` timestamp, `passenger_count` float, `trip_distance` string, `pickup_longitude` float, `pickup_latitude` float, `rate_code` float) PARTITIONED BY (`yyyymmdd` string) STORED AS PARQUET LOCATION \u0026#39;oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/hive_parquet\u0026#39;; この結果として、上記のoss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/hive_parquetにてフォルダが自動で作成されます。\n続いて、DataNodeにある中間テーブルをOSSのParquetへ保存するSQLを実行します。\nset hive.exec.dynamic.partition.mode=nonstrict; INSERT OVERWRITE TABLE yellow_trips_parquet PARTITION (yyyymmdd) SELECT vendor_id, pickup_datetime, dropoff_datetime, passenger_count, trip_distance, pickup_longitude, pickup_latitude, rate_code , yyyymmdd FROM yellow_trips where yyyymmdd=\u0026#39;201004\u0026#39;; その結果、OSSのPartitionが yyyymmdd=\u0026lsquo;201004\u0026rsquo; というところにHDFS_parquetファイルが生成されます。これでOSSにあったCSVファイルをHDFS_ParquetへETLすることができました。ちなみにDataNodeの中間データで Partitionが yyyymmdd=\u0026lsquo;201004\u0026rsquo; はこのSQLクエリにより自動削除されています。\nこのようにPartitionに上記クエリを投与してETL処理をしていただければと思います。また、HiveはOLTP（加工処理）が得意なので、ここでSQLを使ってレコードの追加、削除、更新をしてみるのもいいです。\n11-14.「ImpalaでOSSのHDFSにクエリ投与」の処理をします。Hueの「クエリ」プルタウンでImpalaを選択します。\nImpalaでOSSにあるデータをHDFSとして認識するために以下SQLクエリを投与します。\nCREATE EXTERNAL TABLE yellow_trips_impala ( `vendor_id` string, `pickup_datetime` timestamp, `dropoff_datetime` timestamp, `passenger_count` float, `trip_distance` string, `pickup_longitude` float, `pickup_latitude` float, `rate_code` float) PARTITIONED BY (`yyyymmdd` string) STORED AS PARQUET LOCATION \u0026#39;oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/hive_parquet\u0026#39;; alter table default.yellow_trips_impala add partition(yyyymmdd=\u0026#39;201004\u0026#39;); alter table default.yellow_trips_impala add partition(yyyymmdd=\u0026#39;201005\u0026#39;); alter table default.yellow_trips_impala add partition(yyyymmdd=\u0026#39;201006\u0026#39;); ImpalaでPartitionを指定しつつ、好きに分析することができます。\nSELECT vendor_id , pickup_datetime, dropoff_datetime, passenger_count FROM default.yellow_trips_impala WHERE yyyymmdd \u0026gt;= \u0026#39;201004\u0026#39; limit 10; \nImpalaの優れてるところはSQLクエリにてLOCATIONをOSSのパス先を指定するだけで、クエリを投げることができます。\n※もちろんSparkやHive、PrestoもOSSをセントラルストレージとしたSQLクエリ投与もできます。\nまとめ 本章ではE-MapReduceだけでOSSのcsvファイルをParquetへ簡単にETLできることや、OSSをセントラルストレージとしたOLTP、OLAP運用する手法を説明しました。\nAlibabaCloudのE-MapReduceはこの流れをタイムスケジューラによって自動処理化することも可能ですし、そこから機械学習をすることも可能です。ビジネスシーンに応じた様々な応用ができます。\nそのため、ファーストステップとして、上記E-MapReduceの全体的な流れを掴めればと思います。\n余談 AlibabaCloud公式blogにもE-MapReduce起動方法、手法、ベストプラクティスが記載されていますので、こちらも参考にしてください。\nEMRクラスター管理\n\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/terraform/08/vpc/",
	"title": "VPCの作成",
	"tags": [],
	"description": "Terraformによる、Alibaba CloudのVPCリソース作成方法を紹介します。",
	"content": " \u0026nbsp; ここまではTerraformのインストール方法、コード記載方法、実行方法を説明しました。\nここからはユーザ各自でコード作成、応用ができるよう、AlibabaCloudの基本プロダクトサービスの説明を通じて解説します。\n1. VPC \u0026nbsp; VPCは、Alibaba Cloudに設置されたプライベートネットワークです。 VPCはAlibaba Cloudの他のアカウントを含む仮想ネットワークと論理的に分離されています。\n\u0026nbsp; VPCはAlibaba Cloud でお客様専用のプライベートネットワークです。 CIDRというIPアドレス範囲の指定で経路、ルートテーブルとネットワークゲートウェイの設定など、VPCを完全に制御できます。VPC環境があることで、ECS、RDS、SLBなど外部インターネットからアクセスしないAlibaba Cloudリソースを使用することができます。\n\u0026nbsp; システムをセキュアにするため、パブリックネットワークには必要最小限のリソースのみ配置し、それ以外はプライベートネットワークに置くのがベストプラクティスです。\n\n2. コンポーネント \u0026nbsp; VPCは、CIDRブロック、VRouter、及びVSwitchで構成されます。\n・CIDRブロック・・・IPアドレスの空間を指定することで通信経路を出す設定情報。プライベートIPアドレス範囲をCIDR（Classless Inter-Domain Routing）ブロックの形式で指定する必要があります。 ・VRouter・・・VPCのハブ。VPC内の各VSwitchを接続でき、ゲートウェイとしてもVPCを他のネットワークに接続することもできます。 ・VSwitch・・・VPCの基本的なネットワークデバイス、様々なクラウド製品インスタンスに接続するために使用されます。\nVPCコンポーネントは以下のような構成図になります。 \nまた、VPC作成には以下の通り制限事項がありますので、注意が必要です。\n   リソース デフォルトの制限 クォータ量の増減     各リージョンでの最大VPC数 10    使用可能なCIDRブロックの範囲 192.168.0.0/16, 172.16.0.0/12, 10.0.0.0/8,及びそのサブセット サポートセンターまでお問い合わせください   VPC 内の VRouter の最大数 1 申請不可   VPC 内の VSwitch の最大数 24 サポートセンターまでお問い合わせください   VPC 内のルータテーブルの最大数 1 申請不可   ルータテーブル内のルートエントリの最大数 48 サポートセンターまでお問い合わせください   VPCで実行できるクラウド製品インスタンスの最大数 15,000 申請不可    参考:VPC使用制限\n\n3. VPCのTerraformについて \u0026nbsp; 本題、VPC、VSwitch作成に移ります。VPCリソースを実行すると、VPC構築のためにrouterとroute_tableを自動的に作成されます。まずは以下の構成図通り、簡単なソースを作ってみます。 この構成図を満たすVPC、VSwitch を作成するコードです。\nresource \u0026quot;alicloud_vpc\u0026quot; \u0026quot;vpc\u0026quot; { name = \u0026quot;ECS_instance_for_terraform-vpc\u0026quot; cidr_block = \u0026quot;192.168.1.0/24\u0026quot; } resource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;vsw\u0026quot; { vpc_id = \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; cidr_block = \u0026quot;192.168.1.0/28\u0026quot; availability_zone = \u0026quot;ap-northeast-1\u0026quot; }  alicloud_vpc 上記で記載したリソース以外にオプション（任意）でパラメータや構成を指定することもできます。\n cidr_block - （必須）VPCのCIDRブロック。VPCのIPv4アドレスの範囲をCIDR形式(XX.XX.XX.XX/XX)で、cidr_blockに指定します。そのため、VPCピアリングなども考慮し て、最初にきちんと設計する必要があります。後からの変更も不可です。 name - （オプション）VPCの名前。デフォルトはnullです。 description - （オプション）VPCの説明。デフォルトはnullです。  このリソースを実行することにより、以下の属性情報が出力されます。\n id - VPCのID。 cidr_block - VPCのCIDRブロック。 name - VPCの名前。 description - VPCの説明。 router_id - VPC作成時にデフォルトで作成されたルータのID。 route_table_id - VPC作成時にデフォルトで作成されたルータのルートテーブルID。  alicloud_vswitch VPC_SWITCHも上記で記載したリソース以外にオプション（任意）でパラメータや構成を指定することもできます。１つのVPCあたりの最大24個までのVSwitchが作成可能です。\n availability_zone - （必須）スイッチのAvailabilityZone。 vpc_id - （必須）VPC ID。 cidr_block - （必須）スイッチのCIDRブロック。 name - （任意）スイッチの名前。デフォルトはnullです。 description - （オプション）スイッチの説明。デフォルトはnullです。  このalicloud_vswitchリソースを実行することにより、以下の属性情報が出力されます。\n id - スイッチのID。 availability_zone - スイッチのAvailabilityZone。 cidr_block - スイッチのCIDRブロック。 vpc_id - VPC ID。 name - スイッチの名前。 description - スイッチの説明。  他に入力パラメータ、出力パラメータがいくつかありますので、こちらも是非参照してみてください。 https://www.terraform.io/docs/providers/alicloud/r/vpc.html https://www.terraform.io/docs/providers/alicloud/r/vswitch.html\n\n続いて、VRouterを作ってみます。VRouterはVPC内全てのVSwitchが接続でき、ゲートウェイとして他のVPCを他ネットワークへ接続することができます。以下の構成図をゴールに作ってみます。\nルートテーブルを作成、アタッチするコードです。 VSwitchを作成し（alicloud_vswitch）、ルートエントリを作成（alicloud_route_entry）、それを紐付けるルートテーブルを作成（alicloud_route_table）、そしてへVSwitchをアタッチ（alicloud_route_table_attachment）する内容です。\nresource \u0026quot;alicloud_vpc\u0026quot; \u0026quot;foo\u0026quot; { cidr_block = \u0026quot;172.16.0.0/12\u0026quot; name = \u0026quot;route_table_attachment\u0026quot; } data \u0026quot;alicloud_zones\u0026quot; \u0026quot;default\u0026quot; { \u0026quot;available_resource_creation\u0026quot;= \u0026quot;VSwitch\u0026quot; } resource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;foo\u0026quot; { vpc_id = \u0026quot;${alicloud_vpc.foo.id}\u0026quot; cidr_block = \u0026quot;172.16.0.0/21\u0026quot; availability_zone = \u0026quot;${data.alicloud_zones.default.zones.0.id}\u0026quot; name = \u0026quot;route_table_attachment\u0026quot; } resource \u0026quot;alicloud_route_entry\u0026quot; \u0026quot;custom_route_entry\u0026quot; { route_table_id = \u0026quot;${alicloud_vpc.foo.router_table_id}\u0026quot; destination_cidrblock = \u0026quot;${var.entry_cidr}\u0026quot; nexthop_type = \u0026quot;Instance\u0026quot; nexthop_id = \u0026quot;${alicloud_instance.snat.id}\u0026quot; } resource \u0026quot;alicloud_route_table\u0026quot; \u0026quot;foo\u0026quot; { vpc_id = \u0026quot;${alicloud_vpc.foo.id}\u0026quot; name = \u0026quot;route_table_attachment\u0026quot; description = \u0026quot;route_table_attachment\u0026quot; } resource \u0026quot;alicloud_route_table_attachment\u0026quot; \u0026quot;foo\u0026quot; { vswitch_id = \u0026quot;${alicloud_vswitch.foo.id}\u0026quot; route_table_id = \u0026quot;${alicloud_route_table.foo.id}\u0026quot; }  alicloud_route_entry alicloud_route_entryの必須パラメータは以下の通りです。\n route_table_id - （必須）ルートテーブルのID。 destination_cidrblock - （必須）RouteEntryのターゲットネットワークセグメント。 nexthop_type - （必須）ネクストホップタイプ nexthop_id - （必須）ルートエントリのネクストホップ。ECSインスタンスIDまたはVPCルータインターフェイスID。  このalicloud_route_entryリソースを実行することにより、以下の属性情報が出力されます。\n router_id - Vpcに接続されている仮想ルータのID。 route_table_id - ルートテーブルのID。 destination_cidrblock - RouteEntryのターゲットネットワークセグメント。 nexthop_type - ネクストホップタイプ。 nexthop_id - ルートエントリのネクストホップ。  alicloud_route_table alicloud_route_tableの入力パラメータは以下の通りです。\n vpc_id - （必須）ルートテーブルのvpc_id、フィールドは変更できません。 name - （任意）ルートテーブルの名前。 description - （任意）ルートテーブルインスタンスの説明。  このalicloud_route_tableリソースを実行することにより、以下の属性情報が出力されます。\n id - ルートテーブルインスタンスIDのID。  route_table_attachment route_table_attachmentの入力パラメータは以下の通りです。\n vswitch_id - （必須）ルートテーブル添付のvswitch_id、フィールドは変更できません。 route_table_id - （必須）ルートテーブル添付のroute_table_id。フィールドは変更できません。  このroute_table_attachmentリソースを実行することにより、以下の属性情報が出力されます。\n id - ルートテーブルのIDとアタッチしたvswitchのID。形式は:で出力されます。  \n3. セキュリティグループ \u0026nbsp; VPC関連を作成したら、今度は外部インターネットから様々なアクセス（インバウンド/アウトバインド）をフィルタリングするためにセキュリティグループを設置します。外部ネットワークからの不正アクセスを防ぐ上で重要なので、セキュリティグループも記載しましょう。セキュリティで詳細はこちらを参照してみてください。\nセキュリティグループの考え方について ECSインスタンスは少なくとも1つのセキュリティグループに参加する必要があります。 ここは構築したい最終目的に応じて、以下セキュリティグループルールの構成テンプレートに沿って配置がベターです。\n   設定 テンプレートノート 注意     セキュリティグループ内の Linux インスタンスに Web サーバーを展開する。 Web Server Linux Web Server Linux デフォルトでは、TCP 80、TCP 443、TCP 22、ICMP のインバウンドトラフィックが許可されます。   セキュリティグループの Windows インスタンスに Web サーバーを展開する。 Web Server Windows デフォルトでは、TCP 80、TCP 443、TCP 3389、ICMP のインバウンドトラフィックが許可されます。   Web サーバー外 Custom セキュリティグループを作成したら、ビジネスニーズを満たすセキュリティグループルールを追加する    \nPort詳細について    プロトコルタイプ ポート範囲 シナリオ     All -1/-1 はすべてのポートを示します。 両方のアプリケーションが完全に信頼されるシナリオで使用されます。   All ICMP -1/-1 はすべてのポートを示します。 Pingツールを使用してインスタンスのネットワーク接続ステータスを検出するために使用されます。   All GRE -1/-1 はすべてのポートを示します。 VPNサービスに使用されます。   Custom TCP カスタムポートの場合、有効なポート値は1～65535で、 有効なポート範囲の形式は 開始ポート/ 終了ポート 1つまたは複数の連続するポートを許可または拒否するために使用されます。   Custom UDP カスタムポートの場合、有効なポート値は1～65535で、 有効なポート範囲の形式は 開始ポート/ 終了ポート 1つまたは複数の連続するポートを許可または拒否するために使用されます。   SSH 22/22、デフォルトはSSHポート22として表示されます。 Linuxインスタンスへのリモート接続に使用されます。   TELNET 23/23と表示されます。 Telnetを使用してインスタンスにリモートログオンするために使用されます。   HTTP 80/80と表示されます。 このインスタンスは、WebサイトまたはWebアプリケーションのサーバーとして使用されます。   HTTPS 443/443と表示されます。 このインスタンスは、HTTPSプロトコルをサポートするWebサイトまたはWebアプリケーションのサーバーとして使用されます。   MS SQL 1433/1433と表示されます。 インスタンスはMS SQLサーバーとして使用されます。   Oracle 1521/1521と表示されます。 インスタンスはOracle SQL Serverとして使用されます。   MySQL 3306/3306と表示されます。 インスタンスはMySQLサーバーとして使用されます。   RDP 3389/3389と表示されます。デフォルトのRDPポートは3389です。 Windowsインスタンスへのリモート接続に使用されます。   PostgreSQL 5432/5432と表示されます。 インスタンスはPostgreSQLサーバとして使用されます。   Redis 6379/6379と表示されます。 インスタンスはRedisサーバーとして使用されます。    \n\u0026nbsp; 本題、セキュリティグループを設定するコード作成をします。まずは以下の構成図通り、簡単なソースを作ってみます。\nこの構成図からして、２つのセキュリティルールを作成（ルール名： allow_http 、 allow_ssh ）し、それをセキュリティグループへアタッチする流れになります。\nresource \u0026quot;alicloud_security_group\u0026quot; \u0026quot;sg\u0026quot; { name = \u0026quot;terraform-sg\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; } resource \u0026quot;alicloud_security_group_rule\u0026quot; \u0026quot;allow_http\u0026quot; { type = \u0026quot;ingress\u0026quot; ip_protocol = \u0026quot;tcp\u0026quot; nic_type = \u0026quot;intranet\u0026quot; policy = \u0026quot;accept\u0026quot; port_range = \u0026quot;80/80\u0026quot; priority = 1 security_group_id = \u0026quot;${alicloud_security_group.sg.id}\u0026quot; cidr_ip = \u0026quot;0.0.0.0/0\u0026quot; } resource \u0026quot;alicloud_security_group_rule\u0026quot; \u0026quot;allow_ssh\u0026quot; { type = \u0026quot;ingress\u0026quot; ip_protocol = \u0026quot;tcp\u0026quot; nic_type = \u0026quot;intranet\u0026quot; policy = \u0026quot;accept\u0026quot; port_range = \u0026quot;22/22\u0026quot; priority = 2 security_group_id = \u0026quot;${alicloud_security_group.sg.id}\u0026quot; cidr_ip = \u0026quot;0.0.0.0/0\u0026quot; } resource \u0026quot;alicloud_security_group_rule\u0026quot; \u0026quot;outbound_all\u0026quot; { type = \u0026quot;egress\u0026quot; ip_protocol = \u0026quot;All\u0026quot; nic_type = \u0026quot;intranet\u0026quot; policy = \u0026quot;accept\u0026quot; port_range = \u0026quot;-1/-1\u0026quot; priority = 2 security_group_id = \u0026quot;${alicloud_security_group.sg.id}\u0026quot; cidr_ip = \u0026quot;0.0.0.0/0\u0026quot; }  上記ソースで allow_http ルールは HTTP通信できるよう80番ポートを許可します。 allow_ssh ルールは ssh接続のためにTCP22番ポートを許可します。 outbound_all ルールは 作成したWebサイトらECSから外部インターネットへ展開するために ALLポートを許可します。こちらはWebサイト構築が目的ならアウトバインドのルールはデフォルト設定と変わりないため不要で問題ないです。いずれも sg というセキュリティグループへ紐づけています。\nalicloud_security_group  name - （オプション）セキュリティグループの名前。デフォルトはnull。 description - （オプション）セキュリティグループの説明。デフォルトはnull。 vpc_id - （オプション）VPC ID。 inner_access - （オプション）同じセキュリティグループ内のすべてのポートで、両方のマシンが互いにアクセスできるようにするかどうか。 tags - （オプション）リソースに割り当てるタグのマッピング。  このalicloud_security_groupリソースを実行することにより、以下の属性情報が出力されます。\n id - セキュリティグループのID vpc_id - VPC ID name - セキュリティグループの名前 description - セキュリティグループの説明 inner_access - 内部ネットワークアクセスを許可するかどうか。 tags - インスタンスタグは、jsonencode（item）を使って値を表示します。  alicloud_security_group_rule パラメータで、type が ingress の場合、インバウンド時のルールになります。アウトバインドであれば egress です。\n type - （必須）作成中のルールの種類。ingress（インバウンド：外部から内部）かegress（アウトバウンド：内部から外部）のいずれかです。 ip_protocol - （必須）プロトコル。tcp、udp、icmp、gre、allのいずれかを選択します。 port_range - （オプション）IPプロトコルに関連するポート番号の範囲。デフォルトは \u0026ldquo;-1 / -1\u0026rdquo;です。プロトコルがtcpまたはudpの場合、各サイドポート番号の範囲は1〜65535で、「 - 1 / -1」は無効になります。たとえば1/200、ポート番号の範囲は1〜200です。 security_group_id - （必須）アタッチしたいセキュリティグループID。 nic_type - （オプション）ネットワークタイプ。internetかintranetのいずれかを選択します。デフォルトはinternetです。 policy - （オプション）認可ポリシー。acceptかdropのいずれかを選択します。デフォルトはacceptです。 priority - （オプション）許可ポリシーの優先順位。デフォルトは1です。 cidr_ip - （オプション）ターゲットIPアドレス範囲。デフォルト値は0.0.0.0/0（=無制限）です。  このalicloud_security_group_ruleリソースを実行することにより、以下の属性情報が出力されます。\n id - セキュリティグループルールのID type -ルールのタイプ、ingressまたはegress name - セキュリティグループの名前 port_range - ポート番号の範囲 ip_protocol - セキュリティグループルールのプロトコル  \n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/009_data-collection/",
	"title": "既存データからの移植について",
	"tags": [],
	"description": "既存データからの移植についてを説明します。",
	"content": " OSSをハブとした運用について \u0026nbsp; 前述、OSSとE-MapReduceを説明しました。OSSをハブとして運用することで、コスト削減はもちろん、AlibabaCloudの様々なフルマネージドサービスを中心とした構成が可能となります。\nそのため、全ての処理基盤はAlibabaCloudで初め、AlibabaCloudで終わる、という構成も可能です。\n同時に、AlibabaCloudのOSSは様々な外部データソースと連携することが可能です。\n別の章にてそれぞれのデータソース接続手法を記載します。\n2019/07/20 現状確認されてる外部データソースとの接続方法サマリとしては以下の通りになります。\n今後このサマリにてApache Beam、Apache Flink、Apache samza、kinesis、Livy、Oracle on Spark、SQL Server on Spark、MongoDB、他の外部データソースも順次追加したいと思います。\n運用するときの注意点について データ構造 \u0026nbsp; データを集約した後、どんな分析を行うのか？これを踏まえて、どんな利用方法があるか？をイメージしたテーブル・スキーマ・フィールドタイプ・データ設計をする必要があります。\n転送料金 \u0026nbsp; OSSと外部データ（IDCやS3など）でデータやりとりするとき、OSSへInするデータは無料ですが、VPCより先へOutするデータには料金が発生してしまいます。なので、Outするときはデータを圧縮してから移植するなど、工夫が必要です。\nネットワーク \u0026nbsp; データを集約・転送するとき、NW距離ら物理的な要因で処理が遅くなることがあります。そのため、OSSおよび周囲プロダクトサービスとのリージョン・配置はできるだけ近い位置で配置が望ましいです。\nETL \u0026nbsp; ETLは様々な方法がありますが、データ型やhdfsタイプ、仕様上できることできないことを見極めて全体設計が望ましいです。\nex: * HiveやSparkはdate型をサポートしますが、PrestoやImpalaはdate型をサポートしないので読み込み不可 * SparkはORCサポートを打ち切ったため 、代わりの手法はSparkの最新ドキュメントで確認\n\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/terraform/09/ecs/",
	"title": "ECS、EIPの作成",
	"tags": [],
	"description": "Terraformによる、Alibaba CloudのECS、EIPリソース作成方法を紹介します。",
	"content": " AlibabaCloudの基本プロダクトサービスであるECS、EIPの作成方法を解説します。\n1. ECS \u0026nbsp; ECSは、Alibaba Cloudによる仮装コンピューティングサービスです。ECS インスタンスは、ECS のコアコンポーネントであり、CPU、メモリ、およびその他の基本的なコンピューティングコンポーネントを含む仮想コンピューティング環境です。ディスク、イメージ、スナップショットなどの他のリソースは、ECS インスタンスと組み合わせてのみ使用できます。 \u0026nbsp; Alibaba CloudのECSはビジネスやWebアプリケーションなど様々なニーズに対応しており、即時に作れることが特徴です。\n\u0026nbsp; ECSインスタンス生成リソースは多くのオプション（任意）でパラメータや構成を指定できます。ECSインスタンスはVPCやセキュリティグループとは少し異なり、OSやバージョン選定、起動時データ引き渡しやECS使い捨て利用など様々な利用方法が実現出来るため、ここは抑えておきましょう。\n\n2. ECSインスタンス生成のTerraformについて \u0026nbsp; 本題、ECSインスタンス生成作成に移ります。ECSインスタンス生成するだけの簡単なソースを作ってみます。\nresource \u0026quot;alicloud_instance\u0026quot; \u0026quot;ECS_instance\u0026quot; { instance_name = \u0026quot;ECS_instance_for_terraform\u0026quot; host_name = \u0026quot;ECS_instance_for_terraform\u0026quot; instance_type = \u0026quot;ecs.n4.small\u0026quot; image_id = \u0026quot;centos_7_06_64_20G_alibase_20190218.vhd\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.sg.id}\u0026quot;] availability_zone = \u0026quot;${var.zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; }  alicloud_instance  instance_name - （オプション）ECSインスタンスの名前。このパラメータを指定しない場合、デフォルト名のECS-Instanceを自動生成します。 host_name - （オプション）ECSのホスト名。 instance_type - （必須）起動するインスタンスの種類。 image_id - （必須）ECSインスタンスに使用するイメージ。ECSインスタンスのイメージは image_idを変更することで置き換えることができます。  image_idの種類や取得方法は後述します。\n system_disk_category - （オプション）ストレージの種類。有効な値はcloud_efficiency 、 cloud_ssd 、およびcloudです。デフォルトはcloud_efficiency。 security_groups - （必須）関連付けるセキュリティグループIDのリスト。 availability_zone - （オプション）インスタンスを起動するゾーン。 vswitch_id - （オプション）接続したいVSwitchのID。 user_data - （オプション）ユーザーデータ。起動直後、実行したいコマンドがあればこちらにて入れます。  このalicloud_instanceリソースを実行することにより、以下の属性情報が出力されます。\n id - ECSインスタンスのID。 status - ECSインスタンスの起動ステータス。 public_ip - ECSインスタンスのパブリックIP。  他に入力パラメータ、出力パラメータがいくつかありますので、こちらも是非参照してみてください。 https://www.terraform.io/docs/providers/alicloud/r/instance.html\n\n3. ECSインスタンスTypeの取得について \u0026nbsp; Alibaba CloudのECSインスタンスタイプinstance_type一覧はサイトのECSインスタンスリストから選定し取得する必要があります。 https://jp.alibabacloud.com/product/ecs\nここで使いたいECSインスタンスタイプがあれば、そのinstance_type名を選定し、先述のTerraform ECSインスタンス生成リソースへ記載します。\n\n4. ECSインスタンスimage_idの取得について \u0026nbsp; Alibaba CloudのECSインスタンスイメージimage_id一覧は aliyun cliか aliyun shellで取得する必要があります。\n今回はaliyun shellで取得してみましょう。以下 aliyun shellをブラウザで開いてみてください。 https://shell.alibabacloud.com/#/\nWebブラウザにてaliyun shellが使えるようになります。こちらにて以下コマンドを入力します。 これは東京リージョン(ap-northeast-1)、表示件数100件で 使えるECSインスタンスのImageIdとOSNameリスト一覧を表示するコマンドです。\naliyun ecs DescribeImages --region ap-northeast-1 --language en --pager 100 | jq '[.Images.Image[] | { status: .Status , ImageId: .ImageId ,OSName: .OSName } ] | sort_by(.OSName) '  すると のようにECSインスタンスのImage_Idが表示されます。\nこのImage_IDリストから使いたいOS（Image_ID）を選定し、先述のTerraform ECSインスタンス生成リソースへ記載します。\n他にAliyun CliでのECSインスタンス一覧取得方法もあります。詳しくは以下を参照してみてください。 qitta:aliyuncliでimage_idを調べてみた\n\n5. EIP \u0026nbsp; EIP（Elastic IP）はAlibaba Cloud の VPCネットワーク の ECS、SLB インスタンスや、NATゲートウェイにパブリック IP アドレスリソースをバインドできるサービスです。 EIP使用を宣言（alicloud_eip）するだけでなく、返り値を利用した連結処理が必要なので、ここは抑えておきましょう。\n# ECSインスタンスを宣言（VPC関連は省略） resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;ECS_instance\u0026quot; { instance_name = \u0026quot;ECS_instance_for_terraform\u0026quot; host_name = \u0026quot;ECS_instance_for_terraform\u0026quot; instance_type = \u0026quot;ecs.n4.small\u0026quot; image_id = \u0026quot;centos_7_06_64_20G_alibase_20190218.vhd\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.sg.id}\u0026quot;] availability_zone = \u0026quot;${var.zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; } # EIPを宣言 resource \u0026quot;alicloud_eip\u0026quot; \u0026quot;eip\u0026quot; { internet_charge_type = \u0026quot;PayByTraffic\u0026quot; } # EIPの返り値をECSインスタンスへ紐付ける resource \u0026quot;alicloud_eip_association\u0026quot; \u0026quot;eip_ecs_association\u0026quot; { allocation_id = \u0026quot;${alicloud_eip.eip.id}\u0026quot; instance_id = \u0026quot;${alicloud_instance.ECS_instance.id}\u0026quot; }  alicloud_eip  bandwidth - EIPの帯域幅。デフォルト時は5Mbps。 internet_charge_type - EIPのインターネット料金タイプ。PayByBandwidth、PayByTrafficのどれかで、デフォルトはPayByBandwidth。 instance_charge_type - Elastic IPインスタンスの課金タイプ。PrePaidと PostPaidのどれかで、デフォルトはPostPaid。  "
},
{
	"uri": "https://www.sbcloud.co.jp/help/faq/other/",
	"title": "その他",
	"tags": [],
	"description": "Alibaba Cloudの製品に関するよくある質問を紹介します。",
	"content": "目次  NAS  NASの使用可能容量の表示について  RAM  RAMユーザの権限を特定のリージョンに制限する方法について RAMユーザの権限をECS操作のみ可能、購入不可に制限する方法について RAMユーザでSSL Certifcate Serviceを利用時の権限について RAMユーザでコンテナのコンソールを操作させる方法について  Logservice  Logstore の「internal-alert-history」ログについて Logtailの履歴ログのインポートモードについて  ExpressConnect  ExpressConnect同じリージョン内VPC-VPC接続の料金について  CDN  CDNでのAlibaba Cloud の無料証明書申請について CDNオリジンへのリクエストタイムアウト値について CDN + OSS 構成の静的ウェブサイトホスティングについて  Imagesearch  Image SearchのインポートQPS制限について  VPNGAteway  VPNGAtewayのSSL証明書作成仕様について VPNGatewayにて作成可能なSSL証明書数について VPN Gatewayのヘルスチェック設定について SSL-VPNに払い出されるIPアドレスの仕様について  SSL Certifcate  SSL証明書の更新について SSL証明書申請後のドメイン変更について  DataV  DataVでの「コールバックID」の呼び出し範囲について  CEN  CENの帯域幅変更時の通信断発生について  Function Compute  Function Computeの時間トリガーのタイムゾーンについて Function ComputeからRDSのイントラネット接続について  IoT  IoT Platformのデバイス監視機能について  Redis  Redisのパスワードでの接続方法について ApsaraDB for Redisの強制アップグレードについて    NASの使用可能容量の表示について 各NASストレージの容量上限は10.0PBになります。\nストレージパッケージのご購入容量はNASのストレージ容量上限ではなく、購入した容量までを定額でご利用いただけるサービスとなり、 購入いただいた設定額を超えた分は、従量課金として請求されます。\nそのため、ストレージパッケージのご購入もしくは従量課金でのご利用にかかわらず、NASの容量は10.0PBとなります。 NASの料金表は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/product/nas/pricing\nNASの課金シナリオは下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/27523.htm\n\n  [⬆ 目次へ]\n RAMユーザの権限を特定のリージョンに制限する方法について RAMユーザの権限を特定のリージョンに制限することは可能です。\n下記例を参考して、お客様のニーズに合わせて、cn-shanghaiのところを対象リージョンIDに変更する必要です。\n以下は上海リージョンの一例です。\n{ \u0026quot;\u0026quot;Statement\u0026quot;\u0026quot;: [ { \u0026quot;\u0026quot;Action\u0026quot;\u0026quot;: \u0026quot;\u0026quot;*\u0026quot;\u0026quot;, \u0026quot;\u0026quot;Effect\u0026quot;\u0026quot;: \u0026quot;\u0026quot;Allow\u0026quot;\u0026quot;, \u0026quot;\u0026quot;Resource\u0026quot;\u0026quot;: \u0026quot;\u0026quot;*:*:cn-shanghai:*:*\u0026quot;\u0026quot; } ], \u0026quot;\u0026quot;Version\u0026quot;\u0026quot;: \u0026quot;\u0026quot;1\u0026quot;\u0026quot; }   ポリシーの基本要素は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/28663.htm\n   [⬆ 目次へ]\n RAMユーザの権限をECS操作のみ可能、購入不可に制限する方法について RAMユーザの権限をECS操作のみ可能、購入不可に制限することは可能です。\n下記例を参考して、お客様のニーズに合わせて、cn-shanghaiのところを対象リージョンIDに変更する必要です。\n以下は上海リージョンの一例です。\nCreateInstanceはサブスクリプション、RunInstancesは従量課金の購入を制限しています。購入ページまでアクセスはできますが、最後支払う段階で、権限のない旨のエラーが発生しますので、実際には購入できません。\n{ \u0026quot;\u0026quot;Statement\u0026quot;\u0026quot;: [ { \u0026quot;\u0026quot;Action\u0026quot;\u0026quot;: \u0026quot;\u0026quot;ecs:*\u0026quot;\u0026quot;, \u0026quot;\u0026quot;Effect\u0026quot;\u0026quot;: \u0026quot;\u0026quot;Allow\u0026quot;\u0026quot;, \u0026quot;\u0026quot;Resource\u0026quot;\u0026quot;: \u0026quot;\u0026quot;*:*:cn-shanghai:*:*\u0026quot;\u0026quot; }, { \u0026quot;\u0026quot;Action\u0026quot;\u0026quot;: \u0026quot;\u0026quot;ecs:CreateInstance\u0026quot;\u0026quot;, \u0026quot;\u0026quot;Effect\u0026quot;\u0026quot;: \u0026quot;\u0026quot;Deny\u0026quot;\u0026quot;, \u0026quot;\u0026quot;Resource\u0026quot;\u0026quot;: \u0026quot;\u0026quot;*:*:cn-shanghai:*:*\u0026quot;\u0026quot; }, { \u0026quot;\u0026quot;Action\u0026quot;\u0026quot;: \u0026quot;\u0026quot;ecs:RunInstances\u0026quot;\u0026quot;, \u0026quot;\u0026quot;Effect\u0026quot;\u0026quot;: \u0026quot;\u0026quot;Deny\u0026quot;\u0026quot;, \u0026quot;\u0026quot;Resource\u0026quot;\u0026quot;: \u0026quot;\u0026quot;*:*:cn-shanghai:*:*\u0026quot;\u0026quot; } ], \u0026quot;\u0026quot;Version\u0026quot;\u0026quot;: \u0026quot;\u0026quot;1\u0026quot;\u0026quot; }     [⬆ 目次へ]\n RAMユーザでSSL Certifcate Serviceを利用時の権限について RAMユーザでSSL証明書をご購入いただく場合、AliyunYundunCertReadOnlyAccessとAliyunBSSFullAccessの権限が必要です。\nSLBに証明書をバインドする場合は、AliyunYundunCertReadOnlyAccessとAliyunSLBFullAccessの権限がそれぞれ必要となります。\n  [⬆ 目次へ]\n RAMユーザでコンテナのコンソールを操作させる方法について RAMユーザでコンテナのコンソールを操作させるには、RAMユーザへのコンテナサービスコンソール権限付与、とコンテナサービス内で指定クラスタ権限の付与が必要です。\n承認手順は下記をご参考ください。\n①新規RAMユーザーを作成します。\n②対象RAMユーザーにAliyunCSFullAccess権限を追加します。\n③コンテナーサービスのクラスター項目を選択します。\n④承認を選択します。\n⑤対象RAMユーザーを確認して、承認ボタンをクリックします。\n⑥対象クラスーを選択して、名前空間を選択して、RBACのロールを選択します。\n⑦「次のステップ」をクリックします。\n⑧「承認ポリシーの更新」をクリックします。\n⑨[承認成功]が表示されます。\n   [⬆ 目次へ]\n Logstore の「internal-alert-history」ログについて アラートルールを設定する際に、Log Serviceは自動的に対象アラートが所属されているプロジェクトにinternal-alert-historyを作成します。\nこのプロジェクト内に全てのアラートルールが実施される時にアラートが発生したかどうか関わらず、LogStoreのinternal-alert-historyに記録されます。\n「internal-alert-history」により料金は発生しませんが、直接削除することもできません。対象プロジェクトを削除するとinternal-alert-historyも削除されます。\n  [⬆ 目次へ]\n Logtailの履歴ログのインポートモードについて 履歴ログのインポートモード（ローカルイベントを追加した状態）と、通常のログ収集モードに違いがあります。\n名前の通り、通常のログ収集モードは、「Logtail 設定」完了後に、指定されたログファイルからリアルタイムでログを吸い上げます。\n過去のログも一部取れますが、限度は1MBまでです。履歴ログのインポートモードは指定されたログファイルを一度のみ丸ごと吸い上げます。\nまた、ローカルイベントで指定するログディレクトリは「Logtail 設定」で指定するディレクトリと一致する必要がありません。\nただし、重要なのは履歴ログのインポートモードのログディレクトリはローカルイベントにて指定されます。\nコンソールの「Logtail 設定」には存在しないディレクトリでもOKです。\u0026rdquo;\nログ収集は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/89928.htm\n   [⬆ 目次へ]\n ExpressConnect同じリージョン内VPC-VPC接続の料金について 以前は有料でしたが、2019/02/25のExpress Connect料金改定に伴い、同じリージョン内（異なるアカウントのVPC間を含め）のVPC接続をする場合は料金不要となりました。\nExpress Connect 料金表は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/notice/expressconnect-price-notice-20190225\nExpress Connect 料金改定案内は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/product/express-connect/pricing\n   [⬆ 目次へ]\n CDNでのAlibaba Cloud の無料証明書申請について CDN無料証明書の取得条件は、DNS設定にてCDN用ドメインとCDNで払い出されているCNAMEとバインドすることですが、 CDN用ドメインはトップドメイン、またはwwwドメインでCDN無料証明書を取得する場合、トップドメインとwwwドメイン両方をCDNで払い出されているCNAMEとバインドする必要があります。\nDNS設定にて以下のようなCNAMEレコードを追加していただく、CDNコンソールにて無料証明書を取得可能になります。\n例： CNAME hugo.com -----------\u0026gt; www.hugo.com.w.cdngslb.com CNAME www.hugo.com ----------\u0026gt; www.hugo.com.w.cdngslb.com\u0026quot;     [⬆ 目次へ]\n CDNオリジンへのリクエストタイムアウト値について AlibabaCloud CDN/DCDNに対して、オリジンへのリクエストタイムアウト値上限はデフォルトで30秒となります。\nオリジンサーバから応答時間は「30秒」以上かかる場合、チケットの申請により、該当上限値を引き上げることは可能です。\n  [⬆ 目次へ]\n CDN + OSS 構成の静的ウェブサイトホスティングについて OSSを非公開し、CDNの設定にて、プライベートバケットの Back-to-Originの設定を有効化した場合、下記の制限があります。\nインデックスドキュメントの設定が利用できません。\nhttp://example.com/ とアクセスしても、403や404になり、 http://example.com/index.html へリダイレクトされません。  制限を回避するには、CDNキャッシュ設定のカスタムページの設定で、403や404になると、 http://example.com/index.html を返すような設定することは可能です。\nhttp://example.com/ へアクセスすると、 http://example.com/index.html としてアドレスバーにも表示されます。     [⬆ 目次へ]\n Image SearchのインポートQPS制限について Image Searchのプラン毎にAPIコードのQPSが定められています。APIからの画像アップロードではこのQPSの制限が受けられます。\n大量の画像をインポートする場合、OSSからのインポートはAPIのQPS制限を受けられませんので、ご利用ください。\n  [⬆ 目次へ]\n VPNGAtewayのSSL証明書作成仕様について 1つVPNGatewayに作成可能なSSLクライアント証明書の上限数は50件となります。\n同じ証明書は複数クライアントから同時使用可能のため、50のSSL証明書に対して最大1000人が同時利用（同時接続）可能です。\nSSLクライアント証明書の作成可能な回数は100回です。\n例えば、50件証明書を作成して、全部削除して、もう一度50件作成して、作成回数は100回上限に達します。 それから、また1件を削除して49件証明書になっても、新規 SSL 証明書は作成できません。\n   [⬆ 目次へ]\n VPNGatewayにて作成可能なSSL証明書数について VPN GatewayのSSLサーバでは、クライアント向けのSSL証明書を作成できますが、作成可能な上限数があり、VPN Gatewayインスタンスあたり50個まで証明書を保存できます。\nVPN Gateway作成時に指定する「SSL接続数」が最大で1,000となりますが、これは複数のSSLクライアントでSSL証明書を共有することを想定しています。\nなお、スペックの「SSL接続数」と関係なく、50証明書を作成することは可能です。「SSL接続数」が10のVPN Gatewayインスタンスでも、20個の証明書を作ることが可能です。ただし、この場合、同時接続数は10です。\nまた、最大 SSL クライアント作成数は100となります。これは、「累計で作成できる証明書数」が、VPN Gatewayインスタンスあたり100まで、を意味します。したがって、「作成／削除」を繰り返すと上限に達する恐れがあります。\n  [⬆ 目次へ]\n VPN Gatewayのヘルスチェック設定について VPN Gatewayヘルスチケットは該当IPsec Connection経由の往復通信を両方検知した場合、正常となります。\n冗長構成で、複数IPsec Connectionが構築された場合、トラフィックの往路はバックアップのIPsec Connection経由となっても、復路はマスターのIPsec Connectionとなることもありますので、バックアップ側に複路のトラフィックを検出できず、ヘルスチェックが失敗となるケースがあります。\n  [⬆ 目次へ]\n SSL-VPNに払い出されるIPアドレスの仕様について AlibabaCloud SSL-VPNを利用する場合、設定されたクライアントレンジから払い出されるIP数に制限があります。\n制限数は、「レンジIP総数/4-2」となります。\n192.168.0.0/28の場合は「2^4\u0026frasl;4-2 = 2」で2つのIPアドレスが利用可能です。\nまた、リリースしたクライアントアドレスはすぐ再取得できなく、１−２分おいてから、再取得可能です。\n  [⬆ 目次へ]\n SSL証明書の更新について Alibaba Cloud SSL Certificates Serviceでは、 新規のSSL証明書購入のみをサポートしています。更新をサポートしていません。\nそのため、既存のSSL証明書を継続してご利用になさりたい場合、再度、購入し直していただく必要がございます。\n期限切れに伴う新規購入は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/28544.htm\n購入ガイドは下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/28542.htm\n   [⬆ 目次へ]\n SSL証明書申請後のドメイン変更について 審査が完了し、発行済みとなったSSL証明書の対象ドメインは変更することができません。\nただし、対象証明書IDの右側で[取り消し]ボタンが表示される場合、申請した内容をキャンセルし、ドメイン変更後に再度申請することは可能です。\n  [⬆ 目次へ]\n DataVでの「コールバックID」の呼び出し範囲について DataVで「コールバックID」を利用して、パラメータを別のウィジェットに渡すことが便利です。\nただし、コールバックのパラメータを呼び出すウィジェットにデータソースの制限があります。現在利用可能なデータソースは「API」または「データベース」のみとなります。\n「CSV」、「静的データ」、「TableStore」などはコールバックのパラメータを呼び出せませんので、ご注意ください。\n  [⬆ 目次へ]\n CENの帯域幅変更時の通信断発生について CENでの帯域幅課金は２つの概念があります。\n1つは「帯域幅パッケージ」もう1つは「リージョンの接続」です。\n前者は、あるリージョンエリア（中国本土・アジア太平洋など）間で使用する帯域幅全体を指定します。これは購入を伴うものです。\n後者は、その帯域幅パッケージの配分先となるリソースで、具体的に接続するリージョンを指定します。\n例えば「帯域幅パッケージ」として【中国本土・アジア太平洋】を『10Mbps』購入し、「リージョン接続」において【上海ー日本】に『4Mbps』を配分、【杭州ー香港】に『4Mbps』配分するといったイメージです。\nICMPベースの通信定義として、CENの帯域幅変更時に通信断は発生しません。\n   [⬆ 目次へ]\n Function Computeの時間トリガーのタイムゾーンについて Function Computeの時間トリガーのタイムゾーンはUTCとなります。\n時間トリガーを0:30（0 30 0 * * *）で設定した場合、北京時間の8:30、日本時間の9:30に実行されます。\n日本標準時の時刻(JST/UTC+0900）を基準として考える必要があります。\n詳細は下記ドキュメントをご参考ください。\nhttps://jp.alibabacloud.com/help/doc-detail/68172.htm\n   [⬆ 目次へ]\n Function ComputeからRDSのイントラネット接続について Function Compute サービスはダイナミック IP アドレスを使用します。\nしたがって、ホワイトリストを使用して Function Compute の ApsaraDB for RDSへのアクセスを許可することは推奨していません。\nホワイトリストにすべての IP アドレスを許可することは、危険性を高めてしまいます。\n尚、Function Compute は、VPC機能に対応しております。\nVPC アクセスを有効にすることで、安全に VPC 内のリソース(RDS)にアクセスすることが可能になります。\nただし、Function Computeサービスおよびリソースは、同一リージョンで稼働している必要があります。\nなお、RDSのホワイトリストにて、Function Computeが所属するVPCのIPv4 CIDR Block、もしくはFunction Computeが所属するVSwitchのIPv4 CIDR Blockを許可する必要があります。\nFunction Compute に VPC へのアクセス詳細は下記ドキュメントをご参考ください。\nhttps://jp.alibabacloud.com/help/doc-detail/84514.htm\nhttps://jp.alibabacloud.com/help/doc-detail/84516.htm\n   [⬆ 目次へ]\n IoT Platformのデバイス監視機能について IoT Platformにデバイス監視の機能があり、デバイスからのパケット受信間隔で死活を判断しています。\n仕組みとして、IoT Platformからデバイスへキープアライブパケットを送信することではなく、 デバイスからMQTT接続の確立時に、ヘッダにKeep Alive時間を30-1200sの間に指定する必要があります。\n設定されたKeep Alive時間の1.5倍を経って、もしPUBLISH, SUBSCRIBE, PING, or PUBACKの動作がなければ、 MQTT接続が切断され、該当デバイスのステータスを「オフライン」に判断されます。\n  [⬆ 目次へ]\n Redisのパスワードでの接続方法について Redis\u0008購入後に、コンソールに表示されたデフォルトアカウントの場合、ユーザー名不要、パスワードのみで接続可能です。\nコンソールにて別のアカウントを新規作成した場合、下記のようにauthコマンドを使用してデータベースにログインする必要があります。 新規アカウントのパスワードのみで認証するとエラーになりますので、ご注意ください。\n# redis-cli -h 接続先エンドポイント \u0026gt; auth account:password\u0026quot;     [⬆ 目次へ]\n ApsaraDB for Redisの強制アップグレードについて 強制アップグレードの用途として、クラスタ構成とHA構成にサポートするコマンドに差異があり、一部クラスタ構成でサポートしないコマンドがあります。\n該当コマンドが含まれるHA構成からクラスタ構成にアップグレードする際に、「強制アップグレード」を選択する必要があります。\nRedis対応可能なコマンドは下記ドキュメントをご参考ください。\nhttps://jp.alibabacloud.com/help/doc-detail/26356.htm\n   [⬆ 目次へ]\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/010_logservice-to-oss/",
	"title": "LogServiceでOSSへデータを集める方法",
	"tags": [],
	"description": "LogServiceでOSSへデータを収集する方法を説明します。",
	"content": " はじめに \u0026nbsp; 本章はAlibabaCloud LogServiceを使ってOSSへデータを送ります。ゴールとしては以下のような構成図になります。\nまた、OSSにデータ収集後、E-MapReduceでHDFSへのETL処理がありますが、こちらは「OSSとE-MapReduce編」「ETL編」にて重複するため、割愛させていただきます。\n（この章のゴールは外部データソースをOSSへ集約する、のみとなります）\nLogServiceとは \u0026nbsp; AlibabaCloudのLogServiceは迅速にログデータを収集、処理、送信、照会/分析することができるプロダクトサービスです。\n詳しいことはhelpページにて記載していますので、こちらを参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/48869.htm\nLogServiceでのデータ収集方法 LogServiceでのデータ収集方法は様々な方法がありますが、今回はtwitterのtweetデータを収集、OSSヘ転送する処理を目指します。イメージとしてはECSでTwitterデータを収集、それをLogServiceに転送し、LogServiceによりOSSへParquet形式でデータ転送、という流れになります。\nStep1 . LogServiceでプロジェクトの作成、Logstoreを作成します。\nこちらにやり方が記載されていますので、説明は割愛します。\nhttps://jp.alibabacloud.com/help/doc-detail/54604.htm\nStep2. ECSインスタンスを起動 今回、LogService上で構築することも可能ですが、twitter APIを利用するためにECSでLogService APIと連携して処理します。\n下準備として、ECSインスタンスに以下ライブラリのインストールをします。\npip3.6 install -U aliyun-log-python-sdk pip3.6 install twitter 次は以下、Pythonファイルtweet.pyを作成し、実行します。\nssh接続が切れても恒久的に起動し続けたい場合は、nohup python3.6 tweet.py \u0026amp;と実行してください。\n# -*- coding: utf-8 -*- from aliyun.log.logitem import LogItem from aliyun.log.logclient import LogClient from aliyun.log.putlogsrequest import PutLogsRequest import time import twitter SCREEN_NAME = \u0026#39;write here\u0026#39; # OAuth こちらはTwitter Developerに申請する必要があります。 # https://developer.twitter.com/content/developer-twitter/ja.html ACCESS_TOKEN_KEY = \u0026#39;\u0026#39; ACCESS_TOKEN_SECRET = \u0026#39;\u0026#39; CONSUMER_KEY = \u0026#39;\u0026#39; CONSUMER_SECRET = \u0026#39;\u0026#39; endpoint = \u0026#39;ap-northeast-1.log.aliyuncs.com\u0026#39; accessKeyId = \u0026#39;\u0026lt;自分のaccessKeyId\u0026gt;\u0026#39; accessKey = \u0026#39;\u0026lt;自分のaccessKey\u0026gt;\u0026#39; project = \u0026#39;bigdata-prod-tech\u0026#39; logstore = \u0026#39;twitter-logstore\u0026#39; token = \u0026#34;\u0026#34; def convert_to_text(row_value): if type(row_value) is None: return \u0026#34;\u0026#34; elif type(row_value) is str: return row_value elif type(row_value) is int: return str(row_value) elif type(row_value) is float: return str(row_value) elif type(row_value) is bool: if row_value is True: return \u0026#34;True\u0026#34; else: return \u0026#34;False\u0026#34; else: return \u0026#34;\u0026#34; def twitter_put_logs(): client = LogClient(endpoint, accessKeyId, accessKey, token) oauth = twitter.OAuth(ACCESS_TOKEN_KEY, ACCESS_TOKEN_SECRET, CONSUMER_KEY, CONSUMER_SECRET) twitter_api = twitter.Twitter(auth=oauth) friends = twitter_api.friends.ids(screen_name=SCREEN_NAME, count=5000) friends_ids = \u0026#39;,\u0026#39;.join(map(str, friends[\u0026#39;ids\u0026#39;])) stream = twitter.TwitterStream(auth=oauth, secure=True) for tweet in stream.statuses.filter(follow=friends_ids): created_at = convert_to_text(tweet[\u0026#39;created_at\u0026#39;]) _id = convert_to_text(tweet[\u0026#39;id\u0026#39;]) id_str = convert_to_text(tweet[\u0026#39;id_str\u0026#39;]) text = convert_to_text(tweet[\u0026#39;text\u0026#39;]) source = convert_to_text(tweet[\u0026#39;source\u0026#39;]) in_reply_to_status_id = convert_to_text(tweet[\u0026#39;in_reply_to_status_id\u0026#39;]) in_reply_to_status_id_str = convert_to_text(tweet[\u0026#39;in_reply_to_status_id_str\u0026#39;]) in_reply_to_user_id = convert_to_text(tweet[\u0026#39;in_reply_to_user_id\u0026#39;]) in_reply_to_user_id_str = convert_to_text(tweet[\u0026#39;in_reply_to_user_id_str\u0026#39;]) in_reply_to_screen_name = convert_to_text(tweet[\u0026#39;in_reply_to_screen_name\u0026#39;]) user_id = convert_to_text(tweet[\u0026#39;user\u0026#39;][\u0026#39;id\u0026#39;]) user_id_str = convert_to_text(tweet[\u0026#39;user\u0026#39;][\u0026#39;id_str\u0026#39;]) user_name = convert_to_text(tweet[\u0026#39;user\u0026#39;][\u0026#39;name\u0026#39;]) user_screen_name = convert_to_text(tweet[\u0026#39;user\u0026#39;][\u0026#39;screen_name\u0026#39;]) user_location = convert_to_text(tweet[\u0026#39;user\u0026#39;][\u0026#39;location\u0026#39;]) user_url = convert_to_text(tweet[\u0026#39;user\u0026#39;][\u0026#39;url\u0026#39;]) user_description = convert_to_text(tweet[\u0026#39;user\u0026#39;][\u0026#39;description\u0026#39;]) user_followers_count = convert_to_text(tweet[\u0026#39;user\u0026#39;][\u0026#39;followers_count\u0026#39;]) user_friends_count = convert_to_text(tweet[\u0026#39;user\u0026#39;][\u0026#39;friends_count\u0026#39;]) user_listed_count = convert_to_text(tweet[\u0026#39;user\u0026#39;][\u0026#39;listed_count\u0026#39;]) user_favourites_count = convert_to_text(tweet[\u0026#39;user\u0026#39;][\u0026#39;favourites_count\u0026#39;]) user_statuses_count = convert_to_text(tweet[\u0026#39;user\u0026#39;][\u0026#39;statuses_count\u0026#39;]) user_created_at = convert_to_text(tweet[\u0026#39;user\u0026#39;][\u0026#39;created_at\u0026#39;]) contents = [ ( \u0026#39;created_at\u0026#39;, created_at), ( \u0026#39;id\u0026#39;, _id), ( \u0026#39;text\u0026#39;, text), ( \u0026#39;source\u0026#39;, source), ( \u0026#39;in_reply_to_status_id\u0026#39;, in_reply_to_status_id), ( \u0026#39;in_reply_to_user_id\u0026#39;, in_reply_to_user_id), ( \u0026#39;in_reply_to_screen_name\u0026#39;, in_reply_to_screen_name), ( \u0026#39;user_id\u0026#39;, user_id), ( \u0026#39;user_name\u0026#39;, user_name), ( \u0026#39;user_screen_name\u0026#39;, user_screen_name), ( \u0026#39;user_location\u0026#39;, user_location), ( \u0026#39;user_url\u0026#39;, user_url), ( \u0026#39;user_description\u0026#39;, user_description), ( \u0026#39;user_followers_count\u0026#39;, user_followers_count), ( \u0026#39;user_friends_count\u0026#39;, user_friends_count), ( \u0026#39;user_listed_count\u0026#39;, user_listed_count), ( \u0026#39;user_favourites_count\u0026#39;, user_favourites_count), ( \u0026#39;user_statuses_count\u0026#39;, user_statuses_count), ( \u0026#39;user_created_at\u0026#39;, user_created_at) ] topic = \u0026#39;twitter_log\u0026#39; source = \u0026#39;source\u0026#39; logitemList = [] logItem = LogItem() logItem.set_time(int(time.time())) logItem.set_contents(contents) logitemList.append(logItem) request = PutLogsRequest(project, logstore, topic, source, logitemList) response = client.put_logs(request) response.log_print() if __name__==\u0026#39;__main__\u0026#39;: twitter_put_logs() \nStep3. LogServiceでステータスチェックします。\nLogServiceの「Logstoreリスト」の「解析検索」にある「解析」をクリックし、上記Pythonの実行結果、tweet情報を確認します。\n今度はLogServiceの「Logstoreリスト」の「LogShipper」にある「OSS」をクリックし、収集したLogをOSSへ転送するように設定します。\n今回のTwitterデータの場合は以下のような設定となりました。\nStep4. OSSでデータが転送されてるかを確認します。データがあることを確認できたら終了です。\n最後に \u0026nbsp; LogServiceはシンプルながら強力なデータ収集基盤となっています。しかも安いので、ビッグデータでデータを収集するときはLogServiceを使用するといいでしょう。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/terraform/10/slb/",
	"title": "SLBの作成",
	"tags": [],
	"description": "Terraformによる、Alibaba CloudのServer Load Balancer作成方法を紹介します。",
	"content": " AlibabaCloudの基本プロダクトサービスであるSLBの作成方法を解説します。\n1. SLB \u0026nbsp; SLB（Server Load Balancer）はアプリケーションや Web サイトのトラフィックを分散させるサービスです。\n\u0026nbsp; SLB は、仮想サービスアドレスを設定することによって、追加の ECS インスタンスを高性能で可用性の高いアプリケーションサービスプールに仮想化し、クライアントからのリクエストを、 転送ルールに従ってサーバープール内のECS インスタンスに分配します。\n\u0026nbsp; また、SLB は、追加されたバックエンドサーバーの状態をチェックし、異常状態の ECS インスタンスを自動的に分離します。そうすることで SPOF (単一障害点) 問題を除去し、アプリケ ーションの全体的なサービス性能を向上させます。 それに加え、Alibaba Anti-DDoS と組み合わせることで、SLB は DDoS 攻撃を防御することができます。\n\n2. コンポーネント \u0026nbsp; SLBは以下のコンポーネントが含まれています。\n SLB インスタンス SLB インスタンスは、実行中の負荷分散サービスで、着信トラフィックをバックエンドサーバーに分配します。 負荷分散サービスを使用するには、SLB インスタンスを作成します。インスタンスには少なくとも 1 つのリスナーと 2 つのバックエンドサーバーを設定する必要があります。\n リスナー リスナーはクライアントからのリクエストをチェックし、設定されたルールに基づいてバックエンドサーバーに転送します。 また、バックエンドサーバーのヘルスチェックも実行します。\n バックエンドサーバー バックエンドサーバーは、分散リクエストを処理するために SLB インスタンスに追加された ECS インスタンスです。 分散リクエストを処理する ECSインスタンスは、デフォルトサーバーグループ、VServer グループ、アクティブ/スタンバイサーバーグループのいずれかに追加することができます。\n  またServer Load Balancer (SLB) は、 ECS インスタンスの単一障害点 (SPOF)、アクティブゾーンの障害、などを防ぐ役割がありますので、SLBを組み合わせることでサービスの高可用性を実現することができます。\n参考：高可用性のベストプラクティス\n\n3. SLBのTerraformについて \u0026nbsp; 本題、SLB作成に移ります。まずは以下の構成図通り、簡単なソースを作ってみます。 resource \u0026quot;alicloud_slb\u0026quot; \u0026quot;SLB_instance\u0026quot; { name = \u0026quot;ELB_instance_for_terraform\u0026quot; vswitch_id = \u0026quot;${var.vswitch}\u0026quot; internet = true } resource \u0026quot;alicloud_slb_listener\u0026quot; \u0026quot;http\u0026quot; { load_balancer_id = \u0026quot;${alicloud_slb.SLB_instance.id}\u0026quot; backend_port = 80 frontend_port = 80 health_check_connect_port = 80 bandwidth = -1 protocol = \u0026quot;http\u0026quot; sticky_session = \u0026quot;on\u0026quot; sticky_session_type = \u0026quot;insert\u0026quot; cookie = \u0026quot;testslblistenercookie\u0026quot; cookie_timeout = 86400 } resource \u0026quot;alicloud_slb_attachment\u0026quot; \u0026quot;default\u0026quot; { load_balancer_id = \u0026quot;${alicloud_slb.SLB_instance.id}\u0026quot; instance_ids = [ \u0026quot;${alicloud_instance.app.*.id}\u0026quot;, ] } output \u0026quot;slb_ip\u0026quot; { value = \u0026quot;${alicloud_slb.SLB_instance.address}\u0026quot; }  SLBを作成する時はalicloud_slb、alicloud_slb_listener、alicloud_slb_attachmentの３つの組み合わせが必要になります。\nalicloud_slb alicloud_slbはSLBを利用開始するために必要なパラメータです。\n name - （オプション）SLBの名前。 vswitch_id - （必須）接続したいVSwitchのID。 internet - （オプション）trueの場合、SLB addressTypeはインターネットになり、falseはイントラネットになります。デフォルトはfalseです。  実行することにより、以下の属性情報が出力されます。\n address - ロードバランサのIPアドレス。  他に入力パラメータ、出力パラメータがいくつかありますので、こちらも是非参照してみてください。 https://www.terraform.io/docs/providers/alicloud/r/slb.html\nalicloud_slb_listener alicloud_slb_listenerはSLBのリスナーリソースを管理するパラメータです。\n load_balancer_id - （必須）新しいリスナーを起動するために使用するSLBのID。 frontend_port - （必須）SLBが使用するフロントエンドのポート。 backend_port - （オプション）SLBが使用するバックエンドのポート。 protocol - （必須）待機する通信プロトコルタイプ。[http、https、tcp、udp]のいずれかを使用。 bandwidth - （任意）Listenerのピーク帯域幅。  SLB_ListenerはSLBの心臓部でもあり、他に入力パラメータ、出力パラメータがいくつかありますので、こちらも是非参照してみてください。 https://www.terraform.io/docs/providers/alicloud/r/slb_listener.html\nalicloud_slb_attachment alicloud_slb_attachmentはバックエンド・サーバーグループ(ECSインスタンス)をSLBに追加するパラメータです。\n load_balancer_id - （必須）ロードバランサーのID。 instance_ids - （必須）SLBに追加されたバックエンドサーバーへのインスタンスIDのリスト。  \n以下にSLBの実際の構築サンプルを入れていますので、こちらも参照してみてください。\nexample: SLBの構築と設定\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/faq/ecs/",
	"title": "ECS",
	"tags": [],
	"description": "Alibaba CloudのECSに関するよくある質問を紹介します。",
	"content": " 目次  一般仕様  アベイラビリティゾーン（AZ）識別文字と実際のロケーションに関するマッピング仕様について 1つのアカウント/リージョン配下のECS購入台数制限について サブスクリプションECSのライフサイクルについて RDSCALとクライアントCALの必要性について ECSのデフォルトタイムゾーンについて スナップショット取得時の性能影響について 購入可能な従量課金インスタンスの上限について 25番ポートの制限について ICP必要性の判断方法について インスタンススペックのアップグレード方法について サブスクリプションインスタンスの削除方法について Linux系OSのSELINUXの設定について Windows日本語バージョンの提供について インスタンス保護機能によりリリースできない事象について 管理コンソールのアクセスにIPレンジの制限方法について  ネットワーク  VPCとVswitchの変更方法について VPCで指定可能なCIDRブロックについて EIPとパブリックIPの違いについて EIPとパブリックIPの帯域幅の変更方法について プライベートIPの変更方法について インバウンドとアウトバウンド帯域幅の制限値について ECSでのIPアドレスの固定方法について VPCのグローバルCIDERルーティング設定について  イメージ  イメージのインポート方法について クラウド移転ツールについて イメージのエクスポート方法について イメージのリージョン間コピー方法について  ディスク  システムディスクとデータディスクの違いについて クラウドディスクの拡張方法について  VNC  VNCで一部記号入力できない事象について VNCパスワードとECSパスワードの違いと再設定方法について VNCのタイムアウト時間について  セキュリティグループ  インバウンドとアウトバウンドのデフォルト動作について 同じセキュリティグループ内のアクセス制限について セキュリティグルールの適用順位について   一般仕様  アベイラビリティゾーン（AZ）識別文字と実際のロケーションに関するマッピング仕様について Alibaba Cloudでは、アベイラビリティゾーン（AZ）識別文字と実際のロケーションのマッピングは、全てのアカウントで共通しています。\nAWSにおいては、アカウント毎に個別にマップされます。 仕様が異なるのでご注意ください。\n   [⬆ 目次へ]\n 1つのアカウント/リージョン配下のECS購入台数制限について 従量課金でのECSインスタンス購入上限は、vCPU数により制限されています。従量課金型ECSインスタンスの購入は各リージョン「50vCPU」までとなっております。なお、サブスクリプション型ECSの場合は、購入上限数を設けておりません。\n例）お客様が1台のECSに対して4vCPUで利用する場合は、12台の従量課金ECSを購入することができます。\n   [⬆ 目次へ]\n サブスクリプションECSのライフサイクルについて サブスクリプションインスタンスの期間を更新しない、また更新失敗で有効期限切れとなった場合、そのインスタンスはライフサイクルに入ります。\n例） 期間切れから〜15日まで：通常稼働\n15日から〜30日まで：インスタンス停止\n30日：インスタンスリリース（削除）\n   [⬆ 目次へ]\n RDSCALとクライアントCALの必要性について Alibaba Cloud が提供する Windows 仮想サーバーにて、RDS CALとクライアントCALの必要性は下記のとおりです。\nAlibaba Cloud が提供する Windows 仮想サーバーの CAL ライセンスについて、リモートデスクトップユーザーのRDS CALはデフォルト2本付きです。3本以上が必要な場合、お客様にてご購入いただく必要があります。\nクライアントCALについて、Alibaba Cloud は Microsoft 社と SPLA 契約しているため、Alibaba Cloud が提供する Windows 仮想サーバーは、別途クライアントCALを購入することなくご利用いただけます。\n  [⬆ 目次へ]\n ECSのデフォルトタイムゾーンについて リージョンに関わらず、ECSインスタンスのデフォルトタイムゾーンは、中国時間（UTC+8）になります。\nなお、カスタムイメージのタイムゾーンはイメージ作成した際のものとなりますが、初回ECS作成直後でも中国ローカル時間になりますので、個別に時間自動同期（NTP）設定が必要となります。\n  [⬆ 目次へ]\n スナップショット取得時の性能影響について スナップショットの作成時は、ストレージのIO性能（最大10%低下）に影響します。\n通常、稼働中のサービスへの影響はないと想定されますが、ストレージIOが少ない時間帯での取得を勧めします。\n   [⬆ 目次へ]\n 購入可能な従量課金インスタンスの上限について 従量課金でのECSインスタンス購入上限は、vCPU数により制限されています。従量課金型ECSインスタンスの購入は各リージョン「50vCPU」までとなっております。なお、サブスクリプション型ECSの場合は、購入上限数を設けておりません。\n例）お客様が1台のECSに対して4vCPUで利用する場合は、12台の従量課金ECSを購入することができます。\n   [⬆ 目次へ]\n 25番ポートの制限について Alibaba Cloud では、MTAとしてメール送信（25 番ポートの外部接続）することが制限されております。\nMUAとして、外部SMTPの25番ポートを利用する場合のみ、宛先をご指定いただいての部分的解除は可能です。\n25番ポートの制限は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/49123.htm\n   [⬆ 目次へ]\n ICP必要性の判断方法について 中国本土にサーバを設置し、ウェブサービス提供する場合は、ICPライセンスが必要になります。\nICPライセンスを申請する前提として、中国国内に法人を持つ必要があります。該当する場合、弊社パートナーによりICP申請支援も可能ですので、チケットでご連絡ください。\nなお、香港リージョンではICPは必要がございません。ICP の取得が困難な場合、香港リージョンのご利用をご検討ください。\n  [⬆ 目次へ]\n インスタンススペックのアップグレード方法について サブスクリプション、または従量課金ECSのスペックをアップグレードすることは可能です。\nなお、スターターパッケージとして購入されたECSはアップグレードできません。\nサブスクリプションECSのアップグレードは下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/25438.htm 従量課金ECSのアップグレードは下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/60051.htm\n スターターパッケージの場合、操作上はアップグレードできてしまいますが、スターターパッケージの特典（データ転送量付で低価格）を得ることはできなくなります。）\n   [⬆ 目次へ]\n サブスクリプションインスタンスの削除方法について 年単位または月単位のサブスクリプションで課金されるインスタンスは、お客様ご自身で削除またはリリースすることはできません。期限切れた日から15日後インスタンスが停止され、30日後は自動的にリリースされます。\nまた、ECSの自動更新がONの場合、インスタンスが更新されますので、リリースを希望される場合は、自動更新の設定をOFFにする必要があります。\n自動更新の無効化は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/25404.htm\n   [⬆ 目次へ]\n Linux系OSのSELINUXの設定について Alibaba Cloud のLinux系OSでは、SELINUXの設定はデフォルトでdisabledと設定されています。\nSELINUXを有効にした場合、Alibaba Cloudコンソール上での操作に影響します。（例えば、コンソールでOSパスワードの変更など）\nOSレベルへの影響はありませんが、SELINUXの設定変更により、コンソールとの不整合が生じるため、お勧めできません。\n  [⬆ 目次へ]\n Windows日本語バージョンの提供について Windows Serverの日本語版イメージはメンテナンス面の理由で、2019/07/05の日付で提供中止となりました。\n利用中のインスタンスに影響がありません。\n日本語のWindows Serverを利用したい場合、下記のドキュメントをご参照いただき、OSの言語設定を変更することが可能です。\n詳細は下記ドキュメントをご参考ください。\nhttps://jp.alibabacloud.com/help/doc-detail/92725.htm\n   [⬆ 目次へ]\n インスタンス保護機能によりリリースできない事象について ECSインスタンス購入時に、「インスタンスリリース保護」にチェック入れた場合、\u0008インスタンスリリースしようとすると「インスタンス保護機能」が働いているためリリースできません。\n保護を解除するには、当該インスタンスの右ペイン「詳細」⇒「情報の変更」から「インスタンスのリリース保護を有効にする」にチェックが外す必要があります。\n  [⬆ 目次へ]\n 管理コンソールのアクセスにIPレンジの制限方法について \u0026ldquo;RAM(Resource Access Management）を使用することで、管理コンソールのアクセスについて、IPレンジで制限をかけることは可能です。 RAMはユーザー ID の管理とアクセス制御を実施することができます。\nRAMの概要は下記ドキュメントをご参考ください。\nhttps://jp.alibabacloud.com/help/doc-detail/28627.htm\n1) RAMユーザーを一律でアクセス制御する場合 RAMコンソール → 左ペインの設定 → サブユーザーのセキュリティ設定より、接続許可ユーザーの設定ができます。 RAM ユーザーのセキュリティポリシー設定は下記ドキュメントをご参考ください。 https://jp.alibabacloud.com/help/doc-detail/121948.html  2) RAMユーザーを個別にアクセス制御する場合 各RAMユーザーに付与する「権限付与ポリシー」を編集することで、設定することが可能です。管理コンソールに限らず、全プロダクトに対してアクセス制御するかを記載する必要があります。 ポリシーの例は下記ドキュメントをご参考ください。 https://jp.alibabacloud.com/help/doc-detail/107159.htm\u0026quot;     [⬆ 目次へ]\nネットワーク  VPCとVswitchの変更方法について ECSを作成後、そのECSのVPCとVswitchは変更できません。\n変更する必要がある場合、そのECSのカスタムイメージ作成、その後、希望のVPCとVswitchを選択しECSを新規作成することになります。\n  [⬆ 目次へ]\n VPCで指定可能なCIDRブロックについて VPCのIP CIDRは10.0.0.0/8、172.16.0.0/12及び192.168.0.0/16から選択いただく必要があります。\nコンソールから上記3つしか作成できませんが、APIを利用した場合、上記CIDRのサブCIDRを指定することができます。\nAPIでのVPC作成は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/35737.html\n   [⬆ 目次へ]\n EIPとパブリックIPの違いについて ECSでは、インターネット通信用に「パブリックIP」と「EIP」を利用できます。\nECS購入時に「パブリック IP の割り当て」にチェックを入れインスタンスを作成すると「パブリックIP」が付与されます。\nこのパブリックIP付きのECSを削除した場合、パブリックIPも同時に削除されます。ECSを削除後、IPアドレスに関する料金は発生することがありません。\nECS購入時に「パブリック IP の割り当て」にチェックを入れずにインスタンスを作成すると「パブリックIP」が付与されません。\nこの場合、別途「EIP」を購入・用意しECSにバインドして使用する必要があります。\nEIPをバインドしたECSを削除しても、EIPは自動的に削除されません。不要になったEIPは、お客様自身で削除する必要があります。また、インスタンスにバインドされていないEIPは、そのインスタンス保有料金が発生します。\n  [⬆ 目次へ]\n EIPとパブリックIPの帯域幅の変更方法について EIPの帯域幅を変更することはできます。\nパブリックIPの帯域幅は変更することができませんが、パブリックIPをEIPに変更することができます。\nこのため、パブリックIPをEIPに変更後に帯域幅の変更が可能となります。\nEIPの帯域幅の変更方法は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/27769.htm パブリックIPをEIPへの変更する方法は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/faq-detail/68010.html\n   [⬆ 目次へ]\n プライベートIPの変更方法について ECSのプライベートIPを同じVswitch内の空きIPに限って変更することができます。\nプライベートIPの変更方法は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/27733.html\n VSwitchの最初と最後の3つの IP アドレスはシステムに予約されて、指定することができません。\n例えば、VSwitchのCIDR範囲は192.168.1.0/24とします。その場合、システムに予約されるIPアドレスは192.168.1.0、192.168.1.253、 192.168.1.254、及び192.168.1.255となります。\n   [⬆ 目次へ]\n インバウンドとアウトバウンド帯域幅の制限値について ECSのインバウンドとアウトバウンド帯域幅の制限値は下記となります。\nアウトバウンド\n・サブスクリプションインスタンスの場合：最大ピーク帯域幅は 200 Mbpsです。\n・従量課金インスタンスの場合：最大ピーク帯域幅は 100 Mbpsです。\n上記範囲内に指定することができます。ECSのネットワークインターフェースが対応する場合、チケット申請により最大800 Mbpsまで引き上げ可能です。\nインバウンド\n・アウトバウンドが100 Mbps以下の場合：最大ピーク帯域幅は 100 Mbpsです。\n・アウトバウンドが100 Mbps以上の場合：最大ピーク帯域幅はアウトバウンドの帯域幅と同じです。\nインバウンド制限値の指定、及び引き上げをすることはできません。\n  [⬆ 目次へ]\n ECSでのIPアドレスの固定方法について ECSインスタンスは、DHCPの利用によりIPアドレス以外の通信に必要なオプション情報（DNS情報やルーティング情報等）も配布しております。\nまた、手動で設定した場合にはコンソールの情報と不整合が発生する可能性もあるため、DHCPを利用する必要があります。\nIPアドレスの固定方法につきましては、プライベートIPアドレスとパブリックIPアドレスにてそれぞれ方法が異なります。\n１）プライベートIPアドレスにつきましては、DHCPで割り振られるIPアドレスはVswitchのCIDRの範囲で決められ、再起動を行っても変更されることはございません。\nまた以下の手順によりプライベートIPアドレスの変更も行うことができます。\nVPC における ECS インスタンスのプライベート IP アドレスの変更 https://jp.alibabacloud.com/help/doc-detail/27733.htm ２）パブリックIPアドレスにつきましては、サブスクリプションECSインスタンスでは固定となっておりますが、従量課金ECSインスタンスでは、インスタンス停止後に変更となる場合がございます。\n停止済みインスタンスの非課金化 https://jp.alibabacloud.com/help/doc-detail/63353.htm\n上記従量課金ECSインスタンスの非課金設定を行う場合、固定のパブリックIPアドレス製品であるElastic IPアドレスをご利用いただくと、固定IPアドレスを保持して停止することが可能です。\n   [⬆ 目次へ]\n VPCのグローバルCIDERルーティング設定について VPCのルートテーブルに、グローバルCIDERに対してルーティングを設定した場合、ECS にパブリックIP（またはEIP）の有無によって動作が異なります。\nパブリックIP（またはEIP）を所有する場合は、グローバルCIDERに対してルーティングを設定を無視し、プライベートセグメントを除くすべての通信はインターネット経由となります。\n※プライベートセグメント：192.168.0.0/16、172.16.0.0/12、10.0.0.0/8\nパブリックIP（またはEIP）を所有しない場合は、VPCのルートテーブルに従います。\n   [⬆ 目次へ]\nイメージ  イメージのインポート方法について 基準に満たすイメージをAlibabaCloudにインポートすることができます。\nイメージのインポート方法は下記のドキュメントをご参照ください。\n※ドキュメント内「前提条件」にご注意ください\nhttps://jp.alibabacloud.com/help/doc-detail/25464.html イメージをインポートする際の注意事項は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/48226.htm\n   [⬆ 目次へ]\n クラウド移転ツールについて Alibaba Cloud 移行ツールのご利用により、物理的なデスクトップおよびサーバを変換したり、ECS への仮想マシン、クラウドホストを移行することができます。\nAlibaba Cloud 移行ツールは下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/62349.html クラウド移行ツールを使用してAlibaba Cloudへの移行は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/62394.htm イメージをインポートする際の注意事項は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/48226.htm\n   [⬆ 目次へ]\n イメージのエクスポート方法について イメージのエクスポート機能を利用するには、制限解除申請が必要です。事前にチケット起票して申請ください。\nイメージエクスポートの利用方法は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/58181.html\n   [⬆ 目次へ]\n イメージのリージョン間コピー方法について 日本サイトでは現在、制限解除の申請なしでリージョン間のイメージコピーすることができます。\nイメージコピーの利用方法は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/25462.html\n   [⬆ 目次へ]\nディスク  システムディスクとデータディスクの違いについて システムディスクとデータディスクには下記の違いがあります。\nECSへのアタッチ数\n・システムディスク：必ず1台\n・データディスク：0台から最大16台まで\nECSへのアタッチ/デタッチ可否\n・システムディスク：デタッチ不可\n・データディスク：自由にアタッチ/デタッチ可能（但し、サブスクリプションECSと同時購入のクラウドディスクは対象外）、他のECSにも再利用可能\nディスクのリリース\n・システムディスク：ECSのリリースに伴いリリースされる\n・データディスク：独自にリリース可能（ECSのリリースに依存しない）\n  [⬆ 目次へ]\n クラウドディスクの拡張方法について クラウドディスクはディスクタイプにより拡張方法が異なります。\nシステムディスク\n稼働中のシステムディスクを直接拡張することはできません。拡張するには、システムディスクを交換する必要があり、ディスク交換時にサイズを指定することができます。\nなお、システムディスク交換により、ディスク内のデータは失なわれます。このため、既存ディスクのイメージ作成、このイメージを元にシステムディスクを交換（ディスクの再作成）を行います。\nデータディスク\nデータディスクの拡張方法は下記メニューからできます。\nコンソール \u0026gt; ECS \u0026gt; クラウドディスク \u0026gt; ディスクの「詳細」\u0026gt; ディスクのサイズ拡張\nシステムディスクの交換方法は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/50134.html\n   [⬆ 目次へ]\nVNC  VNCで一部記号入力できない事象について コンソールのVNCを利用する場合に、キーボードのレイアウトにより特殊記号の入力が正確に認識されない事象がありますが、現在回避策がありません。\nコンソールのVNC以外のRDPやSSHを利用してログインする場合、上記事象が発生しませんので、特殊記号をご利用することができます。\n  [⬆ 目次へ]\n VNCパスワードとECSパスワードの違いと再設定方法について VNCパスワードとECSパスワードの違いと再設定方法は下記となります。\nVNCパスワード\n・コンソールのVNC接続を利用時のパスワードとなります。初回VNCを利用時にデフォルトパスワードが表示されます。\n・パスワードの変更はVNCコンソールからできます。変更後のパスワードは即時反映され、再起動は不要となります。\nECSパスワード\n・ECSのパスワードはOSのパスワードとなります。ECS作成時に該当パスワードが指定されます。\n・ECSパスワードの変更は下記メニューからできます。パスワード変更後に、新しいパスワード有効にするには、ECSインスタンスの再起動が必要です。\n操作手順\nコンソール \u0026gt; ECS \u0026gt; インスタンス \u0026gt; インスタンスの「詳細」\u0026gt; パスワード及びキー \u0026gt; パスワードのリセット\n  [⬆ 目次へ]\n VNCのタイムアウト時間について VNCは操作しない場合のタイムアウト時間は1分となります。また、タイムアウトの時間を変更できません。\nタイムアウト値を調整したい場合、SSHクライアントソフト側でタイムアウト調整できますので、SSHクライアントソフトからの接続はおすすめします。\n  [⬆ 目次へ]\nセキュリティグループ  インバウンドとアウトバウンドのデフォルト動作について セキュリティグループにルールを設定しなかった場合、デフォルトでは以下のような動作となります。\nアウトバウンド方向のトラフィック：全て許可\nインバウンド方向のトラフィック：全て拒否\nECS新規作成時に併せて作成されるセキュリティグループののデフォルトルールでは、22番ポート、3389ポート、またはICMPのポートが「0.0.0.0/0」で【許可】されていることがあります。\n   [⬆ 目次へ]\n 同じセキュリティグループ内のアクセス制限について 同一セキュリティグループに所属する複数のECS間は、セキュリティグループの制限を受けず全部トラフィック通信可能となります。\n  [⬆ 目次へ]\n セキュリティグルールの適用順位について ECSが複数セキュリティグループに所属する場合、全セキュリティグループルールが同時に適用されます。\nしかし、ルール間に競合があった場合、Priorityの値が小さい（＝優先度が高い）方が優先されます。\nまた、Priorityが同じで競合したルールの場合は、【拒否】が優先されます。\n  [⬆ 目次へ]\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/faq/oss/",
	"title": "OSS",
	"tags": [],
	"description": "Alibaba CloudのOSSに関するよくある質問を紹介します。",
	"content": " 目次  一般仕様  中国東部1のOSSを利用しなくても課金される事象について 標準、IA、アーカイブの違いについて クロスリージョンレプリケーションの利用制限について パケット間のファイル複製方法について 5G以上のファイルのアップロード方法について 同名ファイルを入れ替え後の即時反映について プライベート/パブリックエンドポイントの違いについて OSSのアクセスログの取得方法について OSSのイメージ/ビデオ処理の利用方法について  製品連携  OSSをディスクとしてマウントする方法について FunctionComputeのトリガーとして利用方法について CDNでOSS静的サイトの公開方法について OSSに静的サイトを設置した場合のICP必要性について OSSにインターネット経由で接続する際のFQDNについて  権限  RAMユーザー対象にバケットアクセス権限の制御方法について OSS公開してもディレクトリにアクセスできない事象について RAMユーザー利用時のBucketList権限の必要性について   一般仕様  中国東部1のOSSを利用しなくても課金される事象について OSSコンソールでのパケット操作は実質上にAPIで実行されています。\nGetBucketなどのようなパケットを特定しないに操作以外、共通な属性を取得するようなリクエストを実行された場合、デフォルトで中国東部１リージョンのエンドポイントが利用される仕様となります。\nコンソールからのAPIリクエストにより発生した料金は中国東部1のパケットに記録されますので、中国東部1のOSSを利用しなくても課金される事象の原因となります。\n   [⬆ 目次へ]\n 標準、IA、アーカイブの違いについて 標準ストレージと比較する場合、低頻度アクセスストレージに保存したファイルを30日以内、アーカイブストレージは60日以内に削除した場合、料金がかかります。 そして、アーカイブストレージからファイルを取り出す場合、解凍時間が必要となります。\n標準ストレージ\n高パフォーマンス、高信頼性、高可用性を実現する OSS インスタンス\n特徴：高スループット、ホットファイル、頻繁なアクセスを特徴とするサービスシナリオに適用可能\n信頼性: 99.999999999%\n最小保存期間：なし\n適用シナリオ: モバイルアプリケーション、大規模な Web サイト、画像共有、アクセス頻度の高いオーディオとビデオ\n低頻度アクセスストレージ\n比較的低いストレージコストとリアルタイムのアクセスを特徴とする OSS インスタンス\n特徴： リアルタイムの低頻度データアクセスをサポートするサービスシナリオに適用可能\n信頼性: 99.999999999%\n最小保存期間：30 日\n適用シナリオ： アプリケーションデータとエンタープライズデータのバックアップ、モニタリングデータ、オンラインストレージアプリケーション\nアーカイブストレージ\n低単価で長期のアーカイブデータストレージをサポートする OSS インスタンス\n特徴: データ復元の待機時間が発生し、データ保管期間に関する要件があるサービスシナリオに適用可能\n信頼性: 99.999999999%\n最小保存期間：60 日\n適用シナリオ: 長期のアーカイブデータストレージ、医療用画像、ビデオ映像\n   [⬆ 目次へ]\n クロスリージョンレプリケーションの利用制限について クロスリージョンレプリケーションは対応していますが、中国本土リージョン間、またはアメリカ東部、西部間のみとなります。その以外のリージョンでは、現状中間サーバーを経由する必要があります。\nクロスリージョンレプリケーションは下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/31864.htm\n   [⬆ 目次へ]\n パケット間のファイル複製方法について 下記の前提条件であれば、OSSBrowserを利用してコピー/移動することが可能です。\n・同じリージョンの別バケット間のコピー/移動\n・標準パケットからアーカイブパケットへのコピー/移動\n※アーカイブパケットから標準パケットへのコピー/移動も可能ですが、事前にアーカイブファイルを解凍する必要があります。一括解凍機能がないため、多数ファイルの場合、手間かかります。\n手順は下記となります。\n・ソースパケットのルートディレクトリにて全ファイルを選択し、「コピー」または「移動」をクリック\n・ターゲットのアーカイブパケットのルートディレクトリにて、「ペースト」をクリック\nOSSBrowserのダウンロードは下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/61872.html\n   [⬆ 目次へ]\n 5G以上のファイルのアップロード方法について コンソールからアップロード可能のファイルサイズは5GBまでなります。5GB以上のファイルをアップロードする場合、APIまたはSDKを利用する必要があります。\nアップロード方法は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/31850.htm\n   [⬆ 目次へ]\n 同名ファイルを入れ替え後の即時反映について OSS上に同名ファイルを入れ替え後に即時全ノードに反映することを保証していません。一定期間内に入れ替え前のファイルが取り出させる可能性があります。\nリアルタイム反映を求める場合、別ファイル名での利用が必要です。\n   [⬆ 目次へ]\n プライベート/パブリックエンドポイントの違いについて プライベートエンドポイントは同じリージョン内のインスタンスのみアクセス可能ですが、セキュリティ性が高く、トラフィック料金がかかりません。\nパブリックエンドポイントはインターネットからアクセス可能です。\n  [⬆ 目次へ]\n OSSのアクセスログの取得方法について OSSのアクセスログはLogServiceに転送することが可能です。\nログ転送方法は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/29002.htm\nOSSのアクセスログの取得方法は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/31900.htm\n   [⬆ 目次へ]\n OSSのイメージ/ビデオ処理の利用方法について OSSのイメージ/ビデオ処理機能により、お客様は好きなイメージ処理(リサイズなど)内容を「スタイル」として保存することができます。その後、保存した「スタイル」を適応することで、任意の画像にイメージ処理を実施することができます。イメージ処理を適応した画像をOSSに保存したい場合は、適応画像のURLより別途、ローカルに保存いただき、再度OSSにアップロードいただく必要があります。\nまた、OSSでは動画のフレームキャプチャー機能も実装されております。動画から任意のフレームを取得して、画像のリサイズ及び保存形式を設定することができます。ただし、上記で作成した画像は自動で保存されないため、手動でローカル上に保存する必要があります。また、上記機能で動画ファイルのサムネイル自動生成はできず、以下の例のように画像URLに対して操作を指定する必要がございます。\nOSSに保存されている画像、動画にイメージ処理を実施した場合、処理を適応した画像URLにアクセスすることで処理結果画像を取得できます。その際に、OSSのファイルURLの有効期間を設定する必要がありますのでご認識いただければと存じます。画像にイメージ処理を適応した画像URLを利用する場合、この有効期間がサムネイルの利用時間となります。\n例： 下記の条件で動画から画像を取得します。\n対象のBucketドメイン名：a-image-demo.oss-cn-qingdao.aliyuncs.com 対象Bucketに保存された動画ファイル：demo.mp4\n①動画の7秒目の映像を画像として取得します。 ②取得した画像のサイズを「800×600」にします。 ③エクスポートした画像の形式をjpgにします。 ④画像取得モードをfastにします。(fastは7秒目の直前のフレームを取得します。)\nhttp://a-image-demo.oss-cn-qingdao.aliyuncs.com/demo.mp4?x-oss-process=video/snapshot,t_7000,f_jpg,w_800,h_600,m_fast ※こちらは、サンプルです。\n上記利用した引数についてvideo/snapshotは操作内容と操作名で、動画処理の場合は、上記リンクのように動画ファイル名の後に?x-oss-process=video/snapshotと記載いただき、パラメータ指定を行なっていいただく必要がございます。\nt スクリーンショット時間(単位ms) w 画像の横サイズ（Pixel単位） h 画像の高サイズ（Pixel単位） m 画像の取得モード（fast） f 画像のフォーマット（jpg,png）\n OSSイメージ処理機能は下記ドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/31873.htm\nOSSイメージ処理手順は下記ドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/44686.htm\nURLの有効期間の詳細は下記ドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/31912.htm\n   [⬆ 目次へ]\n製品連携  OSSをディスクとしてマウントする方法について OSSFSツールを利用し、LinuxシステムでAlibaba Cloud OSSバケットをローカルファイルにマウントできます。\nただし、現在「Linux システム」のみ対応可能です。「Windows Server」には対応していません。また、該当仮想ディスクの性能は低く、複数インスタンスの同時マウントに利用できませんので、NASの利用を推奨します。\nOSSFSの利用方法は下記ドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/32196.htm\n   [⬆ 目次へ]\n FunctionComputeのトリガーとして利用方法について OSSのイベントをFcunctionComputeのトリガーに設定することができます。\nOSSトリガーの利用方法は下記ドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/74761.htm\nhttps://jp.alibabacloud.com/help/doc-detail/74762.htm\nhttps://jp.alibabacloud.com/help/doc-detail/74763.htm\nhttps://jp.alibabacloud.com/help/doc-detail/74764.htm\nhttps://jp.alibabacloud.com/help/doc-detail/74765.htm\n   [⬆ 目次へ]\n CDNでOSS静的サイトの公開方法について CDNのオリジンサイトをOSSに構築された静的サイトに指定することができません。\nOSSで静的サイト構築方法は下記ドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/67323.htm\nCDNのオリジンサイト指定方法は下記ドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/57589.htm\n   [⬆ 目次へ]\n OSSに静的サイトを設置した場合のICP必要性について 中国本土リージョンのOSSを利用し、所有するドメインとバインドし、静的サイトを公開する場合、該当ドメインは事前にICPを取得する必要です。OSSが提供するドメインを利用する場合、ICPを取得する必要がありません。\n  [⬆ 目次へ]\n OSSにインターネット経由で接続する際のFQDNについて API、SDK、またはOSS-browserを利用する場合、OSSへのアクセスにつきましては、OSSコンソールで表示される「エンドポイント（東京リージョンは oss-ap-northeast-1.aliyuncs.com）」 及び「パケットポイント（backetname.oss-ap-northeast-1.aliyuncs.com）」の2つのFQDNを許可する必要があります。\nAlibaba CloudアカウントでOSSコンソールにログイン後、該当バケットを選択した際に画面中央に表示される「アクセスドメイン名」の中の「インターネットアクセス」行にある２つのアクセスドメイン名となります。\n※東京リージョンの場合、エンドポイントには「oss-ap-northeast-1.aliyuncs.com」と表示されております。\nOSSのIPアドレスは固定ではないため、ファイアウォールでIPフィルタすることができなく、FQDNフィルタする必要があります。\n   [⬆ 目次へ]\n権限  RAMユーザー対象にバケットアクセス権限の制御方法について 下記のようなカスタマイズポリシーを作成し、RAMユーザに適用することで、バケットごとに制御することが可能です。\n{ \u0026quot;Statement\u0026quot;: [ { \u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;, \u0026quot;Action\u0026quot;: \u0026quot;oss:ListBuckets\u0026quot;, \u0026quot;Resource\u0026quot;: \u0026quot;acs:oss:\\*:\\*:\\*\u0026quot; }, { \u0026quot;Action\u0026quot;: \u0026quot;oss:\\*\u0026quot;, \u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;, \u0026quot;Resource\u0026quot;: [ \u0026quot;acs:oss:\\*:\\*:\u0026lt;bucketname\u0026gt;\u0026quot;, \u0026quot;acs:oss:\\*:\\*:\u0026lt;bucketname\u0026gt;/\\*\u0026quot; ] } ], \u0026quot;Version\u0026quot;: \u0026quot;1\u0026quot; }   カスタマイズポリシーは下記ドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/28640.htm\n   [⬆ 目次へ]\n OSS公開してもディレクトリにアクセスできない事象について OSSパケットはフォルダのように見えますが、構造上にオブジェクト方式となります。\nディレクトリがありませんので、OSSに保存されるファイルにアクセスするには、ファイルまでのパスを指定する必要がありますので、ディレクトリを指定して配下の全ファイルを表示する機能がありません。\n  [⬆ 目次へ]\n RAMユーザー利用時のBucketList権限の必要性について RAMユーザーに指定パケットのフル権限を付与した場合、バケット内のオブジェクトの操作に支障がありませんが、OSSコントロールから該当パケットを確認することができません。\nコンソールで確認するために、別途全パケットを参照する権限ListBucketsが必要です。また、ListBuckets権限には対象パケットの指定ができなく、全表示/全非表示しかできません。\n権限ポリシーには、以下のような部分を設定する必要です。\n\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;, \u0026quot;Action\u0026quot;: \u0026quot;oss:ListBuckets\u0026quot;, \u0026quot;Resource\u0026quot;: \u0026quot;acs:oss:\\*:\\*:\\*\u0026quot;     [⬆ 目次へ]\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/faq/rds/",
	"title": "RDS",
	"tags": [],
	"description": "Alibaba CloudのRDSに関するよくある質問を紹介します。",
	"content": " 目次  一般仕様  RDSのトラフィック料金について sysadminの権限提供について カスタマイズ可能なパラメーターについて RDSのストレージ容量の拡張方法について ホワイトリストの設定方法について インターネットアドレスとイントラネットアドレスの違いについて VPCとVswitchの変更方法について Oracleライセンスの持ち込みについて  バックアップ  バックアップ取得時の性能影響について RDSバックアップの保存先について リカバリ時に指定可能な時刻について RDSリリース後のバックアップ提供について  マルチゾーン  マルチゾーンの確認方法について マルチゾーンの切り替え方法について レプリカのマルチゾーン対応について  暗号化  保存データの暗号化方法について SSLを利用するデータ転送方法について   一般仕様  RDSのトラフィック料金について RDS現在トラフィック（インバウンド、アウトバウンド含む）料金は無料です。\n  [⬆ 目次へ]\n sysadminの権限提供について インスタンスの安定性とセキュリティを保証するために、RDS for SQL Server では、sysadmin 権限を提供しておりません。\nRDSの制限詳細は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/26141.htm\n   [⬆ 目次へ]\n カスタマイズ可能なパラメーターについて RDSはマネジメントサービスのため、カスタマイズ可能なパラメーターはRDSコンソールのパラメーターの設定ページに表示されているパラメーターのみとなります。\n  [⬆ 目次へ]\n RDSのストレージ容量の拡張方法について RDSのストレージ容量は下記メニューから拡張することができます。\nコンソール \u0026gt; RDS \u0026gt; インスタンスの「詳細」\u0026gt; 設定を変更する \u0026gt; 容量\n   [⬆ 目次へ]\n ホワイトリストの設定方法について RDSにはホワイトリストを利用してアクセスIPを制限することができます。\nRDSのホワイトリストの設定は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/43186.html\n   [⬆ 目次へ]\n インターネットアドレスとイントラネットアドレスの違いについて RDSにインターネットアドレスとイントラネットアドレスがあります。\nイントラネットアドレスは同じVPC内のインスタンスのみアクセスすることができます。\nインターネットアドレスはインターネットからアクセスすることができます。\n  [⬆ 目次へ]\n VPCとVswitchの変更方法について RDS作成後のVPCとVSwitchの変更を対応していません。既存RDSのバックアップからVPCとVSwitchを指定して新規RDSを作成することになります。\n  [⬆ 目次へ]\n Oracleライセンスの持ち込みについて AlibabaCloudにOracleライセンスを持ち込みの場合、Oracle社と再契約する必要があります。\n契約するCPU数はECSのCPU数ではなく、ECSがフェイルオーバー可能な全物理機のCPU数となります。 日本リージョンのECSに持ち込みの場合、日本データセンターの全物理サーバーCPUの契約となります。 ECS Bare Metal InstanceとDedicated Host (DDH)製品でも例外がありません。\n\n  [⬆ 目次へ]\nバックアップ  バックアップ取得時の性能影響について RDSのバックアップはスレーブインスタンスから取得するため、取得時にスレーブインスタンスへ影響がありますが、マスターインスタンスの性能に影響がありません。\n  [⬆ 目次へ]\n RDSバックアップの保存先について RDSバックアップはアーキテクチャ上にOSS上に保存されますが、お客様のOSS領域ではありませんので、ダウンロードする際には、RDSコンソールからとなります。\n  [⬆ 目次へ]\n リカバリ時に指定可能な時刻について バックアップからリカバリ時に希望時刻を指定することができます。\n指定可能の時刻は最初のフルバックアップ時刻から現時刻の間となります。\n  [⬆ 目次へ]\n RDSリリース後のバックアップ提供について RDSのリリースに伴い、バックアップもリリースされます。RDSのバックアップをお客様のOSSに移管する機能は現在ありません。必要な場合、リリース前にRDSコンソールからダウンロードする必要があります。\n  [⬆ 目次へ]\nマルチゾーン  マルチゾーンの確認方法について 下記メニューからマスターインスタンスとスレーブインスタンスの所在ゾーンを確認することができます。\nコンソール \u0026gt; RDS \u0026gt; インスタンス \u0026gt; インスタンスの可用性 \u0026gt; マスターノード ID/スレーブノード ID\n   [⬆ 目次へ]\n マルチゾーンの切り替え方法について 下記メニューからマスターインスタンスとスレーブインスタンスを切り替えることができます。マスターノード ID/スレーブノード IDにて切り替え前後のゾーンを確認することができます。\nコンソール \u0026gt; RDS \u0026gt; インスタンス \u0026gt; インスタンスの可用性 \u0026gt; スイッチオーバー\n   [⬆ 目次へ]\n レプリカのマルチゾーン対応について RDSのレプリカインスタンスは現在シングルゾーンのみ対応しています。\n  [⬆ 目次へ]\n暗号化  保存データの暗号化方法について RDSのデータ暗号化TDEを対応しています。\nTDEの場合 Key Management Service（KMS）は、 Alibaba Cloud によって提供される安全で使いやすい管理サービスです。 KMS を用いて安全かつ便利にキーを管理することで、暗号化/復号化機能の開発に集中できます。\nTDEの設定方法は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/33510.htm\nKey Management Serviceは下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/28935.htm\n   [⬆ 目次へ]\n SSLを利用するデータ転送方法について RDSの通信暗号化にはSSLを対応しています。\nSSLの秘密鍵はお客様自身で管理することができますが、Alibaba Cloud SSL Certificates Serviceを利用することで、RSA秘密鍵の一元管理することが可能になります。\nSSLの設定方法は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/32474.htm\nAlibaba Cloud Certificates Serviceは下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/28553.htm\n   [⬆ 目次へ]\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/faq/slb/",
	"title": "SLB",
	"tags": [],
	"description": "Alibaba CloudのSLBに関するよくある質問を紹介します。",
	"content": " 目次  一般仕様  レイヤー4とレイヤー7のSLBの違いについて SLBのアクセスログについて SLBのスペック変更方法と業務影響について VServerグループとマスタースレーブグループの違いについて サードパーティ証明書のアップロード方法について SLB関連の各APIのスロットリング上限について SLBの接続要求のタイムアウト時間について SLBスペック変更に伴うサービス切断について  ネットワーク  パブリックSLBとプライベートSLBの違いについて パブリックSLBとバックエンドECS間の通信仕様について パブリックIPとプライベートIP付きSLBの作成方法について ホワイトリストとブラックリストについて SLBのインバウンド/アウトバウンド帯域幅について 証明書をSLB側とECS側に設置の違いについて TCP over SSLの対応について SLBのTLSバージョン選択機能について  負荷分散  ラウンドロビン利用時に分散されない事象について バックエンドECSの重み設定について APIでVserverグループ追加時の引数書き方について SLBの相互認証について SLBを利用したsorryサーバーの実装方法について  ヘルスチェック  SLBのヘルスチェック頻度の仕様について SLBのヘルスチェック用CIDRブロックについて   一般仕様  レイヤー4とレイヤー7のSLBの違いについて SLBはレイヤ4 (TCP、UDP)およびレイヤ7(HTTP、HTTPS)を提供しています。\nレイヤ 4 SLB は、ロードバランシングを実現するために keepalived のオープンソースソフトウェアの Linux 仮想サーバー（ LVS ）を使用し、クラウドコンピューティングの要件に応じて、いくつかのカスタマイズを行っています。\nレイヤ 7 SLB は、ロードバランシングを実現するために Tengine を使用しています。 Tengine、Nginx に基づいて Web サーバープロジェクトは、多量トラフィックのウェブサイトに対応する機能を追加しています。\n  [⬆ 目次へ]\n SLBのアクセスログについて SLBのレイヤ7のアクセスログは提供しています。\nアクセスログの取得は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/85974.htm\n   [⬆ 目次へ]\n SLBのスペック変更方法と業務影響について コンソールにて、SLBのスペック変更をオンラインで実施することができます。また、トラフィックが流れている状態でAPIよりSLBのスペックを変更することもできます。\nただし、スペックを変更している時に、SLBサービスが中断されることあります。スペックの変更が完了になると、SLBが自動的に再開します。\nなお、SLBのスペック変更は「パフォーマンス専有型」から「パフォーマンス専有型」へのインスタンススペック変更、もしくは、「パフォーマンス共通型」から「パフォーマンス専有型」へのインスタンススペック変更となります。「パフォーマンス専有型」から「パフォーマンス共通型」へのスペック変更はできません。\n スペックの変更は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/85942.htm\n   [⬆ 目次へ]\n VServerグループとマスタースレーブグループの違いについて Vserverグループを利用した場合、ディレクトリ転送機能を利用できます。\n転送設定されてないディレクトリの場合、デフォルトバックエンドサーバーに分散されます。\nデフォルトグループまたは、Vserverグループにて重みを0に設定してもマスタースレーブ構成になりませんので、マスタースレーブグループを利用する必要があります。\nVServerグループは下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/85964.htm\nマスタースレーブグループは下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/85965.htm\n   [⬆ 目次へ]\n サードパーティ証明書のアップロード方法について SLBにサードパーティ証明書をアップロードすることができます。\nアップロード方法は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/85971.htm\n   [⬆ 目次へ]\n SLB関連の各APIのスロットリング上限について SLBでは、AccessKey１つあたりのAPI呼び出し回数を１日に5000回まで制限されます。\nServer Load Balancer プロダクトの制限は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/32459.htm\n   [⬆ 目次へ]\n SLBの接続要求のタイムアウト時間について 接続要求のタイムアウト時間については、指定したタイムアウト期間中にバックエンドサーバーからレスポンスがない場合、Server Load Balancer は待機を止め、エラーコード HTTP 504 をクライアントに送信します。\nこの値を「60（秒）」とした場合は、「バックエンドサーバーからのレスポンス待ち時間」の最大値が60秒となります。\n尚、接続要求（リクエスト)のタイムアウト期間は秒単位で設定すすることができ、有効値は 1〜180となります。\n「接続要求のタイムアウト時間」を「60（秒）」にて作成したSLBに接続しているクライアントが10秒で接続を閉じた場合、SLBとバックエンドサーバーの間のコネクションは接続された状態となります。\n尚、同じメニュー内に「接続アイドルのタイムアウト時間」を設定する項目があります。 こちらは接続のアイドルタイムアウトを秒単位で指定し（有効値: 1～60）、指定したタイムアウト期間中にリクエストが受信されない場合は、Server Load Balancer はいったん接続を閉じ、次のリクエストが入ってきたら接続を再開します。\n  [⬆ 目次へ]\n SLBスペック変更に伴うサービス切断について SLBのタイプ変更時には、IPアドレスの変更はありませんが、パフォーマンス共有型から各パフォーマンス専有型に変更する際に、サービスは 10〜30 秒間切断することがございます。\nなお、パフォーマンス専有型の上位タイプへご変更の際は、サービスの切断は発生いたしません。\nスペック変更は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/85942.htm\n   [⬆ 目次へ]\nネットワーク  パブリックSLBとプライベートSLBの違いについて パブリックSLBはインターネットからのリクエストを受け取るため、パブリックIPアドレスを提供しています。AlibabaCloudの仕様として、パブリックSLBがVPC内にあるバックエンドECSと通信できますが、該当VPCのプライベートIPアドレスを持っていません。\nプライベートSLBはパブリックIPアドレスを提供しておらず、Alibaba Cloud イントラネットからのリクエストのみ受信できます。AlibabaCloudの仕様として、プライベートSLBはVPCのプライベートIPを持っています。 なお、プライベートSLBにEIPを付与することにより、パブリックSLBとして機能することもできます。\n  [⬆ 目次へ]\n パブリックSLBとバックエンドECS間の通信仕様について パブリックSLBとバックエンドECS間はプロクシ通信となります。該当通信は、ECSのセキュリティグループで遮断できない仕様となります。\nSLBのアーキテクチャは下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/27544.htm\n   [⬆ 目次へ]\n パブリックIPとプライベートIP付きSLBの作成方法について パブリックSLBにプライベートIPがない仕様に対して、プライベートIPとパブリックIP両方が必要の場合、プライベートSLBにEIPをバインド機能を利用して実現できます。\n作成手順\n1. 先にイントラネット型のSLBを作成します。\n2. 作成したSLBにEIPをバインドします。\n  [⬆ 目次へ]\n ホワイトリストとブラックリストについて SLBはホワイトリストとブラックリスト方式でアクセスを制御しています。\nホワイトリストとブラックリストの設定方法は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/85979.htm\n   [⬆ 目次へ]\n SLBのインバウンド/アウトバウンド帯域幅について SLBのインターネット通信帯域幅はコンソール上で表示されている値に準じます。\n日本リージョン：インバウンド: 1024Mbps、アウトバウンド: 1024Mbps\n中国リージョン：インバウンド: 5120Mbps、アウトバウンド: 5120Mbps\n  [⬆ 目次へ]\n 証明書をSLB側とECS側に設置の違いについて 証明書の設置場所により、SSL通信空間は違います。\n証明書をSLB側に設置：　クライアント \u0026mdash;\u0026gt; SLB の間の通信はHTTPSで行います。(SLB\u0026ndash;\u0026gt;ECSはHTTPで行います。)\n証明書をECS側に設置： SLB \u0026mdash;\u0026gt; バックエンドECS の間の通信はHTTPSで行います。\nなお、証明書をSLB側に設置した場合、SLBとECS間にHTTP通信のみ設定可能な仕様になります。\n  [⬆ 目次へ]\n TCP over SSLの対応について 日本サイトのSLB現在レイヤー4のTCP over SSLを対応していません。SSL通信が必要な場合、\u0008レイヤー7のHTTPSを利用する必要があります。\n  [⬆ 目次へ]\n SLBのTLSバージョン選択機能について SLBにHTTPSリスナーを利用する場合、利用可能のTLSバージョンを選択することが\u0008可能です。\n低いバージョンを利用すると互換性が良いですが、ROBOT Attack のような脆弱性を対応するためには、TLSセキュリティポリシーで以下のいづれかを選択しする必要があります\n尚、この機能は「パファーマンス共有タイプSLB」が対象外となります。\ntls_cipher_policy_1_2_strict\ntls_cipher_policy_1.2_strict_with_1_3\n   [⬆ 目次へ]\n負荷分散  ラウンドロビン利用時に分散されない事象について SLBの仕様上、セッションの保持時間内に再度SLBアクセスを実施すると 保持されているセッションにアクセスするため、重みと剥離してアクセスが偏ったことがあります。\n実際にセッションの切り替えを確認する方法は下記となります。\n・リスナー設定（HTTP）の場合 リスナー設定で「セッションの保持」を無効にし、リロードすることで確認できます。\n・リスナー設定（TCP）の場合 リスナー設定の「接続タイムアウト」で最小値の10秒と設定し、10秒以上の間隔でリロードすることで確認できます。\n  [⬆ 目次へ]\n バックエンドECSの重み設定について SLBのバックエンドECSの重みの仕組みは下記となります。\n例えば ECS インスタンス A の重みを 10 に設定し、ECS インスタンス B の重みを 100 に設定した場合、インスタンス A には総アクセス数の 10/(10+100)％ が転送され、インスタンス B は 100/(10+100)％ が転送されます。\n   [⬆ 目次へ]\n APIでVserverグループ追加時の引数書き方について APIでVServerグループを操作する際に、引数に「\\」を利用する必要がります。\n■バックエンドサーバを追加\naliyun slb AddBackendServers \u0026ndash;RegionId ap-northeast-1 \u0026ndash;LoadBalancerId SLB_ID \u0026ndash;BackendServers [{\\\u0026ldquo;ServerId\\\u0026rdquo;:\\\u0026ldquo;instance_ID\\\u0026rdquo;\\,\\\u0026ldquo;Weight\\\u0026rdquo;:\\\u0026ldquo;100\\\u0026ldquo;}]\n■バックエンドサーバを削除\naliyun slb RemoveBackendServers \u0026ndash;LoadBalancerId SLB_ID \u0026ndash;BackendServers [{\\\u0026ldquo;ServerId\\\u0026rdquo;:\\\u0026ldquo;instance_ID\\\u0026rdquo;}]\n   [⬆ 目次へ]\n SLBの相互認証について SLBでは相互認証のアクセス方式に対応しています。\nなお、SLBの仕様では現在失効リストに対応していません。\n 相互認証の設定方法は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/54508.htm\n   [⬆ 目次へ]\n SLBを利用したsorryサーバーの実装方法について SLB自体はsorryサーバーの実装に対応していませんが、DNSの機能GTM(Global Traffic Management)を利用すれば、Sorryサーバーの切り替えを実現することができます。\nGTMの概要は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/86630.htm\n   [⬆ 目次へ]\nヘルスチェック  SLBのヘルスチェック頻度の仕様について SLBヘルスチェックの頻度はコンソール上で設定可能です。\nなお、監視の信頼性を向上するため、複数台の監視サーバーから同時にヘルスチェックするような仕様となっています。コンソール上のヘルスチェック間隔設定は、1台の監視サーバーに対する設定値となりますので、結果的には、設定値より多いチェックが発生してしています。\n設定方法は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/85959.htm\n   [⬆ 目次へ]\n SLBのヘルスチェック用CIDRブロックについて SLBのヘルスチェック用CIDRは下記となります。\n・100.64.0.0./10\nヘルスチェックは下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/55205.htm\n   [⬆ 目次へ]\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/faq/account/",
	"title": "アカウント",
	"tags": [],
	"description": "Alibaba Cloudのアカウント管理に関するよくある質問を紹介します。",
	"content": " 目次  アカウント  TOTP認証利用できなくなった時の対応方法について メールアドレスの変更方法について クレジットカードの変更方法について アカウント登録氏名（社名）の変更方法について コンソール自動ログアウトの仕様について   アカウント  TOTP認証利用できなくなった時の対応方法について バインドしている携帯電話を紛失したり、TOTP認証アプリケーションを削除する等、何らかの理由で認証が行えなくなった場合、バインド解除を申請することができます。\n申請方法は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/faq-detail/54827.html\n   [⬆ 目次へ]\n メールアドレスの変更方法について ログインに使用するメールアドレス（ログインアカウント）は変更することができます。\n変更方法は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/52915.html\n   [⬆ 目次へ]\n クレジットカードの変更方法について アカウントには最低1枚のクレジットカードを登録する必要があります。\nこのため、クレジットカードの変更は、以下の手順で操作します。\n①新しいカードを追加\n②既存カードを削除\n変更方法は下記のドキュメントをご参照ください。\nhttps://jp.alibabacloud.com/help/doc-detail/50107.html\n   [⬆ 目次へ]\n アカウント登録氏名（社名）の変更方法について アカウントにクレジットカードを追加・有効化完了後は、コンソールから登録名（個人：姓名、法人：会社名）を変更することができません。\n変更が必要な場合、チケット起票してサポートセンターに連絡する必要があります。\nなお、法人アカウントの「担当者名（連絡先情報の姓名）」はコンソールにログイン後、下記リンクにて変更できます。（チケットを起票する必要はありません。） https://myaccount.aliyun.com/account/complete-profile#/content\n   [⬆ 目次へ]\n コンソール自動ログアウトの仕様について 操作の有無に関係なく、コンソールにログインしてから3時間経過すると、タイムアウトでセッションが切れ、自動的にログアウトされます。\n  [⬆ 目次へ]\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/011_aws-s3-to-oss/",
	"title": "AWS S3からOSSへ",
	"tags": [],
	"description": "AWS S3からOSSへデータを移植する方法を説明します。",
	"content": " はじめに \u0026nbsp; 本ページはAWS S3からAlibabaCloud OSSへデータを移植する方法をまとめます。 本ページは具体的な手法より、どんな手法があるかをメインに記載します。\nData Migration Serviceを使った移植方法 ※Data Migration Serviceは国際サイト専用のサービスです Data Migration Serviceを使った移植方法\nhttps://www.alibabacloud.com/blog/migrating-from-aws-s3-to-alibaba-cloud-oss-using-data-migration-service_594382\nVPN経由でS3からOSSへ移植 VPN経由でS3からOSSへのマイグレーション\nhttps://www.sbcloud.co.jp/entry/2018/12/03/s3-vpn-oss/\nOSSImportツール（スタンドアロン）を使った移植 OssImportのアーキテクチャと構成、ダウンロードページ\nhttps://jp.alibabacloud.com/help/doc-detail/56990.html\nAWS S3からAlibaba Cloud OSSへのマイグレーション手順\nhttps://www.sbcloud.co.jp/file/98012380859496046\nAlibabaCloudへのマイグレーション -ストレージ編-\nhttps://www.sbcloud.co.jp/entry/2018/10/31/migration_oss/\nOSSImportツール（分散モード）を使った移植（分散版） OssImportのアーキテクチャと構成、ダウンロードページ\nhttps://jp.alibabacloud.com/help/doc-detail/56990.html\nOssImport を使用したデータの移行\nhttps://jp.alibabacloud.com/help/doc-detail/59922.htm\n分散デプロイについて\nhttps://jp.alibabacloud.com/help/doc-detail/57057.htm\nemr-toolを使って移植する方法 AWS EMRにてAlibabaCloudのemr-toolをセットアップ、hdfsデータの保存先(接続先パス、エンドポイント）をAlibabaCloud OSSへ指定し移植します。\nHDFS の OSS へのバックアップ\nhttps://jp.alibabacloud.com/help/doc-detail/63822.html\nSpark分散を使った移植方法 AWS EMRにてSpark分散処理を実施、保存先(接続先パス、エンドポイント）をAlibabaCloud OSSへ指定するだけです。\n最後に AWS S3からの移植方法は様々な方法があります。ここには書いていない方法もありますので、検証次第、追記したいと思います。\nまたS3からOSSへ移植するとき、注意したいことが以下の三点です。\n S3とOSSとのNW距離（リージョンが近ければGood） NW帯域（データが多いのであれば分散で移植した方がベター） S3からの転送料金（データが多いほどOut料金が高くなります）  これを踏まえてS3からOSSへ気軽なデータ移植（Import）ができれば幸いです。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/terraform/11/autoscaling/",
	"title": "AutoScalingの作成",
	"tags": [],
	"description": "Terraformによる、Alibaba CloudのAutoscalingリソース作成方法を紹介します。",
	"content": " AlibabaCloudの基本プロダクトサービスであるAutoscalingの作成方法を解説します。\n1. AutoScaling \u0026nbsp; Auto Scaling はECSリソースの容量を自動的にスケールイン/スケールアウト調整してくれます。 ※ESSとは、SDK名やパッケージ名で用いられるAuto Scalingの略称です。（Elastic Scaling Service）\n\n2. コンポーネント \u0026nbsp; VPCは、CIDRブロック、VRouter、及びVSwitchで構成されます。\n・スケールアウト ECSリソースが増加した際、自動的にECSインスタンスが作成されるので、アクセス遅延や過度のリソース負荷を回避できます。 ・スケールイン ビジネスニーズに伴い、基盤となるECAリソースが低下した場合、自動的にECSインスタンスが削除され、リソースの無駄を省いてくれます。 ・柔軟なリカバリ 異常なECSインスタンスを検知し、自動的にリリースされ、代わりに新規ECSインスタンスが作成されます。 3. AutoScalingのTerraformについて \u0026nbsp; 本題、AutoScaling作成に移ります。以下の構成図通り、簡単なソースを作ってみます。\nresource \u0026quot;alicloud_ess_scaling_group\u0026quot; \u0026quot;scaling\u0026quot; { min_size = 2 max_size = 10 scaling_group_name = \u0026quot;tf-scaling\u0026quot; vswitch_ids=[\u0026quot;${alicloud_vswitch.vsw. *.id}\u0026quot;] loadbalancer_ids = [\u0026quot;${alicloud_slb.slb. *.id}\u0026quot;] removal_policies = [\u0026quot;OldestInstance\u0026quot;, \u0026quot;NewestInstance\u0026quot;] depends_on = [\u0026quot;alicloud_slb_listener.http\u0026quot;] } resource \u0026quot;alicloud_ess_scaling_configuration\u0026quot; \u0026quot;config\u0026quot; { scaling_group_id = \u0026quot;${alicloud_ess_scaling_group.scaling.id}\u0026quot; image_id = \u0026quot;ubuntu_140405_64_40G_cloudinit_20161115.vhd\u0026quot; instance_type = \u0026quot;ecs.n2.small\u0026quot; security_group_id = \u0026quot;${alicloud_security_group.default.id}\u0026quot; active=true enable=true user_data = \u0026quot;#! /bin/bash\\necho \\\u0026quot;Hello, World\\\u0026quot; \u0026gt; index.html\\nnohup busybox httpd -f -p 8080\u0026amp;\u0026quot; internet_max_bandwidth_in=10 internet_max_bandwidth_out= 10 internet_charge_type = \u0026quot;PayByTraffic\u0026quot; force_delete= true } resource \u0026quot;alicloud_ess_scaling_rule\u0026quot; \u0026quot;rule\u0026quot; { scaling_group_id = \u0026quot;${alicloud_ess_scaling_group.scaling.id}\u0026quot; adjustment_type = \u0026quot;TotalCapacity\u0026quot; adjustment_value = 2 cooldown = 60 }  AutoScalingを作成する時はalicloud_ess_scaling_group、alicloud_ess_scaling_configuration、alicloud_ess_scaling_ruleの３つの組み合わせが必要になります。\nalicloud_ess_scaling_group 同じアプリケーションシナリオを持つECSインスタンスにてAutoScalingグループリソースを提供するために必要なパラメータです。グループ内のECSインスタンスの最大数と最小数、関連付けられたSLB、RDSインスタンス、およびその他の属性を定義します。\n min_size - （必須）スケーリンググループ内のECSインスタンスの最小数。 max_size - （必須）スケーリンググループ内のECSインスタンスの最大数。 scaling_group_name - （オプション）スケーリンググループに表示される名前。 vswitch_ids - （オプション）ecsインスタンスが起動されるVSwitchのID。 loadbalancer_ids - （オプション）スケーリンググループでServer Load Balancerインスタンスが指定されている場合、スケーリンググループは自動的にそのECSインスタンスをServer Load Balancerインスタンスに接続します。 removal_policies - （オプション）RemovalPolicyは、複数の削除候補が存在する場合にスケーリンググループから削除するECSインスタンスを選択するために使用されます。  他に入力パラメータ、出力パラメータがいくつかありますので、こちらも是非参照してみてください。 https://www.terraform.io/docs/providers/alicloud/r/ess_scaling_group.html\nalicloud_ess_scaling_configuration alicloud_ess_scaling_configurationはAutoScalingを設定するパラメータです。\n scaling_group_id - （必須）スケーリングルールのスケーリンググループのID。 image_id - （オプション）ECSインスタンスのイメージID。 instance_type - （オプション）ECSインスタンスタイプ。 active - （オプション）指定されたスケーリンググループの現在のスケーリング設定をアクティブにするかどうか。デフォルトはfalse。 enable - （オプション）現在のスケーリング設定が属する指定されたスケーリンググループを有効にするかどうか。 internet_max_bandwidth_in - （オプション）パブリックネットワークからの最大着信帯域幅。 internet_max_bandwidth_out - （オプション）パブリックネットワークからの最大発信帯域幅。  他に入力パラメータ、出力パラメータがいくつかありますので、こちらも是非参照してみてください。 https://www.terraform.io/docs/providers/alicloud/r/ess_scaling_configuration.html\nalicloud_ess_scaling_rule AutoScalingのルールリソースを設定するパラメータです。\n scaling_group_id - （必須）スケーリングルールのスケーリンググループのID。 adjustment_type - （必須）スケーリングルールの調整モード。 adjustment_value - （必須）スケーリングルールの調整値。 cooldown - （オプション）スケーリングルールのクールダウン時間。  \n以下にAutoScalingの実際のサンプルを入れていますので、こちらも参照してみてください。\nexample: オートスケーリング\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/012_idc-to-oss/",
	"title": "IDCからOSSへ",
	"tags": [],
	"description": "IDCオンプレミスからOSSへデータを移植する方法を説明します。",
	"content": " はじめに \u0026nbsp; 本ページはIDCからAlibabaCloud OSSへデータを移植する方法をまとめます。 本ページは具体的な手法より、どんな手法があるかをメインに記載します。\nExpressConnectを使用した方法 物理接続を介したオンプレミス IDC からの VPC への接続\nhttps://jp.alibabacloud.com/help/doc-detail/44844.htm\nHybrid Cloud Storage Arrayを使用した方法 ※ Hybrid Cloud Storage Arrayは国際サイトのみ提供となります。\nHybrid Cloud Storage Array\nhttps://www.alibabacloud.com/product/storage-array\nオンプレミスとのクロスレプリケーションによるバックアップ方法\nhttps://medium.com/@Alibaba_Cloud/hybrid-cloud-storage-cross-cloud-replication-5b5a3dee8ff1\nOSSImport（スタンドアロン）を使用した方法 OssImportのアーキテクチャと構成、ダウンロードページ\nhttps://jp.alibabacloud.com/help/doc-detail/56990.html\nOssImport を使用したデータの移行\nhttps://jp.alibabacloud.com/help/doc-detail/59922.html\nAlibabaCloudへのマイグレーション -ストレージ編-\nhttps://www.sbcloud.co.jp/entry/2018/10/31/migration_oss/\nemr-toolを使って移植する方法 IDCオンプレミスにてAlibabaCloudのemr-toolをセットアップ、hdfsデータの保存先(接続先パス、エンドポイント）をAlibabaCloud OSSへ指定して移植します。\nHDFS の OSS へのバックアップ\nhttps://jp.alibabacloud.com/help/doc-detail/63822.html\nSpark分散を使った移植方法 IDCオンプレミス側にてSpark分散処理を実施、そのとき保存先（接続先）パスをAlibabaCloud OSSへ指定するだけです。\n最後に IDCオンプレミスからの移植方法はAWS S3と同様、様々な方法があります。ここには書いていない方法もありますので、検証次第、追記したいと思います。\nまたIDCからOSSへ移植するとき、注意したいことが以下の三点です。\n IDCオンプレミスとOSSとのNW距離（リージョンが近ければGood） NW帯域（データが多いのであれば分散で移植した方がベター）  これを踏まえてIDCオンプレミスからOSSへ気軽なデータ移植（Import）ができれば幸いです。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/terraform/12/oss/",
	"title": "OSSの作成",
	"tags": [],
	"description": "Terraformによる、Alibaba CloudのObject Storage Serviceリソース作成方法を紹介します。",
	"content": " AlibabaCloudの基本プロダクトサービスであるObject Storage Serviceの作成方法を解説します。\n1. OSS \u0026nbsp; Object Storage Service （OSS）は、クラウド内の任意の量のデータの保存、バックアップ、およびアーカイブを可能にするストレージサービスです。\n\n2. コンポーネント \u0026nbsp; OSSはTerraform モジュールを使用して、バケットとオブジェクトを管理できます。 例として、\n バケット管理機能 バケットの作成 バケットの ACL を設定 バケットに CORS (Cross-Origin Resource Sharing) を設定 バケットのログ記録を設定 バケットの静的 Web サイトホスティングを設定 バケットのリファラを設定 バケットのライフサイクルルールを設定 オブジェクト管理機能 オブジェクトをアップロード オブジェクトのサーバー側の暗号化を設定 オブジェクトに ACL を設定 オブジェクトメタを設定  などが上げられます。\n\n3. OSSのTerraformについて \u0026nbsp; 本題、OSS作成に移ります。プライベートバケットを作成するという簡単なソースを作ってみます。\nresource \u0026quot;alicloud_oss_bucket\u0026quot; \u0026quot;bucket-acl\u0026quot;{ bucket = \u0026quot;bucket-170309-acl\u0026quot; acl = \u0026quot;private\u0026quot; }  alicloud_oss_bucket  bucket - （オプション）バケットの名前。 acl - （任意）ACL。デフォルトは \u0026ldquo;private\u0026rdquo;。  他、OSSに関してはalicloud_oss_bucketだけで色々なリソース作成が可能です。例えば以下の例があります。\n\n静的Webサイト\nresource \u0026quot;alicloud_oss_bucket\u0026quot; \u0026quot;bucket-website\u0026quot; { bucket = \u0026quot;bucket-170309-website\u0026quot; website = { index_document = \u0026quot;index.html\u0026quot; error_document = \u0026quot;error.html\u0026quot; } }  \nロギングを有効化\nresource \u0026quot;alicloud_oss_bucket\u0026quot; \u0026quot;bucket-target\u0026quot;{ bucket = \u0026quot;bucket-170309-acl\u0026quot; acl = \u0026quot;public-read\u0026quot; } resource \u0026quot;alicloud_oss_bucket\u0026quot; \u0026quot;bucket-logging\u0026quot; { bucket = \u0026quot;bucket-170309-logging\u0026quot; logging { target_bucket = \u0026quot;${alicloud_oss_bucket.bucket-target.id}\u0026quot; target_prefix = \u0026quot;log/\u0026quot; } }  \n参照元の構成確認\nresource \u0026quot;alicloud_oss_bucket\u0026quot; \u0026quot;bucket-referer\u0026quot; { bucket = \u0026quot;bucket-170309-referer\u0026quot; acl = \u0026quot;private\u0026quot; referer_config { allow_empty = false referers = [\u0026quot;http://www.aliyun.com\u0026quot;, \u0026quot;https://www.aliyun.com\u0026quot;] } }  \nOSSライフサイクルルールの設定\nresource \u0026quot;alicloud_oss_bucket\u0026quot; \u0026quot;bucket-lifecycle\u0026quot; { bucket = \u0026quot;bucket-170309-lifecycle\u0026quot; acl = \u0026quot;public-read\u0026quot; lifecycle_rule { id = \u0026quot;rule-days\u0026quot; prefix = \u0026quot;path1/\u0026quot; enabled = true expiration { days = 365 } } lifecycle_rule { id = \u0026quot;rule-date\u0026quot; prefix = \u0026quot;path2/\u0026quot; enabled = true expiration { date = \u0026quot;2018-01-12\u0026quot; } } }  \nバケットのアクセスポリシー設定\nresource \u0026quot;alicloud_oss_bucket\u0026quot; \u0026quot;bucket-policy\u0026quot; { bucket = \u0026quot;bucket-170309-policy\u0026quot; acl = \u0026quot;private\u0026quot; policy = \u0026lt;\u0026lt;POLICY {\u0026quot;Statement\u0026quot;: [{\u0026quot;Action\u0026quot;: [\u0026quot;oss:PutObject\u0026quot;, \u0026quot;oss:GetObject\u0026quot;, \u0026quot;oss:DeleteBucket\u0026quot;], \u0026quot;Effect\u0026quot;:\u0026quot;Allow\u0026quot;, \u0026quot;Resource\u0026quot;: [\u0026quot;acs:oss:*:*:*\u0026quot;]}], \u0026quot;Version\u0026quot;:\u0026quot;1\u0026quot;} POLICY }  \n低コストアクセスソリューション（IA）を実施\nresource \u0026quot;alicloud_oss_bucket\u0026quot; \u0026quot;bucket-storageclass\u0026quot;{ bucket = \u0026quot;bucket-170309-storageclass\u0026quot; storage_class = \u0026quot;IA\u0026quot; }  \nバケットにて暗号化ルールを付与\nresource \u0026quot;alicloud_oss_bucket\u0026quot; \u0026quot;bucket-sserule\u0026quot;{ bucket = \u0026quot;bucket-170309-sserule\u0026quot; acl = \u0026quot;private\u0026quot; server_side_encryption_rule { sse_algorithm = \u0026quot;AES256\u0026quot; } }  \nバケットにタグを付与\nresource \u0026quot;alicloud_oss_bucket\u0026quot; \u0026quot;bucket-tags\u0026quot;{ bucket = \u0026quot;bucket-170309-tags\u0026quot; acl = \u0026quot;private\u0026quot; tags { key1 = \u0026quot;value1\u0026quot; key2 = \u0026quot;value2\u0026quot; } }  \nバケットのバージョニングを有効化\nresource \u0026quot;alicloud_oss_bucket\u0026quot; \u0026quot;bucket-versioning\u0026quot;{ bucket = \u0026quot;bucket-170309-versioning\u0026quot; acl = \u0026quot;private\u0026quot; versioning { status = \u0026quot;Enabled\u0026quot; } }  他に入力パラメータ、出力パラメータがいくつかありますので、こちらも是非参照してみてください。 https://www.terraform.io/docs/providers/alicloud/r/oss_bucket.html\n\n以下にOSSの実際のサンプルを入れていますので、こちらも参照してみてください。\nexample: Webアプリケーションの構築\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/013_apache-spark-to-oss/",
	"title": "ApacheSpark（Batch）からOSSへ",
	"tags": [],
	"description": "ApacheSpark（Batch）からOSSへデータを集約する方法を説明します。",
	"content": " はじめに \u0026nbsp; 本章はApache Spark（Batch）を使ってAlibabaCloud OSSへデータを送ります。ゴールとしては以下のような構成図になります。\nApacheSparkでやる理由 \u0026nbsp; 別途、Apache Sparkとは何かを説明しました。これを使ってやる理由について説明します。 SparkはTB、PB、EB級の大量データを扱うことができます。マシン1台で処理できないデータでも、E-MapReduceとSparkを使えば分散してデータを取得・処理することができます。そのため、処理に時間がかかるものはSparkを積極的に活用することで、ビジネス上メリットを得ることができます。\n\u0026nbsp; Sparkの便利なことはIN/OUTデータソースが様々な形式へサポートしています。そのため、例えばcsvファイルをHDFS Parquetとして保存したり、MySQLやOracleのデータをHDFSとして保存、逆にOracleのデータをMySQLへ移植、HDFS_Parquetをcsvファイルへ保存することも可能です。\n   データソース text json csv parquet orc jdbc     IN ◯ ◯ ◯ ◯ ◯ ◯   OUT ◯ ◯ ◯ ◯ ◯ ◯    \n\u0026nbsp; それでは実際にSpark処理をやってみます。今回はE-MapReduceを使って実装します。 ※ECSでも実現可能。その場合、スタンドアロン（単体）での処理になります。\nSpark-Shell（対話型）で試してみる Spark Batch処理をする前に、処理の流れとしてSparl-Shellを使って説明します。以下サンプルを入れていますので、流れをみていただければと思います。\n環境について    Clustor instance Type 台数     Hadoop EMR-3.22.0 MASTER ecs.sn2.large 1    CORE ecs.sn2.large 2    [root@emr-header-1 ~]# pyspark Python 2.7.5 (default, Apr 11 2018, 07:36:10) [GCC 4.8.5 20150623 (Red Hat 4.8.5-28)] on linux2 Type \u0026#34;help\u0026#34;, \u0026#34;copyright\u0026#34;, \u0026#34;credits\u0026#34; or \u0026#34;license\u0026#34; for more information. Setting default log level to \u0026#34;WARN\u0026#34;. To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). 19/08/15 15:25:28 WARN HiveConf: HiveConf of name hive.server2.enable.impersonation does not exist 19/08/15 15:25:29 WARN Utils: Service \u0026#39;SparkUI\u0026#39; could not bind on port 4040. Attempting port 4041. Welcome to ____ __ / __/__ ___ _____/ /__ _\\ \\/ _ \\/ _ `/ __/ \u0026#39;_/ /__ / .__/\\_,_/_/ /_/\\_\\ version 2.4.3 /_/ Using Python version 2.7.5 (default, Apr 11 2018 07:36:10) SparkSession available as \u0026#39;spark\u0026#39;. \u0026gt;\u0026gt;\u0026gt; a = [1, 2, 3, 4, 5] \u0026gt;\u0026gt;\u0026gt; rdd = sc.parallelize(a) \u0026gt;\u0026gt;\u0026gt; print(rdd.collect()) [1, 2, 3, 4, 5] \u0026gt;\u0026gt;\u0026gt; print(rdd.take(2)) [1, 2] \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; df = sqlContext.read.format(\u0026#34;com.databricks.spark.csv\u0026#34;).option(\u0026#34;header\u0026#34;, \u0026#34;true\u0026#34;).option(\u0026#34;inferSchema\u0026#34;, \u0026#34;true\u0026#34;).load(\u0026#34;oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/csv/yellow_tripdata_2010-08.csv\u0026#34;) 19/08/15 17:40:33 WARN HiveConf: HiveConf of name hive.server2.enable.impersonation does not exist \u0026gt;\u0026gt;\u0026gt; df.top(5) Traceback (most recent call last): File \u0026#34;\u0026lt;stdin\u0026gt;\u0026#34;, line 1, in \u0026lt;module\u0026gt; File \u0026#34;/usr/lib/spark-current/python/pyspark/sql/dataframe.py\u0026#34;, line 1300, in __getattr__ \u0026#34;\u0026#39;%s\u0026#39; object has no attribute \u0026#39;%s\u0026#39;\u0026#34; % (self.__class__.__name__, name)) AttributeError: \u0026#39;DataFrame\u0026#39; object has no attribute \u0026#39;top\u0026#39; \u0026gt;\u0026gt;\u0026gt; df.show() +---------+-------------------+-------------------+---------------+-------------+----------------+---------------+---------+------------------+-----------------+----------------+------------+-----------+---------+-------+----------+------------+------------+ |vendor_id| pickup_datetime| dropoff_datetime|passenger_count|trip_distance|pickup_longitude|pickup_latitude|rate_code|store_and_fwd_flag|dropoff_longitude|dropoff_latitude|payment_type|fare_amount|surcharge|mta_tax|tip_amount|tolls_amount|total_amount| +---------+-------------------+-------------------+---------------+-------------+----------------+---------------+---------+------------------+-----------------+----------------+------------+-----------+---------+-------+----------+------------+------------+ | CMT|2010-08-25 16:55:54|2010-08-25 17:02:51| 1| 0.9| -73.990554| 40.750067| 1| N| -73.984793| 40.748424| CSH| 5.3| 1.0| 0.5| 0.0| 0.0| 6.8| | CMT|2010-08-25 16:49:27|2010-08-25 17:02:15| 2| 1.8| -73.960153| 40.766382| 1| N| -73.980571| 40.765318| CSH| 8.5| 1.0| 0.5| 0.0| 0.0| 10.0| | CMT|2010-08-25 18:56:44|2010-08-25 19:03:56| 2| 1.8| -73.960912| 40.764876| 1| N| -73.971936| 40.743987| CSH| 7.3| 1.0| 0.5| 0.0| 0.0| 8.8| | CMT|2010-08-25 17:42:53|2010-08-25 17:52:00| 1| 1.6| -73.978349| 40.753755| 1| N| -73.994618| 40.734713| CSH| 6.9| 1.0| 0.5| 0.0| 0.0| 8.4| | CMT|2010-08-25 18:33:36|2010-08-25 18:46:43| 1| 5.9| -74.011604| 40.707754| 1| N| -73.96428| 40.75641| CSH| 15.3| 1.0| 0.5| 0.0| 0.0| 16.8| | CMT|2010-08-25 18:26:02|2010-08-25 18:33:01| 1| 1.5| 0.0| 0.0| 1| N| 0.0| 0.0| CSH| 6.1| 1.0| 0.5| 0.0| 0.0| 7.6| | CMT|2010-08-25 09:39:42|2010-08-25 09:48:56| 1| 1.6| -73.970818| 40.788291| 1| N| -73.952251| 40.789791| CSH| 7.3| 0.0| 0.5| 0.0| 0.0| 7.8| | CMT|2010-08-25 07:10:51|2010-08-25 07:17:42| 1| 1.6| -73.999173| 40.732382| 1| N| -74.010951| 40.716006| CRD| 6.5| 0.0| 0.5| 1.0| 0.0| 8.0| | CMT|2010-08-25 07:09:54|2010-08-25 07:24:21| 1| 3.4| -73.925234| 40.744107| 1| N| -73.976631| 40.757641| CRD| 11.3| 0.0| 0.5| 2.36| 0.0| 14.16| | CMT|2010-08-25 18:50:13|2010-08-25 18:51:46| 1| 0.3| -73.964992| 40.769131| 1| N| -73.968243| 40.765135| CSH| 3.3| 1.0| 0.5| 0.0| 0.0| 4.8| | CMT|2010-08-24 18:29:43|2010-08-24 18:38:16| 1| 1.7| -73.97112| 40.762027| 1| N| -73.949569| 40.77218| CSH| 7.3| 1.0| 0.5| 0.0| 0.0| 8.8| | CMT|2010-08-25 12:32:45|2010-08-25 13:18:31| 1| 21.2| -73.982377| 40.762223| 2| N| -73.789045| 40.64233| CSH| 45.0| 0.0| 0.5| 0.0| 4.57| 50.07| | CMT|2010-08-25 02:12:03|2010-08-25 02:18:40| 1| 1.1| -73.984696| 40.758834| 1| N| -73.992362| 40.766537| CSH| 5.7| 0.5| 0.5| 0.0| 0.0| 6.7| | CMT|2010-08-24 22:55:39|2010-08-24 22:57:09| 2| 0.5| -73.970982| 40.752929| 1| N| -73.975142| 40.745102| CSH| 3.3| 0.5| 0.5| 0.0| 0.0| 4.3| | CMT|2010-08-25 17:20:06|2010-08-25 17:27:30| 1| 2.6| -73.962069| 40.759348| 1| N| -73.936891| 40.792298| CSH| 8.1| 1.0| 0.5| 0.0| 0.0| 9.6| | CMT|2010-08-25 19:00:12|2010-08-25 19:03:10| 2| 0.5| -73.945084| 40.778577| 1| N| -73.953714| 40.781227| CSH| 3.7| 1.0| 0.5| 0.0| 0.0| 5.2| | CMT|2010-08-25 18:33:42|2010-08-25 18:38:26| 2| 0.7| -73.994903| 40.731576| 1| N| -73.987274| 40.729054| CSH| 4.5| 1.0| 0.5| 0.0| 0.0| 6.0| | CMT|2010-08-24 23:14:00|2010-08-24 23:20:22| 1| 0.9| -73.985465| 40.760003| 1| N| -73.997547| 40.75638| CRD| 5.3| 0.5| 0.5| 1.2| 0.0| 7.5| | CMT|2010-08-24 23:44:16|2010-08-24 23:52:19| 1| 2.2| -74.011916| 40.706786| 1| N| -74.003883| 40.732755| CSH| 7.7| 0.5| 0.5| 0.0| 0.0| 8.7| | CMT|2010-08-24 18:27:22|2010-08-24 18:46:01| 1| 3.2| -73.955509| 40.779722| 1| N| -73.984703| 40.739615| CRD| 12.1| 1.0| 0.5| 3.4| 0.0| 17.0| +---------+-------------------+-------------------+---------------+-------------+----------------+---------------+---------+------------------+-----------------+----------------+------------+-----------+---------+-------+----------+------------+------------+ only showing top 20 rows \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; df.createOrReplaceTempView(\u0026#34;nytaxi\u0026#34;) \u0026gt;\u0026gt;\u0026gt; nytaxi_list_df = spark.sql(\u0026#34;SELECT pickup_datetime, dropoff_datetime, passenger_count, pickup_longitude, pickup_latitude FROM nytaxi WHERE passenger_count = 2\u0026#34;) \u0026gt;\u0026gt;\u0026gt; nytaxi_list_df.show() +-------------------+-------------------+---------------+----------------+---------------+ | pickup_datetime| dropoff_datetime|passenger_count|pickup_longitude|pickup_latitude| +-------------------+-------------------+---------------+----------------+---------------+ |2010-08-25 16:49:27|2010-08-25 17:02:15| 2| -73.960153| 40.766382| |2010-08-25 18:56:44|2010-08-25 19:03:56| 2| -73.960912| 40.764876| |2010-08-24 22:55:39|2010-08-24 22:57:09| 2| -73.970982| 40.752929| |2010-08-25 19:00:12|2010-08-25 19:03:10| 2| -73.945084| 40.778577| |2010-08-25 18:33:42|2010-08-25 18:38:26| 2| -73.994903| 40.731576| |2010-08-24 19:35:31|2010-08-24 19:39:21| 2| -74.004164| 40.742297| |2010-08-24 17:47:44|2010-08-24 17:56:28| 2| -73.999218| 40.718953| |2010-08-23 22:29:54|2010-08-23 22:48:10| 2| -73.967677| 40.744444| |2010-08-26 12:19:23|2010-08-26 12:28:15| 2| -73.979934| 40.764332| |2010-08-25 19:04:37|2010-08-25 19:12:22| 2| -73.970949| 40.759029| |2010-08-25 23:20:24|2010-08-25 23:24:01| 2| -73.990314| 40.740772| |2010-08-25 21:42:37|2010-08-25 21:52:28| 2| -73.982866| 40.742284| |2010-08-26 00:08:44|2010-08-26 00:24:50| 2| -73.994291| 40.751075| |2010-08-23 22:47:25|2010-08-23 22:57:31| 2| -73.996476| 40.744429| |2010-08-23 17:09:19|2010-08-23 17:11:13| 2| -73.958722| 40.772043| |2010-08-24 21:12:04|2010-08-24 21:27:40| 2| -74.002412| 40.730339| |2010-08-24 20:08:02|2010-08-24 20:12:07| 2| -73.992127| 40.749433| |2010-08-25 02:35:51|2010-08-25 02:38:27| 2| -73.991222| 40.745008| |2010-08-25 21:50:25|2010-08-25 21:55:20| 2| -73.964557| 40.763893| |2010-08-23 19:52:19|2010-08-23 19:58:15| 2| 0.0| 0.0| +-------------------+-------------------+---------------+----------------+---------------+ only showing top 20 rows \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; \u0026gt;\u0026gt;\u0026gt; nytaxi_list_df.coalesce(1).write.format(\u0026#39;com.databricks.spark.csv\u0026#39;).option(\u0026#34;overwrite\u0026#34;, \u0026#34;true\u0026#34;).save(\u0026#39;oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/from_spark_csv/\u0026#39;) \u0026gt;\u0026gt;\u0026gt;  結果、OSSに加工処理したDataFrameがcsvとして保存されました。 ここでポイントとなる点は以下の通りです。\n既存データからDataFrameの作成 途中、”com.databricks.spark.csv” はSparkを生み出した会社「databricks」によるフレームワークを使って処理になります。詳しくはこちらを参照ください。 https://databricks.com/spark/about\n# 単数のcsvファイルをDF（DataFrame）へ読み込む df = spark.read.csv(\u0026#34;oss://my-backet/folder/data.csv\u0026#34;) # 複数のcsvファイルをまとめてDF（DataFrame）へ読み込む df = spark.read.csv(\u0026#34;oss://my-backet/folder/*.csv\u0026#34;) # 単数のcsvファイルをDF（DataFrame）へ読み込む（高速処理） df = sqlContext.read.format(\u0026#34;com.databricks.spark.csv\u0026#34;).option(\u0026#34;header\u0026#34;, \u0026#34;true\u0026#34;).option(\u0026#34;inferSchema\u0026#34;, \u0026#34;true\u0026#34;).load(\u0026#34;oss://my-backet/folder/data.csv\u0026#34;) # 単数のjson形式をDF（DataFrame）へ読み込む。先にフィールド名を指定する必要があります fields = [StructField(\u0026#39;pickup_datetime\u0026#39;, StringType(), True), StructField(\u0026#39;dropoff_datetime\u0026#39;, StringType(), True), StructField(\u0026#39;passenger_count\u0026#39;, IntegerType(), True)] df = spark.read.json(\u0026#34;oss://my-backet/folder/*.json\u0026#34;, schema=StructType(fields)) # parquet形式をDF（DataFrame）へ読み込む df = spark.read.parquet(\u0026#34;oss://my-backet/folder/\u0026#34;) # mySQLをjdbc経由でDF（DataFrame）へ読み込む df = sqlcontext.read.format(\u0026#34;jdbc\u0026#34;).option(\u0026#34;url\u0026#34;, \u0026#34;jdbc:mysql://test:3306/table\u0026#34;).option(\u0026#34;driver\u0026#34;, \u0026#34;com.mysql.jdbc.Driver\u0026#34;).option(\u0026#34;dbtable\u0026#34;, \u0026#34;test_table\u0026#34;).option(\u0026#34;user\u0026#34;, \u0026#34;root\u0026#34;).option(\u0026#34;password\u0026#34;, \u0026#34;xxxxx\u0026#34;).load() \n既存DataFrameからOSSへの出力 # DF（DataFrame）を単数のcsvファイルとして保存 df = spark.write.csv(\u0026#34;oss://my-backet/folder/data.csv\u0026#34;) # DF（DataFrame）を複数ののcsvファイルとして保存 df = spark.write.csv(\u0026#34;oss://my-backet/folder/*.csv\u0026#34;) # DFを単数のcsvファイルとして保存（高速処理） df.coalesce(1).write.format(\u0026#39;com.databricks.spark.csv\u0026#39;).option(\u0026#34;overwrite\u0026#34;, \u0026#34;true\u0026#34;).save(\u0026#39;oss://my-backet/folder/\u0026#39;) # parquet形式をDF（DataFrame）へ読み込む df = spark.read.parquet(\u0026#34;oss://my-backet/folder/\u0026#34;) # MySQLをjdbc経由でDF（DataFrame）へ読み込む df.write.format(\u0026#34;jdbc\u0026#34;).option(\u0026#34;url\u0026#34;, \u0026#34;jdbc:mysql://test:3306/table\u0026#34;).option(\u0026#34;dbtable\u0026#34;, \u0026#34;test_table\u0026#34;).option(\u0026#34;user\u0026#34;, \u0026#34;root\u0026#34;).option(\u0026#34;password\u0026#34;, \u0026#34;xxxxx\u0026#34;).save() \nSpark（batch型）を作成し実行する。 上記、ファイルのRead/Writeは理解できたと思いますので、これをBatchとして組み込み、実行します。 この処理はOSSにあるnyc-taxi CSVファイル全データをOSSのHDFS_Parquetへ変換し保存するものです。 OSSには以下 このようなcsvファイルがあるとします。 次に、convert2parquet.pyというPython実行ファイルを作成します。 ※ 本来はScalaでやったほうが役120倍高速ですが、解説のためにPythonで実施します。 ※ SparkによるETLはCore台数を20〜100台にするとより高速処理ができます。また1時間以内、早い時間で処理が終われば早いほどその分投資回収もできます。\n# -*- coding: utf-8 -*- from concurrent.futures import ThreadPoolExecutor, as_completed from pyspark.sql import SparkSession from pyspark.sql.types import StructType, StructField from pyspark.sql.types import DoubleType, IntegerType, StringType, TimestampType from pyspark.sql.functions import year, month, dayofmonth, col from pyspark.sql import functions as func def write2parquet(): df_add_partition.repartition(*partitionby).write.partitionBy(partitionby) .mode(\u0026#34;append\u0026#34;).parquet(output, compression=codec) input = \u0026#39;oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/csv/*.csv\u0026#39; output = \u0026#39;oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/hdfs/\u0026#39; codec = \u0026#39;snappy\u0026#39; partitionby=[\u0026#39;year\u0026#39;,\u0026#39;month\u0026#39;,\u0026#39;day\u0026#39;] # Read spark = SparkSession.builder.appName(\u0026#39;Convert2Parquet\u0026#39;).getOrCreate() struct = StructType([ StructField(\u0026#39;VendorID\u0026#39;, IntegerType(), False), StructField(\u0026#39;tpep_pickup_datetime\u0026#39;, TimestampType(), False), StructField(\u0026#39;tpep_dropoff_datetime\u0026#39;, TimestampType(), False), StructField(\u0026#39;passenger_count\u0026#39;, IntegerType(), False), StructField(\u0026#39;trip_distance\u0026#39;, DoubleType(), False), StructField(\u0026#39;RatecodeID\u0026#39;, IntegerType(), False), StructField(\u0026#39;store_and_fwd_flag\u0026#39;, StringType(), False), StructField(\u0026#39;PULocationID\u0026#39;, IntegerType(), False), StructField(\u0026#39;DOLocationID\u0026#39;, IntegerType(), False), StructField(\u0026#39;payment_type\u0026#39;, IntegerType(), False), StructField(\u0026#39;fare_amount\u0026#39;, DoubleType(), False), StructField(\u0026#39;extra\u0026#39;, DoubleType(), False), StructField(\u0026#39;mta_tax\u0026#39;, DoubleType(), False), StructField(\u0026#39;tip_amount\u0026#39;, DoubleType(), False), StructField(\u0026#39;tolls_amount\u0026#39;, DoubleType(), False), StructField(\u0026#39;improvement_surcharge\u0026#39;, DoubleType(), False), StructField(\u0026#39;total_amount\u0026#39;, DoubleType(), False) ]) df = spark.read.csv(input, header=False, mode=\u0026#34;DROPMALFORMED\u0026#34;, schema=struct) df_add_partition = (df.withColumn(\u0026#34;year\u0026#34;, year(col(\u0026#34;tpep_pickup_datetime\u0026#34;).cast(\u0026#34;timestamp\u0026#34;))) .withColumn(\u0026#34;month\u0026#34;, month(col(\u0026#34;tpep_pickup_datetime\u0026#34;).cast(\u0026#34;timestamp\u0026#34;))) .withColumn(\u0026#34;day\u0026#34;, dayofmonth(col(\u0026#34;tpep_pickup_datetime\u0026#34;).cast(\u0026#34;timestamp\u0026#34;)))) # Write futures=[] pool = ThreadPoolExecutor(1) futures.append(pool.submit(write2parquet)) for x in as_completed(futures): pass spark.stop() このファイルを以下のコマンドで実行してください。以下の例はCoreが2台の場合の例です。 ※ Spark-submit引数のより詳しい説明は別の章にて説明します。\n$ spark-submit --num-executors 85 --executor-memory 5g convert2parquet.py  実行結果、しばらくすると以下のようにHDFS Parquetファイルたちができました。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/terraform/13/rds/",
	"title": "RDSの作成",
	"tags": [],
	"description": "Terraformによる、Alibaba CloudのObject Storage Serviceリソース作成方法を紹介します。",
	"content": " AlibabaCloudの基本プロダクトサービスであるRelation Database Serviceの作成方法を解説します。\n1. RDS \u0026nbsp; Relation Database Service （RDS）は、ApsaraDB for RDS 、クラウド内の独立したデータベースサービスです。\n2. コンポーネント \u0026nbsp; ApsaraDB for RDSシリーズとしてMySQL、SQL Server、PostgreSQL、PPASがあります。\n・ApsaraDB for MySQL・・・MySQL。現状5.5、5.6、5.7をサポートしています。\n・ApsaraDB for SQL Server・・・SQL Server。2008 R2 EE、2012 のWeb/Standard/EE、2016 のWeb/Standard/EEをサポートしています。\n・ApsaraDB for PostgreSQL・・・PostgreSQL。9.4をサポートしています。\n・ApsaraDB for PPAS・・・Postgres Plus Advanced Server （ PPAS ）、Oracle Database互換性機能があります。現在バージョン 9.3 をサポートしています。\n3. RDSのTerraformについて \u0026nbsp; 本題、RDS作成に移ります。ApsaraDB for MySQLというインスタンスを作成し、databaseをセット、アカウントを作成する内容です。\nresource \u0026quot;alicloud_db_instance\u0026quot; \u0026quot;default\u0026quot; { engine = \u0026quot;MySQL\u0026quot; engine_version = \u0026quot;5.6\u0026quot; instance_type = \u0026quot;rds.mysql.t1.small\u0026quot; instance_storage = 5 vswitch_id = \u0026quot;${var.vswitch}\u0026quot; security_ips = [ \u0026quot;0.0.0.0/0\u0026quot; ] } resource \u0026quot;alicloud_db_database\u0026quot; \u0026quot;default\u0026quot; { instance_id = \u0026quot;${alicloud_db_instance.default.id}\u0026quot; name = \u0026quot;bolt_site\u0026quot; character_set = \u0026quot;utf8\u0026quot; } resource \u0026quot;alicloud_db_account\u0026quot; \u0026quot;default\u0026quot; { instance_id = \u0026quot;${alicloud_db_instance.default.id}\u0026quot; name = \u0026quot;db_user\u0026quot; password = \u0026quot;db1234\u0026quot; }  alicloud_db_instance  engine - （必須）データベースタイプ。MySQL、SQLServer、PostgreSQL、PPASのどれかを選定。 engine_version - （必須）データベースのバージョン。 instance_type - （必須）DBインスタンスタイプ。 instance_storage - （必須）DBインスタンスのストレージ容量。 vswitch_id - （必須）接続したいVSwitchのID。  他に入力パラメータ、出力パラメータがいくつかありますので、こちらも是非参照してみてください。 https://www.terraform.io/docs/providers/alicloud/r/db_instance.html\nalicloud_db_database ※ alicloud_db_database はPostgreSQL、PPASデータベースソースをサポートしていないため、別の作り方で回避する必要があります * instance_id - （必須）データベースを実行できるインスタンスのID。 * name - （必須）データベースの名前。 * character_set - （必須）文字コード。\nalicloud_db_account  instance_id - （必須）データベースを実行できるインスタンスのID。 name - （必須）アカウント。 password - （必須）アカウントに対するパスワード。  以下にRDSの実際のサンプルを入れていますので、こちらも参照してみてください。\nexample: RDSの構築と設定\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/014_apache-spark-streaming-to-oss/",
	"title": "ApacheSpark（Streaming）からOSSへ",
	"tags": [],
	"description": "ApacheSpark（Streaming）からOSSへデータを集約する方法を説明します。",
	"content": " はじめに \u0026nbsp; 本章はApache Spark（Streaming）を使ってAlibabaCloud OSSへデータを送ります。ゴールとしては以下のような構成図になります。 また、OSSにデータ収集後、E-MapReduceでHDFSへのETL処理がありますが、こちらは「OSSとE-MapReduce編」「ETL編」にて重複するため、割愛させていただきます。 （この章のゴールは外部データソースをOSSへ集約する、のみとなります）\nApache Spark Streaming とは \u0026nbsp; Apache Spark Streamingは大規模ストリーム処理フレームワークです。 Spark APIを拡張し、データサイエンティスト、エンジニアがKafka、Flume、Ignite、などのさまざまなソースからのリアルタイムデータを処理できるようにします。この処理されたデータは、OSS、MySQLなどのデータベース、ElasticSearchなどライブダッシュボードに出力できます。また、Spark Streamingは、MLlibやSpark SQLなど他のSparkコンポーネントとシームレスに統合できるので、加工処理、抽出、など様々な応用ができます。 さてPythonを使ってSpark Streamingのテストをしてみます。今回、手頃にいいデータがなかったので、TCPソースからストリームデータを作成し、その結果をOSSへ書き込むという処理を目指します。\nSocketTextStreamメソッドはTCPソース(hostname:port)からinputデータを生成、データはTCPソケットを使用して受け取とられ、UTF-8でエンコードし、¥nをデリミタとした行単位でバイトで受け取ります。 今回はAlibabaCloud E-MapReduceで実施するため、TCPソース(hostname:port)はE-MapReduceのHostname、使われてないPort 9999を使用します。\n環境について    Clustor instance Type 台数     Hadoop EMR-3.22.0 MASTER ecs.sn2.large 1    CORE ecs.sn2.large 2    E-MapReduceのHostは以下コマンドで取得します。\n[root@emr-header-1 ~]# [root@emr-header-1 ~]# hostname emr-header-1.cluster-44076 [root@emr-header-1 ~]#  続いて、Pythonソースにて、コードを記載します。\n# -*- coding:utf-8 -*- import sys from pyspark.context import SparkContext from pyspark.streaming import StreamingContext if len(sys.argv) != 3: print(\u0026#34;Usage: network_wordcount.py \u0026lt;hostname\u0026gt; \u0026lt;port\u0026gt;\u0026#34;, file=sys.stderr) exit(-1) sc = SparkContext(appName=\u0026#34;StreamingTest\u0026#34;) ssc = StreamingContext(sc, 10) lines = ssc.socketTextStream(sys.argv[1], int(sys.argv[2])) counts = lines.flatMap(lambda line: line.split(\u0026#34; \u0026#34;))\\ .map(lambda word: (word, 1))\\ .reduceByKey(lambda a, b: a+b) counts.saveAsTextFiles(\u0026#34;oss://bigdata-prod-tech/nyc-taxi/yellow_tripdata/StreamingTest/\u0026#34;, \u0026#34;txt\u0026#34;) ssc.start() ssc.awaitTermination() Pythonソースで書き込みが終わったら、別ターミナルで Netcat でつなぎます。\n$ nc -lk 9999 そのあと、以下コマンドでストリーミングを実行します\nspark-submit network_wordcount.py emr-header-1.cluster-44076 9999 これによりSparkのLogメッセージが表示され、Spark Streamingが恒久的に実施されます。\n[root@emr-header-1 ~]# [root@emr-header-1 ~]# spark-submit network_wordcount.py emr-header-1.cluster-44076 9999 19/08/15 20:40:21 INFO SparkContext: Running Spark version 2.4.3 19/08/15 20:40:21 INFO SparkContext: Submitted application: StreamingTest 19/08/15 20:40:21 INFO SecurityManager: Changing view acls to: root,* 19/08/15 20:40:21 INFO SecurityManager: Changing modify acls to: root 19/08/15 20:40:21 INFO SecurityManager: Changing view acls groups to: 〜略〜 その結果、OSSにてStreming結果（TCPソースのデータ）が出力されてることが確認できます。\nまとめ Spark Streamingはストリームデータを加工処理できるため（DStreams) 非常に便利です。ただ、Spark Streaming単体だけでは、TCPソケット接続を介してテキストデータを生成するsocketTextStream、ファイルデータを生成するtextFileStreamと、使用方法が少し限られています。そのため、これに加えてkafka、Ignite、などと連携することで更なるストリーミング応用ができます。\n参考： Spark Streamingガイド https://spark.apache.org/docs/latest/streaming-programming-guide.html\nSpark Structured Streamingガイド https://spark.apache.org/docs/latest/structured-streaming-programming-guide.html\nSpark Structured Streamingについて https://databricks.com/blog/2016/07/28/structured-streaming-in-apache-spark.html\n\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/terraform/14/ram/",
	"title": "RAMの作成",
	"tags": [],
	"description": "Terraformによる、Alibaba CloudのRAMリソース作成方法を紹介します。",
	"content": " AlibabaCloudの基本プロダクトサービスであるResource Access Managementの作成方法を解説します。\n1. RAM権限管理 \u0026nbsp; AlibabaCloudはどのサービスを利用・操作するにしろ権限が必要です。 Terraformで作成したリソースサービスにも他ユーザが操作できるように権限アタッチが必要になります。 \u0026nbsp; 本章では、AlibabaCloudサービスに対する権限付与の方法を学びます。\n\n2. Alibaba CloudのRAMについて \u0026nbsp; RAM（Resource Access Management）はユーザーID の管理とアクセス制御、権限管理のためのサービスです。RAMを使用することで、ユーザーアカウント (従業員、システム、アプリケーションなど) を作成および管理し、Alibaba Cloud アカウントのリソースに対してそのユーザーアカウントが所有する操作権限を制御できます。Terraformによるリソースを実行するときはRAMで実行権限が必須です。\n\n3. RAMロールとRAMユーザーの違い  RAMロールは仮想ID であり、固定のIDは持っていますが、ID認証情報アクセスキーを持ちません。 RAMユーザは、固定のIDとID認証アクセスキーを持つ実際のIDであり、一般的には、特定のユーザーまたはアプリケーションに対応します。  graph LR; A(\u0026#34;ポリシーサービスに\u0026lt;br\u0026gt;対する権限\u0026#34;)-.-\u0026gt;B(\u0026#34;RAMポリシーを\u0026lt;br\u0026gt;ロールにアタッチ\u0026#34;) A(\u0026#34;ポリシーサービスに\u0026lt;br\u0026gt;対する権限\u0026#34;)-.-\u0026gt;C(\u0026#34;RAMポリシーを\u0026lt;br\u0026gt;ユーザにアタッチ\u0026#34;) B(\u0026#34;RAMポリシーを\u0026lt;br\u0026gt;ロールにアタッチ\u0026#34;)-.-\u0026gt;D(\u0026#34;ロール(役割)\u0026#34;) C(\u0026#34;RAMポリシーを\u0026lt;br\u0026gt;ユーザにアタッチ\u0026#34;)-.-\u0026gt;E(\u0026#34;ユーザ(人)\u0026#34;) D(\u0026#34;ロール(役割)\u0026#34;)-.-\u0026gt;F(\u0026#34;ロール(役割)を\u0026lt;br\u0026gt;エンティティ(ECSインスタンスなど）にアタッチ\u0026#34;) A(\u0026#34;ポリシーサービスに\u0026lt;br\u0026gt;対する権限\u0026#34;)-.-\u0026gt;G(\u0026#34;RAMポリシーを\u0026lt;br\u0026gt;グループにアタッチ\u0026#34;) G(\u0026#34;RAMポリシーを\u0026lt;br\u0026gt;グループにアタッチ\u0026#34;)-.-\u0026gt;H(\u0026#34;グループ（ユーザの集まり）\u0026#34;) \u0026nbsp; RAMロールは権限が付与された実際のユーザーが引き受ける必要があります。ロールを引き受けると実際のユーザーはこのRAMロールの一時セキュリティトークンを受け取ります。これにより、この一時セキュリティトークンを使用して、ロールに許可されているリソースにアクセスできます。\n\u0026nbsp; 普段の利用時はRAMユーザで管理・運用していくのがベストプラクティスですが、Terraform利用時は基本的にAdministratorAccessが必要となります。\n4. ポリシー \u0026nbsp; 権限はポリシーで定義します。ポリシーでは「実行可能なアクション」や「操作可能なリソース」を指定でき、柔軟に権限が設定できます。\n5. ポリシードキュメント \u0026nbsp; ポリシードキュメントはJSON形式で管理しており、以下のようにまとめます。 ▼JSON 形式のポリシードキュメント\n{ \u0026quot;Statement\u0026quot;: [ { \u0026quot;Action\u0026quot;: \u0026quot;*\u0026quot;, \u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;, \u0026quot;Resource\u0026quot;: \u0026quot;*\u0026quot; } ], \u0026quot;Version\u0026quot;: \u0026quot;1\u0026quot; }  ポリシードキュメントでは、次のような要素を記述します。 * Effect - 許可する場合はAllow、許可しない場合はDeny * Resource - AlibabaCloudの操作可能なリソース・許可されたオブジェクトはなにかを指定します。たとえば ”ユーザAがリソースSampleBucketに対してGetBucket操作を実行できる” という権限付与ポリシーの場合、ResourceはSampleBucket です。 * Action - AlibabaCloudの各種サービスでどんな操作が実行できるか。サービスを個別指定することも可能。たとえば ”ユーザAがリソースSampleBucketに対してGetBucket操作を実行できる” という権限付与ポリシーの場合、ActionはGetBucket です。 * Condition - 権限付与が有効になる条件です。たとえば、”ユーザAが2018年12月31日より前にリソース SampleBucketに対してGetBucket操作を実行できる” という権限付与ポリシーの場合、Conditionは 2018年12月31日より前 です。\n他の例もみてみましょう。 ”リクエスト送信者のソースIPアドレスが 42.160.1.0であれば、SampleBucketというOSSバケットに対して読み取り専用操作を実行できる” というRAMポリシーであれば、以下リスト のようにまとめます。 ▼JSON 形式のポリシードキュメント\n{ \u0026quot;Version\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;Statement\u0026quot;: [{ \u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;, \u0026quot;Action\u0026quot;: [\u0026quot;oss:List*\u0026quot;, \u0026quot;oss:Get*\u0026quot;], \u0026quot;Resource\u0026quot;: [\u0026quot;acs:oss:*:*:samplebucket\u0026quot;, \u0026quot;acs:oss:*:*:samplebucket/*\u0026quot;], \u0026quot;Condition\u0026quot;: { \u0026quot;IpAddress\u0026quot;: { \u0026quot;acs:SourceIp\u0026quot;: \u0026quot;42.160.1.0\u0026quot; } } }] }  6. RAM ポリシー \u0026nbsp; ポリシードキュメントを保持するリソースが「RAM ポリシー」です。リストのように、ポリシー名とポリシードキュメントを設定します。\n▼リスト RAM ポリシーの定義\nresource \u0026quot;alicloud_ram_policy\u0026quot; \u0026quot;terraform_example\u0026quot; { name = \u0026quot;terraform_example\u0026quot; policy = data.alicloud_ram_policy_document.allow_describe_regions.json }  7. RAM ポリシーの作成 \u0026nbsp; ここまではRAMポリシーの基本的なことを記載しました。それではTerraformによるRAMポリシーの作成をします。 例として、以下リストのように test_policy というRAMポリシー名で、mybucket というOSSバケットに対して読み取り専用操作を実行できるという権限ルールを新しく作成します。\n▼リスト test_policy RAM ポリシーの定義\nresource \u0026quot;alicloud_ram_policy\u0026quot; \u0026quot;policy\u0026quot; { name = \u0026quot;test_policy\u0026quot; statement = [ { effect = \u0026quot;Allow\u0026quot; action = [ \u0026quot;oss:ListObjects\u0026quot;, \u0026quot;oss:GetObject\u0026quot; ] resource = [ \u0026quot;acs:oss:*:*:mybucket\u0026quot;, \u0026quot;acs:oss:*:*:mybucket/*\u0026quot; ] } ] description = \u0026quot;this is a policy test\u0026quot; force = true }  上記で記載したRAMポリシー以外にオプション（任意）で他ルールらパラメータや構成を指定することもできます。\n name - （必須）RAMポリシーの名前。 statement- （必須）RAMポリシードキュメントのステートメント。 resource - （必須）許可される特定のオブジェクト。 action - （必須）resourceに対するどんな操作が許可されてるか。 effect - （必須）actionが許可されているかどうかを示します。有効な値はAllowand Denyです。 version - （オプション）RAMポリシードキュメントのバージョン。デフォルト値は1です。 description - （オプション）RAMポリシーの説明。 force - （オプション）このパラメータはリソースの破棄に使用されます。デフォルト値はfalseです。  このリソースを実行することにより、以下の属性情報が出力されます。\n id - ポリシーID name - ポリシー名 type - ポリシータイプ。 description - ポリシーの説明 statement - 政策文書のステートメントのリスト。 document - ポリシー文書 version - ポリシー文書のバージョン。 attachment_count - ポリシー添付ファイル数。  その他、詳しくはAliCloudのterraform-RAMを参照してみてください。\n8. RAMロールを作成し、RAMポリシーへアタッチ \u0026nbsp; 今度は別のパターン、RAMロールを作成し、RAMポリシーへアタッチしてみます。 例として、test_roleというRAMロールを作成し、これをtest_policyというRAMポリシーへアタッチします。 アタッチするときはalicloud_ram_role_policy_attachmentという構文を使います。\nresource \u0026quot;alicloud_ram_role\u0026quot; \u0026quot;role\u0026quot; { name = \u0026quot;test_role\u0026quot; ram_users = [\u0026quot;acs:ram::${your_account_id}:root\u0026quot;, \u0026quot;acs:ram::${other_account_id}:user/username\u0026quot;] services = [\u0026quot;apigateway.aliyuncs.com\u0026quot;, \u0026quot;ecs.aliyuncs.com\u0026quot;] description = \u0026quot;this is a role test.\u0026quot; force = true } resource \u0026quot;alicloud_ram_policy\u0026quot; \u0026quot;policy\u0026quot; { name = \u0026quot;test_policy\u0026quot; statement = [ { effect = \u0026quot;Allow\u0026quot; action = [ \u0026quot;oss:ListObjects\u0026quot;, \u0026quot;oss:GetObject\u0026quot;] resource = [ \u0026quot;acs:oss:*:*:mybucket\u0026quot;, \u0026quot;acs:oss:*:*:mybucket/*\u0026quot;] }] description = \u0026quot;this is a policy test\u0026quot; force = true } resource \u0026quot;alicloud_ram_role_policy_attachment\u0026quot; \u0026quot;attach\u0026quot; { policy_name = \u0026quot;${alicloud_ram_policy.policy.name}\u0026quot; policy_type = \u0026quot;${alicloud_ram_policy.policy.type}\u0026quot; role_name = \u0026quot;${alicloud_ram_role.role.name}\u0026quot; }  このalicloud_ram_role_policy_attachmentリソースで必要なパラメータは以下3点です。\n role_name - （必須）RAMロールの名前。 policy_name - （必須）RAMポリシーの名前。 policy_type - （必須、ForceNew）RAMポリシーの種類  このリソースを実行することにより、以下の属性情報が出力されます。\n id - 添付ファイルID。 role_name - ロール名 policy_name - ポリシー名 policy_type - ポリシータイプ。  その他、詳しくはAliCloudのterraform-RAMポリシーへのアタッチを参照してみてください。\n9. RAMポリシーを対象リソース・サービスへアタッチ \u0026nbsp; ここまで、RAMポリシーtest_roleを作成したら、今度は対象のリソース・サービスにアタッチしてみます。ここはECS_instanceらECSインスタンスへアタッチしてみます。 アタッチするときはalicloud_ram_role_attachment構文を使います。\nresource \u0026quot;alicloud_ram_role\u0026quot; \u0026quot;role\u0026quot; { name = \u0026quot;test_role\u0026quot; services = [\u0026quot;apigateway.aliyuncs.com\u0026quot;, \u0026quot;ecs.aliyuncs.com\u0026quot;] ram_users = [\u0026quot;acs:ram::${your_account_id}:root\u0026quot;, \u0026quot;acs:ram::${other_account_id}:user/username\u0026quot;] description = \u0026quot;this is a role test.\u0026quot; force = true } resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;ECS_instance\u0026quot; { instance_name = \u0026quot;ECS_instance_for_terraform\u0026quot; host_name = \u0026quot;ECS_instance_for_terraform\u0026quot; instance_type = \u0026quot;ecs.n4.small\u0026quot; image_id = \u0026quot;centos_7_04_64_20G_alibase_201701015.vhd\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.sg.id}\u0026quot;] availability_zone = \u0026quot;${var.zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; } resource \u0026quot;alicloud_ram_role_attachment\u0026quot; \u0026quot;attach\u0026quot; { role_name = \u0026quot;${alicloud_ram_role.role.name}\u0026quot; instance_ids = [\u0026quot;${alicloud_instance.ECS_instance.id}\u0026quot;] }  ECSアタッチでより詳しくはこちらを参照してみてください。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/terraform/15/kubernetes/",
	"title": "Kubernetesの作成",
	"tags": [],
	"description": "Terraformによる、Alibaba CloudのKubernetesリソース作成方法を紹介します。",
	"content": " AlibabaCloudの基本プロダクトサービスであるResource Access Managementの作成方法を解説します。\n1. Kubernetes \u0026nbsp; Kubernetesは自動デプロイ、スケーリング、アプリ・コンテナの運用自動化のために設計されたオープンソースのプラットフォームです。Kubernetesによって、以下のことが要求に迅速かつ効率良く対応ができます。\n アプリを迅速に予定通りにデプロイする (コンテナをサーバー群へ展開する) 稼働中にアプリをスケールする（稼働中にコンテナ数を変更する） 新機能をシームレスに提供開始する (稼働中にロールアウトする) ハードウェアの利用率を要求に制限する (コンテナで共存させて稼働率を高くする）  \u0026nbsp; Kubernetesのゴールは、下記の様なアプリの運用負担を軽減するためのエコシステムのコンポーネントとツールを整備することです。\n 可搬性: パブリック・クラウド、プライベート・クラウド、ハイブリッド・クラウド、マルチ・クラウド 拡張可能: モジュール化、追加可能、接続可能、構成可能 自動修復: 自動配置、自動再起動、自動複製、自動スケーリング  \u0026nbsp; 2014年にプロジェクトが開始され、運用経験を基に、本番のワークロードを大規模に実行し、コミュニティのベストプラクティスのアイデアやプラクティスと組み合わせています。 Kubernetesの事例は https://kubernetes.io/case-studies/ にあります。\n\u0026nbsp; またAlibabaのKubernetesサービスは非常に便利な上、Container Clustor、kubernetes managed、Container Registryと各方面へ進化段階なので、随時チェックするといいでしょう。\n\n2. コンポーネント \u0026nbsp; Container Service for Kubernetes はネイティブの Kubernetes をベースに構成、拡張されています。 このサービスは、クラスターの作成および拡張を容易に行うことができ、Alibaba Cloud の機能である、仮想化、ストレージ、ネットワーク、セキュリティ、およびKubernetes コンテナー化したアプリケーションの高品質な実行環境を統合することができます。\n3. KubernetesのTerraformについて \u0026nbsp; 本題、Kubernetesクラスタ作成に移ります。AZシングルゾーンのKubernetesクラスタを生成するだけの簡単なソースを作ってみます。\nresource \u0026quot;alicloud_cs_kubernetes\u0026quot; \u0026quot;main\u0026quot; { name_prefix = \u0026quot;my-first-k8s\u0026quot; availability_zone = \u0026quot;${data.alicloud_zones.default.zones.0.id}\u0026quot; new_nat_gateway = true master_instance_types = [\u0026quot;ecs.n4.small\u0026quot;] worker_instance_types = [\u0026quot;ecs.n4.small\u0026quot;] worker_numbers = [3] password = \u0026quot;password1234\u0026quot; pod_cidr = \u0026quot;192.168.1.0/16\u0026quot; service_cidr = \u0026quot;192.168.2.0/24\u0026quot; enable_ssh = true install_cloud_monitor = true }  alicloud_cs_kubernetes  name - （オプション）kubernetesクラスタ名。 name_prefix - （オプション）kubernetesクラスタ名のプレフィックス。 availability_zone - （オプション）新しいkubernetesクラスタが配置されるゾーン。指定されていない場合はvswitch_idsを設定する必要あり。 new_nat_gateway - （オプション）kubernetesクラスタの作成中に新しいNATゲートウェイを作成するかどうか。 master_instance_types - （必須）マスターノードのインスタンスタイプ。 worker_instance_types - （必須）ワーカーノードのインスタンスタイプ。 worker_number - （必須）kubernetesクラスターのワーカーノード番号。デフォルトは3。 password - （オプション）sshログインクラスタノードのパスワード。 cluster_network_type - （必須）クラスタのネットワークタイプ。 pod_cidr - （オプション）ポッドネットワークのCIDRブロック。 service_cidr - （任意）サービスネットワークのCIDRブロック。 enable_ssh - （オプション）SSHログインkubernetesを許可するかどうか。デフォルトはfalse。 install_cloud_monitor - （オプション）kubernetesのノードにクラウドモニタをインストールするかどうか。  alicloud_cs_kubernetesリソースを実行することにより、以下の属性情報が出力されます。\n id - コンテナクラスタのID。 name - コンテナクラスタの名前。 master_nodes - クラスタマスターノードリスト。 worker_nodes - クラスタワーカーノードのリスト。 connections - kubernetesクラスタ接続情報。  » ブロックノード\n name - ノード名 private_ip - ノードのプライベートIPアドレス。  » ブロック接続\n api_server_internet - APIサーバーのインターネットエンドポイント。 api_server_intranet - APIサーバーイントラネットエンドポイント。 master_public_ip - マスターノードのSSH IPアドレス。 service_domain - サービスアクセスドメイン。  他に入力パラメータ、出力パラメータがいくつかありますので、こちらも是非参照してみてください。 https://www.terraform.io/docs/providers/alicloud/r/cs_kubernetes.html\n4. マネージドKubernetesのTerraformについて \u0026nbsp; 上記、alicloud_cs_kubernetesでkubernetesクラスタを生成しました。 一方、Managed Kubernetesがありますので、今度はalicloud_cs_managed_kubernetes で Managed Kubernetesを作ってみます。\n※ Managed Kubernetesはコンテナ一元管理をマネージドで使えるのでメリットがあります。ただしロードバランサなどを自分で対応しないといけないなど色々制約はありますが、構成が比較的シンプルで、扱うコンテナの種類が少なければ便利なサービスです。\nvariable \u0026quot;name\u0026quot; { default = \u0026quot;my-first-k8s\u0026quot; } data \u0026quot;alicloud_zones\u0026quot; main { available_resource_creation = \u0026quot;VSwitch\u0026quot; } data \u0026quot;alicloud_instance_types\u0026quot; \u0026quot;default\u0026quot; { availability_zone = \u0026quot;${data.alicloud_zones.main.zones.0.id}\u0026quot; cpu_core_count = 1 memory_size = 2 } resource \u0026quot;alicloud_cs_managed_kubernetes\u0026quot; \u0026quot;k8s\u0026quot; { name = \u0026quot;${var.name}\u0026quot; availability_zone = \u0026quot;${data.alicloud_zones.main.zones.0.id}\u0026quot; new_nat_gateway = true worker_instance_types = [\u0026quot;${data.alicloud_instance_types.default.instance_types.0.id}\u0026quot;] worker_numbers = [2] password = \u0026quot;password1234\u0026quot; pod_cidr = \u0026quot;172.20.0.0/16\u0026quot; service_cidr = \u0026quot;172.21.0.0/20\u0026quot; install_cloud_monitor = true slb_internet_enabled = true worker_disk_category = \u0026quot;cloud_efficiency\u0026quot; }  alicloud_cs_managed_kubernetes  name - （オプション）kubernetesクラスタ名。 availability_zone - （オプション）kubernetesクラスタが配置されるゾーン。 new_nat_gateway - （オプション）kubernetesクラスタの作成中に新しいNATゲートウェイを作成するかどうか。デフォルトはtrue。 password - （必須）sshログインクラスタノードのパスワード。 pod_cidr - （オプション）ポッドネットワークのCIDRブロック。 service_cidr - （任意）サービスネットワークのCIDRブロック。 slb_internet_enabled - （オプション）API Server用のインターネットロードバランサを作成するかどうか。デフォルトはfalse。 install_cloud_monitor - （オプション）kubernetesのノードにクラウドモニタをインストールするかどうか。 worker_disk_category - （オプション）ワーカーノードのシステムディスクカテゴリ。 worker_numbers - （必須）kubernetesクラスターのワーカーノード番号。 worker_instance_types - （必須）ワーカーノードのインスタンスタイプ。  alicloud_cs_managed_kubernetesリソースを実行することにより、以下の属性情報が出力されます。\n name - コンテナクラスタの名前。 availability_zone - アベイラビリティーゾーンのID。 key_name - sshログインクラスタノードのキーペア、最初にそれを作成する必要があります。 worker_numbers - 現在のコンテナクラスタ内のECSインスタンスノード番号。 image_id - ノードイメージのID。 nat_gateway_id - kubernetesクラスタを起動するために使用されるNATゲートウェイのID。 worker_instance_types - ワーカーノードのインスタンスタイプ。  » ブロックノード\n id - ノードのID name - ノード名 private_ip - ノードのプライベートIPアドレス。  他に入力パラメータ、出力パラメータがいくつかありますので、こちらも是非参照してみてください。 https://www.terraform.io/docs/providers/alicloud/r/cs_managed_kubernetes.html\n\n以下にKubernetesの実際のサンプルを入れていますので、こちらも参照してみてください。\nexample: Kubernetesの構築と設定\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/016_apache-flume-to-oss/",
	"title": "Apache FlumeからOSSへ",
	"tags": [],
	"description": "Apache FlumeからOSSへデータを集約する方法を説明します。",
	"content": " はじめに \u0026nbsp; 本章はApache Flumeを使ってOSSへデータを送ります。ゴールとしては以下のような構成図になります。 また、OSSにデータ収集後、E-MapReduceでHDFSへのETL処理がありますが、こちらは「OSSとE-MapReduce編」「ETL編」にて重複するため、割愛させていただきます。 （この章のゴールは外部データソースをOSSへ集約する、のみとなります）\nApache Flumeとは \u0026nbsp; Apache Flumeは堅牢性が高く、耐障害性のある分散データ取り込みツールです。さまざまなデータソース（Webサーバーなど）からHadoop分散ファイルシステム（HDFS）、HDFS上のHBaseやkuduなどの分散データベース、またはElasticsearchなど大量のログファイルをストリーミングすることができます。Flumeはログデータのストリーミングに加えて、Twitter、Facebook、Kafka BrokersなどのWebソースから生成されたEventデータをストリーミングすることもできます。 Apache Flumeでより詳しいことは公式サイトを参照ください。 https://flume.apache.org/ Flumeの概要 \u0026nbsp; Apache Flumeはクラスターへのデータの取り込み（ingres）に特化しています。特に数台または数千台のマシンに蓄積されているログファイルを収集、集約、クラスター内の単一のエントリポイントにストリーミングできます。Flumeのコンポーネントと概念についてを以下にて説明します。\n Event：Flumeによって転送されるデータの基本ペイロード。Flumeが発信元から最終目的地まで転送できるデータの単位を表します。オプションのヘッダーはインターセプターを介してチェーン化され、通常はEventの検査と変更に使用されます。 Client：Eventの起点で動作し、それらをFlumeAgentに配信するインターフェース実装。Clientは通常、データを消費しているアプリケーションのプロセス空間で動作します。 Agent： Flumeのデータパスのコア要素。ホストは、Source、Channel、Sinkなどのコンポーネントを使用し、Eventを受信、保存、およびネクストホップの宛先に転送する機能を備えています。 Source：Client経由で配信されるEventを消費します。SourceがEventを受信すると、それを1つ以上のChannelに渡します。 Channel：Eventの一時ストア。SourceとSinkの間のリンク部分です。Channelは、フローの耐久性を確保する上で重要な役割を果たします。 Sink：ChannelからEventを削除し、フロー内の次のAgentまたはEventの最終宛先に送信します。Eventを最終宛先に送信するSinkは、ターミナルシンクとも呼ばれます。  EventはClientからSourceへ流れます。Sourceは、Eventを1つ以上のChannel書き込みます。Channelは、処理中のEventデータ保持領域であり、永続的（ファイルバックアップ）または非永続的（メモリバックアップ）に構成できます。Eventデータは、Sinkがそれを処理し、データを最終宛先に送信できるようになるまで、Channelで待機します。\n以下は、HDFS（OSS）ターミナルシンクで構成されたシンプルなFlumeエージェントを示しています。\n参考：Apache Flumeガイドライン http://flume.apache.org/FlumeUserGuide.html Flumeを使ってデータを取り込む \u0026nbsp; 今回はTwitter情報をFlumeで収集しHDFSフォルダをOSSとして格納するという流れを目指します。\n環境について    Clustor instance Type 台数     Hadoop EMR-3.22.0 MASTER ecs.sn2.large 1    CORE ecs.sn2.large 2    \nStep1. Twitter APIを発行 こちらはTwitter Developerに申請する必要があります。 https://developer.twitter.com/content/developer-twitter/ja.html Step2. EMR マスターノードにログインし、CLIでflume-twitter.confというconfigファイルを作成します。\n[root@emr-header-1 ~]# vi /etc/flume-twitter.conf [root@emr-header-1 ~]#  flume-twitter.confの中身は以下の通りになります。\nLogAgent.sources = apache LogAgent.sinks = fileChannel LogAgent.channels = HDFS # twitter data source LogAgent.sources.apache.type = org.apache.flume.source.twitter.TwitterSource LogAgent.sources.apache.channels = HDFS LogAgent.sources.apache.consumerKey = CONSUMER_KEY LogAgent.sources.apache.consumerSecret = CONSUMER_SECRET LogAgent.sources.apache.accessToken = ACCESS_TOKEN_KEY LogAgent.sources.apache.accessTokenSecret = ACCESS_TOKEN_SECRET LogAgent.sources.apache.maxBatchSize = 50000 LogAgent.sources.apache.maxBatchDurationMillis = 100000 # Describe the sink LogAgent.sinks.HDFS.channel = fileChannel LogAgent.sinks.fileChannel.channel = HDFS LogAgent.sinks.HDFS.type = hdfs LogAgent.sinks.HDFS.hdfs.path = oss://bigdata-prod-tech/twitter/flume/%Y%m%d LogAgent.sinks.HDFS.hdfs.fileType = DataStream LogAgent.sinks.HDFS.hdfs.writeFormat = TEXT LogAgent.sinks.HDFS.hdfs.filePrefix = %{fileName}.%H:%M:%S LogAgent.sinks.HDFS.hdfs.fileSuffix = .log LogAgent.sinks.HDFS.hdfs.batchSize = 1000 LogAgent.sinks.HDFS.hdfs.rollSize = 0 LogAgent.sinks.HDFS.hdfs.rollCount = 0 LogAgent.sinks.HDFS.hdfs.rollInterval = 30 LogAgent.sinks.HDFS.hdfs.useLocalTimeStamp = true # Use a channel which buffers events in memory LogAgent.channels.fileChannel.type = memory LogAgent.channels.fileChannel.capacity = 1000000 LogAgent.channels.fileChannel.transactionCapacity = 10000 Step3. コマンドを実行します。\n[root@emr-header-1 ~]# /usr/lib/flume-current/bin/flume-ng agent -n LogAgent -c conf -f ~/etc/flume-twitter.conf -Dflume.root.logger=INFO,console -Xmx1g Info: Including Hadoop libraries found via (/usr/lib/hadoop-current/bin/hadoop) for HDFS access Info: Including HBASE libraries found via (/usr/lib/hbase-current/bin/hbase) for HBASE access Info: Including Hive libraries found via (/usr/lib/hive-current) for Hive access Info: Including HCatalog libraries found via (/usr/lib/hive-current/hcatalog) for Hive access + [[ -Dflume.root.logger=INFO,console -Xmx1g != *flume.monitoring.* ]] + arr_java_props[${#arr_java_props[@]}]=-Dflume.monitoring.type=log + \u0026#39;[\u0026#39; -n LogAgent \u0026#39;]\u0026#39; + len=3 + arr_java_props[$len]=-Dflume.agent.name=LogAgent + (( ++len )) + flume_gc_props=\u0026#39;-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=128M -Xloggc:/mnt/disk1/log/flume/LogAgent/flume-gc.log\u0026#39; 〜略〜 Step4. OSSにてFlumeによって取り込みされたデータを確認できたら完了です。 最後に Flumeはログ収集基盤の位置付けなので、Spark Streamingと組み合わせてデータを収集することもできます。詳細はこちらを参照ください。\nApache FlumeとSpark Streamingの統合について https://www.sbcloud.co.jp/entry/2019/03/18/flumesparkstreaming/ "
},
{
	"uri": "https://www.sbcloud.co.jp/help/scenario/terraform/bastion-server/",
	"title": "SSH踏み台サーバの作成",
	"tags": [],
	"description": "Terraformを用いて、Alibaba Cloud上でssh踏み台サーバの作成方法を紹介します。",
	"content": " ssh踏み台サーバ \u0026nbsp; クラウド上にてEC2やOSS、RDSなどにて個人情報や外部流出したくないしたくない危険なファイルがある場合、インターネットら外部からメインサーバが見える状態は極力避けたいです。それを防ぐために様々な手段がありますが、費用対効果の高いネットワーク構造として踏み台サーバを作る方法があります。踏み台サーバーとは、インターネットに直接繋がないサーバーをSSHで接続するために経由される、セキュリティ層の役割を満たすことができるサーバーのことです。踏み台サーバを使うことで、以下のメリットがあります。\n 実行用など本番に使う各サーバに直接アクセスできないため、外部からの侵入リスクを軽減できる。 PublicIPを実行用など本番に使う各サーバに割る必要がないため、運用における負荷を軽減できる。 踏み台サーバから実行用など本番に使う各サーバへのログを残せるため、不正操作を防げれる。  \n\n構成としては以下の図通りになります。\n\n\u0026nbsp; Terraformで踏み台サーバ、本番サーバを作ってみます。ゴールの構成図は以下の通りです。\nそれぞれのパラメータは以下の通りです。\nネットワーク構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_vpc vpc name 任意 ${var.project_name}-vpc VPC の名称。この例の場合、Bastion-Server-for-Terraform-vpc として表示されます。    vpc cidr_block 必須 192.168.1.0/24 VPC の CIDR ブロック    vpc description 任意 Enable Bastion-Server vpc VPC の説明。   alicloud_vswitch vsw name 任意 ${var.project_name}-vswitch vswitch の名称。この例の場合、Bastion-Server-for-Terraform-vswitch として表示されます。    vsw vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID    vsw cidr_block 必須 192.168.1.0/28 vswitch の CIDR ブロック    vsw availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    vsw description 任意 Enable Bastion-Server vswitch vswitch の説明。    SSH踏み台専用セキュリティグループ構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_security_group sg_bastion_server name 任意 ${var.project_name}_Bastion_Server セキュリティグループ の名称。この例の場合、Bastion-Server-for-Terraform_Bastion_Server として表示されます。    sg_bastion_server vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID    sg_bastion_server description 任意 Enable SSH access via port 22 セキュリティグループ の説明。   alicloud_security_group_rule allow_ssh type 必須 ingress セキュリティグループのタイプ。 ingress（受信） かegress（送信） のいずれかになります。    allow_ssh ip_protocol 必須 tcp 通信プロトコル。 tcp, udp, icmp, gre, all のいずれかになります。    allow_ssh nic_type 必須 intranet ネットワークタイプ。 internet か intranet のいずれかになります。    allow_ssh policy 必須 accept 許可ポリシー。 acceptか drop のいずれかになります。    allow_ssh port_range 必須 22\u0026frasl;22 通信プロトコルのポート範囲。値が「- 1/-1」の場合は無効になります。    allow_ssh priority 必須 1 許可ポリシーの優先順位。    allow_ssh security_group_id 必須 ${alicloud_security_group.sg_bastion_server.id} アタッチするセキュリティグループのID    allow_ssh cidr_ip 任意 0.0.0.0/0 ターゲットとなるIPアドレス。デフォルトは「0.0.0.0/0」。値が「0.0.0.0/0」の場合は無制限状態となります。    SSH踏み台専用EC2構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_instance ECS_instance_for_Bastion_Server instance_name 任意 ${var.project_name}-Bastion-Server-ECS-instance ECSインスタンスの名称。この例の場合、Bastion-Server-for-Terraform-Bastion-Server-ECS-instance として表示されます。    ECS_instance_for_Bastion_Server host_name 任意 ${var.project_name}-Bastion-Server-ECS-instance ECSインスタンスのHost名称。この例の場合、Bastion-Server-for-Terraform-Bastion-Server-ECS-instance として表示されます。    ECS_instance_for_Bastion_Server instance_type 必須 ecs.xn4.small ECSインスタンスのタイプ。今回は ecs.xn4.small を選定します。    ECS_instance_for_Bastion_Server image_id 必須 centos_7_04_64_20G_alibase_201701015.vhd ECSインスタンスのImageID。今回は centos_7_04_64_20G_alibase_201701015.vhd を選定します。    ECS_instance_for_Bastion_Server system_disk_category 任意 cloud_efficiency ECSインスタンスのディスクタイプ。デフォルトは cloud_efficiency です。    ECS_instance_for_Bastion_Server security_groups 必須 \u0026rdquo;${alicloud_security_group.sg_bastion_server.id}\u0026rdquo; アタッチするセキュリティグループのID    ECS_instance_for_Bastion_Server availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    ECS_instance_for_Bastion_Server vswitch_id 必須 ${alicloud_vswitch.vsw.id} アタッチするVSwitchのID    ECS_instance_for_Bastion_Server password 任意 \u0026rdquo;!Bastion2019\u0026rdquo; ECSインスタンスのログインパスワード。記載したくない場合はconfing.tfvarsにて記載することをお勧めします。    ECS_instance_for_Bastion_Server internet_max_bandwidth_out 任意 5 パブリックネットワークへの最大帯域幅。デフォルトは0ですが、0より大きい値を入れるとパブリックIPアドレスがアタッチされます。    実行サーバ専用セキュリティグループ構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_security_group sg_production_server name 任意 ${var.project_name}_Production_Server セキュリティグループ の名称。この例の場合、Bastion-Server-for-Terraform_Production_Server として表示されます。    sg_production_server vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID    sg_production_server description 任意 Marker security group for Production server セキュリティグループ の説明。   alicloud_security_group_rule allow_http type 必須 ingress セキュリティグループのタイプ。 ingress（受信） かegress（送信） のいずれかになります。    allow_http ip_protocol 必須 tcp 通信プロトコル。 tcp, udp, icmp, gre, all のいずれかになります。    allow_http nic_type 必須 intranet ネットワークタイプ。 internet か intranet のいずれかになります。    allow_http policy 必須 accept 許可ポリシー。 acceptか drop のいずれかになります。    allow_http port_range 必須 80\u0026frasl;80 通信プロトコルのポート範囲。値が「- 1/-1」の場合は無効になります。    allow_http priority 必須 1 許可ポリシーの優先順位。    allow_http security_group_id 必須 ${alicloud_security_group.sg_production_server.id} アタッチするセキュリティグループのID    allow_http cidr_ip 任意 0.0.0.0/0 ターゲットとなるIPアドレス。デフォルトは「0.0.0.0/0」。値が「0.0.0.0/0」の場合は無制限状態となります。    allow_ssh_for_Bastion type 必須 ingress セキュリティグループのタイプ。 ingress（受信） かegress（送信） のいずれかになります。    allow_ssh_for_Bastion ip_protocol 必須 tcp 通信プロトコル。 tcp, udp, icmp, gre, all のいずれかになります。    allow_ssh_for_Bastion nic_type 必須 intranet ネットワークタイプ。 internet か intranet のいずれかになります。    allow_ssh_for_Bastion policy 必須 accept 許可ポリシー。 acceptか drop のいずれかになります。    allow_ssh_for_Bastion port_range 必須 22\u0026frasl;22 通信プロトコルのポート範囲。値が「- 1/-1」の場合は無効になります。    allow_ssh_for_Bastion priority 必須 1 許可ポリシーの優先順位。    allow_ssh_for_Bastion security_group_id 必須 ${alicloud_security_group.sg_production_server.id} アタッチするセキュリティグループのID    allow_ssh_for_Bastion cidr_ip 任意 ${alicloud_instance.ECS_instance_for_Bastion_Server.public_ip} SSH踏み台専用サーバのみからのPort22でアクセスを許容します。    実行サーバ専用EC2構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_instance ECS_instance_for_Production_Server instance_name 必須 ${var.project_name}-Production-Server-ECS-instance ECSインスタンスの名称。この例の場合、Bastion-Server-for-Terraform-Bastion-Server-ECS-instance として表示されます。    ECS_instance_for_Production_Server host_name 必須 ${var.project_name}-Production-Server-ECS-instance ECSインスタンスのHost名称。この例の場合、Bastion-Server-for-Terraform-Bastion-Server-ECS-instance として表示されます。    ECS_instance_for_Production_Server instance_type 必須 ecs.xn4.small ECSインスタンスのタイプ。今回は ecs.xn4.small を選定します。    ECS_instance_for_Production_Server image_id 必須 centos_7_04_64_20G_alibase_201701015.vhd ECSインスタンスのImageID。今回は centos_7_04_64_20G_alibase_201701015.vhd を選定します。    ECS_instance_for_Production_Server system_disk_category 必須 cloud_efficiency ECSインスタンスのディスクタイプ。デフォルトは cloud_efficiency です。    ECS_instance_for_Production_Server security_groups 必須 \u0026rdquo;${alicloud_security_group.sg_production_server.id}\u0026rdquo; アタッチするセキュリティグループのID    ECS_instance_for_Production_Server availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    ECS_instance_for_Production_Server vswitch_id 必須 ${alicloud_vswitch.vsw.id} アタッチするVSwitchのID    ECS_instance_for_Production_Server password 任意 \u0026rdquo;!Production2019\u0026rdquo; ECSインスタンスのログインパスワード。記載したくない場合はconfing.tfvarsにて記載することをお勧めします。    ECS_instance_for_Production_Server internet_max_bandwidth_out 任意 5 パブリックネットワークへの最大帯域幅。デフォルトは0ですが、0より大きい値を入れるとパブリックIPアドレスがアタッチされます。    ECS_instance_for_Production_Server user_data 任意 ${file(\u0026ldquo;provisioning.sh\u0026rdquo;)} ECSインスタンス起動直後に実行するためのユーザー定義データ。    \nソースは以下になります。\nmain.tf\nprovider \u0026quot;alicloud\u0026quot; { access_key = \u0026quot;${var.access_key}\u0026quot; secret_key = \u0026quot;${var.secret_key}\u0026quot; region = \u0026quot;${var.region}\u0026quot; } resource \u0026quot;alicloud_vpc\u0026quot; \u0026quot;vpc\u0026quot; { name = \u0026quot;${var.project_name}-vpc\u0026quot; cidr_block = \u0026quot;192.168.1.0/24\u0026quot; description = \u0026quot;Enable Bastion-Server vpc\u0026quot; } resource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;vsw\u0026quot; { name = \u0026quot;${var.project_name}-vswitch\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; cidr_block = \u0026quot;192.168.1.0/28\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; description = \u0026quot;Enable Bastion-Server vswitch\u0026quot; } # SSH踏み台専用 resource \u0026quot;alicloud_security_group\u0026quot; \u0026quot;sg_bastion_server\u0026quot; { name = \u0026quot;${var.project_name}_Bastion_Server\u0026quot; description = \u0026quot;Enable SSH access via port 22\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; } resource \u0026quot;alicloud_security_group_rule\u0026quot; \u0026quot;allow_ssh\u0026quot; { type = \u0026quot;ingress\u0026quot; ip_protocol = \u0026quot;tcp\u0026quot; nic_type = \u0026quot;intranet\u0026quot; policy = \u0026quot;accept\u0026quot; port_range = \u0026quot;22/22\u0026quot; priority = 1 security_group_id = \u0026quot;${alicloud_security_group.sg_bastion_server.id}\u0026quot; cidr_ip = \u0026quot;0.0.0.0/0\u0026quot; } resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;ECS_instance_for_Bastion_Server\u0026quot; { instance_name = \u0026quot;${var.project_name}-Bastion-Server-ECS-instance\u0026quot; host_name = \u0026quot;${var.project_name}-Bastion-Server-ECS-instance\u0026quot; instance_type = \u0026quot;ecs.xn4.small\u0026quot; image_id = \u0026quot;centos_7_04_64_20G_alibase_201701015.vhd\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.sg_bastion_server.id}\u0026quot;] availability_zone = \u0026quot;${var.zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; password = \u0026quot;${var.ecs_bastion_server_password}\u0026quot; internet_max_bandwidth_out = 5 } # 実行サーバ専用 resource \u0026quot;alicloud_security_group\u0026quot; \u0026quot;sg_production_server\u0026quot; { name = \u0026quot;${var.project_name}_Production_Server\u0026quot; description = \u0026quot;Marker security group for Production server\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; } resource \u0026quot;alicloud_security_group_rule\u0026quot; \u0026quot;allow_http\u0026quot; { type = \u0026quot;ingress\u0026quot; ip_protocol = \u0026quot;tcp\u0026quot; nic_type = \u0026quot;intranet\u0026quot; policy = \u0026quot;accept\u0026quot; port_range = \u0026quot;80/80\u0026quot; priority = 1 security_group_id = \u0026quot;${alicloud_security_group.sg_production_server.id}\u0026quot; cidr_ip = \u0026quot;0.0.0.0/0\u0026quot; } # 実行サーバへssh接続はssh踏み台サーバのみ許容する resource \u0026quot;alicloud_security_group_rule\u0026quot; \u0026quot;allow_ssh_for_Bastion\u0026quot; { type = \u0026quot;ingress\u0026quot; ip_protocol = \u0026quot;tcp\u0026quot; nic_type = \u0026quot;intranet\u0026quot; policy = \u0026quot;accept\u0026quot; port_range = \u0026quot;22/22\u0026quot; priority = 1 security_group_id = \u0026quot;${alicloud_security_group.sg_production_server.id}\u0026quot; cidr_ip = \u0026quot;${alicloud_instance.ECS_instance_for_Bastion_Server.public_ip}\u0026quot; } resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;ECS_instance_for_Production_Server\u0026quot; { instance_name = \u0026quot;${var.project_name}-Production-Server-ECS-instance\u0026quot; host_name = \u0026quot;${var.project_name}-Production-Server-ECS-instance\u0026quot; instance_type = \u0026quot;ecs.n4.small\u0026quot; image_id = \u0026quot;centos_7_04_64_20G_alibase_201701015.vhd\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.sg_production_server.id}\u0026quot;] availability_zone = \u0026quot;${var.zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; internet_max_bandwidth_out = 5 password = \u0026quot;${var.ecs_production_server_password}\u0026quot; user_data = \u0026quot;${file(\u0026quot;provisioning.sh\u0026quot;)}\u0026quot; }  \nvariables.tf\nvariable \u0026quot;access_key\u0026quot; {} variable \u0026quot;secret_key\u0026quot; {} variable \u0026quot;region\u0026quot; {} variable \u0026quot;zone\u0026quot; {} variable \u0026quot;project_name\u0026quot; {} variable \u0026quot;ecs_bastion_server_password\u0026quot; {} variable \u0026quot;ecs_production_server_password\u0026quot; {}  \noutput.tf\noutput \u0026quot;Bastion-Server-ECS_instance_ip\u0026quot; { value = \u0026quot;${alicloud_instance.ECS_instance_for_Bastion_Server.*.public_ip}\u0026quot; } output \u0026quot;Production-Server-ECS_instance_ip\u0026quot; { value = \u0026quot;${alicloud_instance.ECS_instance_for_Production_Server.*.public_ip}\u0026quot; }  \nconfing.tfvars\naccess_key = \u0026quot;xxxxxxxxxxxxxxxxx\u0026quot; secret_key = \u0026quot;xxxxxxxxxxxxxxxxx\u0026quot; region = \u0026quot;ap-northeast-1\u0026quot; zone = \u0026quot;ap-northeast-1a\u0026quot; project_name = \u0026quot;Bastion-Server-for-Terraform\u0026quot; ecs_bastion_server_password = \u0026quot;!Bastion2019\u0026quot; ecs_production_server_password = \u0026quot;!Production2019\u0026quot;  \nprovisioning.sh\n#!/bin/sh yum install -y httpd systemctl start httpd systemctl enable httpd  \n実行 \u0026nbsp; ソースの準備ができたら実行します。\nterraform init terraform play -var-file=\u0026quot;confing.tfvars\u0026quot; terraform apply -var-file=\u0026quot;confing.tfvars\u0026quot;  実際にssh制限してるかチェックしてみます。踏み台サーバのIPアドレスが47.74.2.180、本番サーバのIPアドレスが47.74.23.29です。\n$ ssh root@47.74.23.29 ssh: connect to host 47.74.23.29 port 22: Operation timed out $ $ ssh root@47.74.2.180 The authenticity of host '47.74.2.180 (47.74.2.180)' can't be established. ECDSA key fingerprint is SHA256:nBrjlX0/9UZy5KTzt+41rVNwtZDghpdE6wTf9EQhr68. Are you sure you want to continue connecting (yes/no)? yes Warning: Permanently added '47.74.2.180' (ECDSA) to the list of known hosts. root@47.74.2.180's password: Welcome to Alibaba Cloud Elastic Compute Service ! [root@Bastion-Server-for-Terraform-Bastion-Server-ECS-instance ~]#  \n本番サーバにsshログインは出来ず、ssh踏み台サーバにsshログインできました。 それでは本番サーバに踏み台サーバからsshログインしてみます。\n[root@Bastion-Server-for-Terraform-Bastion-Server-ECS-instance ~]# ssh root@47.74.23.29 The authenticity of host '47.74.23.29 (47.74.23.29)' can't be established. ECDSA key fingerprint is SHA256:83on9BQWoTV1mDRgImz+1ChiiASDQnwo58SFIK6kWlU. ECDSA key fingerprint is MD5:72:06:09:c4:33:c5:03:de:1b:20:19:40:a2:28:d6:7f. Are you sure you want to continue connecting (yes/no)? yes Warning: Permanently added '47.74.23.29' (ECDSA) to the list of known hosts. root@47.74.23.29's password: Welcome to Alibaba Cloud Elastic Compute Service ! [root@Bastion-Server-for-Terraform-Production-Server-ECS-instance ~]#  \nログインできました。これで本番サーバに対し外部からssh接続不可といったセキュアな運用ができます。 "
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/017_fluentd-to-oss/",
	"title": "FluentdからOSSへ",
	"tags": [],
	"description": "FluentdからOSSへデータを集約する方法を説明します。",
	"content": " はじめに \u0026nbsp; 本章はAlibabaCloud LogServiceを使ってOSSへデータを送ります。ゴールとしては以下のような構成図になります。 また、OSSにデータ収集後、E-MapReduceでHDFSへのETL処理がありますが、こちらは「OSSとE-MapReduce編」「ETL編」にて重複するため、割愛させていただきます。 （この章のゴールは外部データソースをOSSへ集約する、のみとなります）\nFluend とは \u0026nbsp; Fluendはデーモン上で動作する、データのやりとりを管理するソフトウェアです。 Fluentd は input, buffer, output という以下の役割を持っています。\n 必要なデータを取り出す (input)  そのデータを必要に応じて分解(パース)する データのタイムスタンプを管理する  必要なところにデータを届ける (output)  そのデータを必要に応じて整形(フォーマット)して保存する  データを紛失しないよう管理する (buffer)  やりとりの途中で何かエラーが起きたらリトライする   他、特徴として、以下があります。\n ログはタグで管理される JSON形式 様々なプラグインがあり、OSSやMySQL、Hadoop HDFSなど自由に接続が可能  他、詳しいことはFluend公式サイトを参照してください。\nまた、Fluentdのガイドブックもありますので、使用方法はこちらを参考にしてください。\nhttps://docs.fluentd.org/\nFluendの導入 ECSにFluendをインストールし、OSSへデータを送ってみます。ECSはCentOS 7.6です。\nStep1. td-agentをインストールするshellを入手し、Shellを実行\n[root@bigdatatest ~]# curl -L https://toolbelt.treasuredata.com/sh/install-redhat-td-agent3.sh | sh % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 849 100 849 0 0 5773 0 --:--:-- --:--:-- --:--:-- 5815 ============================== td-agent Installation Script ============================== This script requires superuser access to install rpm packages. You will be prompted for your password by sudo. 読み込んだプラグイン:fastestmirror Determining fastest mirrors base | 3.6 kB 00:00:00 epel | 5.4 kB 00:00:00 extras | 3.4 kB 00:00:00 treasuredata | 2.9 kB 00:00:00 updates | 3.4 kB 00:00:00 (1/8): base/7/x86_64/group_gz | 166 kB 00:00:00 (2/8): epel/x86_64/group_gz | 88 kB 00:00:00 (3/8): epel/x86_64/updateinfo | 1.0 MB 00:00:00 (4/8): treasuredata/7/x86_64/primary_db | 27 kB 00:00:00 (5/8): base/7/x86_64/primary_db | 6.0 MB 00:00:00 (6/8): extras/7/x86_64/primary_db | 215 kB 00:00:00 (7/8): epel/x86_64/primary_db | 6.8 MB 00:00:00 (8/8): updates/7/x86_64/primary_db | 7.4 MB 00:00:00 〜略〜 インストール: td-agent.x86_64 0:3.5.0-0.el7 完了しました! Installation completed. Happy Logging! [root@bigdatatest ~]#  Step2. td-agentのruby-develとgccコンパイル（ライブラリ）をインストール\n[root@bigdatatest ~]# yum install gcc gcc-c++ ruby-devel 読み込んだプラグイン:fastestmirror Loading mirror speeds from cached hostfile パッケージ gcc-4.8.5-36.el7_6.2.x86_64 はインストール済みか最新バージョンです 依存性の解決をしています --\u0026gt; トランザクションの確認を実行しています。 ---\u0026gt; パッケージ gcc-c++.x86_64 0:4.8.5-36.el7_6.2 を インストール 〜略〜 インストール: gcc-c++.x86_64 0:4.8.5-36.el7_6.2 ruby-devel.x86_64 0:2.0.0.648-35.el7_6 依存性関連をインストールしました: libstdc++-devel.x86_64 0:4.8.5-36.el7_6.2 libyaml.x86_64 0:0.1.4-11.el7_0 ruby.x86_64 0:2.0.0.648-35.el7_6 ruby-irb.noarch 0:2.0.0.648-35.el7_6 ruby-libs.x86_64 0:2.0.0.648-35.el7_6 rubygem-bigdecimal.x86_64 0:1.2.0-35.el7_6 rubygem-io-console.x86_64 0:0.4.2-35.el7_6 rubygem-json.x86_64 0:1.7.7-35.el7_6 rubygem-psych.x86_64 0:2.0.0-35.el7_6 rubygem-rdoc.noarch 0:4.0.0-35.el7_6 rubygems.noarch 0:2.0.14.1-35.el7_6 完了しました! [root@bigdatatest ~]#  Step3. AlibabaCloud ossへデータを流すためのFluentdプラグインをインストール\n$ td-agent-gem install fluent-plugin-aliyun-oss\nまたfluent-plugin-aliyun-oss\u000bがインストールされてるか、以下のコマンドも実施\n$ td-agent-gem list fluent-plugin-aliyun-oss\n[root@bigdatatest ~]# td-agent-gem install fluent-plugin-aliyun-oss Fetching: http-accept-1.7.0.gem (100%) Successfully installed http-accept-1.7.0 Fetching: unf_ext-0.0.7.6.gem (100%) Building native extensions. This could take a while... Successfully installed unf_ext-0.0.7.6 〜略〜 Installing ri documentation for aliyun-sdk-0.7.0 Parsing documentation for fluent-plugin-aliyun-oss-0.0.1 Installing ri documentation for fluent-plugin-aliyun-oss-0.0.1 Done installing documentation for http-accept, unf_ext, unf, domain_name, http-cookie, mime-types-data, mime-types, netrc, rest-client, aliyun-sdk, fluent-plugin-aliyun-oss after 14 seconds 11 gems installed [root@bigdatatest ~]# [root@bigdatatest ~]# [root@bigdatatest ~]# [root@bigdatatest ~]# td-agent-gem list fluent-plugin-aliyun-oss *** LOCAL GEMS *** fluent-plugin-aliyun-oss (0.0.1) [root@bigdatatest ~]# [root@bigdatatest ~]#  Step4. td-agent.confを編集\nvi /etc/td-agent/td-agent.conf td-agent.conf にて、Output PluginとしてAlibabaCloud OSSへのエンドポイント、バケット、Access Key/Secret Keyを入力します。 入力に必要な項目、オプション設定もありますので、詳しくはこちらを参照してください。 https://github.com/aliyun/fluent-plugin-oss\n#### ## Output descriptions: ## # Treasure Data (http://www.treasure-data.com/) provides cloud based data # analytics platform, which easily stores and processes data from td-agent. # FREE plan is also provided. # @see http://docs.fluentd.org/articles/http-to-td # # This section matches events whose tag is td.DATABASE.TABLE \u0026lt;match debug.*\u0026gt; @type oss endpoint ＜OSSのendpointを入力＞ bucket ＜OSSのbucketを入力＞ access_key_id ＜access_key_idを入力＞ access_key_secret ＜access_key_secretを入力＞ path fluentd/logs auto_create_bucket true key_format %{path}/%{time_slice}_%{index}_%{thread_id}.%{file_extension} store_as gzip \u0026lt;buffer tag,time\u0026gt; @type file path /var/log/fluent/oss timekey 60 # 1 min partition timekey_wait 20s #timekey_use_utc true \u0026lt;/buffer\u0026gt; \u0026lt;format\u0026gt; @type json \u0026lt;/format\u0026gt; \u0026lt;/match\u0026gt; # HTTP input # POST http://localhost:8888/\u0026lt;tag\u0026gt;?json=\u0026lt;json\u0026gt; # POST http://localhost:8888/td.myapp.login?json={\u0026#34;user\u0026#34;%3A\u0026#34;me\u0026#34;} # @see http://docs.fluentd.org/articles/in_http \u0026lt;source\u0026gt; @type http @id input_http port 8888 \u0026lt;/source\u0026gt; 収集ログに対する権限エラー対策として、/etc/init.d/td-agent の設定ファイルを更新します。\nvi /etc/init.d/td-agent # 更新箇所 TD_AGENT_DEFAULT=/etc/sysconfig/td-agent TD_AGENT_USER=root TD_AGENT_GROUP=root TD_AGENT_RUBY=/opt/td-agent/embedded/bin/ruby  Step5. td-agent.confファイルの編集が終われば、設定ファイルをリロードし、サーバを再起動します。\n[root@bigdatatest ~]# sudo /etc/init.d/td-agent reload Reloading td-agent configuration (via systemctl): [ OK ] [root@bigdatatest ~]# [root@bigdatatest ~]# sudo /etc/init.d/td-agent reload Reloading td-agent configuration (via systemctl): [ OK ] [root@bigdatatest ~]#  再起動すれば変更が反映されます。\n今回はApacheのAccess_Logとerror_Logを収集、OSSへ入れたいので、/etc/td-agent/td-agent.confにて、以下の設定を付け加えます。\n\u0026lt;source\u0026gt; type tail format none path /var/log/httpd/access_log pos_file /var/log/td-agent/httpd.access.pos tag td.httpd.access \u0026lt;/source\u0026gt; \u0026lt;source\u0026gt; type tail format none path /var/log/httpd/error_log pos_file /var/log/td-agent/httpd.error.pos tag td.httpd.error \u0026lt;/source\u0026gt; 終わればリロード・リスタートします。\n[root@bigdatatest ~]# sudo /etc/init.d/td-agent reload Reloading td-agent configuration (via systemctl): [ OK ] [root@bigdatatest ~]# [root@bigdatatest ~]# sudo /etc/init.d/td-agent reload Reloading td-agent configuration (via systemctl): [ OK ] [root@bigdatatest ~]#  Step6. fluentdのsystemdを有効化します。\n[root@bigdatatest ~]# sudo systemctl enable td-agent Created symlink from /etc/systemd/system/multi-user.target.wants/td-agent.service to /usr/lib/systemd/system/td-agent.service. [root@bigdatatest ~]# sudo systemctl start td-agent [root@bigdatatest ~]# sudo systemctl status td-agent ● td-agent.service - td-agent: Fluentd based data collector for Treasure Data Loaded: loaded (/usr/lib/systemd/system/td-agent.service; enabled; vendor preset: disabled) Active: active (running) since 月 2019-08-30 17:10:15 CST; 21min ago Docs: https://docs.treasuredata.com/articles/td-agent Main PID: 5941 (fluentd) CGroup: /system.slice/td-agent.service ├─ 5941 /opt/td-agent/embedded/bin/ruby /opt/td-agent/embedded/bin/fluentd --log /var/log/td-agent/td-agent.log --daemon /var/run/td-agent/td-agent.... └─12152 /opt/td-agent/embedded/bin/ruby -Eascii-8bit:ascii-8bit /opt/td-agent/embedded/bin/fluentd --log /var/log/td-agent/td-agent.log --daemon /va... 8月 30 17:10:15 bigdatatest.test systemd[1]: Starting td-agent: Fluentd based data collector for Treasure Data... 8月 30 17:10:15 bigdatatest.test systemd[1]: Started td-agent: Fluentd based data collector for Treasure Data. [root@bigdatatest ~]#  Step7. ちゃんと実現できてるかテストしてみます。\n[root@bigdatatest ~]# curl -X POST -d \u0026#39;json={\u0026#34;json\u0026#34;:\u0026#34;message\u0026#34;}\u0026#39; http://localhost:8888/debug.test [root@bigdatatest ~]# tail -3 /var/log/td-agent/td-agent.log 2019-08-30 17:17:27 +0900 [info]: listening fluent socket on 0.0.0.0:24224 2019-08-30 17:17:27 +0900 [info]: listening dRuby uri=\u0026#34;druby://127.0.0.1:24230\u0026#34; object=\u0026#34;Engine\u0026#34; 2019-08-30 17:23:52 +0900 debug.test: {\u0026#34;json\u0026#34;:\u0026#34;message\u0026#34;} [root@bigdatatest ~]# [root@bigdatatest ~]#  ちなみにLogファイルの場所は以下の通りになります（CentOSの場合）\n   ファイル名 場所     設定ファイル /etc/td-agent/td-agent.conf   ログファイル /var/log/td-agent/td-agent.log    \nOSSのバケットでも、Logがあることを確認できます。これで以上です。\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/scenario/terraform/slb-setting-sample/",
	"title": "SLBの構築",
	"tags": [],
	"description": "Terraformを用いて、Alibaba Cloud上でSLBを作成します。",
	"content": " SLBの構築 \u0026nbsp; SLB（Server Load Balancer）は、外部インターネット、もしくは内部イントラネットからパブリックIPまたはプライベートIPへ届くインバウンドトラフィックを予め設定したSLBの転送ルールに従って、複数のECSインスタンス間のインバウンドトラフィックを分散および制御し、アプリケーションの可用性を高めるサービスです。SLBを使うことで、以下のメリットがあります。\n 高可用性・・・完全冗長モードとして障害や災害時でもで稼働します。 スケーラブル・・・サービスニーズに合わせて必要な台数分へサーバを増減します。 費用対効果・・・必要なリソースの分だけ使用なので、通常の負荷分散ハードウェアと比べてコスト削減します。 セキュリティ・・・SLBはトラフィックを分散するだけでなくHTTP Flood攻撃やSYN Flood攻撃など、最大5GbitsのDDoS攻撃から防御できます。  SLBのより詳しい詳細はこちらを参照ください。\n\u0026nbsp; TerraformでSLBを使ったECSインスタンスを作成してみます。ゴールの構成図は以下の通りです。\nそれぞれのパラメータは以下の通りです。\nネットワーク構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_vpc vpc name 任意 ${var.project_name}-vpc VPC の名称。この例の場合、SLB-Sample-for-Terraform-vpc として表示されます。    vpc cidr_block 必須 192.168.1.0/24 VPC の CIDR ブロック    vpc description 任意 Enable SLB-Setteing-Sample vpc VPC の説明。   alicloud_vswitch vsw name 任意 ${var.project_name}-vswitch vswitch の名称。この例の場合、SLB-Sample-for-Terraform-vswitch として表示されます。    vsw vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID    vsw cidr_block 必須 192.168.1.0/28 vswitch の CIDR ブロック    vsw availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    vsw description 任意 Enable SLB-Setteing-Sample vswitch vswitch の説明。    ECSインスタンスセキュリティグループ構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_security_group sg name 任意 ${var.project_name}_sg\u0026rdquo; セキュリティグループ の名称。この例の場合、SLB-Sample-for-Terraform_sgとして表示されます。    sg vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID    sg description 任意 Enable SSH access via port 22 セキュリティグループ の説明。   alicloud_security_group_rule allow_http type 必須 ingress セキュリティグループのタイプ。 ingress（受信） かegress（送信） のいずれかになります。    allow_http ip_protocol 必須 tcp 通信プロトコル。 tcp, udp, icmp, gre, all のいずれかになります。    allow_http nic_type 必須 intranet ネットワークタイプ。 internet か intranet のいずれかになります。    allow_http policy 必須 accept 許可ポリシー。 acceptか drop のいずれかになります。    allow_http port_range 必須 80\u0026frasl;80 通信プロトコルのポート範囲。値が「- 1/-1」の場合は無効になります。    allow_http priority 必須 1 許可ポリシーの優先順位。    allow_http security_group_id 必須 ${alicloud_security_group.sg.id} アタッチするセキュリティグループのID    allow_http cidr_ip 任意 0.0.0.0/0 ターゲットとなるIPアドレス。デフォルトは「0.0.0.0/0」。値が「0.0.0.0/0」の場合は無制限状態となります。    ECSインスタンス構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_instance ECS_instance_for_SLB_Sample instance_name 任意 ${var.project_name}-ECS-instance ECSインスタンスの名称。この例の場合、SLB-Sample-for-Terraform-ECS-instance として表示されます。    ECS_instance_for_SLB_Sample host_name 任意 ${var.project_name}-ECS-instance ECSインスタンスのHost名称。この例の場合、SLB-Sample-for-Terraform-ECS-instance として表示されます。    ECS_instance_for_SLB_Sample instance_type 必須 ecs.xn4.small ECSインスタンスのタイプ。今回は ecs.xn4.smallを選定します。    ECS_instance_for_SLB_Sample image_id 必須 centos_7_04_64_20G_alibase_201701015.vhd ECSインスタンスのImageID。今回は centos_7_04_64_20G_alibase_201701015.vhd を選定します。    ECS_instance_for_SLB_Sample system_disk_category 任意 cloud_efficiency ECSインスタンスのディスクタイプ。デフォルトは cloud_efficiency です。    ECS_instance_for_SLB_Sample security_groups 必須 ”${alicloud_security_group.sg.id}” アタッチするセキュリティグループのID    ECS_instance_for_SLB_Sample availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    ECS_instance_for_SLB_Sample vswitch_id 必須 ${alicloud_vswitch.vsw.id} アタッチするVSwitchのID    ECS_instance_for_SLB_Sample password 任意 \u0026rdquo;${var.ecs_password}\u0026rdquo; EC インスタンスのログインパスワード。    ECS_instance_for_SLB_Sample internet_max_bandwidth_out 任意 5 パブリックネットワークへの最大帯域幅。デフォルトは0ですが、0より大きい値を入れるとパブリックIPアドレスがアタッチされます。    ECS_instance_for_SLB_Sample user_data 任意 \u0026rdquo;${file(\u0026ldquo;provisioning.sh\u0026rdquo;)}\u0026rdquo; ECSインスタンス起動後に実行するshell内容もしくはファイル名。今回はprovisioning.shにて記載しています。    SLB構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_slb default name 任意 \u0026rdquo;${var.project_name}-slb\u0026rdquo; SLBの名称。この例の場合、SLB-Sample-for-Terraform-slb として表示されます。    default internet 必須 true SLB addressのインターネットタイプ。Trueのインターネットにするか、falseのイントラネットいずれかになります。    default internet_charge_type 必須 paybytraffic インターネットチェンジタイプ。PayByBandwidth、PayByTrafficのいずれかになります。    default bandwidth 任意 5 最大帯域幅。   alicloud_slb_listener tcp_http load_balancer_id 必須 \u0026rdquo;${alicloud_slb.slb.id}\u0026rdquo; 新しいリスナーを起動するために使用されるロードバランサID。    tcp_http backend_port 必須 80 Server Load Balancerインスタンスバックエンドが使用するポート。    tcp_http frontend_port 必須 80 Server Load Balancerインスタンスフロントエンドが使用するポート。    tcp_http protocol 必須 \u0026ldquo;tcp\u0026rdquo; 使用するプロトコル。http、https、tcp、udpのいずれかになります。    tcp_http bandwidth 任意 10 Listenerの最大帯域幅。    tcp_http health_check_type 任意 \u0026ldquo;tcp\u0026rdquo; ヘルスチェックのタイプ。tcpとhttpのいずれかになります。   alicloud_slb_attachment slb_attachment load_balancer_id 必須 \u0026rdquo;${alicloud_slb.slb.id}\u0026rdquo; ロードバランサID。    slb_attachment instance_ids 必須 \u0026rdquo;${alicloud_instance.ECS_instance_for_SLB_Sample.*.id}\u0026rdquo; アタッチするECSインスタンスID。    ソースは以下になります。\nmain.tf\nprovider \u0026quot;alicloud\u0026quot; { access_key = \u0026quot;${var.access_key}\u0026quot; secret_key = \u0026quot;${var.secret_key}\u0026quot; region = \u0026quot;${var.region}\u0026quot; } resource \u0026quot;alicloud_vpc\u0026quot; \u0026quot;vpc\u0026quot; { name = \u0026quot;${var.project_name}-vpc\u0026quot; cidr_block = \u0026quot;192.168.1.0/24\u0026quot; description = \u0026quot;Enable SLB-Setteing-Sample vpc\u0026quot; } resource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;vsw\u0026quot; { name = \u0026quot;${var.project_name}-vswitch\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; cidr_block = \u0026quot;192.168.1.0/28\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; description = \u0026quot;Enable SLB-Setteing-Sample vswitch\u0026quot; } resource \u0026quot;alicloud_security_group\u0026quot; \u0026quot;sg\u0026quot; { name = \u0026quot;${var.project_name}_sg\u0026quot; description = \u0026quot;Marker security group for SLB-Setteing-Sample\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; } resource \u0026quot;alicloud_security_group_rule\u0026quot; \u0026quot;allow_http\u0026quot; { type = \u0026quot;ingress\u0026quot; ip_protocol = \u0026quot;tcp\u0026quot; nic_type = \u0026quot;intranet\u0026quot; policy = \u0026quot;accept\u0026quot; port_range = \u0026quot;80/80\u0026quot; priority = 1 security_group_id = \u0026quot;${alicloud_security_group.sg.id}\u0026quot; cidr_ip = \u0026quot;0.0.0.0/0\u0026quot; } resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;ECS_instance_for_SLB_Sample\u0026quot; { instance_name = \u0026quot;${var.project_name}-ECS-instance\u0026quot; host_name = \u0026quot;${var.project_name}-ECS-instance\u0026quot; instance_type = \u0026quot;ecs.n4.small\u0026quot; image_id = \u0026quot;centos_7_04_64_20G_alibase_201701015.vhd\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; count = 2 security_groups = [\u0026quot;${alicloud_security_group.sg.id}\u0026quot;] availability_zone = \u0026quot;${var.zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; internet_max_bandwidth_out = 5 password = \u0026quot;${var.ecs_password}\u0026quot; user_data = \u0026quot;${file(\u0026quot;provisioning.sh\u0026quot;)}\u0026quot; } resource \u0026quot;alicloud_slb\u0026quot; \u0026quot;default\u0026quot; { name = \u0026quot;${var.project_name}-slb\u0026quot; internet = true internet_charge_type = \u0026quot;paybytraffic\u0026quot; bandwidth = 5 } resource \u0026quot;alicloud_slb_listener\u0026quot; \u0026quot;tcp_http\u0026quot; { load_balancer_id = \u0026quot;${alicloud_slb.default.id}\u0026quot; backend_port = \u0026quot;80\u0026quot; frontend_port = \u0026quot;80\u0026quot; protocol = \u0026quot;tcp\u0026quot; bandwidth = \u0026quot;10\u0026quot; health_check_type = \u0026quot;tcp\u0026quot; } resource \u0026quot;alicloud_slb_attachment\u0026quot; \u0026quot;slb_attachment\u0026quot; { load_balancer_id = \u0026quot;${alicloud_slb.default.id}\u0026quot; instance_ids = [\u0026quot;${alicloud_instance.ECS_instance_for_SLB_Sample.*.id}\u0026quot;] }  \nvariables.tf\nvariable \u0026quot;access_key\u0026quot; {} variable \u0026quot;secret_key\u0026quot; {} variable \u0026quot;region\u0026quot; {} variable \u0026quot;zone\u0026quot; {} variable \u0026quot;project_name\u0026quot; {} variable \u0026quot;ecs_password\u0026quot; {}  \noutput.tf\noutput \u0026quot;ECS_instance_ip\u0026quot; { value = \u0026quot;${alicloud_instance.ECS_instance_for_SLB_Sample.*.public_ip}\u0026quot; } output \u0026quot;slb_ip\u0026quot; { value = \u0026quot;${alicloud_slb.default.address}\u0026quot; }  \nconfing.tfvars\naccess_key = \u0026quot;xxxxxxxxxxxxxxxx\u0026quot; secret_key = \u0026quot;xxxxxxxxxxxxxxxx\u0026quot; region = \u0026quot;ap-northeast-1\u0026quot; zone = \u0026quot;ap-northeast-1a\u0026quot; project_name = \u0026quot;SLB-Sample-for-Terraform\u0026quot; ecs_password = \u0026quot;!Password2019\u0026quot;  \nprovisioning.sh\n#!/bin/sh yum install -y httpd systemctl start httpd systemctl enable httpd  \n実行 \u0026nbsp; ソースの準備ができたら実行します。\nterraform init terraform play -var-file=\u0026quot;confing.tfvars\u0026quot; terraform apply -var-file=\u0026quot;confing.tfvars\u0026quot;  \nこれで完了です。問題なく実行できたら、ECSとSLBのIPが表示されます。\nalicloud_instance.ECS_instance_for_SLB_Sample.0: Still creating... (40s elapsed) alicloud_instance.ECS_instance_for_SLB_Sample.1: Still creating... (40s elapsed) alicloud_instance.ECS_instance_for_SLB_Sample[1]: Creation complete after 46s (ID: i-6web68sjtatfqyq2mdd7) alicloud_instance.ECS_instance_for_SLB_Sample.0: Still creating... (50s elapsed) alicloud_instance.ECS_instance_for_SLB_Sample[0]: Creation complete after 59s (ID: i-6we4hecn7bodqns4pode) alicloud_slb_attachment.slb_attachment: Creating... backend_servers: \u0026quot;\u0026quot; =\u0026gt; \u0026quot;\u0026lt;computed\u0026gt;\u0026quot; instance_ids.#: \u0026quot;0\u0026quot; =\u0026gt; \u0026quot;2\u0026quot; instance_ids.3313383734: \u0026quot;\u0026quot; =\u0026gt; \u0026quot;i-6web68sjtatfqyq2mdd7\u0026quot; instance_ids.3330124408: \u0026quot;\u0026quot; =\u0026gt; \u0026quot;i-6we4hecn7bodqns4pode\u0026quot; load_balancer_id: \u0026quot;\u0026quot; =\u0026gt; \u0026quot;lb-e9b8zcx2zwr5y423dlrjh\u0026quot; weight: \u0026quot;\u0026quot; =\u0026gt; \u0026quot;100\u0026quot; alicloud_slb_attachment.slb_attachment: Creation complete after 3s (ID: lb-e9b8zcx2zwr5y423dlrjh) Apply complete! Resources: 9 added, 0 changed, 0 destroyed. Outputs: ECS_instance_ip = [ 47.74.6.63, 47.74.11.111 ] slb_ip = 47.245.35.115 $  \n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/018_enbulk-to-oss/",
	"title": "EnbulkからOSSへ",
	"tags": [],
	"description": "EnbulkからOSSへデータを集約する方法を説明します。",
	"content": " はじめに \u0026nbsp; 本章はAlibabaCloud LogServiceを使ってOSSへデータを送ります。ゴールとしては以下のような構成図になります。 また、OSSにデータ収集後、E-MapReduceでHDFSへのETL処理がありますが、こちらは「OSSとE-MapReduce編」「ETL編」にて重複するため、割愛させていただきます。 （この章のゴールは外部データソースをOSSへ集約する、のみとなります）\nEnbulk とは \u0026nbsp; Fluendはデータをストリーミングで収集するに対し、データをバッチで収集するツール。\n並列データ転送ツール『Embulk』リリース！ http://frsyuki.hatenablog.com/entry/2015/02/16/080150\nEnbulkの導入 ECSにEnbulkをインストールし、S3からOSSへデータを送ってみます。ECSはCentOS 7.6です。 注意したいこととして、embulkは近年出たばかりのツールで、2019/08/15現時点、AlibabaCloud OSSのInput/Outputプラグインは未開発状態です。ここではFTPを利用した方法で対処します。 Step1. javaのインストール EmbulkはJavaアプリケーションなので、Javaがインストールされていることを確認してください。\n$ which java もしJavaが入ってないのであれば、インストールしてください。\n$ sudo yum install java-1.8.0-openjdk Javaが無事インストールされてることを確認します。\n[root@metabase ~]# which java /usr/bin/java [root@metabase ~]# java -version openjdk version \u0026#34;1.8.0_222\u0026#34; OpenJDK Runtime Environment (build 1.8.0_222-b10) OpenJDK 64-Bit Server VM (build 25.222-b10, mixed mode) [root@metabase ~]#  \nStep2. Embulkをダウンロードして配置します。\n[root@metabase ~]# curl --create-dirs -o ~/.embulk/bin/embulk -L \u0026#34;https://dl.embulk.org/embulk-latest.jar\u0026#34; % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 0 0 0 607 0 0 661 0 --:--:-- --:--:-- --:--:-- 661 100 43.2M 100 43.2M 0 0 5902k 0 0:00:07 0:00:07 --:--:-- 9134k [root@metabase ~]# [root@metabase ~]# chmod +x ~/.embulk/bin/embulk [root@metabase ~]#  \nStep3. PATHを設定します。最後にembulk --versionでバージョンが表示されたらembulkインストール完了です。\n[root@metabase ~]# export PATH=\u0026#34;$HOME/.embulk/bin:$PATH\u0026#34; [root@metabase ~]# source ~/.bashrc [root@metabase ~]# embulk --version embulk 0.9.18 [root@metabase ~]#  \nStep4. embulkを実行するためのプラグインのインストール 出力元：ECSとしてをFTPのプラグインembulk-input-ftpをインストールします。\n[root@metabase ~]# embulk gem install embulk-input-ftp 2019-08-17 10:10:43.668 +0800: Embulk v0.9.18 Gem plugin path is: /root/.embulk/lib/gems Fetching: embulk-input-ftp-0.2.0.gem (100%) Successfully installed embulk-input-ftp-0.2.0 1 gem installed [root@metabase ~]#  出力元としてAWS S3でも可能です。その場合はembulk-input-s3をインストールする必要があります。 https://github.com/embulk/embulk-input-s3\n[root@metabase ~]# embulk gem install embulk-input-s3 2019-08-17 10:22:11.376 +0800: Embulk v0.9.18 Gem plugin path is: /root/.embulk/lib/gems Fetching: embulk-input-s3-0.3.4.gem (100%) Successfully installed embulk-input-s3-0.3.4 1 gem installed [root@metabase ~]#  出力先として、FTPプラグインをインストールします。\n[root@metabase ~]# embulk gem install embulk-output-ftp 2019-08-17 10:36:06.656 +0800: Embulk v0.9.18 Gem plugin path is: /root/.embulk/lib/gems Fetching: embulk-output-ftp-0.2.2.gem (100%) Successfully installed embulk-output-ftp-0.2.2 1 gem installed \nStep5. embulkを実行するための設定ファイル作成 config.yamlファイルを作成します。今回はAWS S3からOSSへのデータ転送を目指します。\nin: type: s3 bucket:bigdata-sample path_prefix:nyc-taxi/yellow_tripdata/csv endpoint:s3.ap-northeast-1.amazonaws.com auth_method: basic access_key_id: [AWS Access Key] secret_access_key: [AWS Secret Key] parser: type: csv delimiter: \u0026#34;\\t\u0026#34; charset: UTF-8 newline: CRLF null_string: \u0026#39;NULL\u0026#39; skip_header_lines: 0 comment_line_marker: \u0026#39;#\u0026#39; allow_extra_columns: true columns: - {name: json_payload, type: string} out: type: ftp host: oss://[accessKeyId:accessKeySecret@]bucket[oss-ap-northeast-1.aliyuncs.com]/object/path port: 21 ssl: true ssl_verify: false path_prefix: /ftp/file/path/prefix file_ext: csv 参考：AlibabaCloud OSSのリージョンとエンドポイント https://jp.alibabacloud.com/help/doc-detail/31837.htm Step6. 上記の設定ファイルを引数にしつつembulkを実行します。\n[root@metabase ~]# embulk run config.yaml 2019-08-17 11:58:34.152 +0800: Embulk v0.9.18 2019-08-17 11:58:34.883 +0800 [WARN] (main): DEPRECATION: JRuby org.jruby.embed.ScriptingContainer is directly injected. 2019-08-17 11:58:37.954 +0800 [INFO] (main): Gem's home and path are set by default: \u0026quot;/root/.embulk/lib/gems\u0026quot; 2019-08-17 11:58:37.969 +0800 [INFO] (main): Started Embulk v0.9.18 2019-08-17 11:58:37.981 +0800 [INFO] (0001:preview): Loaded plugin embulk-input-randomj (0.5.1) 2019-08-17 11:58:37.990 +0800 [INFO] (0001:preview): Loaded plugin embulk-filter-column (0.7.1) 〜　略 〜  これにより、AWS S3にあったcsvファイル集をOSSへ移植できてることを確認できました。 プラグインを作る方法 embulkは各自カスタムプラグインを作成することができます。著者はプラグインジェネレータを使ってaliyunOSS APIを利用したカスタマイズプラグインを作成、移植してみました。 ただ、csv以外のフォーマット(json、parquet）で失敗するため、もう少し詰めてからembulk pluginリストへアップロードしたいと思います。\nAlibabaCloud OSS SDK for Java https://www.alibabacloud.com/help/doc-detail/32008.htm\n\n参考  github.com - embulk/embulk embulkのインストール・アップデート方法 embulkのプラグインを作る Embulkってなに？ということから、Embulkのプラグインを開発するところまでをまとめたページ  \n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/scenario/terraform/rds-setting-sample/",
	"title": "RDSの構築",
	"tags": [],
	"description": "Terraformを用いて、Alibaba Cloud上でRDSを作成します。",
	"content": " \u0026nbsp; TerraformでデータベースサービスであるRDSを作ってみます。ゴールの構成図は以下の通りです。\nまたECSからRDS for MySQLへ接続するためにdocker-composeを使います。docker-composeはコンテナオーケストレーションの一つで、環境構築を再現するのが楽になる手法です。docker-compose.ymlファイルは以下の通りです。\nversion: '3' services: # MySQL db: image: mysql:5.7 container_name: mysql_host environment: - MYSQL_HOST='rds-sample.mysql.japan.rds.aliyuncs.com' - MYSQL_DATABASE='rds_setting_sample' - MYSQL_USER='test_user' - MYSQL_PASSWORD='!Password2019' - TZ='Asia/Tokyo' command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci volumes: - ./docker/db/data:/var/lib/mysql - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf - ./docker/db/sql:/docker-entrypoint-initdb.d ports: - 3306:3306  それぞれのパラメータは以下の通りです。\nネットワーク構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_vpc vpc name 任意 ${var.project_name}-vpc VPC の名称。この例の場合、RDS-Sample-for-Terraform-vpc として表示されます。    vpc cidr_block 必須 192.168.1.0/24 VPC の CIDR ブロック    vpc description 任意 Enable SLB-Setteing-Sample vpc VPC の説明。   alicloud_vswitch vsw name 任意 ${var.project_name}-vswitch vswitch の名称。この例の場合、RDS-Sample-for-Terraform-vswitch として表示されます。    vsw vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID    vsw cidr_block 必須 192.168.1.0/28 vswitch の CIDR ブロック    vsw availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    vsw description 任意 Enable RDS-Setteing-Sample vswitch vswitch の説明。    ECSインスタンスセキュリティグループ構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_security_group sg name 任意 ${var.project_name}_sg\u0026rdquo; セキュリティグループ の名称。この例の場合、RDS-Sample-for-Terraform_sgとして表示されます。    sg vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID    sg description 任意 Enable SSH access via port 22 セキュリティグループ の説明。   alicloud_security_group_rule allow_http type 必須 ingress セキュリティグループのタイプ。 ingress（受信） かegress（送信） のいずれかになります。    allow_http ip_protocol 必須 tcp 通信プロトコル。 tcp, udp, icmp, gre, all のいずれかになります。    allow_http nic_type 必須 intranet ネットワークタイプ。 internet か intranet のいずれかになります。    allow_http policy 必須 accept 許可ポリシー。 acceptか drop のいずれかになります。    allow_http port_range 必須 80\u0026frasl;80 通信プロトコルのポート範囲。値が「- 1/-1」の場合は無効になります。    allow_http priority 必須 1 許可ポリシーの優先順位。    allow_http security_group_id 必須 ${alicloud_security_group.sg.id} アタッチするセキュリティグループのID    allow_http cidr_ip 任意 0.0.0.0/0 ターゲットとなるIPアドレス。デフォルトは「0.0.0.0/0」。値が「0.0.0.0/0」の場合は無制限状態となります。    allow_ssh type 必須 ingress セキュリティグループのタイプ。 ingress（受信） かegress（送信） のいずれかになります。    allow_ssh ip_protocol 必須 tcp 通信プロトコル。 tcp, udp, icmp, gre, all のいずれかになります。    allow_ssh nic_type 必須 intranet ネットワークタイプ。 internet か intranet のいずれかになります。    allow_ssh policy 必須 accept 許可ポリシー。 acceptか drop のいずれかになります。    allow_ssh port_range 必須 22\u0026frasl;22 通信プロトコルのポート範囲。値が「- 1/-1」の場合は無効になります。    allow_ssh priority 必須 1 許可ポリシーの優先順位。    allow_ssh security_group_id 必須 ${alicloud_security_group.sg.id} アタッチするセキュリティグループのID    allow_ssh cidr_ip 任意 0.0.0.0/0 ターゲットとなるIPアドレス。デフォルトは「0.0.0.0/0」。値が「0.0.0.0/0」の場合は無制限状態となります。    ECSインスタンス構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_instance ECS_instance instance_name 任意 ${var.project_name}-ECS-instance ECSインスタンスの名称。この例の場合、RDS-Sample-for-Terraform-ECS-instance として表示されます。    ECS_instance host_name 任意 ${var.project_name}-ECS-instance ECSインスタンスのHost名称。この例の場合、RDS-Sample-for-Terraform-ECS-instance として表示されます。    ECS_instance instance_type 必須 ecs.xn4.small ECSインスタンスのタイプ。今回は ecs.xn4.smallを選定します。    ECS_instance image_id 必須 centos_7_04_64_20G_alibase_201701015.vhd ECSインスタンスのImageID。今回は centos_7_04_64_20G_alibase_201701015.vhd を選定します。    ECS_instance system_disk_category 任意 cloud_efficiency ECSインスタンスのディスクタイプ。デフォルトは cloud_efficiency です。    ECS_instance security_groups 必須 ”${alicloud_security_group.sg.id}” アタッチするセキュリティグループのID    ECS_instance availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    ECS_instance vswitch_id 必須 ${alicloud_vswitch.vsw.id} アタッチするVSwitchのID。    ECS_instance password 任意 \u0026rdquo;${var.ecs_password}\u0026rdquo; EC インスタンスのログインパスワード。    ECS_instance internet_max_bandwidth_out 任意 20 パブリックネットワークへの最大帯域幅。デフォルトは0ですが、0より大きい値を入れるとパブリックIPアドレスがアタッチされます。    ECS_instance user_data 任意 \u0026rdquo;${file(\u0026ldquo;provisioning.sh\u0026rdquo;)}\u0026rdquo; ECSインスタンス起動後に実行するshell内容もしくはファイル名。今回はprovisioning.shにて記載しています。    SLB構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_slb default name 任意 \u0026rdquo;${var.project_name}-slb\u0026rdquo; SLBの名称。この例の場合、RDS-Sample-for-Terraform-slb として表示されます。    default vswitch_id 任意 \u0026rdquo;${alicloud_vswitch.vsw.id}\u0026rdquo; アタッチするVSwitchのID。    default internet 必須 true SLB addressのインターネットタイプ。Trueのインターネットにするか、falseのイントラネットいずれかになります。    default internet_charge_type 必須 paybytraffic インターネットチェンジタイプ。PayByBandwidth、PayByTrafficのいずれかになります。   alicloud_slb_listener http load_balancer_id 必須 \u0026rdquo;${alicloud_slb.slb.id}\u0026rdquo; 新しいリスナーを起動するために使用されるロードバランサID。    http backend_port 必須 80 Server Load Balancerインスタンスバックエンドが使用するポート。    http frontend_port 必須 80 Server Load Balancerインスタンスフロントエンドが使用するポート。    http health_check_connect_port 任意 80 ヘルスチェックが使用するポート。health_check_typeの代わりに使用することも可能です。    http protocol 必須 \u0026ldquo;http\u0026rdquo; 使用するプロトコル。http、https、tcp、udpのいずれかになります。    http bandwidth 任意 10 Listenerの最大帯域幅。    http sticky_session 任意 \u0026ldquo;on\u0026rdquo; セッション持続性を有効にするかどうか。on、offのいずれかになります。    http sticky_session_type 任意 \u0026ldquo;insert\u0026rdquo; Cookieを処理するためのタイプ。insertかserverのいずれかになります。    http cookie 任意 \u0026ldquo;slblistenercookie\u0026rdquo; サーバに設定されているクッキー。    http cookie_timeout 任意 86400 クッキーのタイムアウト時間。   alicloud_slb_attachment slb_attachment load_balancer_id 必須 \u0026rdquo;${alicloud_slb.slb.id}\u0026rdquo; ロードバランサID。    slb_attachment instance_ids 必須 \u0026rdquo;${alicloud_instance.ECS_instance.*.id}\u0026rdquo; アタッチするECSインスタンスID。    RDS構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_db_instance db_instance engine 必須 \u0026ldquo;MySQL\u0026rdquo; データベースタイプ。MySQL、SQLServer、PostgreSQL、PPASのいずれかになります。    db_instance engine_version 必須 \u0026ldquo;5.7\u0026rdquo; データベースのバージョン。    db_instance instance_type 必須 \u0026ldquo;rds.mysql.t1.small\u0026rdquo; DBインスタンスタイプ。    db_instance instance_storage 必須 5 DBインスタンスのストレージ領域。    db_instance vswitch_id 必須 \u0026rdquo;${alicloud_vswitch.vsw.id}\u0026rdquo; アタッチするVSwitchのID。   alicloud_db_database default name 必須 \u0026rdquo;${var.database_name}\u0026rdquo; RDSの名称。この例の場合、RDS-Sample-for-Terraform として表示されます。    default instance_id 必須 \u0026rdquo;${alicloud_db_instance.db_instance.id}\u0026rdquo; データベースを実行するインスタンスのID。    default character_set 必須 \u0026ldquo;utf8\u0026rdquo; 文字セット。   alicloud_db_account default instance_id 必須 \u0026rdquo;${alicloud_db_instance.db_instance.id}\u0026rdquo; データベースを実行するインスタンスのID。    default name 必須 \u0026rdquo;${var.db_user}\u0026rdquo; 運用アカウント名。    default password 必須 \u0026rdquo;${var.db_password}\u0026rdquo; 運用アカウント名に対するパスワード。   alicloud_db_account_privilege default instance_id 必須 \u0026rdquo;${alicloud_db_instance.db_instance.id}\u0026rdquo; データベースを実行するインスタンスのID。    default account_name 必須 \u0026rdquo;${alicloud_db_account.default.name}\u0026rdquo; 運用アカウント名。    default db_names 必須 \u0026rdquo;${alicloud_db_database.default.name}\u0026rdquo; データベース名。    default privilege 必須 \u0026ldquo;ReadWrite\u0026rdquo; アクセス権限。ReadOnly、ReadWriteのいずれかになります。   alicloud_db_connection default instance_id 必須 \u0026rdquo;${alicloud_db_instance.db_instance.id}\u0026rdquo; データベースを実行するインスタンスのID。    default connection_prefix 必須 \u0026ldquo;rds-sample\u0026rdquo; インターネット接続プレフィックス。    default port 任意 \u0026ldquo;3306\u0026rdquo; インターネット接続ポート。    \nソースは以下になります。\nmain.tf\nprovider \u0026quot;alicloud\u0026quot; { access_key = \u0026quot;${var.access_key}\u0026quot; secret_key = \u0026quot;${var.secret_key}\u0026quot; region = \u0026quot;${var.region}\u0026quot; } resource \u0026quot;alicloud_vpc\u0026quot; \u0026quot;vpc\u0026quot; { name = \u0026quot;${var.project_name}-vpc\u0026quot; cidr_block = \u0026quot;192.168.1.0/24\u0026quot; description = \u0026quot;Enable RDS Setting Sample vpc\u0026quot; } resource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;vsw\u0026quot; { name = \u0026quot;${var.project_name}-vswitch\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; cidr_block = \u0026quot;192.168.1.0/28\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; description = \u0026quot;Enable RDS Setting Sample vswitch\u0026quot; } # DBを作成する resource \u0026quot;alicloud_db_instance\u0026quot; \u0026quot;db_instance\u0026quot; { engine = \u0026quot;MySQL\u0026quot; engine_version = \u0026quot;5.7\u0026quot; instance_type = \u0026quot;rds.mysql.t1.small\u0026quot; instance_storage = 5 vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; } resource \u0026quot;alicloud_db_database\u0026quot; \u0026quot;default\u0026quot; { name = \u0026quot;${var.database_name}\u0026quot; instance_id = \u0026quot;${alicloud_db_instance.db_instance.id}\u0026quot; character_set = \u0026quot;utf8\u0026quot; } resource \u0026quot;alicloud_db_account\u0026quot; \u0026quot;default\u0026quot; { instance_id = \u0026quot;${alicloud_db_instance.db_instance.id}\u0026quot; name = \u0026quot;${var.db_user}\u0026quot; password = \u0026quot;${var.db_password}\u0026quot; } resource \u0026quot;alicloud_db_account_privilege\u0026quot; \u0026quot;default\u0026quot; { instance_id = \u0026quot;${alicloud_db_instance.db_instance.id}\u0026quot; account_name = \u0026quot;${alicloud_db_account.default.name}\u0026quot; db_names = [\u0026quot;${alicloud_db_database.default.name}\u0026quot;] privilege = \u0026quot;ReadWrite\u0026quot; } resource \u0026quot;alicloud_db_connection\u0026quot; \u0026quot;default\u0026quot; { instance_id = \u0026quot;${alicloud_db_instance.db_instance.id}\u0026quot; connection_prefix = \u0026quot;rds-sample\u0026quot; port = \u0026quot;3306\u0026quot; } resource \u0026quot;alicloud_security_group\u0026quot; \u0026quot;sg\u0026quot; { name = \u0026quot;${var.project_name}_security_group\u0026quot; description = \u0026quot;Enable RDS Setting Sample security group\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; } resource \u0026quot;alicloud_security_group_rule\u0026quot; \u0026quot;allow_ssh\u0026quot; { type = \u0026quot;ingress\u0026quot; ip_protocol = \u0026quot;tcp\u0026quot; nic_type = \u0026quot;intranet\u0026quot; policy = \u0026quot;accept\u0026quot; port_range = \u0026quot;22/22\u0026quot; priority = 1 security_group_id = \u0026quot;${alicloud_security_group.sg.id}\u0026quot; cidr_ip = \u0026quot;0.0.0.0/0\u0026quot; } resource \u0026quot;alicloud_security_group_rule\u0026quot; \u0026quot;allow_http\u0026quot; { type = \u0026quot;ingress\u0026quot; ip_protocol = \u0026quot;tcp\u0026quot; nic_type = \u0026quot;intranet\u0026quot; policy = \u0026quot;accept\u0026quot; port_range = \u0026quot;80/80\u0026quot; priority = 1 security_group_id = \u0026quot;${alicloud_security_group.sg.id}\u0026quot; cidr_ip = \u0026quot;0.0.0.0/0\u0026quot; } resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;ECS_instance\u0026quot; { instance_name = \u0026quot;${var.project_name}-ECS-instance\u0026quot; host_name = \u0026quot;${var.project_name}-ECS-instance\u0026quot; instance_type = \u0026quot;ecs.xn4.small\u0026quot; image_id = \u0026quot;centos_7_04_64_20G_alibase_201701015.vhd\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.sg.id}\u0026quot;] availability_zone = \u0026quot;${var.zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; password = \u0026quot;${var.ecs_password}\u0026quot; internet_max_bandwidth_out = 20 user_data = \u0026quot;${file(\u0026quot;provisioning.sh\u0026quot;)}\u0026quot; } resource \u0026quot;alicloud_slb\u0026quot; \u0026quot;default\u0026quot; { name = \u0026quot;${var.project_name}-slb\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.vsw.id}\u0026quot; internet = true internet_charge_type = \u0026quot;paybytraffic\u0026quot; } resource \u0026quot;alicloud_slb_listener\u0026quot; \u0026quot;http\u0026quot; { load_balancer_id = \u0026quot;${alicloud_slb.default.id}\u0026quot; backend_port = 80 frontend_port = 80 health_check_connect_port = 80 bandwidth = 10 protocol = \u0026quot;http\u0026quot; sticky_session = \u0026quot;on\u0026quot; sticky_session_type = \u0026quot;insert\u0026quot; cookie = \u0026quot;slblistenercookie\u0026quot; cookie_timeout = 86400 } resource \u0026quot;alicloud_slb_attachment\u0026quot; \u0026quot;default\u0026quot; { load_balancer_id = \u0026quot;${alicloud_slb.default.id}\u0026quot; instance_ids = [\u0026quot;${alicloud_instance.ECS_instance.id}\u0026quot;] } data \u0026quot;template_file\u0026quot; \u0026quot;user_data\u0026quot; { template = \u0026quot;${file(\u0026quot;provisioning.sh\u0026quot;)}\u0026quot; vars { DB_HOST_IP = \u0026quot;${alicloud_db_instance.db_instance.connection_string}\u0026quot; DB_NAME = \u0026quot;${var.database_name}\u0026quot; DB_USER = \u0026quot;${var.db_user}\u0026quot; DB_PASSWORD = \u0026quot;${var.db_password}\u0026quot; } }  \nvariables.tf\nvariable \u0026quot;access_key\u0026quot; {} variable \u0026quot;secret_key\u0026quot; {} variable \u0026quot;region\u0026quot; {} variable \u0026quot;zone\u0026quot; {} variable \u0026quot;project_name\u0026quot; {} variable \u0026quot;database_name\u0026quot; {} variable \u0026quot;ecs_password\u0026quot; {} variable \u0026quot;db_user\u0026quot; {} variable \u0026quot;db_password\u0026quot; {}  \noutput.tf\noutput \u0026quot;ECS_instance_ip\u0026quot; { value = \u0026quot;${alicloud_instance.ECS_instance.*.public_ip}\u0026quot; } output \u0026quot;slb_ip\u0026quot; { value = \u0026quot;${alicloud_slb.default.address}\u0026quot; } output \u0026quot;rds_host\u0026quot; { value = \u0026quot;${alicloud_db_instance.db_instance.connection_string}\u0026quot; }  \nconfing.tfvars\naccess_key = \u0026quot;xxxxxxxxxxxxxxxxxxxx\u0026quot; secret_key = \u0026quot;xxxxxxxxxxxxxxxxxxxx\u0026quot; region = \u0026quot;ap-northeast-1\u0026quot; zone = \u0026quot;ap-northeast-1a\u0026quot; project_name = \u0026quot;RDS-Setting-Sample-for-Terraform\u0026quot; database_name = \u0026quot;rds_setting_sample\u0026quot; ecs_password = \u0026quot;!Password2019\u0026quot; db_user = \u0026quot;test_user\u0026quot; db_password = \u0026quot;!Password2019\u0026quot;  \nprovisioning.sh\n#!/bin/sh export MYSQL_HOST=${DB_HOST_IP} export MYSQL_DATABASE=${DB_NAME} export MYSQL_USER=${DB_USER} export MYSQL_PASSWORD=${DB_PASSWORD} sudo yum install -y yum-utils unzip mysql sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo sudo yum makecache fast sudo yum install docker-ce curl -L https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose chmod +x /usr/local/bin/docker-compose echo \u0026quot;version: '3'\u0026quot; \u0026gt;\u0026gt; docker-compose.yml echo \u0026quot;services:\u0026quot; \u0026gt;\u0026gt; docker-compose.yml echo \u0026quot; # MySQL\u0026quot; \u0026gt;\u0026gt; docker-compose.yml echo \u0026quot; db:\u0026quot; \u0026gt;\u0026gt; docker-compose.yml echo \u0026quot; image: mysql:5.7\u0026quot; \u0026gt;\u0026gt; docker-compose.yml echo \u0026quot; container_name: mysql_host\u0026quot; \u0026gt;\u0026gt; docker-compose.yml echo \u0026quot; environment:\u0026quot; \u0026gt;\u0026gt; docker-compose.yml echo \u0026quot; - MYSQL_HOST=db_host\u0026quot; \u0026gt;\u0026gt; docker-compose.yml echo \u0026quot; - MYSQL_DATABASE=db_name\u0026quot; \u0026gt;\u0026gt; docker-compose.yml echo \u0026quot; - MYSQL_USER=db_user\u0026quot; \u0026gt;\u0026gt; docker-compose.yml echo \u0026quot; - MYSQL_PASSWORD=db_password\u0026quot; \u0026gt;\u0026gt; docker-compose.yml echo \u0026quot; - TZ='Asia/Tokyo'\u0026quot; \u0026gt;\u0026gt; docker-compose.yml echo \u0026quot; command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci\u0026quot; \u0026gt;\u0026gt; docker-compose.yml echo \u0026quot; volumes:\u0026quot; \u0026gt;\u0026gt; docker-compose.yml echo \u0026quot; - ./docker/db/data:/var/lib/mysql\u0026quot; \u0026gt;\u0026gt; docker-compose.yml echo \u0026quot; - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf\u0026quot; \u0026gt;\u0026gt; docker-compose.yml echo \u0026quot; - ./docker/db/sql:/docker-entrypoint-initdb.d\u0026quot; \u0026gt;\u0026gt; docker-compose.yml echo \u0026quot; ports:\u0026quot; \u0026gt;\u0026gt; docker-compose.yml echo \u0026quot; - 3306:3306\u0026quot; \u0026gt;\u0026gt; docker-compose.yml sed -i \u0026quot;s/=db_host/='$MYSQL_HOST'/g\u0026quot; docker-compose.yml sed -i \u0026quot;s/=db_name/='$MYSQL_DATABASE'/g\u0026quot; docker-compose.yml sed -i \u0026quot;s/=db_user/='$MYSQL_USER'/g\u0026quot; docker-compose.yml sed -i \u0026quot;s/=db_password/='$MYSQL_PASSWORD'/g\u0026quot; docker-compose.yml sudo service docker start docker-compose up -d  \n実行 \u0026nbsp; ソースの準備ができたら実行します。\nterraform init terraform play -var-file=\u0026quot;confing.tfvars\u0026quot; terraform apply -var-file=\u0026quot;confing.tfvars\u0026quot;  \nこれで完了です。問題なく実行できたら、ECSとSLBそれぞれのIP、DBのhostが表示されます。 DBのhostはECSから手動接続するにあたり必要なのでメモを残してください。\nalicloud_db_account_privilege.default: Creation complete after 2m29s (ID: rm-e9b9hkm8u33h8cd3x:test_user:ReadWrite) alicloud_db_connection.default: Creation complete after 2m32s (ID: rm-e9b9hkm8u33h8cd3x:rds-sample) data.template_file.user_data: Refreshing state... Apply complete! Resources: 14 added, 0 changed, 0 destroyed. Outputs: ECS_instance_ip = [ 47.74.52.124 ] rds_host = rm-e9b9hkm8u33h8cd3x.mysql.japan.rds.aliyuncs.com slb_ip = 47.74.1.41 $  \nそれではECSに入り、RDSへ接続してみます。先ほどのDB host名が必要になります。\n$ ssh root@47.74.52.124 The authenticity of host '47.74.52.124 (47.74.52.124)' can't be established. ECDSA key fingerprint is SHA256:XaQ96OPhtGZQPyQXlYin5qF+cqxS2Arle41wTqkOinE. Are you sure you want to continue connecting (yes/no)? yes Warning: Permanently added '47.74.52.124' (ECDSA) to the list of known hosts. root@47.74.52.124's password: Welcome to Alibaba Cloud Elastic Compute Service ! [root@RDS-Setting-Sample-for-Terraform-ECS-instance ~]# [root@RDS-Setting-Sample-for-Terraform-ECS-instance ~]# mysql --version mysql Ver 15.1 Distrib 5.5.60-MariaDB, for Linux (x86_64) using readline 5.1 [root@RDS-Setting-Sample-for-Terraform-ECS-instance ~]# [root@RDS-Setting-Sample-for-Terraform-ECS-instance ~]# [root@RDS-Setting-Sample-for-Terraform-ECS-instance ~]# mysql -u test_user -p -h rm-e9b9hkm8u33h8cd3x.mysql.japan.rds.aliyuncs.com Enter password: Welcome to the MariaDB monitor. Commands end with ; or \\g. Your MySQL connection id is 51312248 Server version: 5.5.18.1 Source distribution Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others. Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement. MySQL [(none)]\u0026gt; MySQL [(none)]\u0026gt; exit; Bye [root@RDS-Setting-Sample-for-Terraform-ECS-instance ~]#  無事MySQLへ接続できたことを確認できました。\n\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/019_apache-arrow-to-oss/",
	"title": "Apache ArrowからOSSへ",
	"tags": [],
	"description": "Apache ArrowからOSSへデータを集約する方法を説明します。",
	"content": " はじめに \u0026nbsp; 本章はAlibabaCloud LogServiceを使ってOSSへデータを送ります。ゴールとしては以下のような構成図になります。 また、OSSにデータ収集後、E-MapReduceでHDFSへのETL処理がありますが、こちらは「OSSとE-MapReduce編」「ETL編」にて重複するため、割愛させていただきます。 （この章のゴールは外部データソースをOSSへ集約する、のみとなります）\nApache Arrow とは \u0026nbsp; Apache Arrowは様々な言語で使えるIn-Memoryデータ変換処理プラットフォームです。大規模なBigDataでSpark以外の手法の一つです。見た目、Sparkにちょっと似ていますが、こちらの利点としては以下の通りです。\n インメモリの列指向データフォーマット。PythonのPandas問題を解決するために開発 CPU/GPUのキャッシュメモリを利用して大量のデータの処理効率化 データ交換（シリアライズ、転送、デシリアライズ）の高速化に特化 実装コストは非常に低い PySparkなどSparkと連携することで、CPU、NW転送の観点上、今より数十倍高速化が可能 OLAP、OLTP、DeepLearningなど様々な分野で活躍 データの交換をするならArrow、データの永続化をするならSpark  参考：PythonのPandas問題 https://qiita.com/tamagawa-ryuji/items/3d8fc52406706ae0c144\nより詳しくはApache Arrowの公式ガイドラインを参照してください。 https://arrow.apache.org/ https://arrow.apache.org/docs/format/README.html\n\nそれではApache Arrowを使ってECSにあるcsvファイルをhdfs_Parquetへ変換します。 \u0026gt;注意として、ECSはOSSへのアクセス権限を持ってることが前提となります。\nApache ArrowのParquet形式変換で様々なオプションがありますので、こちらを参考にしてください。 https://arrow.apache.org/docs/python/parquet.html\nApache Arrowの使い方 Arrowは多くの言語をサポートしています。（現在も様々な言語へ開発中） 今回はPythonを使います。 https://github.com/apache/arrow\nStep1. pip install arrowでインストールします。またpandasも必要なのでなければpip install pandasとインストールしましょう。\n[root@metabase ~]# pip install arrow DEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won\u0026#39;t be maintained after that date. A future version of pip will drop support for Python 2.7. Looking in indexes: http://jp.mirrors.cloud.aliyuncs.com/pypi/simple/ Collecting arrow Downloading http://jp.mirrors.cloud.aliyuncs.com/pypi/packages/5d/c7/468bb95a10fb8ddb5f3f80e1aef06b78f64d6e5df958c39672f80581381f/arrow-0.13.0.tar.gz (92kB) |████████████████████████████████| 102kB 22.9MB/s Collecting python-dateutil (from arrow) Downloading http://jp.mirrors.cloud.aliyuncs.com/pypi/packages/74/68/d87d9b36af36f44254a8d512cbfc48369103a3b9e474be9bdfe536abfc45/python_dateutil-2.7.5-py2.py3-none-any.whl (225kB) |████████████████████████████████| 235kB 19.6MB/s Collecting backports.functools_lru_cache\u0026gt;=1.2.1 (from arrow) Downloading http://jp.mirrors.cloud.aliyuncs.com/pypi/packages/03/8e/2424c0e65c4a066e28f539364deee49b6451f8fcd4f718fefa50cc3dcf48/backports.functools_lru_cache-1.5-py2.py3-none-any.whl Collecting six\u0026gt;=1.5 (from python-dateutil-\u0026gt;arrow) Downloading http://jp.mirrors.cloud.aliyuncs.com/pypi/packages/73/fb/00a976f728d0d1fecfe898238ce23f502a721c0ac0ecfedb80e0d88c64e9/six-1.12.0-py2.py3-none-any.whl Building wheels for collected packages: arrow Building wheel for arrow (setup.py) ... done Stored in directory: /root/.cache/pip/wheels/b5/ee/e0/5238ee875bb4565c8c2070c4fd84c3c1640684b30b7bd04762 Successfully built arrow Installing collected packages: six, python-dateutil, backports.functools-lru-cache, arrow Successfully installed arrow-0.13.0 backports.functools-lru-cache-1.5 python-dateutil-2.7.5 six-1.12.0 [root@metabase ~]#  Step2. 今回はローカルにあるcsvファイルをparquetへETLしOSSヘ保存します。\nimport pyarrow as pa import pyarrow.parquet as pq import pandas as pd # CSVをDataFrameへ読み込ませる df = pd.read_csv(\u0026#39;./test.csv\u0026#39;) # DataFrameをArrow Tableへ代入 table = pa.Table.from_pandas(df) # Arrow TableデータをOSSのParquetへ保存。 pq.write_table(table, \u0026#39;oss://bigdata-prod-tech/arrow/test.pq\u0026#39;) #`write_to_dataset`を使ってOSSヘパーティションつけて保存することも可能です。詳しくはArrowドキュメントを参照してください。 pq.write_to_dataset(table, bucket_uri, filesystem=fs, partition_cols=[\u0026#39;year\u0026#39;, \u0026#39;month\u0026#39;, \u0026#39;day\u0026#39;], use_dictionary=True, compression=\u0026#39;snappy\u0026#39;, use_deprecated_int96_timestamps=True) 以上です。Arrowを使えば、逆のパターンも可能です。\n# ParquetをArrow Tableへ読み込ませる oss_parquet = pq.read_table(\u0026#39;oss://bigdata-prod-tech/arrow/test.pq\u0026#39;) # Arrow TableからDataFrameへ変換 df2 = oss_parquet.to_pandas() # DataFrameをCSVファイルとして出力 df2.to_csv(\u0026#34;test2.csv\u0026#34;) 番外編 Pandasを使わずにcsvファイルをparquetへETLすることもできます。\nimport pyarrow as pa import pyarrow.parquet as pq df = pd.read_csv(\u0026#39;./test.csv\u0026#39;) table = pa.Table.from_pandas(train) pq.write_table(table, \u0026#39;./parquet/test.parquet\u0026#39;) \n他にこちらも参考にいただければ幸いです。\nPyArrowでテキストファイルからParquetファイルを作成する方法\nhttps://qiita.com/kusanoiskuzuno/items/eef36ba8dc23cd0828b1\nApache SparkとPandasを使用したApache Arrowの使用方法\nhttps://towardsdatascience.com/a-gentle-introduction-to-apache-arrow-with-apache-spark-and-pandas-bb19ffe0ddae\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/scenario/terraform/kubernetes-setting-sample/",
	"title": "Kubernetesの構築と設定",
	"tags": [],
	"description": "Terraformを用いて、Alibaba Cloud上でkubernetesを作成します。",
	"content": " \u0026nbsp; 簡単なkuberntesクラスターを作ってみます。シングルゾーンによるクラスタでの作成になります。ゴールの構成図は以下の通りです。\nそれぞれのパラメータは以下の通りです。\nネットワーク構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_vpc vpc name 任意 ${var.project_name}-vpc VPC の名称。この例の場合、Kubernetes-Sample-for-Terraform-vpc として表示されます。    vpc cidr_block 必須 192.168.1.0/24 VPC の CIDR ブロック    vpc description 任意 Enable k8s-Setteing-Sample vpc VPC の説明。   alicloud_vswitch vsw name 任意 ${var.project_name}-vswitch vswitch の名称。この例の場合、Kubernetes-Sample-for-Terraform-vswitch として表示されます。    vsw vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID    vsw cidr_block 必須 192.168.1.0/28 vswitch の CIDR ブロック    vsw availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    vsw description 任意 Enable k8s-Sample vswitch vswitch の説明。    kubernetesクラスター構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_cs_kubernetes k8s name 任意 ${var.project_name}-k8s kubernetesクラスター名称    k8s vswitch_ids 必須 \u0026rdquo;${alicloud_vswitch.vsw.id}\u0026rdquo; アタッチするVSwitchのID。    k8s availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    k8s new_nat_gateway 任意 true kubernetesクラスタの作成中に新しいNATゲートウェイを作成するかどうか。デフォルトはtrue。    k8s master_instance_types 必須 [\u0026ldquo;ecs.xn4.small\u0026rdquo;] マスターノードのインスタンスタイプ。    k8s worker_instance_types 必須 [\u0026ldquo;ecs.xn4.small\u0026rdquo;] ワーカーノードのインスタンスタイプ。    k8s worker_numbers 任意 [2] ワーカーノードの台数。    k8s master_disk_size 任意 40 マスターノードのシステムディスクサイズ。    k8s worker_disk_size 任意 100 ワーカーノードのシステムディスクサイズ。    k8s password 任意 \u0026rdquo;${var.k8s_password}\u0026rdquo; クラスタノードのsshログインパスワード。    k8s pod_cidr 任意 \u0026ldquo;172.20.0.0/16\u0026rdquo; ポッドネットワークのCIDRブロック。    k8s service_cidr 任意 \u0026ldquo;172.21.0.0/20\u0026rdquo; サービスネットワークのCIDRブロック。    k8s enable_ssh 任意 true SSHログインを許可するか。デフォルトはfalse。    k8s install_cloud_monitor 任意 true クラウドモニタをkubernetesノードにインストールするかどうか。    \nソースは以下になります。\n\nmain.tf\nprovider \u0026quot;alicloud\u0026quot; { access_key = \u0026quot;${var.access_key}\u0026quot; secret_key = \u0026quot;${var.secret_key}\u0026quot; region = \u0026quot;${var.region}\u0026quot; } resource \u0026quot;alicloud_vpc\u0026quot; \u0026quot;vpc\u0026quot; { name = \u0026quot;${var.project_name}-vpc\u0026quot; cidr_block = \u0026quot;192.168.1.0/24\u0026quot; description = \u0026quot;Enable k8s-Sample vpc\u0026quot; } resource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;vsw\u0026quot; { name = \u0026quot;${var.project_name}-vswitch\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; cidr_block = \u0026quot;192.168.1.0/28\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; description = \u0026quot;Enable k8s-Sample vswitch\u0026quot; } resource \u0026quot;alicloud_cs_kubernetes\u0026quot; \u0026quot;k8s\u0026quot; { name = \u0026quot;${var.project_name}-k8s\u0026quot; vswitch_ids = [\u0026quot;${alicloud_vswitch.vsw.id}\u0026quot;] availability_zone = \u0026quot;${var.zone}\u0026quot; new_nat_gateway = true master_instance_types = [\u0026quot;ecs.xn4.small\u0026quot;] worker_instance_types = [\u0026quot;ecs.xn4.small\u0026quot;] worker_numbers = [2] master_disk_size = 40 worker_disk_size = 100 password = \u0026quot;${var.k8s_password}\u0026quot; pod_cidr = \u0026quot;172.20.0.0/16\u0026quot; service_cidr = \u0026quot;172.21.0.0/20\u0026quot; enable_ssh = true install_cloud_monitor = true }  \nvariables.tf\nvariable \u0026quot;access_key\u0026quot; {} variable \u0026quot;secret_key\u0026quot; {} variable \u0026quot;region\u0026quot; {} variable \u0026quot;zone\u0026quot; {} variable \u0026quot;project_name\u0026quot; {} variable \u0026quot;k8s_password\u0026quot; {}  \noutput.tf\noutput \u0026quot;cluster_id\u0026quot; { value = [\u0026quot;${alicloud_cs_kubernetes.k8s.*.id}\u0026quot;] } output \u0026quot;worker_nodes\u0026quot; { value = [\u0026quot;${alicloud_cs_kubernetes.k8s.*.worker_nodes}\u0026quot;] } output \u0026quot;master_nodes\u0026quot; { value = [\u0026quot;${alicloud_cs_kubernetes.k8s.*.master_nodes}\u0026quot;] }  \nconfing.tfvars\naccess_key = \u0026quot;xxxxxxxxxxxxxxxxxx\u0026quot; secret_key = \u0026quot;xxxxxxxxxxxxxxxxxx\u0026quot; region = \u0026quot;ap-northeast-1\u0026quot; zone = \u0026quot;ap-northeast-1a\u0026quot; project_name = \u0026quot;Kubernetes-Sample-for-Terraform\u0026quot; k8s_password = \u0026quot;!Password2019\u0026quot;  \nprovisioning.sh\n# 今回はprovisioning.shを使用しないため、空白です  \n実行 \u0026nbsp; ソースの準備ができたら実行します。\nterraform init terraform play -var-file=\u0026quot;confing.tfvars\u0026quot; terraform apply -var-file=\u0026quot;confing.tfvars\u0026quot;  \nこれで問題なく実行できたら、cluster_id、worker_nodes、master_nodesが表示され、こうしてkubernetesクラスター操作、管理ができます。\nalicloud_cs_kubernetes.k8s: Still creating... (25m10s elapsed) alicloud_cs_kubernetes.k8s: Still creating... (25m20s elapsed) alicloud_cs_kubernetes.k8s: Still creating... (25m30s elapsed) alicloud_cs_kubernetes.k8s: Still creating... (25m40s elapsed) alicloud_cs_kubernetes.k8s: Creation complete after 25m42s (ID: cfdaeda40f6b9426e833f6cfc059b3d20) Apply complete! Resources: 3 added, 0 changed, 0 destroyed. Outputs: cluster_id = [ cfdaeda40f6b9426e833f6cfc059b3d20 ] master_nodes = [ [ map[id:i-6we4hecn7bodqrq6xsbx name:master-01-k8s-for-cs-cfdaeda40f6b9426e833f6cfc059b3d20 private_ip:192.168.1.5], map[private_ip:192.168.1.6 id:i-6web68sjtatfr2o4uhca name:master-02-k8s-for-cs-cfdaeda40f6b9426e833f6cfc059b3d20], map[id:i-6we8iuga202nxkttrj2b name:master-03-k8s-for-cs-cfdaeda40f6b9426e833f6cfc059b3d20 private_ip:192.168.1.7] ] ] worker_nodes = [ [ map[name:worker-k8s-for-cs-cfdaeda40f6b9426e833f6cfc059b3d20 id:i-6we756j83yg6rsnuzc3n private_ip:192.168.1.8], map[private_ip:192.168.1.9 id:i-6we756j83yg6rsnuzc3o name:worker-k8s-for-cs-cfdaeda40f6b9426e833f6cfc059b3d20] ] ]  \n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/020_rds-for-mysql-to-oss-sqoop-and-spark/",
	"title": "RDS for MySQLからOSSへ",
	"tags": [],
	"description": "RDS for MySQLからOSSへデータを集約する方法を説明します。",
	"content": " はじめに \u0026nbsp; 本章はSqoopを使ってRDS for MySQLからOSSへデータを送ります。ゴールとしては以下のような構成図になります。 また、OSSにデータ収集後、E-MapReduceでHDFSへのETL処理がありますが、こちらは「OSSとE-MapReduce編」「ETL編」にて重複するため、割愛させていただきます。 （この章のゴールは外部データソースをOSSへ集約する、のみとなります）\nSQOOPとは \u0026nbsp; Apache SqoopはHadoopとリレーショナルデータベースなどの構造化データストアとの間で、大量のデータを効率的に転送するために設計されたツールです。\n   From To 備考     MySQL HDFS    MySQL Hive \u0026ndash;hive-importオプションを付与   PostgreSQL HDFS    PostgreSQL Hive \u0026ndash;hive-importオプションを付与    他、jdbcドライバがある限り、OracleやSQL ServerからHDFSやHiveテーブルへSqoop移植することも可能です。\n移植してみる Sqoopを使ってRDS for MySQLにあるテーブルをHive Tableへ移植します。\n環境について    Clustor instance Type 台数     Hadoop EMR-3.22.0 MASTER ecs.sn2.large 1    CORE ecs.sn2.large 2    Sqoopには様々なオプションがありますので、目的に応じて使い分けてください\n   オプション 説明     \u0026ndash;connect 接続したいjdbcデータソース   \u0026ndash;table テーブル名   \u0026ndash;m 並列タスク数。データが多いならタスク数を増やします   \u0026ndash;hive-import Hiveのテーブルへインポート   \u0026ndash;username jdbcデータソースのユーザ名   -P jdbcデータソースのパスワード    [root@emr-header-1 ~]# sqoop import --connect jdbc:mysql://rm-e9b9y00ci431p741y.mysql.japan.rds.aliyuncs.com/twitter_db --table twitter_db.tweet -m 1 --hive-import --username test_user -P Warning: /usr/lib/sqoop-current/../hbase does not exist! HBase imports will fail. Please set $HBASE_HOME to the root of your HBase installation. Warning: /usr/lib/sqoop-current/../accumulo does not exist! Accumulo imports will fail. Please set $ACCUMULO_HOME to the root of your Accumulo installation. 19/08/16 12:44:42 INFO sqoop.Sqoop: Running Sqoop version: 1.4.7 SLF4J: Class path contains multiple SLF4J bindings. SLF4J: Found binding in [jar:file:/opt/apps/ecm/service/hadoop/2.8.5-1.4.0/package/hadoop-2.8.5-1.4.0/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: Found binding in [jar:file:/opt/apps/ecm/service/hive/3.1.1-1.1.6/package/apache-hive-3.1.1-1.1.6-bin/lib/log4j-slf4j-impl-2.10.0.jar!/org/slf4j/impl/StaticLoggerBinder.class] SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation. SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory] Enter password: 19/08/16 12:44:47 INFO tool.BaseSqoopTool: Using Hive-specific delimiters for output. You can override 19/08/16 12:44:47 INFO tool.BaseSqoopTool: delimiters with --fields-terminated-by, etc. 19/08/16 12:44:48 INFO manager.MySQLManager: Preparing to use a MySQL streaming resultset. 19/08/16 12:44:48 INFO tool.CodeGenTool: Beginning code generation 〜略〜 Time taken: 49.404 seconds Loading data to table default.tweet Table default.tweet stats: [numFiles=10, numRows=4120, totalSize=763103, rawDataSize=6801] OK Time taken: 14.094 seconds \nこれでHive側にテーブルが作成できました。\n最後に AlibabaCloud公式blogにもE-MapReduce起動方法、手法、ベストプラクティスが記載されていますので、こちらを参考にするのもありです。\nSqoopによるデータ移植方法\nhttps://www.alibabacloud.com/blog/drilling-into-big-data-getting-started-with-oss-and-emr-2_594668\n SqoopはORC、RCなどの少数のhadoopファイル形式をサポートしていません 大文字でスキーマとテーブル名に言及すると、いくつかの問題に直面することを防ぎます 複数のマッパーが必要な場合は分割を使用します sqoopのキーワードである列名の使用を避ける テーブルに主キーが定義されておらず、コマンドで\u0026ndash;split-byが指定されていない場合、マッパーの数が明示的に1に設定されていない限りインポートは失敗します  "
},
{
	"uri": "https://www.sbcloud.co.jp/help/scenario/terraform/web-application/",
	"title": "Webアプリケーションの構築",
	"tags": [],
	"description": "Terraformを用いて、Alibaba Cloud上でWebアプリケーションの構築します。",
	"content": " \u0026nbsp; こちらはAlibabaCloud公式サイトにあるソリューション構築例を通じての紹介になります。IDCなどデータセンターにて、スケーラブルで世界規模で利用可能なWebアプリケーションを開発および展開するのは、多くの手作業から工数がかかり、またトラフィックに応じてリソースの効率さが悪くなってしまう課題があります。しかしAlibabaCloudで構築すると、それらの課題が払拭されます。それだけでなく、上に、投資収益率（ROI）も向上するメリットがあります。\n すぐに着手できる配置構成 必要な分だけリソースを提供（オンデマンドサーバープロビジョニング） 単一障害点（SPOF）なし 多重層のセキュリティ保護あり  \n\u0026nbsp; TerraformでWebアプリケーションを作ってみます。ゴールの構成図は以下の通りです。\nそれぞれのパラメータは以下の通りです。\nネットワーク構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_vpc vpc name 任意 ${var.project_name}-vpc VPC の名称。この例の場合、Accelerated-Content-Delivery-for-Terraform-vpc として表示されます。    vpc cidr_block 必須 192.168.0.0/16 VPC の CIDR ブロック    vpc description 任意 VPC for ${var.project_name} VPC の説明。この場合VPC for Accelerated-Content-Delivery-for-Terraform として表示されます。   alicloud_vswitch web name 任意 ${var.project_name}-web-vswitch vswitch の名称。この例の場合、Accelerated-Content-Delivery-for-Terraform-web-vswitch として表示されます。    web vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID    web cidr_block 必須 192.168.1.0/24 vswitch の CIDR ブロック    web availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    web description 任意 Enable Web-Application web vswitch vswitch の説明。   alicloud_vswitch app name 任意 ${var.project_name}-app-vswitch vswitch の名称。この例の場合、Accelerated-Content-Delivery-for-Terraform-app-vswitch として表示されます。    app vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID    app cidr_block 必須 192.168.2.0/24 vswitch の CIDR ブロック    app availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    app description 任意 Enable Web-Application app vswitch vswitch の説明。   alicloud_vswitch db name 任意 ${var.project_name}\u0026ndash;db-vswitch vswitch の名称。この例の場合、Accelerated-Content-Delivery-for-Terraform-db-vswitch として表示されます。    db vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID    db cidr_block 必須 192.168.3.0/24 vswitch の CIDR ブロック    db availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    db description 任意 Enable Web-Application db vswitch vswitch の説明。    WebのECSインスタンスセキュリティグループ構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_security_group web name 任意 ${var.web_layer_name}-sg セキュリティグループ の名称。この例の場合、web-server_sgとして表示されます。    web vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID   alicloud_security_group_rule allow_web_access type 必須 ingress セキュリティグループのタイプ。 ingress（受信） かegress（送信） のいずれかになります。    allow_web_access ip_protocol 必須 tcp 通信プロトコル。 tcp, udp, icmp, gre, all のいずれかになります。    allow_web_access nic_type 必須 intranet ネットワークタイプ。 internet か intranet のいずれかになります。    allow_web_access policy 必須 accept 許可ポリシー。 acceptか drop のいずれかになります。    allow_web_access port_range 必須 ${var.web_instance_port}/${var.web_instance_port} 通信プロトコルのポート範囲。値が「- 1/-1」の場合は無効になります。この場合、80/80になります。    allow_web_access priority 必須 1 許可ポリシーの優先順位。    allow_web_access security_group_id 必須 ${alicloud_security_group.web.id} アタッチするセキュリティグループのID    allow_web_access cidr_ip 任意 0.0.0.0/0 ターゲットとなるIPアドレス。デフォルトは「0.0.0.0/0」。値が「0.0.0.0/0」の場合は無制限状態となります。    WebのECSインスタンス構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_instance app instance_name 任意 ${var.web_layer_name}-${count.index} ECSインスタンスの名称。    web host_name 任意 ${var.web_layer_name}-${count.index} ECSインスタンスのHost名称。    web instance_type 必須 ${var.web_instance_type} ECSインスタンスのタイプ。    web image_id 必須 ${var.web_instance_image_id} ECSインスタンスのImageID。    web security_groups 必須 ${alicloud_security_group.web.id} アタッチするセキュリティグループのID。    web availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン。    web vswitch_id 必須 ${alicloud_vswitch.web.id} アタッチするVSwitchのID。    web password 任意 ${var.ecs_password} EC インスタンスのログインパスワード。    web internet_max_bandwidth_out 任意 20 パブリックネットワークへの最大帯域幅。デフォルトは0ですが、0より大きい値を入れるとパブリックIPアドレスがアタッチされます。    web user_data 任意 ${var.web_instance_user_data} ECSインスタンス起動後に実行するshell内容もしくはファイル名。    WebのSLB構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_slb web name 任意 ${var.web_layer_name}-slb SLBの名称。    web vswitch_id 任意 ${alicloud_vswitch.web.id} アタッチするVSwitchのID。    web internet 必須 true SLB addressのインターネットタイプ。Trueのインターネットにするか、falseのイントラネットいずれかになります。    web internet_charge_type 必須 paybytraffic インターネットチェンジタイプ。PayByBandwidth、PayByTrafficのいずれかになります。   alicloud_slb_listener web_listener load_balancer_id 必須 ${alicloud_slb.web.id} 新しいリスナーを起動するために使用されるロードバランサID。    web_listener backend_port 必須 ${var.web_instance_port} Server Load Balancerインスタンスバックエンドが使用するポート。    web_listener frontend_port 必須 ${var.web_instance_port} Server Load Balancerインスタンスフロントエンドが使用するポート。    web_listener health_check_type 任意 tcp ヘルスチェックが使用するポート。health_check_typeの代わりに使用することも可能です。    web_listener protocol 必須 http 使用するプロトコル。http、https、tcp、udpのいずれかになります。    web_listener bandwidth 任意 5 Listenerの最大帯域幅。   alicloud_slb_attachment web load_balancer_id 必須 ${alicloud_slb.web.id} ロードバランサID。    web instance_ids 必須 ${alicloud_instance.web.*.id} アタッチするECSインスタンスID。    AppのECSインスタンスセキュリティグループ構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_security_group app name 任意 ${var.app_layer_name}-sg セキュリティグループ の名称。この例の場合、app-server_sgとして表示されます。    app vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID   alicloud_security_group_rule allow_app_access type 必須 ingress セキュリティグループのタイプ。 ingress（受信） かegress（送信） のいずれかになります。    allow_app_access ip_protocol 必須 tcp 通信プロトコル。 tcp, udp, icmp, gre, all のいずれかになります。    allow_app_access nic_type 必須 intranet ネットワークタイプ。 internet か intranet のいずれかになります。    allow_app_access policy 必須 accept 許可ポリシー。 acceptか drop のいずれかになります。    allow_app_access port_range 必須 ${var.app_instance_port}/${var.app_instance_port} 通信プロトコルのポート範囲。値が「- 1/-1」の場合は無効になります。この場合、80/80になります。    allow_app_access priority 必須 1 許可ポリシーの優先順位。    allow_app_access security_group_id 必須 ${alicloud_security_group.app.id} アタッチするセキュリティグループのID    allow_app_access cidr_ip 任意 0.0.0.0/0 ターゲットとなるIPアドレス。デフォルトは「0.0.0.0/0」。値が「0.0.0.0/0」の場合は無制限状態となります。    AppのECSインスタンス構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_instance app instance_name 任意 ${var.app_layer_name}-${count.index} ECSインスタンスの名称。    app host_name 任意 ${var.app_layer_name}-${count.index} ECSインスタンスのHost名称。    app instance_type 必須 ${var.app_instance_type} ECSインスタンスのタイプ。    app image_id 必須 ${var.app_instance_image_id} ECSインスタンスのImageID。    app security_groups 必須 ${alicloud_security_group.app.id} アタッチするセキュリティグループのID。    app availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン。    app vswitch_id 必須 ${alicloud_vswitch.app.id} アタッチするVSwitchのID。    app password 任意 ${var.ecs_password} EC インスタンスのログインパスワード。    app internet_max_bandwidth_out 任意 5 パブリックネットワークへの最大帯域幅。デフォルトは0ですが、0より大きい値を入れるとパブリックIPアドレスがアタッチされます。    app user_data 任意 ${var.app_instance_user_data} ECSインスタンス起動後に実行するshell内容もしくはファイル名。    AppのSLB構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_slb app name 任意 ${var.app_layer_name}-slb SLBの名称。    app vswitch_id 任意 ${alicloud_vswitch.web.id} アタッチするVSwitchのID。    app internet 必須 false SLB addressのインターネットタイプ。Trueのインターネットにするか、falseのイントラネットいずれかになります。    app internet_charge_type 必須 paybytraffic インターネットチェンジタイプ。PayByBandwidth、PayByTrafficのいずれかになります。   alicloud_slb_listener app_listener load_balancer_id 必須 ${alicloud_slb.app.id} 新しいリスナーを起動するために使用されるロードバランサID。    app_listener backend_port 必須 ${var.web_instance_port} Server Load Balancerインスタンスバックエンドが使用するポート。    app_listener frontend_port 必須 ${var.web_instance_port} Server Load Balancerインスタンスフロントエンドが使用するポート。    app_listener health_check_type 任意 tcp ヘルスチェックが使用するポート。health_check_typeの代わりに使用することも可能です。    app_listener protocol 必須 tcp 使用するプロトコル。http、https、tcp、udpのいずれかになります。    app_listener bandwidth 任意 5 Listenerの最大帯域幅。   alicloud_slb_attachment app load_balancer_id 必須 ${alicloud_slb.app.id} ロードバランサID。    app instance_ids 必須 ${alicloud_instance.app.*.id} アタッチするECSインスタンスID。    AppのAutoScaling構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_ess_scaling_group app scaling_group_name 任意 ${var.solution_name}-ess-app スケーリンググループ名称。    app min_size 必須 ${var.app_instance_min_count} ECSインスタンスのスケーリング最小数。    app max_size 必須 ${var.app_instance_max_count} ECSインスタンスのスケーリング最大数。    app removal_policies 必須 OldestInstance, NewestInstance スケーリング削除ポリシー。OldestInstance、NewestInstance、OldestScalingConfigurationのどれかと組み合わせて選定になります。    app loadbalancer_ids 任意 ${alicloud_slb.app.id} SLBを利用する場合、アタッチするSLBインスタンスID。    app vswitch_ids 必須 ${alicloud_vswitch.app.id} アタッチするVSwitchのID。   alicloud_ess_scaling_configuration app scaling_group_id 必須 ${alicloud_ess_scaling_group.app.id} アタッチするスケーリンググループのID。    app image_id 必須 ${var.app_instance_image_id} ECSインスタンスのImageID。    app instance_type 任意 ${var.app_instance_type} ECSインスタンスのリソースタイプ。    app scaling_configuration_name 任意 scaling-configuration-app スケジュール済みタスクに表示される名称。デフォルト値はScalingConfigurationIdです。    app system_disk_category 任意 cloud_efficiency システムディスクのカテゴリ。    app security_group_id 任意 ${alicloud_security_group.app.id} アタッチするセキュリティグループのID    app active 任意 true 現在のスケーリング設定をアクティブにするか。   alicloud_ess_scaling_rule app scaling_rule_name 必須 ${var.solution_name}-ess-rule-app スケールルールに表示される名称。    app scaling_group_id 必須 ${alicloud_ess_scaling_group.app.id} スケーリンググループのID。    app adjustment_type 必須 TotalCapacity スケーリングルールの調整モード。QuantityChangeInCapacity、PercentChangeInCapacity、TotalCapacityのいずれかになります。    app adjustment_value 任意 2 スケーリングルールの調整値。    app cooldown 任意 60 スケーリングルールのクールダウン時間。    RDS構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_db_instance db_instance engine 必須 ${var.db_engine} データベースタイプ。MySQL、SQLServer、PostgreSQL、PPASのいずれかになります。    db_instance engine_version 必須 ${var.db_engine_version} データベースのバージョン。    db_instance instance_type 必須 ${var.db_instance_type} DBインスタンスタイプ。    db_instance instance_storage 必須 ${var.db_instance_storage} DBインスタンスのストレージ領域。    db_instance vswitch_id 必須 ${alicloud_vswitch.db.id} アタッチするVSwitchのID。    db_instance security_ips 任意 10.0.2.0/24 データベースへのアクセスが許可されているIPアドレスのリスト。   alicloud_db_database default name 必須 ${var.db_layer_name} RDSの名称。この例の場合、RDS-Sample-for-Terraform として表示されます。    default instance_id 必須 ${alicloud_db_instance.db_instance.id} データベースを実行するインスタンスのID。    default character_set 必須 utf8 文字セット。   alicloud_db_account default instance_id 必須 ${alicloud_db_instance.db_instance.id} データベースを実行するインスタンスのID。    default name 必須 ${var.db_user} 運用アカウント名。    default password 必須 ${var.db_password} 運用アカウント名に対するパスワード。   alicloud_db_account_privilege default instance_id 必須 ${alicloud_db_instance.db_instance.id} データベースを実行するインスタンスのID。    default account_name 必須 ${alicloud_db_account.default.name} 運用アカウント名。    default db_names 必須 ${alicloud_db_database.default.name} データベース名。    default privilege 必須 ReadWrite アクセス権限。ReadOnly、ReadWriteのいずれかになります。   alicloud_db_connection default instance_id 必須 ${alicloud_db_instance.db_instance.id} データベースを実行するインスタンスのID。    default connection_prefix 必須 alicloud-database インターネット接続プレフィックス。    default port 任意 3306 インターネット接続ポート。    OSS構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_oss_bucket oss bucket 任意 ${var.project_name}-bucket バケットの名称。    oss acl 任意 private アクセス制御リスト（ACL）の権限設定。    \nソースは以下になります。\n注意として、OSSのbucket名およびdomainは（他ユーザ含め）まだ使われてないユニーク名が必須となっていますので、各自オリジナル名称へ変更するなど調整してください。\n\nmain.tf\nprovider \u0026quot;alicloud\u0026quot; { access_key = \u0026quot;${var.access_key}\u0026quot; secret_key = \u0026quot;${var.secret_key}\u0026quot; region = \u0026quot;${var.region}\u0026quot; } resource \u0026quot;alicloud_vpc\u0026quot; \u0026quot;default\u0026quot; { name = \u0026quot;${var.project_name}-vpc\u0026quot; cidr_block = \u0026quot;192.168.0.0/16\u0026quot; description = \u0026quot;VPC for ${var.project_name}\u0026quot; } resource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;web\u0026quot; { name = \u0026quot;${var.project_name}-web-vswitch\u0026quot; description = \u0026quot;Enable Web-Application web vswitch\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.default.id}\u0026quot; cidr_block = \u0026quot;192.168.1.0/24\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; } resource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;app\u0026quot; { name = \u0026quot;${var.project_name}-app-vswitch\u0026quot; description = \u0026quot;Enable Web-Application app vswitch\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.default.id}\u0026quot; cidr_block = \u0026quot;192.168.2.0/24\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; } resource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;db\u0026quot; { name = \u0026quot;${var.project_name}-db-vswitch\u0026quot; description = \u0026quot;Enable Web-Application db vswitch\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.default.id}\u0026quot; cidr_block = \u0026quot;192.168.3.0/24\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; } resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;web\u0026quot; { count = \u0026quot;${var.web_instance_count}\u0026quot; instance_name = \u0026quot;${var.web_layer_name}-${count.index}\u0026quot; host_name = \u0026quot;${var.web_layer_name}-${count.index}\u0026quot; instance_type = \u0026quot;${var.web_instance_type}\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; image_id = \u0026quot;${var.web_instance_image_id}\u0026quot; availability_zone = \u0026quot;${var.web_availability_zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.web.id}\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.web.id}\u0026quot;] internet_max_bandwidth_out = 5 password = \u0026quot;${var.ecs_password}\u0026quot; user_data = \u0026quot;${var.web_instance_user_data}\u0026quot; } resource \u0026quot;alicloud_slb\u0026quot; \u0026quot;web\u0026quot; { name = \u0026quot;${var.web_layer_name}-slb\u0026quot; internet = true internet_charge_type = \u0026quot;paybytraffic\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.web.id}\u0026quot; } resource \u0026quot;alicloud_slb_listener\u0026quot; \u0026quot;web_listener\u0026quot; { load_balancer_id = \u0026quot;${alicloud_slb.web.id}\u0026quot; backend_port = \u0026quot;${var.web_instance_port}\u0026quot; frontend_port = \u0026quot;${var.web_instance_port}\u0026quot; protocol = \u0026quot;http\u0026quot; bandwidth = 5 health_check_type = \u0026quot;tcp\u0026quot; } resource \u0026quot;alicloud_slb_attachment\u0026quot; \u0026quot;web\u0026quot; { load_balancer_id = \u0026quot;${alicloud_slb.web.id}\u0026quot; instance_ids = [\u0026quot;${alicloud_instance.web.*.id}\u0026quot;] } resource \u0026quot;alicloud_oss_bucket\u0026quot; \u0026quot;oss\u0026quot;{ bucket = \u0026quot;${var.project_name}-bucket\u0026quot; acl = \u0026quot;private\u0026quot; } resource \u0026quot;alicloud_security_group\u0026quot; \u0026quot;web\u0026quot; { name = \u0026quot;${var.web_layer_name}-sg\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.default.id}\u0026quot; } resource \u0026quot;alicloud_security_group_rule\u0026quot; \u0026quot;allow_web_access\u0026quot; { type = \u0026quot;ingress\u0026quot; ip_protocol = \u0026quot;tcp\u0026quot; nic_type = \u0026quot;intranet\u0026quot; policy = \u0026quot;accept\u0026quot; port_range = \u0026quot;${var.web_instance_port}/${var.web_instance_port}\u0026quot; priority = 1 security_group_id = \u0026quot;${alicloud_security_group.web.id}\u0026quot; cidr_ip = \u0026quot;0.0.0.0/0\u0026quot; } resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;app\u0026quot; { count = \u0026quot;${var.app_instance_count}\u0026quot; instance_name = \u0026quot;${var.app_layer_name}-${count.index}\u0026quot; host_name = \u0026quot;${var.web_layer_name}-${count.index}\u0026quot; instance_type = \u0026quot;${var.app_instance_type}\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; image_id = \u0026quot;${var.app_instance_image_id}\u0026quot; availability_zone = \u0026quot;${var.app_availability_zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.app.id}\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.app.id}\u0026quot;] internet_max_bandwidth_out = 5 password = \u0026quot;${var.ecs_password}\u0026quot; user_data = \u0026quot;${var.app_instance_user_data}\u0026quot; } resource \u0026quot;alicloud_slb\u0026quot; \u0026quot;app\u0026quot; { name = \u0026quot;${var.app_layer_name}-slb\u0026quot; internet = false internet_charge_type = \u0026quot;paybytraffic\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.app.id}\u0026quot; } resource \u0026quot;alicloud_slb_listener\u0026quot; \u0026quot;app_listener\u0026quot; { load_balancer_id = \u0026quot;${alicloud_slb.app.id}\u0026quot; backend_port = \u0026quot;${var.app_instance_port}\u0026quot; frontend_port = \u0026quot;${var.app_instance_port}\u0026quot; protocol = \u0026quot;tcp\u0026quot; bandwidth = 5 health_check_type = \u0026quot;tcp\u0026quot; } resource \u0026quot;alicloud_slb_attachment\u0026quot; \u0026quot;app\u0026quot; { load_balancer_id = \u0026quot;${alicloud_slb.app.id}\u0026quot; instance_ids = [\u0026quot;${alicloud_instance.app.*.id}\u0026quot;] } resource \u0026quot;alicloud_security_group\u0026quot; \u0026quot;app\u0026quot; { name = \u0026quot;${var.web_layer_name}-sg\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.default.id}\u0026quot; } resource \u0026quot;alicloud_security_group_rule\u0026quot; \u0026quot;allow_app_access\u0026quot; { type = \u0026quot;ingress\u0026quot; ip_protocol = \u0026quot;tcp\u0026quot; nic_type = \u0026quot;intranet\u0026quot; policy = \u0026quot;accept\u0026quot; port_range = \u0026quot;${var.app_instance_port}/${var.app_instance_port}\u0026quot; priority = 1 security_group_id = \u0026quot;${alicloud_security_group.app.id}\u0026quot; cidr_ip = \u0026quot;0.0.0.0/0\u0026quot; } resource \u0026quot;alicloud_db_instance\u0026quot; \u0026quot;db_instance\u0026quot; { engine = \u0026quot;${var.db_engine}\u0026quot; engine_version = \u0026quot;${var.db_engine_version}\u0026quot; instance_type = \u0026quot;${var.db_instance_type}\u0026quot; instance_storage = \u0026quot;${var.db_instance_storage}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.db.id}\u0026quot; security_ips = [\u0026quot;10.0.2.0/24\u0026quot;] } resource \u0026quot;alicloud_db_database\u0026quot; \u0026quot;default\u0026quot; { name = \u0026quot;${var.db_layer_name}\u0026quot; instance_id = \u0026quot;${alicloud_db_instance.db_instance.id}\u0026quot; character_set = \u0026quot;utf8\u0026quot; } resource \u0026quot;alicloud_db_account\u0026quot; \u0026quot;default\u0026quot; { instance_id = \u0026quot;${alicloud_db_instance.db_instance.id}\u0026quot; name = \u0026quot;${var.db_user}\u0026quot; password = \u0026quot;${var.db_password}\u0026quot; } resource \u0026quot;alicloud_db_account_privilege\u0026quot; \u0026quot;default\u0026quot; { instance_id = \u0026quot;${alicloud_db_instance.db_instance.id}\u0026quot; account_name = \u0026quot;${alicloud_db_account.default.name}\u0026quot; db_names = [\u0026quot;${alicloud_db_database.default.name}\u0026quot;] privilege = \u0026quot;ReadWrite\u0026quot; } resource \u0026quot;alicloud_db_connection\u0026quot; \u0026quot;default\u0026quot; { instance_id = \u0026quot;${alicloud_db_instance.db_instance.id}\u0026quot; connection_prefix = \u0026quot;alicloud-database\u0026quot; port = \u0026quot;3306\u0026quot; }  \nvariables.tf\nvariable \u0026quot;access_key\u0026quot; {} variable \u0026quot;secret_key\u0026quot; {} variable \u0026quot;region\u0026quot; {} variable \u0026quot;zone\u0026quot; {} variable \u0026quot;project_name\u0026quot; {} variable \u0026quot;ecs_password\u0026quot; {} variable \u0026quot;db_user\u0026quot; {} variable \u0026quot;db_password\u0026quot; {} variable \u0026quot;web_layer_name\u0026quot; {} variable \u0026quot;web_instance_count\u0026quot; {} variable \u0026quot;web_availability_zone\u0026quot; {} variable \u0026quot;web_instance_type\u0026quot; {} variable \u0026quot;web_instance_port\u0026quot; {} variable \u0026quot;web_instance_image_id\u0026quot; {} variable \u0026quot;web_instance_user_data\u0026quot; {} variable \u0026quot;app_layer_name\u0026quot; {} variable \u0026quot;app_instance_count\u0026quot; {} variable \u0026quot;app_availability_zone\u0026quot; {} variable \u0026quot;app_instance_type\u0026quot; {} variable \u0026quot;app_instance_port\u0026quot; {} variable \u0026quot;app_instance_image_id\u0026quot; {} variable \u0026quot;app_instance_user_data\u0026quot; {} variable \u0026quot;db_layer_name\u0026quot; {} variable \u0026quot;db_availability_zone\u0026quot; {} variable \u0026quot;db_engine\u0026quot; {} variable \u0026quot;db_engine_version\u0026quot; {} variable \u0026quot;db_instance_type\u0026quot; {} variable \u0026quot;db_instance_storage\u0026quot; {}  \nconfing.tfvars\naccess_key = \u0026quot;xxxxxxxxxxxxxxxx\u0026quot; secret_key = \u0026quot;xxxxxxxxxxxxxxxx\u0026quot; region = \u0026quot;ap-northeast-1\u0026quot; zone = \u0026quot;ap-northeast-1a\u0026quot; project_name = \u0026quot;Web-Application-for-Terraform\u0026quot; ecs_password = \u0026quot;!Password2019\u0026quot; db_user = \u0026quot;test_user\u0026quot; db_password = \u0026quot;!Password2019\u0026quot; web_layer_name = \u0026quot;web-server\u0026quot; web_availability_zone = \u0026quot;ap-northeast-1a\u0026quot; web_instance_count = 3 web_instance_type = \u0026quot;ecs.sn1ne.large\u0026quot; web_instance_port = 80 web_instance_image_id = \u0026quot;centos_7_06_64_20G_alibase_20190218.vhd\u0026quot; web_instance_user_data = \u0026quot;${file(\u0026quot;provisioning.sh\u0026quot;)}\u0026quot; app_layer_name = \u0026quot;app-server\u0026quot; app_availability_zone = \u0026quot;ap-northeast-1a\u0026quot; app_instance_count = 3 app_instance_type = \u0026quot;ecs.sn1ne.large\u0026quot; app_instance_port = 5000 app_instance_image_id = \u0026quot;centos_7_06_64_20G_alibase_20190218.vhd\u0026quot; app_instance_user_data = \u0026quot;${file(\u0026quot;provisioning.sh\u0026quot;)}\u0026quot; db_layer_name = \u0026quot;db-server\u0026quot; db_availability_zone = \u0026quot;ap-northeast-1a\u0026quot; db_engine = \u0026quot;MySQL\u0026quot; db_engine_version = \u0026quot;5.7\u0026quot; db_instance_type = \u0026quot;rds.mysql.s1.small\u0026quot; db_instance_storage = 10  \noutput.tf\noutput \u0026quot;slb_web_public_ip\u0026quot; { value = \u0026quot;${alicloud_slb.web.address}\u0026quot; } output \u0026quot;ECS_instance_app_ip\u0026quot; { value = \u0026quot;${alicloud_instance.app.*.public_ip}\u0026quot; } output \u0026quot;ECS_instance_web_ip\u0026quot; { value = \u0026quot;${alicloud_instance.web.*.public_ip}\u0026quot; } output \u0026quot;rds_host\u0026quot; { value = \u0026quot;${alicloud_db_instance.db_instance.connection_string}\u0026quot; }  \nprovisioning.sh\n#!/bin/sh yum install -y httpd systemctl start httpd systemctl enable httpd  \n実行 \u0026nbsp; ソースの準備ができたら実行します。\nterraform init terraform play -var-file=\u0026quot;confing.tfvars\u0026quot; terraform apply -var-file=\u0026quot;confing.tfvars\u0026quot;  \nこれで完了です。問題なく実行できたら、ECSとSLBそれぞれのIP、RDS Hostが表示されます。\n\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/021_alibabacloud-oss-to-another-oss-migration-/",
	"title": "AlibabaCloud OSSから別のOSSへ（移植）",
	"tags": [],
	"description": "AlibabaCloud OSSから別のOSSへ（移植）を説明します。",
	"content": " はじめに \u0026nbsp; 本ページはAlibabaCloud OSSから別のOSSへデータを移植する方法をまとめます。 本ページは具体的な手法より、どんな手法があるかをメインに記載します。 一部、URLにある手順はAWS S3をメインとしていますが、こちらはAlibabaCloud OSSでも同じことなので、参考にしてください。\nOSSImportツール（スタンドアロン）を使った移植 OssImportのアーキテクチャと構成、ダウンロードページ\nhttps://jp.alibabacloud.com/help/doc-detail/56990.html\nAWS S3からAlibaba Cloud OSSへのマイグレーション手順\nhttps://www.sbcloud.co.jp/file/98012380859496046\nAlibabaCloudへのマイグレーション -ストレージ編-\nhttps://www.sbcloud.co.jp/entry/2018/10/31/migration_oss/\nOSSImportツール（分散モード）を使った移植（分散版） OssImportのアーキテクチャと構成、ダウンロードページ\nhttps://jp.alibabacloud.com/help/doc-detail/56990.html\nOssImport を使用したデータの移行\nhttps://jp.alibabacloud.com/help/doc-detail/59922.htm\n分散デプロイについて\nhttps://jp.alibabacloud.com/help/doc-detail/57057.htm\nemr-toolを使って移植する方法 AlibabaCloud E-MapReduceにてAlibabaCloudのemr-toolをセットアップ、hdfsデータの保存先(接続先パス、エンドポイント）を目的となるAlibabaCloud OSSへ指定し移植します。\nHDFS の OSS へのバックアップ\nhttps://jp.alibabacloud.com/help/doc-detail/63822.html\nSpark分散を使った移植方法 AWS EMRにてSpark分散処理を実施、保存先(接続先パス、エンドポイント）をAlibabaCloud OSSへ指定するだけです。\n\n最後に OSSからのデータ移植方法は様々な方法があります。ここには書いていない方法もありますので、検証次第、追記したいと思います。\nまたOSSから別のOSSへ移植するとき、注意したいことが以下の三点です。\n OSSとのNW距離（リージョンが近ければGood） NW帯域（データが多いのであれば分散で移植した方がベター） （アカウント分離している場合）OSSからの転送料金（データが多いほどOut料金が高くなります）  これを踏まえてOSSから別OSSへ気軽なデータ移植（Import）ができれば幸いです。 "
},
{
	"uri": "https://www.sbcloud.co.jp/help/scenario/terraform/accelerated-content-delivery/",
	"title": "高速コンテンツ配信の実現",
	"tags": [],
	"description": "Terraformを用いて、Alibaba Cloud上で高速コンテンツ配信可能なWebアプリケーションの構築します。",
	"content": " \u0026nbsp; こちらはAlibabaCloud公式サイトにあるソリューション構築例を通じての紹介になります。従来のWebアプリケーションアーキテクチャでは、Webアプリケーションが大量のリクエストトラフィックを受け取ると、サーバーが過負荷になり、サイトが遅くなったりサーバーがクラッシュしたりする可能性があります。また地理的に異なる場所に分散していると、コンテンツが1か所から配信されるため、待ち時間の問題が発生する可能性があります。そのためにWebアプリケーションは高速でコンテンツ配信することが望ましいです。\n グローバル配信が可能 静的および動的コンテンツのアクセラレーション 待ち時間の短縮などパフォーマンス改善  \n\u0026nbsp; TerraformでWebアプリケーションを作ってみます。ゴールの構成図は以下の通りです。\nそれぞれのパラメータは以下の通りです。\nネットワーク構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_vpc vpc name 任意 ${var.project_name}-vpc VPC の名称。この例の場合、Accelerated-Content-Delivery-for-Terraform-vpc として表示されます。    vpc cidr_block 必須 192.168.0.0/16 VPC の CIDR ブロック    vpc description 任意 VPC for ${var.project_name} VPC の説明。この場合VPC for Accelerated-Content-Delivery-for-Terraform として表示されます。   alicloud_vswitch web name 任意 ${var.project_name}-web-vswitch vswitch の名称。この例の場合、Accelerated-Content-Delivery-for-Terraform-web-vswitch として表示されます。    web vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID    web cidr_block 必須 192.168.1.0/24 vswitch の CIDR ブロック    web availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    web description 任意 Enable Web-Application web vswitch vswitch の説明。   alicloud_vswitch app name 任意 ${var.project_name}-app-vswitch vswitch の名称。この例の場合、Accelerated-Content-Delivery-for-Terraform-app-vswitch として表示されます。    app vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID    app cidr_block 必須 192.168.2.0/24 vswitch の CIDR ブロック    app availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    app description 任意 Enable Web-Application app vswitch vswitch の説明。   alicloud_vswitch db name 任意 ${var.project_name}\u0026ndash;db-vswitch vswitch の名称。この例の場合、Accelerated-Content-Delivery-for-Terraform-db-vswitch として表示されます。    db vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID    db cidr_block 必須 192.168.3.0/24 vswitch の CIDR ブロック    db availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    db description 任意 Enable Web-Application db vswitch vswitch の説明。    WebのECSインスタンスセキュリティグループ構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_security_group web name 任意 ${var.web_layer_name}-sg セキュリティグループ の名称。この例の場合、web-server_sgとして表示されます。    web vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID   alicloud_security_group_rule allow_web_access type 必須 ingress セキュリティグループのタイプ。 ingress（受信） かegress（送信） のいずれかになります。    allow_web_access ip_protocol 必須 tcp 通信プロトコル。 tcp, udp, icmp, gre, all のいずれかになります。    allow_web_access nic_type 必須 intranet ネットワークタイプ。 internet か intranet のいずれかになります。    allow_web_access policy 必須 accept 許可ポリシー。 acceptか drop のいずれかになります。    allow_web_access port_range 必須 ${var.web_instance_port}/${var.web_instance_port} 通信プロトコルのポート範囲。値が「- 1/-1」の場合は無効になります。この場合、80/80になります。    allow_web_access priority 必須 1 許可ポリシーの優先順位。    allow_web_access security_group_id 必須 ${alicloud_security_group.web.id} アタッチするセキュリティグループのID    allow_web_access cidr_ip 任意 0.0.0.0/0 ターゲットとなるIPアドレス。デフォルトは「0.0.0.0/0」。値が「0.0.0.0/0」の場合は無制限状態となります。    WebのECSインスタンス構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_instance app instance_name 任意 ${var.web_layer_name}-${count.index} ECSインスタンスの名称。    web host_name 任意 ${var.web_layer_name}-${count.index} ECSインスタンスのHost名称。    web instance_type 必須 ${var.web_instance_type} ECSインスタンスのタイプ。    web image_id 必須 ${var.web_instance_image_id} ECSインスタンスのImageID。    web security_groups 必須 ${alicloud_security_group.web.id} アタッチするセキュリティグループのID。    web availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン。    web vswitch_id 必須 ${alicloud_vswitch.web.id} アタッチするVSwitchのID。    web password 任意 ${var.ecs_password} EC インスタンスのログインパスワード。    web internet_max_bandwidth_out 任意 20 パブリックネットワークへの最大帯域幅。デフォルトは0ですが、0より大きい値を入れるとパブリックIPアドレスがアタッチされます。    web user_data 任意 ${var.web_instance_user_data} ECSインスタンス起動後に実行するshell内容もしくはファイル名。    WebのSLB構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_slb web name 任意 ${var.web_layer_name}-slb SLBの名称。    web vswitch_id 任意 ${alicloud_vswitch.web.id} アタッチするVSwitchのID。    web internet 必須 true SLB addressのインターネットタイプ。Trueのインターネットにするか、falseのイントラネットいずれかになります。    web internet_charge_type 必須 paybytraffic インターネットチェンジタイプ。PayByBandwidth、PayByTrafficのいずれかになります。   alicloud_slb_listener web_listener load_balancer_id 必須 ${alicloud_slb.web.id} 新しいリスナーを起動するために使用されるロードバランサID。    web_listener backend_port 必須 ${var.web_instance_port} Server Load Balancerインスタンスバックエンドが使用するポート。    web_listener frontend_port 必須 ${var.web_instance_port} Server Load Balancerインスタンスフロントエンドが使用するポート。    web_listener health_check_type 任意 tcp ヘルスチェックが使用するポート。health_check_typeの代わりに使用することも可能です。    web_listener protocol 必須 http 使用するプロトコル。http、https、tcp、udpのいずれかになります。    web_listener bandwidth 任意 5 Listenerの最大帯域幅。   alicloud_slb_attachment web load_balancer_id 必須 ${alicloud_slb.web.id} ロードバランサID。    web instance_ids 必須 ${alicloud_instance.web.*.id} アタッチするECSインスタンスID。    AppのECSインスタンスセキュリティグループ構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_security_group app name 任意 ${var.app_layer_name}-sg セキュリティグループ の名称。この例の場合、app-server_sgとして表示されます。    app vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID   alicloud_security_group_rule allow_app_access type 必須 ingress セキュリティグループのタイプ。 ingress（受信） かegress（送信） のいずれかになります。    allow_app_access ip_protocol 必須 tcp 通信プロトコル。 tcp, udp, icmp, gre, all のいずれかになります。    allow_app_access nic_type 必須 intranet ネットワークタイプ。 internet か intranet のいずれかになります。    allow_app_access policy 必須 accept 許可ポリシー。 acceptか drop のいずれかになります。    allow_app_access port_range 必須 ${var.app_instance_port}/${var.app_instance_port} 通信プロトコルのポート範囲。値が「- 1/-1」の場合は無効になります。この場合、80/80になります。    allow_app_access priority 必須 1 許可ポリシーの優先順位。    allow_app_access security_group_id 必須 ${alicloud_security_group.app.id} アタッチするセキュリティグループのID    allow_app_access cidr_ip 任意 0.0.0.0/0 ターゲットとなるIPアドレス。デフォルトは「0.0.0.0/0」。値が「0.0.0.0/0」の場合は無制限状態となります。    AppのECSインスタンス構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_instance app instance_name 任意 ${var.app_layer_name}-${count.index} ECSインスタンスの名称。    app host_name 任意 ${var.app_layer_name}-${count.index} ECSインスタンスのHost名称。    app instance_type 必須 ${var.app_instance_type} ECSインスタンスのタイプ。    app image_id 必須 ${var.app_instance_image_id} ECSインスタンスのImageID。    app security_groups 必須 ${alicloud_security_group.app.id} アタッチするセキュリティグループのID。    app availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン。    app vswitch_id 必須 ${alicloud_vswitch.app.id} アタッチするVSwitchのID。    app password 任意 ${var.ecs_password} EC インスタンスのログインパスワード。    app internet_max_bandwidth_out 任意 5 パブリックネットワークへの最大帯域幅。デフォルトは0ですが、0より大きい値を入れるとパブリックIPアドレスがアタッチされます。    app user_data 任意 ${var.app_instance_user_data} ECSインスタンス起動後に実行するshell内容もしくはファイル名。    AppのSLB構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_slb app name 任意 ${var.app_layer_name}-slb SLBの名称。    app vswitch_id 任意 ${alicloud_vswitch.web.id} アタッチするVSwitchのID。    app internet 必須 false SLB addressのインターネットタイプ。Trueのインターネットにするか、falseのイントラネットいずれかになります。    app internet_charge_type 必須 paybytraffic インターネットチェンジタイプ。PayByBandwidth、PayByTrafficのいずれかになります。   alicloud_slb_listener app_listener load_balancer_id 必須 ${alicloud_slb.app.id} 新しいリスナーを起動するために使用されるロードバランサID。    app_listener backend_port 必須 ${var.web_instance_port} Server Load Balancerインスタンスバックエンドが使用するポート。    app_listener frontend_port 必須 ${var.web_instance_port} Server Load Balancerインスタンスフロントエンドが使用するポート。    app_listener health_check_type 任意 tcp ヘルスチェックが使用するポート。health_check_typeの代わりに使用することも可能です。    app_listener protocol 必須 tcp 使用するプロトコル。http、https、tcp、udpのいずれかになります。    app_listener bandwidth 任意 5 Listenerの最大帯域幅。   alicloud_slb_attachment app load_balancer_id 必須 ${alicloud_slb.app.id} ロードバランサID。    app instance_ids 必須 ${alicloud_instance.app.*.id} アタッチするECSインスタンスID。    AppのAutoScaling構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_ess_scaling_group app scaling_group_name 任意 ${var.solution_name}-ess-app スケーリンググループ名称。    app min_size 必須 ${var.app_instance_min_count} ECSインスタンスのスケーリング最小数。    app max_size 必須 ${var.app_instance_max_count} ECSインスタンスのスケーリング最大数。    app removal_policies 必須 OldestInstance, NewestInstance スケーリング削除ポリシー。OldestInstance、NewestInstance、OldestScalingConfigurationのどれかと組み合わせて選定になります。    app loadbalancer_ids 任意 ${alicloud_slb.app.id} SLBを利用する場合、アタッチするSLBインスタンスID。    app vswitch_ids 必須 ${alicloud_vswitch.app.id} アタッチするVSwitchのID。   alicloud_ess_scaling_configuration app scaling_group_id 必須 ${alicloud_ess_scaling_group.app.id} アタッチするスケーリンググループのID。    app image_id 必須 ${var.app_instance_image_id} ECSインスタンスのImageID。    app instance_type 任意 ${var.app_instance_type} ECSインスタンスのリソースタイプ。    app scaling_configuration_name 任意 scaling-configuration-app スケジュール済みタスクに表示される名称。デフォルト値はScalingConfigurationIdです。    app system_disk_category 任意 cloud_efficiency システムディスクのカテゴリ。    app security_group_id 任意 ${alicloud_security_group.app.id} アタッチするセキュリティグループのID    app active 任意 true 現在のスケーリング設定をアクティブにするか。   alicloud_ess_scaling_rule app scaling_rule_name 必須 ${var.solution_name}-ess-rule-app スケールルールに表示される名称。    app scaling_group_id 必須 ${alicloud_ess_scaling_group.app.id} スケーリンググループのID。    app adjustment_type 必須 TotalCapacity スケーリングルールの調整モード。QuantityChangeInCapacity、PercentChangeInCapacity、TotalCapacityのいずれかになります。    app adjustment_value 任意 2 スケーリングルールの調整値。    app cooldown 任意 60 スケーリングルールのクールダウン時間。    RDS構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_db_instance db_instance engine 必須 ${var.db_engine} データベースタイプ。MySQL、SQLServer、PostgreSQL、PPASのいずれかになります。    db_instance engine_version 必須 ${var.db_engine_version} データベースのバージョン。    db_instance instance_type 必須 ${var.db_instance_type} DBインスタンスタイプ。    db_instance instance_storage 必須 ${var.db_instance_storage} DBインスタンスのストレージ領域。    db_instance vswitch_id 必須 ${alicloud_vswitch.db.id} アタッチするVSwitchのID。    db_instance security_ips 任意 10.0.2.0/24 データベースへのアクセスが許可されているIPアドレスのリスト。   alicloud_db_database default name 必須 ${var.db_layer_name} RDSの名称。この例の場合、RDS-Sample-for-Terraform として表示されます。    default instance_id 必須 ${alicloud_db_instance.db_instance.id} データベースを実行するインスタンスのID。    default character_set 必須 utf8 文字セット。   alicloud_db_account default instance_id 必須 ${alicloud_db_instance.db_instance.id} データベースを実行するインスタンスのID。    default name 必須 ${var.db_user} 運用アカウント名。    default password 必須 ${var.db_password} 運用アカウント名に対するパスワード。   alicloud_db_account_privilege default instance_id 必須 ${alicloud_db_instance.db_instance.id} データベースを実行するインスタンスのID。    default account_name 必須 ${alicloud_db_account.default.name} 運用アカウント名。    default db_names 必須 ${alicloud_db_database.default.name} データベース名。    default privilege 必須 ReadWrite アクセス権限。ReadOnly、ReadWriteのいずれかになります。   alicloud_db_connection default instance_id 必須 ${alicloud_db_instance.db_instance.id} データベースを実行するインスタンスのID。    default connection_prefix 必須 alicloud-database インターネット接続プレフィックス。    default port 任意 3306 インターネット接続ポート。    CDN構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_cdn_domain_new domain domain_name 必須 terraform.test.webapplication.net ドメインの名称。    domain cdn_type 必須 web CDNのタイプ。web、download、videoのいずれかになります。    domain scope 必須 overseas CDNドメインの範囲。domestic、overseas、globalのいずれかになります。    domain sources 必須 ${alicloud_slb.web.address} 高速ドメインの送信元アドレスリスト。　リストタイプで記載。   alicloud_cdn_domain_config config domain_name 必須 ${alicloud_cdn_domain_new.domain.domain_name} ドメインの名称。    config function_name 必須 ip_allow_list_set ドメイン設定の名前。    config function_args 必須 ip_list,${alicloud_slb.web.address} ドメイン構成の引数。    OSS構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_oss_bucket oss bucket 任意 ${var.project_name}-bucket バケットの名称。    oss acl 任意 private アクセス制御リスト（ACL）の権限設定。    \nソースは以下になります。\n注意として、OSSのbucket名およびdomainは（他ユーザ含め）まだ使われてないユニーク名が必須となっていますので、各自オリジナル名称へ変更するなど調整してください。\n\nmain.tf\nprovider \u0026quot;alicloud\u0026quot; { access_key = \u0026quot;${var.access_key}\u0026quot; secret_key = \u0026quot;${var.secret_key}\u0026quot; region = \u0026quot;${var.region}\u0026quot; } resource \u0026quot;alicloud_vpc\u0026quot; \u0026quot;default\u0026quot; { name = \u0026quot;${var.project_name}-vpc\u0026quot; cidr_block = \u0026quot;192.168.0.0/16\u0026quot; description = \u0026quot;VPC for ${var.project_name}\u0026quot; } resource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;web\u0026quot; { name = \u0026quot;${var.project_name}-web-vswitch\u0026quot; description = \u0026quot;Enable Web-Application web vswitch\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.default.id}\u0026quot; cidr_block = \u0026quot;192.168.1.0/24\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; } resource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;app\u0026quot; { name = \u0026quot;${var.project_name}-app-vswitch\u0026quot; description = \u0026quot;Enable Web-Application app vswitch\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.default.id}\u0026quot; cidr_block = \u0026quot;192.168.2.0/24\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; } resource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;db\u0026quot; { name = \u0026quot;${var.project_name}-db-vswitch\u0026quot; description = \u0026quot;Enable Web-Application db vswitch\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.default.id}\u0026quot; cidr_block = \u0026quot;192.168.3.0/24\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; } resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;web\u0026quot; { count = \u0026quot;${var.web_instance_count}\u0026quot; instance_name = \u0026quot;${var.web_layer_name}-${count.index}\u0026quot; host_name = \u0026quot;${var.web_layer_name}-${count.index}\u0026quot; instance_type = \u0026quot;${var.web_instance_type}\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; image_id = \u0026quot;${var.web_instance_image_id}\u0026quot; availability_zone = \u0026quot;${var.web_availability_zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.web.id}\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.web.id}\u0026quot;] internet_max_bandwidth_out = 5 password = \u0026quot;${var.ecs_password}\u0026quot; user_data = \u0026quot;${var.web_instance_user_data}\u0026quot; } resource \u0026quot;alicloud_slb\u0026quot; \u0026quot;web\u0026quot; { name = \u0026quot;${var.web_layer_name}-slb\u0026quot; internet = true internet_charge_type = \u0026quot;paybytraffic\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.web.id}\u0026quot; } resource \u0026quot;alicloud_slb_listener\u0026quot; \u0026quot;web_listener\u0026quot; { load_balancer_id = \u0026quot;${alicloud_slb.web.id}\u0026quot; backend_port = \u0026quot;${var.web_instance_port}\u0026quot; frontend_port = \u0026quot;${var.web_instance_port}\u0026quot; protocol = \u0026quot;http\u0026quot; bandwidth = 5 health_check_type = \u0026quot;tcp\u0026quot; } resource \u0026quot;alicloud_slb_attachment\u0026quot; \u0026quot;web\u0026quot; { load_balancer_id = \u0026quot;${alicloud_slb.web.id}\u0026quot; instance_ids = [\u0026quot;${alicloud_instance.web.*.id}\u0026quot;] } resource \u0026quot;alicloud_oss_bucket\u0026quot; \u0026quot;oss\u0026quot;{ bucket = \u0026quot;${var.project_name}-bucket\u0026quot; acl = \u0026quot;private\u0026quot; } resource \u0026quot;alicloud_cdn_domain_new\u0026quot; \u0026quot;domain\u0026quot; { domain_name = \u0026quot;terraform.test.webapplication.net\u0026quot; cdn_type = \u0026quot;web\u0026quot; scope=\u0026quot;overseas\u0026quot; sources { content = \u0026quot;${alicloud_slb.web.address}\u0026quot; type = \u0026quot;ipaddr\u0026quot; priority = \u0026quot;20\u0026quot; port = 80 weight = \u0026quot;15\u0026quot; } } resource \u0026quot;alicloud_cdn_domain_config\u0026quot; \u0026quot;config\u0026quot; { domain_name = \u0026quot;${alicloud_cdn_domain_new.domain.domain_name}\u0026quot; function_name = \u0026quot;ip_allow_list_set\u0026quot; function_args { arg_name = \u0026quot;ip_list\u0026quot; arg_value = \u0026quot;${alicloud_slb.web.address}\u0026quot; } } resource \u0026quot;alicloud_security_group\u0026quot; \u0026quot;web\u0026quot; { name = \u0026quot;${var.web_layer_name}-sg\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.default.id}\u0026quot; } resource \u0026quot;alicloud_security_group_rule\u0026quot; \u0026quot;allow_web_access\u0026quot; { type = \u0026quot;ingress\u0026quot; ip_protocol = \u0026quot;tcp\u0026quot; nic_type = \u0026quot;intranet\u0026quot; policy = \u0026quot;accept\u0026quot; port_range = \u0026quot;${var.web_instance_port}/${var.web_instance_port}\u0026quot; priority = 1 security_group_id = \u0026quot;${alicloud_security_group.web.id}\u0026quot; cidr_ip = \u0026quot;0.0.0.0/0\u0026quot; } resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;app\u0026quot; { count = \u0026quot;${var.app_instance_count}\u0026quot; instance_name = \u0026quot;${var.app_layer_name}-${count.index}\u0026quot; host_name = \u0026quot;${var.web_layer_name}-${count.index}\u0026quot; instance_type = \u0026quot;${var.app_instance_type}\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; image_id = \u0026quot;${var.app_instance_image_id}\u0026quot; availability_zone = \u0026quot;${var.app_availability_zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.app.id}\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.app.id}\u0026quot;] internet_max_bandwidth_out = 5 password = \u0026quot;${var.ecs_password}\u0026quot; user_data = \u0026quot;${var.app_instance_user_data}\u0026quot; } resource \u0026quot;alicloud_slb\u0026quot; \u0026quot;app\u0026quot; { name = \u0026quot;${var.app_layer_name}-slb\u0026quot; internet = false internet_charge_type = \u0026quot;paybytraffic\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.app.id}\u0026quot; } resource \u0026quot;alicloud_slb_listener\u0026quot; \u0026quot;app_listener\u0026quot; { load_balancer_id = \u0026quot;${alicloud_slb.app.id}\u0026quot; backend_port = \u0026quot;${var.app_instance_port}\u0026quot; frontend_port = \u0026quot;${var.app_instance_port}\u0026quot; protocol = \u0026quot;tcp\u0026quot; bandwidth = 5 health_check_type = \u0026quot;tcp\u0026quot; } resource \u0026quot;alicloud_slb_attachment\u0026quot; \u0026quot;app\u0026quot; { load_balancer_id = \u0026quot;${alicloud_slb.app.id}\u0026quot; instance_ids = [\u0026quot;${alicloud_instance.app.*.id}\u0026quot;] } resource \u0026quot;alicloud_security_group\u0026quot; \u0026quot;app\u0026quot; { name = \u0026quot;${var.web_layer_name}-sg\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.default.id}\u0026quot; } resource \u0026quot;alicloud_security_group_rule\u0026quot; \u0026quot;allow_app_access\u0026quot; { type = \u0026quot;ingress\u0026quot; ip_protocol = \u0026quot;tcp\u0026quot; nic_type = \u0026quot;intranet\u0026quot; policy = \u0026quot;accept\u0026quot; port_range = \u0026quot;${var.app_instance_port}/${var.app_instance_port}\u0026quot; priority = 1 security_group_id = \u0026quot;${alicloud_security_group.app.id}\u0026quot; cidr_ip = \u0026quot;0.0.0.0/0\u0026quot; } resource \u0026quot;alicloud_db_instance\u0026quot; \u0026quot;db_instance\u0026quot; { engine = \u0026quot;${var.db_engine}\u0026quot; engine_version = \u0026quot;${var.db_engine_version}\u0026quot; instance_type = \u0026quot;${var.db_instance_type}\u0026quot; instance_storage = \u0026quot;${var.db_instance_storage}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.db.id}\u0026quot; security_ips = [\u0026quot;10.0.2.0/24\u0026quot;] } resource \u0026quot;alicloud_db_database\u0026quot; \u0026quot;default\u0026quot; { name = \u0026quot;${var.db_layer_name}\u0026quot; instance_id = \u0026quot;${alicloud_db_instance.db_instance.id}\u0026quot; character_set = \u0026quot;utf8\u0026quot; } resource \u0026quot;alicloud_db_account\u0026quot; \u0026quot;default\u0026quot; { instance_id = \u0026quot;${alicloud_db_instance.db_instance.id}\u0026quot; name = \u0026quot;${var.db_user}\u0026quot; password = \u0026quot;${var.db_password}\u0026quot; } resource \u0026quot;alicloud_db_account_privilege\u0026quot; \u0026quot;default\u0026quot; { instance_id = \u0026quot;${alicloud_db_instance.db_instance.id}\u0026quot; account_name = \u0026quot;${alicloud_db_account.default.name}\u0026quot; db_names = [\u0026quot;${alicloud_db_database.default.name}\u0026quot;] privilege = \u0026quot;ReadWrite\u0026quot; } resource \u0026quot;alicloud_db_connection\u0026quot; \u0026quot;default\u0026quot; { instance_id = \u0026quot;${alicloud_db_instance.db_instance.id}\u0026quot; connection_prefix = \u0026quot;alicloud-database\u0026quot; port = \u0026quot;3306\u0026quot; }  \nvariables.tf\nvariable \u0026quot;access_key\u0026quot; {} variable \u0026quot;secret_key\u0026quot; {} variable \u0026quot;region\u0026quot; {} variable \u0026quot;zone\u0026quot; {} variable \u0026quot;project_name\u0026quot; {} variable \u0026quot;ecs_password\u0026quot; {} variable \u0026quot;db_user\u0026quot; {} variable \u0026quot;db_password\u0026quot; {} variable \u0026quot;web_layer_name\u0026quot; {} variable \u0026quot;web_instance_count\u0026quot; {} variable \u0026quot;web_availability_zone\u0026quot; {} variable \u0026quot;web_instance_type\u0026quot; {} variable \u0026quot;web_instance_port\u0026quot; {} variable \u0026quot;web_instance_image_id\u0026quot; {} variable \u0026quot;web_instance_user_data\u0026quot; {} variable \u0026quot;app_layer_name\u0026quot; {} variable \u0026quot;app_instance_count\u0026quot; {} variable \u0026quot;app_availability_zone\u0026quot; {} variable \u0026quot;app_instance_type\u0026quot; {} variable \u0026quot;app_instance_port\u0026quot; {} variable \u0026quot;app_instance_image_id\u0026quot; {} variable \u0026quot;app_instance_user_data\u0026quot; {} variable \u0026quot;db_layer_name\u0026quot; {} variable \u0026quot;db_availability_zone\u0026quot; {} variable \u0026quot;db_engine\u0026quot; {} variable \u0026quot;db_engine_version\u0026quot; {} variable \u0026quot;db_instance_type\u0026quot; {} variable \u0026quot;db_instance_storage\u0026quot; {}  \nconfing.tfvars\naccess_key = \u0026quot;xxxxxxxxxxxxxxxx\u0026quot; secret_key = \u0026quot;xxxxxxxxxxxxxxxx\u0026quot; region = \u0026quot;ap-northeast-1\u0026quot; zone = \u0026quot;ap-northeast-1a\u0026quot; project_name = \u0026quot;Accelerated-Content-Delivery-for-Terraform\u0026quot; ecs_password = \u0026quot;!Password2019\u0026quot; db_user = \u0026quot;test_user\u0026quot; db_password = \u0026quot;!Password2019\u0026quot; web_layer_name = \u0026quot;web-server\u0026quot; web_availability_zone = \u0026quot;ap-northeast-1a\u0026quot; web_instance_count = 3 web_instance_type = \u0026quot;ecs.sn1ne.large\u0026quot; web_instance_port = 80 web_instance_image_id = \u0026quot;centos_7_06_64_20G_alibase_20190218.vhd\u0026quot; web_instance_user_data = \u0026quot;${file(\u0026quot;provisioning.sh\u0026quot;)}\u0026quot; app_layer_name = \u0026quot;app-server\u0026quot; app_availability_zone = \u0026quot;ap-northeast-1a\u0026quot; app_instance_count = 3 app_instance_type = \u0026quot;ecs.sn1ne.large\u0026quot; app_instance_port = 5000 app_instance_image_id = \u0026quot;centos_7_06_64_20G_alibase_20190218.vhd\u0026quot; app_instance_user_data = \u0026quot;${file(\u0026quot;provisioning.sh\u0026quot;)}\u0026quot; db_layer_name = \u0026quot;db-server\u0026quot; db_availability_zone = \u0026quot;ap-northeast-1a\u0026quot; db_engine = \u0026quot;MySQL\u0026quot; db_engine_version = \u0026quot;5.7\u0026quot; db_instance_type = \u0026quot;rds.mysql.s1.small\u0026quot; db_instance_storage = 10  \noutput.tf\noutput \u0026quot;slb_web_public_ip\u0026quot; { value = \u0026quot;${alicloud_slb.web.address}\u0026quot; } output \u0026quot;ECS_instance_app_ip\u0026quot; { value = \u0026quot;${alicloud_instance.app.*.public_ip}\u0026quot; } output \u0026quot;ECS_instance_web_ip\u0026quot; { value = \u0026quot;${alicloud_instance.web.*.public_ip}\u0026quot; } output \u0026quot;rds_host\u0026quot; { value = \u0026quot;${alicloud_db_instance.db_instance.connection_string}\u0026quot; }  \nprovisioning.sh\n#!/bin/sh yum install -y httpd systemctl start httpd systemctl enable httpd  \n実行 \u0026nbsp; ソースの準備ができたら実行します。\nterraform init terraform play -var-file=\u0026quot;confing.tfvars\u0026quot; terraform apply -var-file=\u0026quot;confing.tfvars\u0026quot;  \nこれで完了です。問題なく実行できたら、ECSとSLBそれぞれのIP、RDS Hostが表示されます。\n\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/022_alibabacloud-oss-to-another-oss-synchronization-/",
	"title": "AlibabaCloud OSSから別のOSSへ（同期）",
	"tags": [],
	"description": "AlibabaCloud OSSから別のOSSへ（同期）を説明します。",
	"content": " はじめに \u0026nbsp; 本ページはAlibabaCloud OSSから別のOSSへデータを同期する方法をまとめます。 本ページは具体的な手法より、どんな手法があるかをメインに記載します。\nクロスリージョンレプリケーションを使った同期方法   注意\n* 2019/8/30 現在、クロスリージョンレプリケーション機能は、中国本土の異なるリージョン間、および米国西部1（シリコンバレー）と米国東部1（バージニア）リージョン間でのみサポートされています。\n* クロスリージョンレプリケーション機能はベータテスト段階にあり、現在無料です。この関数は、公式にリリースされた後に課金されます。\n  参考：クロスリージョンレプリケーション https://www.alibabacloud.com/help/doc-detail/31864.htm\n\n最後に OSSの同期、クロスリージョンレプリケーションの手法があります。こちらは現在まだ開発段階なので、続報に期待したいと思います。 "
},
{
	"uri": "https://www.sbcloud.co.jp/help/scenario/terraform/auto-scaling/",
	"title": "オートスケーリングの実現",
	"tags": [],
	"description": "Terraformを用いて、Alibaba Cloud上でオートスケーリングの作成方法を紹介します。",
	"content": " \u0026nbsp; こちらはAlibabaCloud公式サイトにあるソリューション構築例を通じての紹介になります。\nプロビジョニング済みのECSインスタンスをメインとするWebアプリケーションにて、予測が難しいトラフィックニーズに応じて、必要なECSインスタンス台数を増減してくれます。これにより、アプリケーションを止めることなく稼働し続けることが出来ます。同時にリソースに応じた需要増/減から必要なコスト管理も実現出来ます。\n アプリケーションの稼働時間・堅牢性向上 サーバーの自動プロビジョニング ニーズに応じたコスト管理  \n\u0026nbsp; TerraformでWebアプリケーションを作ってみます。ゴールの構成図は以下の通りです。\nそれぞれのパラメータは以下の通りです。\nネットワーク構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_vpc vpc name 任意 ${var.project_name}-vpc VPC の名称。この例の場合、Accelerated-Content-Delivery-for-Terraform-vpc として表示されます。    vpc cidr_block 必須 192.168.0.0/16 VPC の CIDR ブロック    vpc description 任意 VPC for ${var.project_name} VPC の説明。この場合VPC for Accelerated-Content-Delivery-for-Terraform として表示されます。   alicloud_vswitch web name 任意 ${var.project_name}-web-vswitch vswitch の名称。この例の場合、Accelerated-Content-Delivery-for-Terraform-web-vswitch として表示されます。    web vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID    web cidr_block 必須 192.168.1.0/24 vswitch の CIDR ブロック    web availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    web description 任意 Enable Web-Application web vswitch vswitch の説明。   alicloud_vswitch app name 任意 ${var.project_name}-app-vswitch vswitch の名称。この例の場合、Accelerated-Content-Delivery-for-Terraform-app-vswitch として表示されます。    app vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID    app cidr_block 必須 192.168.2.0/24 vswitch の CIDR ブロック    app availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    app description 任意 Enable Web-Application app vswitch vswitch の説明。   alicloud_vswitch db name 任意 ${var.project_name}\u0026ndash;db-vswitch vswitch の名称。この例の場合、Accelerated-Content-Delivery-for-Terraform-db-vswitch として表示されます。    db vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID    db cidr_block 必須 192.168.3.0/24 vswitch の CIDR ブロック    db availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    db description 任意 Enable Web-Application db vswitch vswitch の説明。    WebのECSインスタンスセキュリティグループ構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_security_group web name 任意 ${var.web_layer_name}-sg セキュリティグループ の名称。この例の場合、web-server_sgとして表示されます。    web vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID   alicloud_security_group_rule allow_web_access type 必須 ingress セキュリティグループのタイプ。 ingress（受信） かegress（送信） のいずれかになります。    allow_web_access ip_protocol 必須 tcp 通信プロトコル。 tcp, udp, icmp, gre, all のいずれかになります。    allow_web_access nic_type 必須 intranet ネットワークタイプ。 internet か intranet のいずれかになります。    allow_web_access policy 必須 accept 許可ポリシー。 acceptか drop のいずれかになります。    allow_web_access port_range 必須 ${var.web_instance_port}/${var.web_instance_port} 通信プロトコルのポート範囲。値が「- 1/-1」の場合は無効になります。この場合、80/80になります。    allow_web_access priority 必須 1 許可ポリシーの優先順位。    allow_web_access security_group_id 必須 ${alicloud_security_group.web.id} アタッチするセキュリティグループのID    allow_web_access cidr_ip 任意 0.0.0.0/0 ターゲットとなるIPアドレス。デフォルトは「0.0.0.0/0」。値が「0.0.0.0/0」の場合は無制限状態となります。    WebのECSインスタンス構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_instance app instance_name 任意 ${var.web_layer_name}-${count.index} ECSインスタンスの名称。    web host_name 任意 ${var.web_layer_name}-${count.index} ECSインスタンスのHost名称。    web instance_type 必須 ${var.web_instance_type} ECSインスタンスのタイプ。    web image_id 必須 ${var.web_instance_image_id} ECSインスタンスのImageID。    web security_groups 必須 ${alicloud_security_group.web.id} アタッチするセキュリティグループのID。    web availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン。    web vswitch_id 必須 ${alicloud_vswitch.web.id} アタッチするVSwitchのID。    web password 任意 ${var.ecs_password} EC インスタンスのログインパスワード。    web internet_max_bandwidth_out 任意 20 パブリックネットワークへの最大帯域幅。デフォルトは0ですが、0より大きい値を入れるとパブリックIPアドレスがアタッチされます。    web user_data 任意 ${var.web_instance_user_data} ECSインスタンス起動後に実行するshell内容もしくはファイル名。    WebのSLB構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_slb web name 任意 ${var.web_layer_name}-slb SLBの名称。    web vswitch_id 任意 ${alicloud_vswitch.web.id} アタッチするVSwitchのID。    web internet 必須 true SLB addressのインターネットタイプ。Trueのインターネットにするか、falseのイントラネットいずれかになります。    web internet_charge_type 必須 paybytraffic インターネットチェンジタイプ。PayByBandwidth、PayByTrafficのいずれかになります。   alicloud_slb_listener web_listener load_balancer_id 必須 ${alicloud_slb.web.id} 新しいリスナーを起動するために使用されるロードバランサID。    web_listener backend_port 必須 ${var.web_instance_port} Server Load Balancerインスタンスバックエンドが使用するポート。    web_listener frontend_port 必須 ${var.web_instance_port} Server Load Balancerインスタンスフロントエンドが使用するポート。    web_listener health_check_type 任意 tcp ヘルスチェックが使用するポート。health_check_typeの代わりに使用することも可能です。    web_listener protocol 必須 http 使用するプロトコル。http、https、tcp、udpのいずれかになります。    web_listener bandwidth 任意 5 Listenerの最大帯域幅。   alicloud_slb_attachment web load_balancer_id 必須 ${alicloud_slb.web.id} ロードバランサID。    web instance_ids 必須 ${alicloud_instance.web.*.id} アタッチするECSインスタンスID。    WebのAutoScaling構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_ess_scaling_group web scaling_group_name 任意 ${var.solution_name}-ess-web スケーリンググループ名称。    web min_size 必須 ${var.web_instance_min_count} ECSインスタンスのスケーリング最小数。    web max_size 必須 ${var.web_instance_max_count} ECSインスタンスのスケーリング最大数。    web removal_policies 必須 OldestInstance, NewestInstance スケーリング削除ポリシー。OldestInstance、NewestInstance、OldestScalingConfigurationのどれかと組み合わせて選定になります。    web loadbalancer_ids 任意 ${alicloud_slb.web.id} SLBを利用する場合、アタッチするSLBインスタンスID。    web vswitch_ids 必須 ${alicloud_vswitch.web.id} アタッチするVSwitchのID。   alicloud_ess_scaling_configuration web scaling_group_id 必須 ${alicloud_ess_scaling_group.web.id} アタッチするスケーリンググループのID。    web image_id 必須 ${var.web_instance_image_id} ECSインスタンスのImageID。    web instance_type 任意 ${var.web_instance_type} ECSインスタンスのリソースタイプ。    web scaling_configuration_name 任意 scaling-configuration-web スケジュール済みタスクに表示される名称。デフォルト値はScalingConfigurationIdです。    web system_disk_category 任意 cloud_efficiency システムディスクのカテゴリ。    web security_group_id 任意 ${alicloud_security_group.web.id} アタッチするセキュリティグループのID    web active 任意 true 現在のスケーリング設定をアクティブにするか。   alicloud_ess_scaling_rule web scaling_rule_name 必須 ${var.solution_name}-ess-rule-web スケールルールに表示される名称。    web scaling_group_id 必須 ${alicloud_ess_scaling_group.web.id} スケーリンググループのID。    web adjustment_type 必須 TotalCapacity スケーリングルールの調整モード。QuantityChangeInCapacity、PercentChangeInCapacity、TotalCapacityのいずれかになります。    web adjustment_value 任意 2 スケーリングルールの調整値。    web cooldown 任意 60 スケーリングルールのクールダウン時間。    AppのECSインスタンスセキュリティグループ構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_security_group app name 任意 ${var.app_layer_name}-sg セキュリティグループ の名称。この例の場合、app-server_sgとして表示されます。    app vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID   alicloud_security_group_rule allow_app_access type 必須 ingress セキュリティグループのタイプ。 ingress（受信） かegress（送信） のいずれかになります。    allow_app_access ip_protocol 必須 tcp 通信プロトコル。 tcp, udp, icmp, gre, all のいずれかになります。    allow_app_access nic_type 必須 intranet ネットワークタイプ。 internet か intranet のいずれかになります。    allow_app_access policy 必須 accept 許可ポリシー。 acceptか drop のいずれかになります。    allow_app_access port_range 必須 ${var.app_instance_port}/${var.app_instance_port} 通信プロトコルのポート範囲。値が「- 1/-1」の場合は無効になります。この場合、80/80になります。    allow_app_access priority 必須 1 許可ポリシーの優先順位。    allow_app_access security_group_id 必須 ${alicloud_security_group.app.id} アタッチするセキュリティグループのID    allow_app_access cidr_ip 任意 0.0.0.0/0 ターゲットとなるIPアドレス。デフォルトは「0.0.0.0/0」。値が「0.0.0.0/0」の場合は無制限状態となります。    AppのECSインスタンス構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_instance app instance_name 任意 ${var.app_layer_name}-${count.index} ECSインスタンスの名称。    app host_name 任意 ${var.app_layer_name}-${count.index} ECSインスタンスのHost名称。    app instance_type 必須 ${var.app_instance_type} ECSインスタンスのタイプ。    app image_id 必須 ${var.app_instance_image_id} ECSインスタンスのImageID。    app security_groups 必須 ${alicloud_security_group.app.id} アタッチするセキュリティグループのID。    app availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン。    app vswitch_id 必須 ${alicloud_vswitch.app.id} アタッチするVSwitchのID。    app password 任意 ${var.ecs_password} EC インスタンスのログインパスワード。    app internet_max_bandwidth_out 任意 5 パブリックネットワークへの最大帯域幅。デフォルトは0ですが、0より大きい値を入れるとパブリックIPアドレスがアタッチされます。    app user_data 任意 ${var.app_instance_user_data} ECSインスタンス起動後に実行するshell内容もしくはファイル名。    AppのSLB構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_slb app name 任意 ${var.app_layer_name}-slb SLBの名称。    app vswitch_id 任意 ${alicloud_vswitch.web.id} アタッチするVSwitchのID。    app internet 必須 false SLB addressのインターネットタイプ。Trueのインターネットにするか、falseのイントラネットいずれかになります。    app internet_charge_type 必須 paybytraffic インターネットチェンジタイプ。PayByBandwidth、PayByTrafficのいずれかになります。   alicloud_slb_listener app_listener load_balancer_id 必須 ${alicloud_slb.app.id} 新しいリスナーを起動するために使用されるロードバランサID。    app_listener backend_port 必須 ${var.web_instance_port} Server Load Balancerインスタンスバックエンドが使用するポート。    app_listener frontend_port 必須 ${var.web_instance_port} Server Load Balancerインスタンスフロントエンドが使用するポート。    app_listener health_check_type 任意 tcp ヘルスチェックが使用するポート。health_check_typeの代わりに使用することも可能です。    app_listener protocol 必須 tcp 使用するプロトコル。http、https、tcp、udpのいずれかになります。    app_listener bandwidth 任意 5 Listenerの最大帯域幅。   alicloud_slb_attachment app load_balancer_id 必須 ${alicloud_slb.app.id} ロードバランサID。    app instance_ids 必須 ${alicloud_instance.app.*.id} アタッチするECSインスタンスID。    AppのAutoScaling構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_ess_scaling_group app scaling_group_name 任意 ${var.solution_name}-ess-app スケーリンググループ名称。    app min_size 必須 ${var.app_instance_min_count} ECSインスタンスのスケーリング最小数。    app max_size 必須 ${var.app_instance_max_count} ECSインスタンスのスケーリング最大数。    app removal_policies 必須 OldestInstance, NewestInstance スケーリング削除ポリシー。OldestInstance、NewestInstance、OldestScalingConfigurationのどれかと組み合わせて選定になります。    app loadbalancer_ids 任意 ${alicloud_slb.app.id} SLBを利用する場合、アタッチするSLBインスタンスID。    app vswitch_ids 必須 ${alicloud_vswitch.app.id} アタッチするVSwitchのID。   alicloud_ess_scaling_configuration app scaling_group_id 必須 ${alicloud_ess_scaling_group.app.id} アタッチするスケーリンググループのID。    app image_id 必須 ${var.app_instance_image_id} ECSインスタンスのImageID。    app instance_type 任意 ${var.app_instance_type} ECSインスタンスのリソースタイプ。    app scaling_configuration_name 任意 scaling-configuration-app スケジュール済みタスクに表示される名称。デフォルト値はScalingConfigurationIdです。    app system_disk_category 任意 cloud_efficiency システムディスクのカテゴリ。    app security_group_id 任意 ${alicloud_security_group.app.id} アタッチするセキュリティグループのID    app active 任意 true 現在のスケーリング設定をアクティブにするか。   alicloud_ess_scaling_rule app scaling_rule_name 必須 ${var.solution_name}-ess-rule-app スケールルールに表示される名称。    app scaling_group_id 必須 ${alicloud_ess_scaling_group.app.id} スケーリンググループのID。    app adjustment_type 必須 TotalCapacity スケーリングルールの調整モード。QuantityChangeInCapacity、PercentChangeInCapacity、TotalCapacityのいずれかになります。    app adjustment_value 任意 2 スケーリングルールの調整値。    app cooldown 任意 60 スケーリングルールのクールダウン時間。    RDS構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_db_instance db_instance engine 必須 ${var.db_engine} データベースタイプ。MySQL、SQLServer、PostgreSQL、PPASのいずれかになります。    db_instance engine_version 必須 ${var.db_engine_version} データベースのバージョン。    db_instance instance_type 必須 ${var.db_instance_type} DBインスタンスタイプ。    db_instance instance_storage 必須 ${var.db_instance_storage} DBインスタンスのストレージ領域。    db_instance vswitch_id 必須 ${alicloud_vswitch.db.id} アタッチするVSwitchのID。    db_instance security_ips 任意 10.0.2.0/24 データベースへのアクセスが許可されているIPアドレスのリスト。   alicloud_db_database default name 必須 ${var.db_layer_name} RDSの名称。この例の場合、RDS-Sample-for-Terraform として表示されます。    default instance_id 必須 ${alicloud_db_instance.db_instance.id} データベースを実行するインスタンスのID。    default character_set 必須 utf8 文字セット。   alicloud_db_account default instance_id 必須 ${alicloud_db_instance.db_instance.id} データベースを実行するインスタンスのID。    default name 必須 ${var.db_user} 運用アカウント名。    default password 必須 ${var.db_password} 運用アカウント名に対するパスワード。   alicloud_db_account_privilege default instance_id 必須 ${alicloud_db_instance.db_instance.id} データベースを実行するインスタンスのID。    default account_name 必須 ${alicloud_db_account.default.name} 運用アカウント名。    default db_names 必須 ${alicloud_db_database.default.name} データベース名。    default privilege 必須 ReadWrite アクセス権限。ReadOnly、ReadWriteのいずれかになります。   alicloud_db_connection default instance_id 必須 ${alicloud_db_instance.db_instance.id} データベースを実行するインスタンスのID。    default connection_prefix 必須 alicloud-database インターネット接続プレフィックス。    default port 任意 3306 インターネット接続ポート。    CDN構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_cdn_domain_new domain domain_name 必須 terraform.test.webapplication.net ドメインの名称。    domain cdn_type 必須 web CDNのタイプ。web、download、videoのいずれかになります。    domain scope 必須 overseas CDNドメインの範囲。domestic、overseas、globalのいずれかになります。    domain sources 必須 ${alicloud_slb.web.address} 高速ドメインの送信元アドレスリスト。　リストタイプで記載。   alicloud_cdn_domain_config config domain_name 必須 ${alicloud_cdn_domain_new.domain.domain_name} ドメインの名称。    config function_name 必須 ip_allow_list_set ドメイン設定の名前。    config function_args 必須 ip_list,${alicloud_slb.web.address} ドメイン構成の引数。    OSS構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_oss_bucket oss bucket 任意 ${var.project_name}-bucket バケットの名称。    oss acl 任意 private アクセス制御リスト（ACL）の権限設定。    \nソースは以下になります。\n注意として、OSSのbucket名およびdomainは（他ユーザ含め）まだ使われてないユニーク名が必須となっていますので、各自オリジナル名称へ変更するなど調整してください。\n\nmain.tf\nprovider \u0026quot;alicloud\u0026quot; { access_key = \u0026quot;${var.access_key}\u0026quot; secret_key = \u0026quot;${var.secret_key}\u0026quot; region = \u0026quot;${var.region}\u0026quot; } resource \u0026quot;alicloud_vpc\u0026quot; \u0026quot;default\u0026quot; { name = \u0026quot;${var.project_name}-vpc\u0026quot; cidr_block = \u0026quot;192.168.0.0/16\u0026quot; description = \u0026quot;VPC for ${var.project_name}\u0026quot; } resource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;web\u0026quot; { name = \u0026quot;${var.project_name}-web-vswitch\u0026quot; description = \u0026quot;Enable Web-Application web vswitch\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.default.id}\u0026quot; cidr_block = \u0026quot;192.168.1.0/24\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; } resource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;app\u0026quot; { name = \u0026quot;${var.project_name}-app-vswitch\u0026quot; description = \u0026quot;Enable Web-Application app vswitch\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.default.id}\u0026quot; cidr_block = \u0026quot;192.168.2.0/24\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; } resource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;db\u0026quot; { name = \u0026quot;${var.project_name}-db-vswitch\u0026quot; description = \u0026quot;Enable Web-Application db vswitch\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.default.id}\u0026quot; cidr_block = \u0026quot;192.168.3.0/24\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; } resource \u0026quot;alicloud_ess_scaling_group\u0026quot; \u0026quot;web\u0026quot; { scaling_group_name = \u0026quot;${var.project_name}-ess-web\u0026quot; min_size = \u0026quot;${var.web_instance_min_count}\u0026quot; max_size = \u0026quot;${var.web_instance_max_count}\u0026quot; removal_policies = [\u0026quot;OldestInstance\u0026quot;, \u0026quot;NewestInstance\u0026quot;] loadbalancer_ids = [\u0026quot;${alicloud_slb.web.id}\u0026quot;] vswitch_ids = [\u0026quot;${alicloud_vswitch.web.id}\u0026quot;] } resource \u0026quot;alicloud_ess_scaling_configuration\u0026quot; \u0026quot;web\u0026quot; { scaling_group_id = \u0026quot;${alicloud_ess_scaling_group.web.id}\u0026quot; image_id = \u0026quot;${var.web_instance_image_id}\u0026quot; instance_type = \u0026quot;${var.web_instance_type}\u0026quot; scaling_configuration_name = \u0026quot;scaling-configuration-web\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; security_group_id = \u0026quot;${alicloud_security_group.web.id}\u0026quot; active = true } resource \u0026quot;alicloud_ess_scaling_rule\u0026quot; \u0026quot;web\u0026quot; { scaling_rule_name = \u0026quot;${var.project_name}-ess-rule-web\u0026quot; scaling_group_id = \u0026quot;${alicloud_ess_scaling_group.web.id}\u0026quot; adjustment_type = \u0026quot;TotalCapacity\u0026quot; adjustment_value = 2 cooldown = 60 } resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;web\u0026quot; { count = \u0026quot;${var.web_instance_count}\u0026quot; instance_name = \u0026quot;${var.web_layer_name}-${count.index}\u0026quot; host_name = \u0026quot;${var.web_layer_name}-${count.index}\u0026quot; instance_type = \u0026quot;${var.web_instance_type}\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; image_id = \u0026quot;${var.web_instance_image_id}\u0026quot; availability_zone = \u0026quot;${var.web_availability_zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.web.id}\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.web.id}\u0026quot;] internet_max_bandwidth_out = 5 password = \u0026quot;${var.ecs_password}\u0026quot; user_data = \u0026quot;${var.web_instance_user_data}\u0026quot; } resource \u0026quot;alicloud_slb\u0026quot; \u0026quot;web\u0026quot; { name = \u0026quot;${var.web_layer_name}-slb\u0026quot; internet = true internet_charge_type = \u0026quot;paybytraffic\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.web.id}\u0026quot; } resource \u0026quot;alicloud_slb_listener\u0026quot; \u0026quot;web_listener\u0026quot; { load_balancer_id = \u0026quot;${alicloud_slb.web.id}\u0026quot; backend_port = \u0026quot;${var.web_instance_port}\u0026quot; frontend_port = \u0026quot;${var.web_instance_port}\u0026quot; protocol = \u0026quot;http\u0026quot; bandwidth = 5 health_check_type = \u0026quot;tcp\u0026quot; } resource \u0026quot;alicloud_slb_attachment\u0026quot; \u0026quot;web\u0026quot; { load_balancer_id = \u0026quot;${alicloud_slb.web.id}\u0026quot; instance_ids = [\u0026quot;${alicloud_instance.web.*.id}\u0026quot;] } resource \u0026quot;alicloud_oss_bucket\u0026quot; \u0026quot;oss\u0026quot;{ bucket = \u0026quot;${var.project_name}-bucket\u0026quot; acl = \u0026quot;private\u0026quot; } resource \u0026quot;alicloud_cdn_domain_new\u0026quot; \u0026quot;domain\u0026quot; { domain_name = \u0026quot;terraform.test.webapplication.net\u0026quot; cdn_type = \u0026quot;web\u0026quot; scope=\u0026quot;overseas\u0026quot; sources { content = \u0026quot;${alicloud_slb.web.address}\u0026quot; type = \u0026quot;ipaddr\u0026quot; priority = \u0026quot;20\u0026quot; port = 80 weight = \u0026quot;15\u0026quot; } } resource \u0026quot;alicloud_cdn_domain_config\u0026quot; \u0026quot;config\u0026quot; { domain_name = \u0026quot;${alicloud_cdn_domain_new.domain.domain_name}\u0026quot; function_name = \u0026quot;ip_allow_list_set\u0026quot; function_args { arg_name = \u0026quot;ip_list\u0026quot; arg_value = \u0026quot;${alicloud_slb.web.address}\u0026quot; } } resource \u0026quot;alicloud_security_group\u0026quot; \u0026quot;web\u0026quot; { name = \u0026quot;${var.web_layer_name}-sg\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.default.id}\u0026quot; } resource \u0026quot;alicloud_security_group_rule\u0026quot; \u0026quot;allow_web_access\u0026quot; { type = \u0026quot;ingress\u0026quot; ip_protocol = \u0026quot;tcp\u0026quot; nic_type = \u0026quot;intranet\u0026quot; policy = \u0026quot;accept\u0026quot; port_range = \u0026quot;${var.web_instance_port}/${var.web_instance_port}\u0026quot; priority = 1 security_group_id = \u0026quot;${alicloud_security_group.web.id}\u0026quot; cidr_ip = \u0026quot;0.0.0.0/0\u0026quot; } resource \u0026quot;alicloud_instance\u0026quot; \u0026quot;app\u0026quot; { count = \u0026quot;${var.app_instance_count}\u0026quot; instance_name = \u0026quot;${var.app_layer_name}-${count.index}\u0026quot; host_name = \u0026quot;${var.web_layer_name}-${count.index}\u0026quot; instance_type = \u0026quot;${var.app_instance_type}\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; image_id = \u0026quot;${var.app_instance_image_id}\u0026quot; availability_zone = \u0026quot;${var.app_availability_zone}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.app.id}\u0026quot; security_groups = [\u0026quot;${alicloud_security_group.app.id}\u0026quot;] internet_max_bandwidth_out = 5 password = \u0026quot;${var.ecs_password}\u0026quot; user_data = \u0026quot;${var.app_instance_user_data}\u0026quot; } resource \u0026quot;alicloud_ess_scaling_group\u0026quot; \u0026quot;app\u0026quot; { scaling_group_name = \u0026quot;${var.project_name}-ess-app\u0026quot; min_size = \u0026quot;${var.app_instance_min_count}\u0026quot; max_size = \u0026quot;${var.app_instance_max_count}\u0026quot; removal_policies = [\u0026quot;OldestInstance\u0026quot;, \u0026quot;NewestInstance\u0026quot;] loadbalancer_ids = [\u0026quot;${alicloud_slb.app.id}\u0026quot;] vswitch_ids = [\u0026quot;${alicloud_vswitch.app.id}\u0026quot;] } resource \u0026quot;alicloud_ess_scaling_configuration\u0026quot; \u0026quot;app\u0026quot; { scaling_group_id = \u0026quot;${alicloud_ess_scaling_group.app.id}\u0026quot; image_id = \u0026quot;${var.app_instance_image_id}\u0026quot; instance_type = \u0026quot;${var.app_instance_type}\u0026quot; scaling_configuration_name = \u0026quot;scaling-configuration-app\u0026quot; system_disk_category = \u0026quot;cloud_efficiency\u0026quot; security_group_id = \u0026quot;${alicloud_security_group.app.id}\u0026quot; active = true } resource \u0026quot;alicloud_ess_scaling_rule\u0026quot; \u0026quot;app\u0026quot; { scaling_rule_name = \u0026quot;${var.project_name}-ess-rule-app\u0026quot; scaling_group_id = \u0026quot;${alicloud_ess_scaling_group.app.id}\u0026quot; adjustment_type = \u0026quot;TotalCapacity\u0026quot; adjustment_value = 2 cooldown = 60 } resource \u0026quot;alicloud_slb\u0026quot; \u0026quot;app\u0026quot; { name = \u0026quot;${var.app_layer_name}-slb\u0026quot; internet = false internet_charge_type = \u0026quot;paybytraffic\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.app.id}\u0026quot; } resource \u0026quot;alicloud_slb_listener\u0026quot; \u0026quot;app_listener\u0026quot; { load_balancer_id = \u0026quot;${alicloud_slb.app.id}\u0026quot; backend_port = \u0026quot;${var.app_instance_port}\u0026quot; frontend_port = \u0026quot;${var.app_instance_port}\u0026quot; protocol = \u0026quot;tcp\u0026quot; bandwidth = 5 health_check_type = \u0026quot;tcp\u0026quot; } resource \u0026quot;alicloud_slb_attachment\u0026quot; \u0026quot;app\u0026quot; { load_balancer_id = \u0026quot;${alicloud_slb.app.id}\u0026quot; instance_ids = [\u0026quot;${alicloud_instance.app.*.id}\u0026quot;] } resource \u0026quot;alicloud_security_group\u0026quot; \u0026quot;app\u0026quot; { name = \u0026quot;${var.web_layer_name}-sg\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.default.id}\u0026quot; } resource \u0026quot;alicloud_security_group_rule\u0026quot; \u0026quot;allow_app_access\u0026quot; { type = \u0026quot;ingress\u0026quot; ip_protocol = \u0026quot;tcp\u0026quot; nic_type = \u0026quot;intranet\u0026quot; policy = \u0026quot;accept\u0026quot; port_range = \u0026quot;${var.app_instance_port}/${var.app_instance_port}\u0026quot; priority = 1 security_group_id = \u0026quot;${alicloud_security_group.app.id}\u0026quot; cidr_ip = \u0026quot;0.0.0.0/0\u0026quot; } resource \u0026quot;alicloud_db_instance\u0026quot; \u0026quot;db_instance\u0026quot; { engine = \u0026quot;${var.db_engine}\u0026quot; engine_version = \u0026quot;${var.db_engine_version}\u0026quot; instance_type = \u0026quot;${var.db_instance_type}\u0026quot; instance_storage = \u0026quot;${var.db_instance_storage}\u0026quot; vswitch_id = \u0026quot;${alicloud_vswitch.db.id}\u0026quot; security_ips = [\u0026quot;10.0.2.0/24\u0026quot;] } resource \u0026quot;alicloud_db_database\u0026quot; \u0026quot;default\u0026quot; { name = \u0026quot;${var.db_layer_name}\u0026quot; instance_id = \u0026quot;${alicloud_db_instance.db_instance.id}\u0026quot; character_set = \u0026quot;utf8\u0026quot; } resource \u0026quot;alicloud_db_account\u0026quot; \u0026quot;default\u0026quot; { instance_id = \u0026quot;${alicloud_db_instance.db_instance.id}\u0026quot; name = \u0026quot;${var.db_user}\u0026quot; password = \u0026quot;${var.db_password}\u0026quot; } resource \u0026quot;alicloud_db_account_privilege\u0026quot; \u0026quot;default\u0026quot; { instance_id = \u0026quot;${alicloud_db_instance.db_instance.id}\u0026quot; account_name = \u0026quot;${alicloud_db_account.default.name}\u0026quot; db_names = [\u0026quot;${alicloud_db_database.default.name}\u0026quot;] privilege = \u0026quot;ReadWrite\u0026quot; } resource \u0026quot;alicloud_db_connection\u0026quot; \u0026quot;default\u0026quot; { instance_id = \u0026quot;${alicloud_db_instance.db_instance.id}\u0026quot; connection_prefix = \u0026quot;alicloud-database\u0026quot; port = \u0026quot;3306\u0026quot; }  \nvariables.tf\nvariable \u0026quot;access_key\u0026quot; {} variable \u0026quot;secret_key\u0026quot; {} variable \u0026quot;region\u0026quot; {} variable \u0026quot;zone\u0026quot; {} variable \u0026quot;project_name\u0026quot; {} variable \u0026quot;ecs_password\u0026quot; {} variable \u0026quot;db_user\u0026quot; {} variable \u0026quot;db_password\u0026quot; {} variable \u0026quot;web_layer_name\u0026quot; {} variable \u0026quot;web_instance_count\u0026quot; {} variable \u0026quot;web_instance_min_count\u0026quot; {} variable \u0026quot;web_instance_max_count\u0026quot; {} variable \u0026quot;web_availability_zone\u0026quot; {} variable \u0026quot;web_instance_type\u0026quot; {} variable \u0026quot;web_instance_port\u0026quot; {} variable \u0026quot;web_instance_image_id\u0026quot; {} variable \u0026quot;web_instance_user_data\u0026quot; {} variable \u0026quot;app_layer_name\u0026quot; {} variable \u0026quot;app_instance_count\u0026quot; {} variable \u0026quot;app_instance_min_count\u0026quot; {} variable \u0026quot;app_instance_max_count\u0026quot; {} variable \u0026quot;app_availability_zone\u0026quot; {} variable \u0026quot;app_instance_type\u0026quot; {} variable \u0026quot;app_instance_port\u0026quot; {} variable \u0026quot;app_instance_image_id\u0026quot; {} variable \u0026quot;app_instance_user_data\u0026quot; {} variable \u0026quot;db_layer_name\u0026quot; {} variable \u0026quot;db_availability_zone\u0026quot; {} variable \u0026quot;db_engine\u0026quot; {} variable \u0026quot;db_engine_version\u0026quot; {} variable \u0026quot;db_instance_type\u0026quot; {} variable \u0026quot;db_instance_storage\u0026quot; {}  \nconfing.tfvars\naccess_key = \u0026quot;xxxxxxxxxxxxxxxx\u0026quot; secret_key = \u0026quot;xxxxxxxxxxxxxxxx\u0026quot; region = \u0026quot;ap-northeast-1\u0026quot; zone = \u0026quot;ap-northeast-1a\u0026quot; project_name = \u0026quot;Accelerated-Content-Delivery-for-Terraform\u0026quot; ecs_password = \u0026quot;!Password2019\u0026quot; db_user = \u0026quot;test_user\u0026quot; db_password = \u0026quot;!Password2019\u0026quot; web_layer_name = \u0026quot;web-server\u0026quot; web_availability_zone = \u0026quot;ap-northeast-1a\u0026quot; web_instance_count = 3 web_instance_min_count = 1 web_instance_max_count = 5 web_instance_type = \u0026quot;ecs.sn1ne.large\u0026quot; web_instance_port = 80 web_instance_image_id = \u0026quot;centos_7_06_64_20G_alibase_20190218.vhd\u0026quot; web_instance_user_data = \u0026quot;${file(\u0026quot;provisioning.sh\u0026quot;)}\u0026quot; app_layer_name = \u0026quot;app-server\u0026quot; app_availability_zone = \u0026quot;ap-northeast-1a\u0026quot; app_instance_count = 3 app_instance_min_count = 1 app_instance_max_count = 5 app_instance_type = \u0026quot;ecs.sn1ne.large\u0026quot; app_instance_port = 5000 app_instance_image_id = \u0026quot;centos_7_06_64_20G_alibase_20190218.vhd\u0026quot; app_instance_user_data = \u0026quot;${file(\u0026quot;provisioning.sh\u0026quot;)}\u0026quot; db_layer_name = \u0026quot;db-server\u0026quot; db_availability_zone = \u0026quot;ap-northeast-1a\u0026quot; db_engine = \u0026quot;MySQL\u0026quot; db_engine_version = \u0026quot;5.7\u0026quot; db_instance_type = \u0026quot;rds.mysql.s1.small\u0026quot; db_instance_storage = 10  \noutput.tf\noutput \u0026quot;slb_web_public_ip\u0026quot; { value = \u0026quot;${alicloud_slb.web.address}\u0026quot; } output \u0026quot;ECS_instance_app_ip\u0026quot; { value = \u0026quot;${alicloud_instance.app.*.public_ip}\u0026quot; } output \u0026quot;ECS_instance_web_ip\u0026quot; { value = \u0026quot;${alicloud_instance.web.*.public_ip}\u0026quot; } output \u0026quot;rds_host\u0026quot; { value = \u0026quot;${alicloud_db_instance.db_instance.connection_string}\u0026quot; }  \nprovisioning.sh\n#!/bin/sh yum install -y httpd systemctl start httpd systemctl enable httpd  \n実行 \u0026nbsp; ソースの準備ができたら実行します。\nterraform init terraform play -var-file=\u0026quot;confing.tfvars\u0026quot; terraform apply -var-file=\u0026quot;confing.tfvars\u0026quot;  \nこれで完了です。問題なく実行できたら、ECSとSLBそれぞれのIP、RDS Hostが表示されます。\n\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/best-practice/bigdata/023_development_environment_buildup_set_and_buildup_method/",
	"title": "開発環境構築について",
	"tags": [],
	"description": "AlibabaCloud SDKでBigDataを利用する上での開発環境を設定します。",
	"content": " はじめに \u0026nbsp; Alibaba Cloud SDKはGo、Node.js、RUSH、など幅広い分野に展開されていますが、AlibabaCloudのBigDataプロダクトはScala/Java/Pythonを主に利用します。 そのため、本章ではローカルのMac OS上でPython及びPlayFrameworkの開発を開始するための環境構築手順について記載します。\n\n環境 Mac OS Mojave (10.14.x）\n\nHomebrew Homebrewの導入 Mac用パッケージ管理ソフト Homebrew をインストールします。 Homebrew（ホームブルー）は、macOSオペレーティングシステム上でソフトウェアの導入を単純化するパッケージ管理システムのひとつです。 Homebrewを導入することで、Pythonの構築など、後の導入が楽になります。\nHomebrewのインストール ターミナルを開いてHomebrew公式サイト に書かれている以下コマンドを実行します。 画面の指示に従ってキーやパスワード入力して、しばらく待つとインストールが終わります。\n$ /usr/bin/ruby -e \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master Homebrewのインストール確認 以下コマンドでHomebrewが無事インストールできたかを確認します。\n$ brew doctor  ターミナルに以下が表示されれば完了です。 \u0026gt; Your system is ready to brew.\nHomebrewの更新 brewコマンドでパッケージをインストールしたものの、目的のバージョンがないときは、brewのバージョンが古い可能性がありますので、以下コマンドで更新チェックをします。\n$ brew update  \nPython開発環境構築  PyCharm  JetBrains社製のPython用IDE（統合開発環境） 無償版（Community Edition）と有償版（Ultimate Edition）があり、有償版はDjangoなどのWebフレームワークをサポートしています。 ※無償版でも十分実用的なため今回は無償版を利用します   \npyenv導入 pyenvは1台のPC内でPythonの異なるバージョンを切り分け、管理するためのツールです。例えば、Python2.7と3.6混合で利用したい場合は、pyenvが非常に役立ちます。 ターミナル上で以下コマンドを使ってpyenvをインストールします。\n$ brew install pyenv  ターミナルで以下コマンドを実行し、pyenvのフォルダにPATHを通します。\n$ echo 'export PATH=\u0026quot;~/.pyenv/shims:$PATH\u0026quot;' \u0026gt;\u0026gt; ~/.bash_profile $ echo 'if which pyenv \u0026gt; /dev/null; then eval \u0026quot;$(pyenv init -)\u0026quot;; fi' \u0026gt;\u0026gt; ~/.bash_profile $ source ~/.bash_profile  あとはpyenvを通じて、インストールしたいバージョンを指定してインストールします。\n$ pyenv install --list # ここで pyenvとしてインストール可能なリストがでます。 # 今回はPython 3.7.3を入れたいので、 3.7.3を選択します\u0026gt; $ pyenv install 3.7.3 あとは使用したい状況に合わせてバージョンを切り替えるだけです。\n$ python --version Python 2.7.16 $ pyenv versions * system (set by /Users/hironobu.ohara/.pyenv/version) 3.6.3 3.7.3 $ pyenv global 3.7.3 $ pyenv versions system 3.6.3 * 3.7.3 (set by /Users/hironobu.ohara/.pyenv/version) $  \nPyCharmダウンロード＆インストール PyCharmのダウンロードページ にアクセスし、Community版をダウンロードします。 https://www.jetbrains.com/pycharm/ そのあとはダウンロードされたdmgファイルを開き、インストールすれば完了です。 また、PyCharmのオプションとして、以下の設定を推奨します。 * 行番号を表示 * PEP8のコーディング規約に準拠\nPlay Framework開発環境構築 Java(JDK)、Play Framework、IntelliJ IDEAを導入します。\nJDKのインストール OracleのJDKダウンロードページからMac向けJDKをダウンロードします。 https://www.oracle.com/java/technologies/javase-java-archive-javase8-downloads.html ※(Java10ではIntelliJ IDEAが動かないため注意) そのあとはダウンロードされたdmgファイルを開き、インストールすれば完了です。 インストール完了後、ターミナルでJavaのバージョン確認コマンドを実行し、以下のような表示になればOKです。\n$ java -version java version \u0026#34;1.8.0_144\u0026#34; Java(TM) SE Runtime Environment (build 1.8.0_144-b01) Java HotSpot(TM) 64-Bit Server VM (build 25.144-b01, mixed mode) \nPlay Frameworkのインストール Play Frameworkは「Javaのフレームワーク」です。Javaのライブラリだけでなく、Scalaという言語をサポートしています。 ScalaはJava仮想マシン上で動くスクリプト言語です。Javaの文法と似つつ、Javaをベースとしたオブジェクト指向言語の上に、関数型の機能を表現しているため簡単にコーティングできることが特徴です。 さてsbt、scala用のbuildツールをインストールします。\n$ brew install sbt インストール完了後、以下コマンドを実行します。これでscala対話型コマンドが出たらインストール成功です。\n$ sbt console [warn] No sbt.version set in project/build.properties, base directory: /Users/hironobu.ohara/Dev/bigdata_tech [info] Set current project to bigdata_tech (in build file:/Users/hironobu.ohara/Dev/bigdata_tech/) [info] Updating https://repo1.maven.org/maven2/org/scala-lang/scala-library/2.12.8/scala-library-2.12.8.pom 100.0% [##########] 1.6 KiB (804 B / s) [info] Resolved dependencies [info] Updating https://repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.12.8/scala-compiler-2.12.8.pom 100.0% [##########] 2.2 KiB (8.6 KiB / s) 〜〜〜 [info] Non-compiled module 'compiler-bridge_2.12' for Scala 2.12.8. Compiling... [info] Compilation completed in 7.941s. [info] Starting scala interpreter... Welcome to Scala 2.12.8 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_144). Type in expressions for evaluation. Or try :help. scala\u0026gt; | =\u0026gt; bigdata_tech / Compile / compileIncremental 0s  \nscalaでちょっと試してみます。何が対話型なのかみてみましょう。\nまた、scalaの対話型を終了するときはsys.exitで終了します。\n$ sys.exit IntelliJ IDEAのダウンロード＆インストール IntelliJとは、Java言語など多言語対応の統合開発環境です。 IntelliJ IDEAのダウンロードページ にアクセスします。 https://www.jetbrains.com/idea/download/ Community版をダウンロードします。 ダウンロードされたdmgファイルを開き、appファイルをApplicationsフォルダへDragします。 アプリケーションフォルダにて、IntelliJ IDEA CE.appを開きます。 今回は初期インストールなので、「Do not import settings」を選定します。 UIは好きに選定します。 何も選択せずに、Nextをクリックします。 今回は何も選択せずに、Nextをクリックします。 scalaのpluginをクリックしインストールします。 これでインストールは完了です。 再起動後、起動画面で「Create New Project」をクリックし、次の画面のようになっていればインストールは成功です。 \u0026lt;参考\u0026gt;IntelliJ IDEAでおすすめ設定 \u0026nbsp; IntelliJ IDEAは便利なIDE綜合開発環境です。これをさらに快適な開発環境へ整えるために、行数追加とか、様々な設定を入れます。ここは著者のおすすめ設定を入れてみます。方法としては以下の通りです。\nメニューバーの [IntelliJ IDEA] \u0026gt; [Preferences] から設定します。 Editor \u0026gt; General Strip trailing spaces on Save: Modified Lines : 変更した行の末尾のスペースを除去します。 Always keep trailing spaces on caret line :Reformat Code時に空白のみの行を残します。 Ensure line feed at file end on Save : 保存時にファイル末尾に改行が入ります。 Show quick documentation on mouse move Delay (ms): 500 : クラスやメソッドにカーソルを合わせるとJava docがホバー表示されます。\nEditor \u0026gt; General \u0026gt; Auto Import Optimize imports on the fly (for current project) : 自動でインポートの最適化を実施\nEditor \u0026gt; General \u0026gt; Apperence Show line numbers : 行番号を表示 Show method separators : メソッド区切り線を表示 Show whitespaces (Leading/Inner/Trailing) : スペースを表示\nMavenのインストール mavenはPOM（Project Object Model)に基づいたプロジェクトのビルド、テスト、ドキュメンテーション、配信など、プロジェクトのライフサイクル全体を管理するものです。\n以下はmavenのコマンドとアーキテクチャ全体図です。 さて、コマンドラインの方にmavenをインストールしてみます。\n$ brew install maven 無事インストールできてるか確認します。\n$ mvn -v Apache Maven 3.6.2 (40f52333136460af0dc0d7232c0dc0bcf0d9e117; 2019-08-28T00:06:16+09:00) Maven home: /usr/local/Cellar/maven/3.6.2/libexec Java version: 1.8.0_144, vendor: Oracle Corporation, runtime: /Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre Default locale: ja_JP, platform encoding: UTF-8 OS name: \u0026quot;mac os x\u0026quot;, version: \u0026quot;10.14.5\u0026quot;, arch: \u0026quot;x86_64\u0026quot;, family: \u0026quot;mac\u0026quot; $  これでmavenのインストール完了です。 ここで注目したいのが、Maven home: /usr/local/Cellar/maven/3.6.2/libexecという行です。IntelliJ IDEAでもmaven環境と連携しますので、IntelliJ IDEAのmavenホームディレクトリとして設定する必要があります。 [IntelliJ IDEA]\u0026gt;[Preferences]からmavenのホームディレクトリを設定します。\nでは軽くmavenをやってみます。mavenを使ってHellow Worldを表示してみたいと思います。 mavenコマンドmvnを1つ実行するだけで、Hellow Worldプログラムのソースファイルとテストファイルが自動で生成されます。 Maven Projectの作成 以下のMavenコマンドを実行すると、Java Projectが作成されます。\n$ mvn archetype:generate \\  -DarchetypeGroupId=\u0026lt;archetype-group-id\u0026gt; \\  -DarchetypeVersion=\u0026lt;archetype-version\u0026gt; \\  -DarchetypeArtifactId=maven-archetype-quickstart \\  -DinteractiveMode=false \\  -DgroupId=\u0026lt;group-id\u0026gt; \\  -DartifactId=\u0026lt;project-name\u0026gt; 例えば \u0026lt;group-id\u0026gt; をcom.example、 \u0026lt;project-name\u0026gt; を helloworld とする場合は、以下のコマンドとして実行になります。\n$ mvn archetype:generate \\  -DarchetypeGroupId=com.example \\  -DarchetypeVersion=0.1 \\  -DarchetypeArtifactId=maven-archetype-quickstart \\  -DinteractiveMode=false \\  -DgroupId=com.example \\  -DartifactId=helloworld このmvn archetypeを実行すると、ディレクトリ、ファイルが生成されます。生成される構成は以下の通り。\n$ tree helloworld helloworld ├── pom.xml └── src ├── main │ └── java │ └── com │ └── example │ └── App.java └── test └── java └── com └── example └── AppTest.java 9 directories, 3 files \nMaven Projectのコンパイル、実行 作成したprojectフォルダのトップディレクトリ(上記の例であれば、helloworldディレクトリ)へ移動し、コンパイルするとsrcディレクトリ配下のソースファイルがコンパイルさレます。\n$ cd helloworld $ pwd /Users/hironobu.ohara/Dev/maven/helloworld $ $ ls total 8 drwxr-xr-x 4 hironobu.ohara staff 128B 9 1 14:51 src drwxr-xr-x 4 hironobu.ohara staff 128B 9 1 14:51 . -rw-r--r-- 1 hironobu.ohara staff 644B 9 1 14:51 pom.xml drwxr-xr-x 5 hironobu.ohara staff 160B 9 1 14:51 .. $ $ $ mvn compile [INFO] Scanning for projects... [INFO] [INFO] -----------------------\u0026lt; com.example:helloworld \u0026gt;----------------------- [INFO] Building helloworld 1.0-SNAPSHOT [INFO] --------------------------------[ jar ]--------------------------------- [INFO] [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ helloworld --- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent! [INFO] skip non existing resourceDirectory /Users/hironobu.ohara/Dev/bigdata_tech/maven/helloworld/src/main/resources [INFO] [INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ helloworld --- [INFO] Changes detected - recompiling the module! [WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent! [INFO] Compiling 1 source file to /Users/hironobu.ohara/Dev/bigdata_tech/maven/helloworld/target/classes [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 1.324 s [INFO] Finished at: 2019-09-01T14:54:22+09:00 [INFO] ------------------------------------------------------------------------ $ ls total 8 drwxr-xr-x 4 hironobu.ohara staff 128B 9 1 14:54 target drwxr-xr-x 5 hironobu.ohara staff 160B 9 1 14:54 . drwxr-xr-x 4 hironobu.ohara staff 128B 9 1 14:51 src -rw-r--r-- 1 hironobu.ohara staff 644B 9 1 14:51 pom.xml drwxr-xr-x 5 hironobu.ohara staff 160B 9 1 14:51 .. $ トップディレクトリ配下にtargetディレクトリが作成され、その配下に class file が生成されます。\n$ pwd /Users/hironobu.ohara/Dev/maven/helloworld $ tree . . ├── pom.xml ├── src │ ├── main │ │ └── java │ │ └── com │ │ └── example │ │ └── App.java │ └── test │ └── java │ └── com │ └── example │ └── AppTest.java └── target ├── classes │ └── com │ └── example │ └── App.class └── maven-status └── maven-compiler-plugin └── compile └── default-compile ├── createdFiles.lst └── inputFiles.lst 17 directories, 6 files あとはトップディレクトリで以下のコマンドを実行すれば、コンパイルしたclassファイルが実行できます。\n$ java -cp target/classes/ com.example.App Hello World! \nMaven Projectのテスト mavenで開発したProjectをテストします。作成したprojectフォルダのトップディレクトリ(上記の例であれば、helloworldディレクトリ)へ移動し、以下コマンドを実行すれば、Junitテストが実行されます。\n$ mvn test [INFO] Scanning for projects... [INFO] [INFO] -----------------------\u0026lt; com.example:helloworld \u0026gt;----------------------- [INFO] Building helloworld 1.0-SNAPSHOT [INFO] --------------------------------[ jar ]--------------------------------- [INFO] [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ helloworld --- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent! [INFO] skip non existing resourceDirectory /Users/hironobu.ohara/Dev/bigdata_tech/maven/helloworld/src/main/resources [INFO] [INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ helloworld --- [INFO] Nothing to compile - all classes are up to date [INFO] [INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ helloworld --- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent! [INFO] skip non existing resourceDirectory /Users/hironobu.ohara/Dev/bigdata_tech/maven/helloworld/src/test/resources [INFO] [INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ helloworld --- [INFO] Changes detected - recompiling the module! [WARNING] File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent! [INFO] Compiling 1 source file to /Users/hironobu.ohara/Dev/bigdata_tech/maven/helloworld/target/test-classes [INFO] [INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ helloworld --- [INFO] Surefire report directory: /Users/hironobu.ohara/Dev/bigdata_tech/maven/helloworld/target/surefire-reports Downloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit3/2.12.4/surefire-junit3-2.12.4.pom Downloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit3/2.12.4/surefire-junit3-2.12.4.pom (1.7 kB at 1.5 kB/s) Downloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.12.4/surefire-providers-2.12.4.pom Downloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-providers/2.12.4/surefire-providers-2.12.4.pom (2.3 kB at 5.9 kB/s) Downloading from central: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit3/2.12.4/surefire-junit3-2.12.4.jar Downloaded from central: https://repo.maven.apache.org/maven2/org/apache/maven/surefire/surefire-junit3/2.12.4/surefire-junit3-2.12.4.jar (26 kB at 32 kB/s) ------------------------------------------------------- T E S T S ------------------------------------------------------- Running com.example.AppTest Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec Results : Tests run: 1, Failures: 0, Errors: 0, Skipped: 0 [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 4.432 s [INFO] Finished at: 2019-09-01T15:02:13+09:00 [INFO] ------------------------------------------------------------------------ $ $  \nMaven Projectのパッケージ生成 Maven Projectで作成したソースをJAR、WAR等の成果物として生成します。 packageを実行すればvaliate、compile、test、packageのフェーズも実行される。\n$ pwd /Users/hironobu.ohara/Dev/maven/helloworld $ mvn package [INFO] Scanning for projects... [INFO] [INFO] -----------------------\u0026lt; com.example:helloworld \u0026gt;----------------------- [INFO] Building helloworld 1.0-SNAPSHOT [INFO] --------------------------------[ jar ]--------------------------------- [INFO] [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ helloworld --- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent! [INFO] skip non existing resourceDirectory /Users/hironobu.ohara/Dev/maven/helloworld/src/main/resources [INFO] [INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ helloworld --- [INFO] Nothing to compile - all classes are up to date [INFO] [INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ helloworld --- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent! [INFO] skip non existing resourceDirectory /Users/hironobu.ohara/Dev/maven/helloworld/src/test/resources [INFO] [INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ helloworld --- [INFO] Nothing to compile - all classes are up to date [INFO] [INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ helloworld --- [INFO] Surefire report directory: /Users/hironobu.ohara/Dev/maven/helloworld/target/surefire-reports ------------------------------------------------------- T E S T S ------------------------------------------------------- Running com.example.AppTest Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec Results : Tests run: 1, Failures: 0, Errors: 0, Skipped: 0 [INFO] [INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ helloworld --- [INFO] Building jar: /Users/hironobu.ohara/Dev/maven/helloworld/target/helloworld-1.0-SNAPSHOT.jar [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 1.399 s [INFO] Finished at: 2019-09-01T15:11:19+09:00 [INFO] ------------------------------------------------------------------------ これで、以下パスにてhelloworld-1.0-SNAPSHOT.jarというJAR実行ファイルを生成しました。\n/Users/hironobu.ohara/Dev/maven/helloworld/target/helloworld-1.0-SNAPSHOT.jar  \nMavenコマンドは他に インストール $ mvn install、 デプロイ $ mvn deploy Clean $ mvn clean などがあります。 こちらコマンドラインで実行したので、今度はMaven ProjectをIntelliJ IDEAで起動してみます。\nMaven Projectの作成 on IntelliJ IDEA MavenによるProject開発を行うときは プロジェクトフォルダ（archetype、原型）を選定する必要があります。 様々なapache案件がありますが、ここはチューリアトルとしてadd archetypeをクリックします。\ncli版では以下のようにコマンドを入れてプロジェクトを作成していましたが、IntelliJ IDEAで作成する場合はこのようにパラメータ値を入れます。\n$ mvn archetype:generate \\  -DarchetypeGroupId=com.example \\  -DarchetypeVersion=0.1 \\  -DarchetypeArtifactId=maven-archetype-quickstart \\  -DinteractiveMode=false \\  -DgroupId=com.example \\  -DartifactId=helloworld プロジェクトフォルダ（archetype、原型）ができましたので、それを選択します。 groupId、artifactIdを指定します。 それまでのそれぞれ設定した属性情報を確認します。 PJ Nameを指定します。 IntelliJ IDEAでの開発環境画面が表示されました。このような画面になってると思います。 最後に IntelliJ IDEA、Cli両方でAlibabaCloud SDK開発環境を整えることができました。BigData運用を行うときはこの開発環境を通じて　構築する場合がありますので、参考にいただければ幸いです。\nまた、参考となるリンクを添えます\n* IntelliJ IDEAチューリアトル\nhttps://www.jetbrains.com/help/idea/discover-intellij-idea.html\n* IntelliJ IDEAでScalaを開発する方法\nhttps://dwango.github.io/scala_text/IDE.html\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/scenario/terraform/web-application-on-kubernetes/",
	"title": "KubernetesによるコンテナでWordPress作成",
	"tags": [],
	"description": "Terraformを用いて、Alibaba Cloud上でKubernetesによるWordPress作成方法を紹介します。",
	"content": " \u0026nbsp; KubernetesによるコンテナでWordPressを作成します。流れは以下の通りになります。\n AlibabaCloudでKubernetesクラスターを生成 kube_configを環境変数にて設定 KubernetesクラスターのローカルボリュームにてWordPressとMySQLをインストール  \nこちらはAlibabaCloud Terraformのサンプル集を通じての紹介になります。\nKubernetesでクラスタ生成 \u0026nbsp; KubernetesによるコンテナでWordPressを作成します。流れは以下の通りになります。\n\n\u0026nbsp; TerraformでWebアプリケーションを作ってみます。step1のゴール構成図は以下の通りです。\nそれぞれのパラメータは以下の通りです。\nネットワーク構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_vpc vpc name 任意 ${var.project_name}-vpc VPC の名称。この例の場合、Web-App-on-k8s-for-Terraform-vpc として表示されます。    vpc cidr_block 必須 192.168.1.0/24 VPC の CIDR ブロック    vpc description 任意 Enable k8s-Setteing-Sample vpc VPC の説明。   alicloud_vswitch vsw name 任意 ${var.project_name}-vswitch vswitch の名称。この例の場合、Web-App-on-k8s-for-Terraform-vswitch として表示されます。    vsw vpc_id 必須 ${alicloud_vpc.vpc.id} アタッチするVPCのID    vsw cidr_block 必須 192.168.1.0/28 vswitch の CIDR ブロック    vsw availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    vsw description 任意 Enable k8s-Sample vswitch vswitch の説明。    kubernetesクラスター構成:\n   リソース リソース名 パラメータ 必須 設定値 内容     alicloud_cs_kubernetes k8s name 任意 ${var.project_name}-k8s kubernetesクラスター名称    k8s vswitch_ids 必須 \u0026rdquo;${alicloud_vswitch.vsw.id}\u0026rdquo; アタッチするVSwitchのID。    k8s availability_zone 必須 ${var.zone} 使用するアベイラビリティゾーン    k8s new_nat_gateway 任意 true kubernetesクラスタの作成中に新しいNATゲートウェイを作成するかどうか。デフォルトはtrue。    k8s master_instance_types 必須 [\u0026ldquo;ecs.xn4.small\u0026rdquo;] マスターノードのインスタンスタイプ。    k8s worker_instance_types 必須 [\u0026ldquo;ecs.xn4.small\u0026rdquo;] ワーカーノードのインスタンスタイプ。    k8s worker_numbers 任意 [2] ワーカーノードの台数。    k8s master_disk_size 任意 40 マスターノードのシステムディスクサイズ。    k8s worker_disk_size 任意 100 ワーカーノードのシステムディスクサイズ。    k8s password 任意 \u0026rdquo;${var.k8s_password}\u0026rdquo; クラスタノードのsshログインパスワード。    k8s pod_cidr 任意 \u0026ldquo;172.20.0.0/16\u0026rdquo; ポッドネットワークのCIDRブロック。    k8s service_cidr 任意 \u0026ldquo;172.21.0.0/20\u0026rdquo; サービスネットワークのCIDRブロック。    k8s enable_ssh 任意 true SSHログインを許可するか。デフォルトはfalse。    k8s install_cloud_monitor 任意 true クラウドモニタをkubernetesノードにインストールするかどうか。    \nソースは以下になります。\n\nmain.tf\nprovider \u0026quot;alicloud\u0026quot; { access_key = \u0026quot;${var.access_key}\u0026quot; secret_key = \u0026quot;${var.secret_key}\u0026quot; region = \u0026quot;${var.region}\u0026quot; } resource \u0026quot;alicloud_vpc\u0026quot; \u0026quot;vpc\u0026quot; { name = \u0026quot;${var.project_name}-vpc\u0026quot; cidr_block = \u0026quot;192.168.1.0/24\u0026quot; description = \u0026quot;Enable Web-App on k8s vpc\u0026quot; } resource \u0026quot;alicloud_vswitch\u0026quot; \u0026quot;vsw\u0026quot; { name = \u0026quot;${var.project_name}-vswitch\u0026quot; vpc_id = \u0026quot;${alicloud_vpc.vpc.id}\u0026quot; cidr_block = \u0026quot;192.168.1.0/28\u0026quot; availability_zone = \u0026quot;${var.zone}\u0026quot; description = \u0026quot;Enable Web-App on k8s vswitch\u0026quot; } resource \u0026quot;alicloud_cs_kubernetes\u0026quot; \u0026quot;k8s\u0026quot; { name = \u0026quot;${var.project_name}-k8s\u0026quot; vswitch_ids = [\u0026quot;${alicloud_vswitch.vsw.id}\u0026quot;] availability_zone = \u0026quot;${var.zone}\u0026quot; new_nat_gateway = true master_instance_types = [\u0026quot;ecs.xn4.small\u0026quot;] worker_instance_types = [\u0026quot;ecs.xn4.small\u0026quot;] worker_numbers = [2] master_disk_size = 40 worker_disk_size = 100 password = \u0026quot;${var.k8s_password}\u0026quot; pod_cidr = \u0026quot;172.20.0.0/16\u0026quot; service_cidr = \u0026quot;172.21.0.0/20\u0026quot; enable_ssh = true install_cloud_monitor = true }  \nvariables.tf\nvariable \u0026quot;access_key\u0026quot; {} variable \u0026quot;secret_key\u0026quot; {} variable \u0026quot;region\u0026quot; {} variable \u0026quot;zone\u0026quot; {} variable \u0026quot;project_name\u0026quot; {} variable \u0026quot;k8s_password\u0026quot; {} variable \u0026quot;wordpress_version\u0026quot; {} variable \u0026quot;mysql_version\u0026quot; {} variable \u0026quot;mysql_password\u0026quot; {}  \noutput.tf\noutput \u0026quot;cluster_id\u0026quot; { value = [\u0026quot;${alicloud_cs_kubernetes.k8s.*.id}\u0026quot;] } output \u0026quot;worker_nodes\u0026quot; { value = [\u0026quot;${alicloud_cs_kubernetes.k8s.*.worker_nodes}\u0026quot;] } output \u0026quot;master_nodes\u0026quot; { value = [\u0026quot;${alicloud_cs_kubernetes.k8s.*.master_nodes}\u0026quot;] }  \nconfing.tfvars\naccess_key = \u0026quot;xxxxxxxxxxxxxxxx\u0026quot; secret_key = \u0026quot;xxxxxxxxxxxxxxxx\u0026quot; region = \u0026quot;ap-northeast-1\u0026quot; zone = \u0026quot;ap-northeast-1a\u0026quot; project_name = \u0026quot;Web-App-on-k8s-for-Terraform\u0026quot; k8s_password = \u0026quot;!Password2019\u0026quot; wordpress_version = \u0026quot;5.2.2\u0026quot; mysql_version = \u0026quot;5.7\u0026quot; mysql_password = \u0026quot;!Password2019\u0026quot;  \u0026nbsp; ソースの準備ができたら実行します。\nterraform init terraform play -var-file=\u0026quot;confing.tfvars\u0026quot; terraform apply -var-file=\u0026quot;confing.tfvars\u0026quot;  \nこれで問題なく実行できたら、cluster_id、worker_nodes、master_nodesが表示され、こうしてkubernetesクラスター操作、管理ができます。\n\nkube_configを環境変数にて設定 \u0026nbsp; 先ほどはKubernetesクラスタを作成しました。このクラスタを使ってwordpressを作成するため、Kubernetesコマンドラインクライアントである kubectl を使用します。kubectlはk8sクラスタのAPIサーバーと通信するためのコマンドラインツールです。\n 最新のkubectlをダウンロードします。 kubectlのインストールおよび設定をします。 kubectlのインストール方法はこちらを参照してください。 クラスターの資格情報を設定します。設定方法はこちらを参照してください。  KubernetesクラスタにてWordpressインストール \u0026nbsp; これでKubernetesクラスタのkube_configを環境変数にて設定しました。今度はTerraform on Kubernetesを使ってubernetesクラスタにてWordPressを入れます。ゴールの構成図は以下の通りです。\n\nソースは以下になります。サンプルソースは[こちら]()にあります。\n\nconfing.tfvars\nproject_name = \u0026quot;Web-App-on-k8s-for-Terraform\u0026quot; wordpress_version = \u0026quot;5.2.2\u0026quot; mysql_version = \u0026quot;5.7\u0026quot; mysql_password = \u0026quot;!Password2019\u0026quot;  \nvariables.tf\nvariable \u0026quot;project_name\u0026quot; {} variable \u0026quot;wordpress_version\u0026quot; {} variable \u0026quot;mysql_version\u0026quot; {} variable \u0026quot;mysql_password\u0026quot; {}  \nmysql.tf\nresource \u0026quot;kubernetes_service\u0026quot; \u0026quot;mysql\u0026quot; { metadata { name = \u0026quot;wordpress-mysql\u0026quot; labels { app = \u0026quot;wordpress\u0026quot; } } spec { port { port = 3306 } selector { app = \u0026quot;wordpress\u0026quot; tier = \u0026quot;${kubernetes_replication_controller.mysql.spec.0.selector.tier}\u0026quot; } cluster_ip = \u0026quot;None\u0026quot; } } resource \u0026quot;kubernetes_persistent_volume_claim\u0026quot; \u0026quot;mysql\u0026quot; { metadata { name = \u0026quot;mysql-pv-claim\u0026quot; labels { app = \u0026quot;wordpress\u0026quot; } } spec { access_modes = [\u0026quot;ReadWriteOnce\u0026quot;] resources { requests { storage = \u0026quot;20Gi\u0026quot; } } volume_name = \u0026quot;${kubernetes_persistent_volume.mysql.metadata.0.name}\u0026quot; } } resource \u0026quot;kubernetes_secret\u0026quot; \u0026quot;mysql\u0026quot; { metadata { name = \u0026quot;mysql-pass\u0026quot; } data { password = \u0026quot;${var.mysql_password}\u0026quot; } } resource \u0026quot;kubernetes_replication_controller\u0026quot; \u0026quot;mysql\u0026quot; { metadata { name = \u0026quot;wordpress-mysql\u0026quot; labels { app = \u0026quot;wordpress\u0026quot; } } spec { selector { app = \u0026quot;wordpress\u0026quot; tier = \u0026quot;mysql\u0026quot; } template { container { image = \u0026quot;mysql:${var.mysql_version}\u0026quot; name = \u0026quot;mysql\u0026quot; env { name = \u0026quot;MYSQL_ROOT_PASSWORD\u0026quot; value_from { secret_key_ref { name = \u0026quot;${kubernetes_secret.mysql.metadata.0.name}\u0026quot; key = \u0026quot;password\u0026quot; } } } port { container_port = 3306 name = \u0026quot;mysql\u0026quot; } volume_mount { name = \u0026quot;mysql-persistent-storage\u0026quot; mount_path = \u0026quot;/var/lib/mysql\u0026quot; } } volume { name = \u0026quot;mysql-persistent-storage\u0026quot; persistent_volume_claim { claim_name = \u0026quot;${kubernetes_persistent_volume_claim.mysql.metadata.0.name}\u0026quot; } } } } }  \nwordpress.tf\nresource \u0026quot;kubernetes_service\u0026quot; \u0026quot;wordpress\u0026quot; { metadata { name = \u0026quot;wordpress\u0026quot; labels { app = \u0026quot;wordpress\u0026quot; } } spec { port { port = 80 } selector { app = \u0026quot;wordpress\u0026quot; tier = \u0026quot;${kubernetes_replication_controller.wordpress.spec.0.selector.tier}\u0026quot; } type = \u0026quot;LoadBalancer\u0026quot; } } resource \u0026quot;kubernetes_persistent_volume_claim\u0026quot; \u0026quot;wordpress\u0026quot; { metadata { name = \u0026quot;wp-pv-claim\u0026quot; labels { app = \u0026quot;wordpress\u0026quot; } } spec { access_modes = [\u0026quot;ReadWriteOnce\u0026quot;] resources { requests { storage = \u0026quot;20Gi\u0026quot; } } volume_name = \u0026quot;${kubernetes_persistent_volume.wordpress.metadata.0.name}\u0026quot; } } resource \u0026quot;kubernetes_replication_controller\u0026quot; \u0026quot;wordpress\u0026quot; { metadata { name = \u0026quot;wordpress\u0026quot; labels { app = \u0026quot;wordpress\u0026quot; } } spec { selector { app = \u0026quot;wordpress\u0026quot; tier = \u0026quot;frontend\u0026quot; } template { container { image = \u0026quot;wordpress:${var.wordpress_version}-apache\u0026quot; name = \u0026quot;wordpress\u0026quot; env { name = \u0026quot;WORDPRESS_DB_HOST\u0026quot; value = \u0026quot;wordpress-mysql\u0026quot; } env { name = \u0026quot;WORDPRESS_DB_PASSWORD\u0026quot; value_from { secret_key_ref { name = \u0026quot;${kubernetes_secret.mysql.metadata.0.name}\u0026quot; key = \u0026quot;password\u0026quot; } } } port { container_port = 80 name = \u0026quot;wordpress\u0026quot; } volume_mount { name = \u0026quot;wordpress-persistent-storage\u0026quot; mount_path = \u0026quot;/var/www/html\u0026quot; } } volume { name = \u0026quot;wordpress-persistent-storage\u0026quot; persistent_volume_claim { claim_name = \u0026quot;${kubernetes_persistent_volume_claim.wordpress.metadata.0.name}\u0026quot; } } } } }  \nlocalvolumes.tf\nprovider \u0026quot;kubernetes\u0026quot; {} resource \u0026quot;kubernetes_persistent_volume\u0026quot; \u0026quot;mysql\u0026quot; { metadata { name = \u0026quot;local-pv-mysql\u0026quot; labels { type = \u0026quot;local\u0026quot; } } spec { capacity { storage = \u0026quot;20Gi\u0026quot; } access_modes = [\u0026quot;ReadWriteOnce\u0026quot;] persistent_volume_source { host_path { path = \u0026quot;/tmp/data/pv-mysql\u0026quot; } } } } resource \u0026quot;kubernetes_persistent_volume\u0026quot; \u0026quot;wordpress\u0026quot; { metadata { name = \u0026quot;local-pv-wordpress\u0026quot; labels { type = \u0026quot;local\u0026quot; } } spec { capacity { storage = \u0026quot;20Gi\u0026quot; } access_modes = [\u0026quot;ReadWriteOnce\u0026quot;] persistent_volume_source { host_path { path = \u0026quot;/tmp/data/pv-wordpress\u0026quot; } } } }  \noutput.tf\noutput \u0026quot;slb_ip\u0026quot; { value = \u0026quot;${kubernetes_service.wordpress.load_balancer_ingress.0.ip}\u0026quot; }  \n\u0026nbsp; ソースの準備ができたら実行します。\nterraform init terraform play -var-file=\u0026quot;confing.tfvars\u0026quot; terraform apply -var-file=\u0026quot;confing.tfvars\u0026quot;  \nこれで完了です。問題なく実行できたら、SLBのIPが表示されます。\n\n"
},
{
	"uri": "https://www.sbcloud.co.jp/help/",
	"title": "",
	"tags": [],
	"description": "",
	"content": " SBC Technical Reference 1. Getting Started  アカウント登録 プロダクトの紹介 AWS/Azure/GCPユーザ向け  2. ベストプラクティス  アドバイザリ 個別プロダクト DevOps  3. ユースケース別シナリオ  Terraform  4. よくある質問  ECS RDS SLB OSS アカウント その他  "
},
{
	"uri": "https://www.sbcloud.co.jp/help/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://www.sbcloud.co.jp/help/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]